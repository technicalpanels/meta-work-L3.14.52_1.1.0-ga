From 4db515072eab264084e4191c62750de370081771 Mon Sep 17 00:00:00 2001
From: leavs <leavs_o@126.com>
Date: Thu, 22 Mar 2018 07:27:29 +0800
Subject: [PATCH] Add Chipsee IMX6QDL 7 Support

---
 arch/arm/Kconfig                               |     6 +
 arch/arm/cpu/armv7/mx6/Makefile                |     1 +
 arch/arm/cpu/armv7/mx6/clock.c                 |   386 +
 arch/arm/cpu/armv7/mx6/ipu.c                   |  3276 ++++++
 arch/arm/include/asm/arch-mx6/clock.h          |    10 +
 arch/arm/include/asm/arch-mx6/ipuv3h_reg_def.h | 13930 +++++++++++++++++++++++
 arch/arm/include/asm/imx-common/imx_pwm.h      |    37 +
 arch/arm/include/asm/imx-common/mxc_ipu.h      |    30 +
 board/chipsee/common/Makefile                  |    85 +
 board/chipsee/common/arm_sleep.c               |    95 +
 board/chipsee/common/cadmus.c                  |    79 +
 board/chipsee/common/cadmus.h                  |    38 +
 board/chipsee/common/cds_pci_ft.c              |    76 +
 board/chipsee/common/cds_via.c                 |    93 +
 board/chipsee/common/cmd_esbc_validate.c       |    34 +
 board/chipsee/common/dcu_sii9022a.c            |   153 +
 board/chipsee/common/dcu_sii9022a.h            |    13 +
 board/chipsee/common/diu_ch7301.c              |   136 +
 board/chipsee/common/diu_ch7301.h              |    13 +
 board/chipsee/common/eeprom.h                  |    34 +
 board/chipsee/common/epdc_setup.c              |   219 +
 board/chipsee/common/fman.c                    |    84 +
 board/chipsee/common/fman.h                    |    15 +
 board/chipsee/common/fsl_validate.c            |   840 ++
 board/chipsee/common/ics307_clk.c              |   146 +
 board/chipsee/common/ics307_clk.h              |    16 +
 board/chipsee/common/idt8t49n222a_serdes_clk.c |   207 +
 board/chipsee/common/idt8t49n222a_serdes_clk.h |   107 +
 board/chipsee/common/ls102xa_stream_id.c       |    33 +
 board/chipsee/common/mpc85xx_sleep.c           |    88 +
 board/chipsee/common/ngpixis.c                 |   250 +
 board/chipsee/common/ngpixis.h                 |    61 +
 board/chipsee/common/ns_access.c               |    30 +
 board/chipsee/common/p_corenet/Makefile        |    10 +
 board/chipsee/common/p_corenet/law.c           |    37 +
 board/chipsee/common/p_corenet/pci.c           |    23 +
 board/chipsee/common/p_corenet/tlb.c           |   146 +
 board/chipsee/common/pfuze.c                   |    92 +
 board/chipsee/common/pfuze.h                   |    13 +
 board/chipsee/common/pixis.c                   |   542 +
 board/chipsee/common/pixis.h                   |   166 +
 board/chipsee/common/pq-mds-pib.c              |   102 +
 board/chipsee/common/pq-mds-pib.h              |     9 +
 board/chipsee/common/qixis.c                   |   251 +
 board/chipsee/common/qixis.h                   |   118 +
 board/chipsee/common/recovery.c                |    78 +
 board/chipsee/common/sdhc_boot.c               |    76 +
 board/chipsee/common/sgmii_riser.c             |   129 +
 board/chipsee/common/sgmii_riser.h             |    16 +
 board/chipsee/common/sleep.h                   |    21 +
 board/chipsee/common/sys_eeprom.c              |   543 +
 board/chipsee/common/via.h                     |    18 +
 board/chipsee/common/vid.c                     |   491 +
 board/chipsee/common/vid.h                     |    20 +
 board/chipsee/common/vsc3316_3308.c            |   276 +
 board/chipsee/common/vsc3316_3308.h            |    25 +
 board/chipsee/common/zm7300.c                  |   235 +
 board/chipsee/common/zm7300.h                  |    22 +
 board/chipsee/mx6eisd/Kconfig                  |    15 +
 board/chipsee/mx6eisd/MAINTAINERS              |     7 +
 board/chipsee/mx6eisd/Makefile                 |    11 +
 board/chipsee/mx6eisd/mx6dl_16x_mt41K128.cfg   |   142 +
 board/chipsee/mx6eisd/mx6dl_16x_mt41K256.cfg   |   142 +
 board/chipsee/mx6eisd/mx6dleisd.cfg            |   173 +
 board/chipsee/mx6eisd/mx6eisd.c                |  1932 ++++
 board/chipsee/mx6eisd/mx6q_8x_mt41K256.cfg     |   158 +
 board/chipsee/mx6eisd/plugin.S                 |   664 ++
 configs/mx6dleisd_1g_defconfig                 |     7 +
 configs/mx6dleisd_2g_defconfig                 |     7 +
 configs/mx6dleisd_defconfig                    |     7 +
 configs/mx6qeisd_defconfig                     |     5 +
 drivers/misc/Makefile                          |     1 +
 drivers/misc/imx_pwm.c                         |   121 +
 drivers/video/Makefile                         |     1 +
 drivers/video/mxc_hdmi.c                       |  1770 +++
 drivers/video/mxc_hdmi.h                       |  1140 ++
 include/configs/mx6_common.h                   |     1 +
 include/configs/mx6eisd.h                      |   117 +
 include/configs/mx6eisd_common.h               |   637 ++
 79 files changed, 31138 insertions(+)
 create mode 100755 arch/arm/cpu/armv7/mx6/ipu.c
 create mode 100644 arch/arm/include/asm/arch-mx6/ipuv3h_reg_def.h
 create mode 100755 arch/arm/include/asm/imx-common/imx_pwm.h
 create mode 100644 arch/arm/include/asm/imx-common/mxc_ipu.h
 create mode 100644 board/chipsee/common/Makefile
 create mode 100644 board/chipsee/common/arm_sleep.c
 create mode 100644 board/chipsee/common/cadmus.c
 create mode 100644 board/chipsee/common/cadmus.h
 create mode 100644 board/chipsee/common/cds_pci_ft.c
 create mode 100644 board/chipsee/common/cds_via.c
 create mode 100644 board/chipsee/common/cmd_esbc_validate.c
 create mode 100644 board/chipsee/common/dcu_sii9022a.c
 create mode 100644 board/chipsee/common/dcu_sii9022a.h
 create mode 100644 board/chipsee/common/diu_ch7301.c
 create mode 100644 board/chipsee/common/diu_ch7301.h
 create mode 100644 board/chipsee/common/eeprom.h
 create mode 100644 board/chipsee/common/epdc_setup.c
 create mode 100644 board/chipsee/common/fman.c
 create mode 100644 board/chipsee/common/fman.h
 create mode 100644 board/chipsee/common/fsl_validate.c
 create mode 100644 board/chipsee/common/ics307_clk.c
 create mode 100644 board/chipsee/common/ics307_clk.h
 create mode 100644 board/chipsee/common/idt8t49n222a_serdes_clk.c
 create mode 100644 board/chipsee/common/idt8t49n222a_serdes_clk.h
 create mode 100644 board/chipsee/common/ls102xa_stream_id.c
 create mode 100644 board/chipsee/common/mpc85xx_sleep.c
 create mode 100644 board/chipsee/common/ngpixis.c
 create mode 100644 board/chipsee/common/ngpixis.h
 create mode 100644 board/chipsee/common/ns_access.c
 create mode 100644 board/chipsee/common/p_corenet/Makefile
 create mode 100644 board/chipsee/common/p_corenet/law.c
 create mode 100644 board/chipsee/common/p_corenet/pci.c
 create mode 100644 board/chipsee/common/p_corenet/tlb.c
 create mode 100644 board/chipsee/common/pfuze.c
 create mode 100644 board/chipsee/common/pfuze.h
 create mode 100644 board/chipsee/common/pixis.c
 create mode 100644 board/chipsee/common/pixis.h
 create mode 100644 board/chipsee/common/pq-mds-pib.c
 create mode 100644 board/chipsee/common/pq-mds-pib.h
 create mode 100644 board/chipsee/common/qixis.c
 create mode 100644 board/chipsee/common/qixis.h
 create mode 100644 board/chipsee/common/recovery.c
 create mode 100644 board/chipsee/common/sdhc_boot.c
 create mode 100644 board/chipsee/common/sgmii_riser.c
 create mode 100644 board/chipsee/common/sgmii_riser.h
 create mode 100644 board/chipsee/common/sleep.h
 create mode 100644 board/chipsee/common/sys_eeprom.c
 create mode 100644 board/chipsee/common/via.h
 create mode 100644 board/chipsee/common/vid.c
 create mode 100644 board/chipsee/common/vid.h
 create mode 100644 board/chipsee/common/vsc3316_3308.c
 create mode 100644 board/chipsee/common/vsc3316_3308.h
 create mode 100644 board/chipsee/common/zm7300.c
 create mode 100644 board/chipsee/common/zm7300.h
 create mode 100644 board/chipsee/mx6eisd/Kconfig
 create mode 100644 board/chipsee/mx6eisd/MAINTAINERS
 create mode 100644 board/chipsee/mx6eisd/Makefile
 create mode 100644 board/chipsee/mx6eisd/mx6dl_16x_mt41K128.cfg
 create mode 100644 board/chipsee/mx6eisd/mx6dl_16x_mt41K256.cfg
 create mode 100644 board/chipsee/mx6eisd/mx6dleisd.cfg
 create mode 100644 board/chipsee/mx6eisd/mx6eisd.c
 create mode 100644 board/chipsee/mx6eisd/mx6q_8x_mt41K256.cfg
 create mode 100644 board/chipsee/mx6eisd/plugin.S
 create mode 100644 configs/mx6dleisd_1g_defconfig
 create mode 100644 configs/mx6dleisd_2g_defconfig
 create mode 100644 configs/mx6dleisd_defconfig
 create mode 100644 configs/mx6qeisd_defconfig
 create mode 100755 drivers/misc/imx_pwm.c
 create mode 100755 drivers/video/mxc_hdmi.c
 create mode 100755 drivers/video/mxc_hdmi.h
 create mode 100644 include/configs/mx6eisd.h
 create mode 100644 include/configs/mx6eisd_common.h

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 0c82b17..96b2179 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -523,6 +523,11 @@ config TARGET_MX6SABRESD
 	select CPU_V7
 	select SUPPORT_SPL
 
+config TARGET_MX6EISD
+	bool "Support mx6eisd"
+	select CPU_V7
+	select SUPPORT_SPL
+
 config TARGET_MX6SLEVK
 	bool "Support mx6slevk"
 	select CPU_V7
@@ -942,6 +947,7 @@ source "board/work-microwave/work_92105/Kconfig"
 source "board/xaeniax/Kconfig"
 source "board/xilinx/zynqmp/Kconfig"
 source "board/zipitz2/Kconfig"
+source "board/chipsee/mx6eisd/Kconfig"
 
 source "arch/arm/Kconfig.debug"
 
diff --git a/arch/arm/cpu/armv7/mx6/Makefile b/arch/arm/cpu/armv7/mx6/Makefile
index 96126a3..e228ad8 100644
--- a/arch/arm/cpu/armv7/mx6/Makefile
+++ b/arch/arm/cpu/armv7/mx6/Makefile
@@ -10,6 +10,7 @@
 obj-y	:= soc.o clock.o
 obj-$(CONFIG_SPL_BUILD)	     += ddr.o
 obj-$(CONFIG_SECURE_BOOT)    += hab.o
+obj-$(CONFIG_UBOOT_LOGO_ENABLE) += ipu.o
 obj-$(CONFIG_MP)             += mp.o
 ifdef CONFIG_MX6UL
 obj-$(CONFIG_CMD_BEE)        += bee.o
diff --git a/arch/arm/cpu/armv7/mx6/clock.c b/arch/arm/cpu/armv7/mx6/clock.c
index 1ef307a..64bfde8 100644
--- a/arch/arm/cpu/armv7/mx6/clock.c
+++ b/arch/arm/cpu/armv7/mx6/clock.c
@@ -12,14 +12,25 @@
 #include <asm/arch/crm_regs.h>
 #include <asm/arch/clock.h>
 #include <asm/arch/sys_proto.h>
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+#include <asm/imx-common/mxc_ipu.h>
+#endif
 
 enum pll_clocks {
 	PLL_SYS,	/* System PLL */
 	PLL_BUS,	/* System Bus PLL*/
 	PLL_USBOTG,	/* OTG USB PLL */
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+	PLL_VIDEO,
+#endif
 	PLL_ENET,	/* ENET PLL */
 };
 
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+#define PLL5_FREQ_MIN	650000000
+#define PLL5_FREQ_MAX	1300000000
+#endif
+
 struct mxc_ccm_reg *imx_ccm = (struct mxc_ccm_reg *)CCM_BASE_ADDR;
 
 #ifdef CONFIG_MXC_OCOTP
@@ -222,6 +233,9 @@ int enable_spi_clk(unsigned char enable, unsigned spi_num)
 }
 static u32 decode_pll(enum pll_clocks pll, u32 infreq)
 {
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+	u32 post_div, temp, mfn, mfd;
+#endif
 	u32 div;
 
 	switch (pll) {
@@ -240,6 +254,37 @@ static u32 decode_pll(enum pll_clocks pll, u32 infreq)
 		div &= BM_ANADIG_USB1_PLL_480_CTRL_DIV_SELECT;
 
 		return infreq * (20 + (div << 1));
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+	case PLL_VIDEO:
+		temp = __raw_readl(&imx_ccm->analog_pll_video) & 
+			BM_ANADIG_PLL_VIDEO_TEST_DIV_SELECT;
+		temp = temp >> BP_ANADIG_PLL_VIDEO_TEST_DIV_SELECT;
+		if (temp == 0)
+			post_div = 4;
+		else if (temp == 1)
+			post_div = 2;
+		else
+			post_div = 1;
+
+		temp = __raw_readl(&imx_ccm->ana_misc2) & 
+			BM_ANADIG_ANA_MISC2_CONTROL3;
+		temp = temp >> BP_ANADIG_ANA_MISC2_CONTROL3;
+		if (temp == 1)
+			post_div *= 2;
+		else if (temp == 3)
+			post_div *= 4;
+
+		div = __raw_readl(&imx_ccm->analog_pll_video) & 
+			BM_ANADIG_PLL_VIDEO_DIV_SELECT;
+		mfn = __raw_readl(&imx_ccm->analog_pll_video_num) & 
+			BM_ANADIG_PLL_VIDEO_NUM_A;
+		mfd = __raw_readl(&imx_ccm->analog_pll_video_denom) & 
+			BM_ANADIG_PLL_VIDEO_DENOM_B;
+
+		temp = (infreq * div) + ((infreq / mfd) * mfn);
+		return (temp / post_div);
+#endif
+
 	case PLL_ENET:
 		div = __raw_readl(&imx_ccm->analog_pll_enet);
 		div &= BM_ANADIG_PLL_ENET_DIV_SELECT;
@@ -848,6 +893,347 @@ void mxs_set_vadcclk(void)
 }
 #endif
 
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+static int config_lvds_clk(u32 ipu, u32 di, u32 freq)
+{
+	u32 divider;
+	unsigned int reg;
+
+	//printf("config_ipu_lvds_clk: freq = %d.\r\n", freq);
+
+#ifdef CONFIG_MX6Q
+	__raw_writel(BM_ANADIG_PFD_528_PFD2_CLKGATE, &imx_ccm->analog_pfd_528_set);
+#endif
+	
+	/*
+	 * Need to follow a strict procedure when changing the LDB
+	 * clock, else we can introduce a glitch. Things to keep in
+	 * mind:
+	 * 1. The current and new parent clocks must be disabled.
+	 * 2. The default clock for ldb_dio_clk is mmdc_ch1 which has
+	 * no CG bit.
+	 * 3. In the RTL implementation of the LDB_DI_CLK_SEL mux
+	 * the top four options are in one mux and the PLL3 option along
+	 * with another option is in the second mux. There is third mux
+	 * used to decide between the first and second mux.
+	 * The code below switches the parent to the bottom mux first
+	 * and then manipulates the top mux. This ensures that no glitch
+	 * will enter the divider.
+	 *
+	 * Need to disable MMDC_CH1 clock manually as there is no CG bit
+	 * for this clock. The only way to disable this clock is to move
+	 * it topll3_sw_clk and then to disable pll3_sw_clk
+	 * Make sure periph2_clk2_sel is set to pll3_sw_clk
+	 */
+	reg = __raw_readl(&imx_ccm->cbcmr);
+	reg &= ~(1 << 20);
+	__raw_writel(reg, &imx_ccm->cbcmr);
+	
+	/*
+	 * Set MMDC_CH1 mask bit.
+	 */
+	reg = __raw_readl(&imx_ccm->ccdr);
+	reg |= 1 << 16;
+	__raw_writel(reg, &imx_ccm->ccdr);
+
+	/*
+	 * Set the periph2_clk_sel to the top mux so that
+	 * mmdc_ch1 is from pll3_sw_clk.
+	 */
+	reg = __raw_readl(&imx_ccm->cbcdr);
+	reg |= 1 << 26;
+	__raw_writel(reg, &imx_ccm->cbcdr);
+
+	/*
+	 * Wait for the clock switch.
+	 */
+	while (__raw_readl(&imx_ccm->cdhipr))
+		;
+	
+	/*
+	 * Disable pll3_sw_clk by selecting the bypass clock source.
+	 */
+	reg = __raw_readl(&imx_ccm->ccsr);
+	reg |= 1 << 0;
+	__raw_writel(reg, &imx_ccm->ccsr);
+
+	/*
+	 * Set the ldb_di0_clk and ldb_di1_clk to 111b.
+	 */
+	reg = __raw_readl(&imx_ccm->cs2cdr);
+	reg |= ((7 << 9) | (7 << 12));
+	__raw_writel(reg, &imx_ccm->cs2cdr);
+
+	/*
+	 * Set the ldb_di0_clk and ldb_di1_clk to 100b.
+	 */
+	reg = __raw_readl(&imx_ccm->cs2cdr);
+	reg &= ~((7 << 9) | (7 << 12));
+	reg |= ((4 << 9) | (4 << 12));
+	__raw_writel(reg, &imx_ccm->cs2cdr);
+
+	/* Set ldb_di_clk clock source to PLL2 PFD0 */
+	reg = __raw_readl(&imx_ccm->cs2cdr);
+	if (di == 0) {
+		reg &= ~(0x7 << 9);
+		reg |= (0x1 << 9);
+	} else if (di == 1) {
+		reg &= ~(0x7 << 12);
+		reg |= (0x1 << 12);
+	}
+	__raw_writel(reg, &imx_ccm->cs2cdr);
+
+	/*
+	 * Unbypass pll3_sw_clk.
+	 */
+	reg = __raw_readl(&imx_ccm->ccsr);
+	reg &= ~(1 << 0);
+	__raw_writel(reg, &imx_ccm->ccsr);
+
+	/*
+	 * Set the periph2_clk_sel back to the bottom mux so that
+	 * mmdc_ch1 is from its original parent.
+	 */
+	reg = __raw_readl(&imx_ccm->cbcdr);
+	reg &= ~(1 << 26);
+	__raw_writel(reg, &imx_ccm->cbcdr);
+
+	/*
+	 * Wait for the clock switch.
+	 */
+	while (__raw_readl(&imx_ccm->cdhipr))
+		;
+
+	/*
+	 * Clear MMDC_CH1 mask bit.
+	 */
+	reg = __raw_readl(&imx_ccm->ccdr);
+	reg &= ~(1 << 16);
+	__raw_writel(reg, &imx_ccm->ccdr);
+
+	/* Set PLL2 PFD0 Clock */
+	divider = (decode_pll(PLL_BUS, MXC_HCLK) / 1000000) * 18 / (freq / 1000000);
+	if(divider < 12)
+		divider = 12;
+	if(divider > 35)
+		divider = 35;
+
+	//printf("config_ipu_lvds_clk: set pll2_pfd0 clock to %dMHz, divider = %d.\r\n", decode_pll(PLL_BUS, MXC_HCLK) /1000000  / divider * 18, divider);
+
+#ifdef CONFIG_MX6Q
+	__raw_writel(BM_ANADIG_PFD_528_PFD2_CLKGATE, &imx_ccm->analog_pfd_528_clr);
+#endif
+
+	reg = __raw_readl(&imx_ccm->analog_pfd_528);
+	reg &= ~BM_ANADIG_PFD_528_PFD0_FRAC;
+	reg |= (divider << BP_ANADIG_PFD_528_PFD0_FRAC);
+	__raw_writel(BM_ANADIG_PFD_528_PFD0_FRAC, &imx_ccm->analog_pfd_528_clr);
+	__raw_writel(reg, &imx_ccm->analog_pfd_528_set);
+
+#ifdef LVDS_SPLIT_MODE
+	/* Set ipu_di clock to ldb_di_clk/3.5 */
+	reg = __raw_readl(&imx_ccm->cscmr2);
+	if (di == 0)
+		reg &= ~(0x1 << 10);
+	else if (di == 1)
+		reg &= ~(0x1 << 11);
+#ifdef LVDS_SPLIT_MODE_MADI
+	reg &= ~(0x1 << 10);
+	reg &= ~(0x1 << 11);
+#endif
+#else
+	/* Set ipu_di clock to ldb_di_clk/7 */
+	reg = __raw_readl(&imx_ccm->cscmr2);
+	if (di == 0)
+		reg |= (0x1 << 10);
+	else if (di == 1)
+		reg |= (0x1 << 11);
+#endif
+	__raw_writel(reg, &imx_ccm->cscmr2);
+
+	/* Set ipu_di_clk clock source to ldb_di_clk, and root clock pre-multiplexer from PLL2 PFD0, ipu_di_podf divide by 1 */
+	if (ipu == 1) {
+		reg = __raw_readl(&imx_ccm->chsccdr);
+		if (di == 0) {
+			reg &= ~(0x1FF << 0);
+			reg |= ((3 << 0) | (3 << 6));
+		} else if (di == 1) {
+			reg &= ~(0x1FF << 9);
+			reg |= ((4 << 9) | (3 << 15));
+		}
+		__raw_writel(reg, &imx_ccm->chsccdr);
+	}
+
+	if (ipu == 2) {
+		reg = __raw_readl(&imx_ccm->cscdr2);
+		if (di == 0) {
+			reg &= ~(0x1FF << 0);
+			reg |= ((3 << 0) | (3 << 6));
+		} else if (di == 1) {
+			reg &= ~(0x1FF << 9);
+			reg |= ((4 << 9) | (3 << 15));
+		}
+		__raw_writel(reg, &imx_ccm->cscdr2);
+ 	}
+
+	return 0;
+}
+
+static int config_ipu_di_clk(u32 ipu, u32 di, u32 freq)
+{
+	unsigned int reg;
+
+	u32 pre_div_rate, divider;
+	u32 test_div_sel = 2;
+	u32 control3 = 0;
+	u64 temp64;
+	u32 mfn, mfd = 1000000;
+
+	printf("config_ipu_di_clk: freq = %d.\r\n", freq);
+
+	/* Set PLL5 Clock */
+	/* Disable the PLL first */
+	reg = __raw_readl(&imx_ccm->analog_pll_video);
+	reg |= BM_ANADIG_PLL_VIDEO_BYPASS;
+	reg &= ~BM_ANADIG_PLL_VIDEO_ENABLE;
+	__raw_writel(reg, &imx_ccm->analog_pll_video);
+
+	pre_div_rate = freq * 2;
+	while (pre_div_rate < PLL5_FREQ_MIN) {
+		pre_div_rate *= 2;
+		/*
+		 * test_div_sel field values:
+		 * 2 -> Divide by 1
+		 * 1 -> Divide by 2
+		 * 0 -> Divide by 4
+		 *
+		 * control3 field values:
+		 * 0 -> Divide by 1
+		 * 1 -> Divide by 2
+		 * 3 -> Divide by 4
+		 */
+		if (test_div_sel != 0)
+			test_div_sel --;
+		else {
+			control3 ++;
+			if (control3 == 2)
+				control3 ++;
+		}
+	}
+	divider = pre_div_rate / MXC_HCLK;
+	temp64 = (u64) (pre_div_rate - (divider * MXC_HCLK));
+	temp64 *= mfd;
+	do_div(temp64, MXC_HCLK);
+	mfn = temp64;
+
+	reg = __raw_readl(&imx_ccm->analog_pll_video)
+			& ~(BM_ANADIG_PLL_VIDEO_DIV_SELECT | BM_ANADIG_PLL_VIDEO_TEST_DIV_SELECT);
+	reg |= (divider |
+		(test_div_sel << BP_ANADIG_PLL_VIDEO_TEST_DIV_SELECT));
+	__raw_writel(reg, &imx_ccm->analog_pll_video);
+	__raw_writel(mfn, &imx_ccm->analog_pll_video_num);
+	__raw_writel(mfd, &imx_ccm->analog_pll_video_denom);
+
+	reg = __raw_readl(&imx_ccm->ana_misc2)
+		& ~BM_ANADIG_ANA_MISC2_CONTROL3;
+	reg |= control3 << BP_ANADIG_ANA_MISC2_CONTROL3;
+	__raw_writel(reg, &imx_ccm->ana_misc2);
+
+	/* Enable the PLL power */
+	reg = __raw_readl(&imx_ccm->analog_pll_video);
+	reg &= ~BM_ANADIG_PLL_VIDEO_POWERDOWN;
+	__raw_writel(reg, &imx_ccm->analog_pll_video);
+
+	/* Wait for PLL to lock */
+	while((__raw_readl(&imx_ccm->analog_pll_video) & BM_ANADIG_PLL_VIDEO_LOCK) == 0)
+		printf("wait for pll5 lock.\n");
+
+	/* Enable the PLL output */
+	reg = __raw_readl(&imx_ccm->analog_pll_video);
+	reg &= ~BM_ANADIG_PLL_VIDEO_BYPASS;
+	reg |= BM_ANADIG_PLL_VIDEO_ENABLE;
+	__raw_writel(reg, &imx_ccm->analog_pll_video);
+
+	printf("config_ipu_di_clk: set pll5 clock to %dHz.\r\n", decode_pll(PLL_VIDEO, MXC_HCLK));
+
+	/* Set ipu_di_clk clock source to pre-muxed ipu di clock, divided by 2, and root clock pre-muxed from PLL5 */
+	if (ipu == 1) {
+		reg = __raw_readl(&imx_ccm->chsccdr);
+		if (di == 0) {
+			reg &= ~0x000001FF;
+			reg |= ((0 << 0) | (1 << 3) | (2 << 6));
+		} else if (di == 1) {
+			reg &= ~0x0003FE00;
+			reg |= ((0 << 9) | (1 << 12) | (2 << 15));
+		}
+		__raw_writel(reg, &imx_ccm->chsccdr);
+	}
+
+	if (ipu == 2) {
+		reg = __raw_readl(&imx_ccm->cscdr2);
+		if (di == 0) {
+			reg &= ~0x000001FF;
+			reg |= ((0 << 0) | (1 << 3) | (2 << 6));
+		} else if (di == 1) {
+			reg &= ~0x0003FE00;
+			reg |= ((0 << 9) | (1 << 12) | (2 << 15));
+		}
+		__raw_writel(reg, &imx_ccm->cscdr2);
+	}
+
+	return 0;
+}
+
+/*!
+ *
+ * @param clk_type  clock type, e.g MXC_IPU1_LVDS_DI0_CLK, MXC_IPU1_DI0_CLK, etc.
+ * @param freq		targeted freq in Hz
+ * @return          0 if successful; non-zero otherwise
+ */
+int display_clk_config(u32 clk_type, u32 freq)
+{
+	switch (clk_type) {
+	case MXC_IPU1_LVDS_DI0_CLK:
+		if (config_lvds_clk(1, 0, freq))
+			return -1;
+		break;
+	case MXC_IPU1_LVDS_DI1_CLK:
+		if (config_lvds_clk(1, 1, freq))
+			return -1;
+		break;
+	case MXC_IPU2_LVDS_DI0_CLK:
+		if (config_lvds_clk(2, 0, freq))
+			return -1;
+		break;
+	case MXC_IPU2_LVDS_DI1_CLK:
+		if (config_lvds_clk(2, 1, freq))
+			return -1;
+		break;
+	case MXC_IPU1_DI0_CLK:
+		if (config_ipu_di_clk(1, 0, freq))
+			return -1;
+		break;
+	case MXC_IPU1_DI1_CLK:
+		if (config_ipu_di_clk(1, 1, freq))
+			return -1;
+		break;
+	case MXC_IPU2_DI0_CLK:
+		if (config_ipu_di_clk(2, 0, freq))
+			return -1;
+		break;
+	case MXC_IPU2_DI1_CLK:
+		if (config_ipu_di_clk(2, 1, freq))
+			return -1;
+		break;
+	default:
+		printf("Unsupported or invalid clock type! :(\n");
+		return -1;
+	}
+
+	return 0;
+}
+#endif
+
 #ifdef CONFIG_FEC_MXC
 int enable_fec_anatop_clock(int fec_id, enum enet_freq freq)
 {
diff --git a/arch/arm/cpu/armv7/mx6/ipu.c b/arch/arm/cpu/armv7/mx6/ipu.c
new file mode 100755
index 0000000..2e18026
--- /dev/null
+++ b/arch/arm/cpu/armv7/mx6/ipu.c
@@ -0,0 +1,3276 @@
+/***************************************************************************
+*
+*    ipu.c
+*
+*    IPU initialization, connect each module and build a link from memory to  
+* display .
+*
+*
+***************************************************************************/
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/errno.h>
+#include <asm/errno.h>
+#include <linux/string.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/imx-regs.h>
+#include <asm/arch/crm_regs.h>
+#include <asm/arch/iomux.h>
+#include <asm/arch/ipuv3h_reg_def.h>
+#include <asm/imx-common/iomux-v3.h>
+#include <asm/imx-common/mxc_ipu.h>
+
+
+//#define DISPLAY_EBA0 		(PHYS_SDRAM_1 + PHYS_SDRAM_1_SIZE - 0x2000000)
+#define DISPLAY_EBA0		CONFIG_FB_BASE
+
+// DI counter definitions
+#define DI_COUNTER_BASECLK 	0
+#define DI_COUNTER_IHSYNC   	1
+#define DI_COUNTER_1		   	1
+#define DI_COUNTER_HSYNC   		2
+#define DI_COUNTER_VSYNC   		3
+#define DI_COUNTER_AFIELD    	4
+#define DI_COUNTER_ALINE    		5
+#define DI_COUNTER_APIXEL   		6
+#define DI_COUNTER_7   			7
+
+#define DI_COMMAND_WAVEFORM 0
+#define DI_DATAWR_WAVEFORM  1
+#define DI_DATARD_WAVEFORM  2
+#define DI_SDC_WAVEFORM     3
+#define DI_SERIAL_WAVEFORM  4
+
+#define DI_RS_SIGNAL        0
+#define DI_WR_SIGNAL        1
+#define DI_RD_SIGNAL        1
+#define DI_SER_CLK_SIGNAL   1
+#define DI_CS_SIGNAL        2
+#define DI_NOUSE_SIGNAL     3
+
+#define DI_DEN_SIGNAL       0
+
+#define DC_CHANNEL_READ					0
+#define DC_CHANNEL_DC_SYNC_OR_ASYNC	1
+#define DC_CHANNEL_DC_ASYNC				2
+#define DC_CHANNEL_COMMAND_1			3
+#define DC_CHANNEL_COMMAND_2			4
+#define DC_CHANNEL_DP_PRIMARY			5
+#define DC_CHANNEL_DP_SECONDARY			6
+
+typedef struct {
+	unsigned int channel;
+	unsigned int xv;
+	unsigned int yv;
+	unsigned int xb;
+	unsigned int yb;
+	unsigned int nsb_b;
+	unsigned int cf;
+	unsigned int sx;
+	unsigned int sy;
+	unsigned int ns;
+	unsigned int sdx;
+	unsigned int sm;
+	unsigned int scc;
+	unsigned int sce;
+	unsigned int sdy;
+	unsigned int sdrx;
+	unsigned int sdry;
+	unsigned int bpp;
+	unsigned int dec_sel;
+	unsigned int dim;
+	unsigned int so;
+	unsigned int bndm;
+	unsigned int bm;
+	unsigned int rot;
+	unsigned int hf;
+	unsigned int vf;
+	unsigned int the;
+	unsigned int cap;
+	unsigned int cae;
+	unsigned int fw;
+	unsigned int fh;
+	unsigned int eba0;
+	unsigned int eba1;
+	unsigned int ilo;
+	unsigned int npb;
+	unsigned int pfs;
+	unsigned int alu;
+	unsigned int albm;
+	unsigned int id;
+	unsigned int th;
+	unsigned int sl;
+	unsigned int wid0;
+	unsigned int wid1;
+	unsigned int wid2;
+	unsigned int wid3;
+	unsigned int ofs0;
+	unsigned int ofs1;
+	unsigned int ofs2;
+	unsigned int ofs3;
+	unsigned int ubo;
+	unsigned int vbo;
+}ipu_channel_parameter_t;
+
+
+void ipu_write_field(unsigned int IPU, unsigned int ID_addr, unsigned int ID_mask, unsigned int data)
+{
+	unsigned int rdata; 
+	unsigned int IPU_BASE_ADDRE = IPU1_ARB_BASE_ADDR;
+	
+	if (IPU == 2)
+		IPU_BASE_ADDRE = IPU2_ARB_BASE_ADDR;
+
+	ID_addr += IPU_BASE_ADDRE;
+	rdata = readl(ID_addr);
+	rdata &= ~ID_mask;
+	rdata |= (data*(ID_mask & -ID_mask))&ID_mask;
+	writel(rdata, ID_addr);
+}
+
+void config_idmac_interleaved_channel(unsigned int IPU, ipu_channel_parameter_t ipu_channel_params)
+{
+	unsigned int IPU_BASE_ADDRE = IPU1_ARB_BASE_ADDR;
+	int w0_d0=0, w0_d1=0, w0_d2=0, w0_d3=0, w0_d4=0, w1_d0=0, w1_d1=0, w1_d2=0, w1_d3=0, w1_d4=0;
+
+	if (IPU == 2)
+		IPU_BASE_ADDRE = IPU2_ARB_BASE_ADDR;
+    
+	w0_d0 = ipu_channel_params.xb<<19 | ipu_channel_params.yv<<10  |ipu_channel_params.xv;
+	w0_d1 = ipu_channel_params.sy<<26 | ipu_channel_params.sx<<14  | ipu_channel_params.cf<<13  | ipu_channel_params.nsb_b<<12 \
+		| ipu_channel_params.yb;
+	w0_d2 = ipu_channel_params.sm<<22 | ipu_channel_params.sdx<<15 | ipu_channel_params.ns<<5   | ipu_channel_params.sy>>6;
+	w0_d3 = ipu_channel_params.fw<<29 | ipu_channel_params.cae<<28 | ipu_channel_params.cap<<27 | ipu_channel_params.the<<26  \
+		| ipu_channel_params.vf<<25 | ipu_channel_params.hf<<24 | ipu_channel_params.rot<<23 | ipu_channel_params.bm<<21 \
+		| ipu_channel_params.bndm<<18 | ipu_channel_params.so<<17 | ipu_channel_params.dim<<16 | ipu_channel_params.dec_sel<<14 \
+		| ipu_channel_params.bpp<<11 | ipu_channel_params.sdry<<10 | ipu_channel_params.sdrx<<9 | ipu_channel_params.sdy<<2 \
+		| ipu_channel_params.sce<<1 | ipu_channel_params.scc;
+	w0_d4 = ipu_channel_params.fh<<10 | ipu_channel_params.fw>>3;
+
+	w1_d0 = ipu_channel_params.eba1<<29 | ipu_channel_params.eba0;
+	w1_d1 = ipu_channel_params.ilo<<26  | ipu_channel_params.eba1>>3;
+	w1_d2 = ipu_channel_params.th<<31   | ipu_channel_params.id<<29   | ipu_channel_params.albm<<26 \
+		| ipu_channel_params.alu<<25  | ipu_channel_params.pfs<<21 | ipu_channel_params.npb<<14 | ipu_channel_params.ilo>>6;
+	w1_d3 = ipu_channel_params.wid3<<29 | ipu_channel_params.wid2<<26 | ipu_channel_params.wid1<<23 | ipu_channel_params.wid0<<20 \
+		| ipu_channel_params.sl<<6   | ipu_channel_params.th>>1;
+	w1_d4 = ipu_channel_params.ofs3<<15 | ipu_channel_params.ofs2<<10 | ipu_channel_params.ofs1<<5 | ipu_channel_params.ofs0;
+
+	writel(w0_d0, IPU_BASE_ADDRE + CPMEM_WORD0_DATA0_INT__ADDR + (ipu_channel_params.channel<<6));
+	writel(w0_d1, IPU_BASE_ADDRE + CPMEM_WORD0_DATA1_INT__ADDR + (ipu_channel_params.channel<<6));
+	writel(w0_d2, IPU_BASE_ADDRE + CPMEM_WORD0_DATA2_INT__ADDR + (ipu_channel_params.channel<<6));
+	writel(w0_d3, IPU_BASE_ADDRE + CPMEM_WORD0_DATA3_INT__ADDR + (ipu_channel_params.channel<<6));
+	writel(w0_d4, IPU_BASE_ADDRE + CPMEM_WORD0_DATA4_INT__ADDR + (ipu_channel_params.channel<<6));
+
+	writel(w1_d0, IPU_BASE_ADDRE + CPMEM_WORD1_DATA0_INT__ADDR + (ipu_channel_params.channel<<6));
+	writel(w1_d1, IPU_BASE_ADDRE + CPMEM_WORD1_DATA1_INT__ADDR + (ipu_channel_params.channel<<6));
+	writel(w1_d2, IPU_BASE_ADDRE + CPMEM_WORD1_DATA2_INT__ADDR + (ipu_channel_params.channel<<6));
+	writel(w1_d3, IPU_BASE_ADDRE + CPMEM_WORD1_DATA3_INT__ADDR + (ipu_channel_params.channel<<6));
+	writel(w1_d4, IPU_BASE_ADDRE + CPMEM_WORD1_DATA4_INT__ADDR + (ipu_channel_params.channel<<6));
+}
+
+void dmfc_config(unsigned int IPU)
+{
+	unsigned int IPU_BASE_ADDRE = IPU1_ARB_BASE_ADDR;
+
+	if(IPU == 2)
+		IPU_BASE_ADDRE = IPU2_ARB_BASE_ADDR;
+
+	// Same as _ipu_dmfc_init() in kernel
+	writel(0x202020F6, IPU_BASE_ADDRE + IPU_DMFC_WR_CHAN_DEF__ADDR);
+#ifdef IPU_USE_DC_CHANNEL
+	writel(0x00000088, IPU_BASE_ADDRE + IPU_DMFC_WR_CHAN__ADDR);
+	writel(0x00009694, IPU_BASE_ADDRE + IPU_DMFC_DP_CHAN__ADDR);
+#else
+	writel(0x00000090, IPU_BASE_ADDRE + IPU_DMFC_WR_CHAN__ADDR);
+	writel(0x0000968A, IPU_BASE_ADDRE + IPU_DMFC_DP_CHAN__ADDR);
+#endif
+	writel(0x2020F6F6, IPU_BASE_ADDRE + IPU_DMFC_DP_CHAN_DEF__ADDR);
+
+	// Set sync refresh channels and CSI->mem channel as high priority, copy from kernel
+	writel(0x18800001, IPU_BASE_ADDRE + IPU_IDMAC_CH_PRI_1__ADDR);
+
+	// Set MCU_T to divide MCU access window into 2, copy from kernel
+	writel(0x00400000 | (8 << 18), IPU_BASE_ADDRE + IPU_IPU_DISP_GEN__ADDR);
+}
+
+void dp_config(unsigned int IPU)
+{
+	ipu_write_field(IPU, SRM_DP_COM_CONF_SYNC__DP_GAMMA_EN_SYNC, 0);
+	ipu_write_field(IPU, SRM_DP_COM_CONF_SYNC__DP_CSC_YUV_SAT_MODE_SYNC, 0); //SAT mode is zero
+	ipu_write_field(IPU, SRM_DP_COM_CONF_SYNC__DP_CSC_GAMUT_SAT_EN_SYNC, 0); //GAMUT en (RGB...)
+	ipu_write_field(IPU, SRM_DP_COM_CONF_SYNC__DP_CSC_DEF_SYNC, 0); //CSC Disable
+	ipu_write_field(IPU, SRM_DP_COM_CONF_SYNC__DP_COC_SYNC, 0); //no cursor
+	ipu_write_field(IPU, SRM_DP_COM_CONF_SYNC__DP_GWCKE_SYNC, 0); //color keying disabled
+	ipu_write_field(IPU, SRM_DP_COM_CONF_SYNC__DP_GWAM_SYNC, 1); //1=global alpha,0=local alpha
+	ipu_write_field(IPU, SRM_DP_COM_CONF_SYNC__DP_GWSEL_SYNC, 1); //1=graphic is FG,0=graphic is BG
+}
+
+void microcode_config (int ipu_num, int word, int stop, char opcode[10], int lf, int af, int operand, int mapping, int waveform, int gluelogic, int sync)
+{
+	unsigned int IPU_BASE_ADDRE = IPU1_ARB_BASE_ADDR;
+	unsigned int LowWord = 0;
+	unsigned int HighWord = 0;
+	unsigned int opcode_fixed;
+
+	if  (ipu_num==2)
+	   IPU_BASE_ADDRE=IPU2_ARB_BASE_ADDR;
+
+//=========================================================================================================	
+	//HLG - HOLD WORD GENERIC:  hold operand in register for next operating, without display access 
+	if (!strcmp(opcode, "HLG")){
+							    //[4:0] = 15'b0
+		LowWord = LowWord | (operand << 5);         //[31:5]
+
+		HighWord = HighWord | (operand >> 27);      //[36:32]
+		opcode_fixed = 0x0;            		    //0-0
+		HighWord = HighWord | (opcode_fixed << 5);  //[40:37]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//WRITE DATA to display
+	if (!strcmp(opcode, "WROD")){
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+	//Generic data, this data is attached with OR to 16 MSB of mapped address	
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[35:32]
+		opcode_fixed = 0x18 | (lf << 1);            //1-1-0-lf-0
+		HighWord = HighWord | (opcode_fixed << 4);  //[40:36]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//ATTACH AND HOLD ADDRESS in REGISTER, Adding Mapped Address to held data and hold in register
+	if (!strcmp(opcode, "HLOAR")){
+		sync = 0;//fixed
+		gluelogic = 0;//fixed
+		waveform = 0;//fixed
+		operand = 0;//fixed
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[32]
+		//1 0 0 0 1 1 1 AF:  AF - Address shift flag is defined by user:
+		//0: 24bit LSB operating or no operating,
+		//1: 8 bit right shift, 24 MSB operating,
+		opcode_fixed = 0x8E | (af << 0);            //1-0-0-0-1-1-1-AF
+		HighWord = HighWord | (opcode_fixed << 1);  //[40:33]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//ATTACH AND WRITE ADDRESS to DISPLAY, Adding Mapped Address to held data and write to display
+	if (!strcmp(opcode, "WROAR")){
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[32]
+		//1 1 0 0 1 1 1 AF:  AF - Address shift flag is defined by user:
+		//0: 24bit LSB operating or no operating,
+		//1: 8 bit right shift, 24 MSB operating,
+		opcode_fixed = 0xCE | (af << 0);            //1-1-0-0-1-1-1-AF
+		HighWord = HighWord | (opcode_fixed << 1);  //[40:33]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//ATTACH AND HOLD DATA in REGISTER, Adding Mapped Address to held data and hold in register
+	if (!strcmp(opcode, "HLODR")){
+		sync = 0;//fixed
+		gluelogic = 0;//fixed
+		waveform = 0;//fixed
+		operand = 0;//fixed
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[32]
+		opcode_fixed = 0x8C;                         //
+		HighWord = HighWord | (opcode_fixed << 1);  //[40:33]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//WRODR -  WRITE_DATA_OPCODE - ATTACH AND WRITE DATA to DISPLAY, 
+	//Adding Mapped Data to hold data in internal register and write to display
+	if (!strcmp(opcode, "WRODR")){
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[32]
+		opcode_fixed = 0xCC;                         //
+		HighWord = HighWord | (opcode_fixed << 1);  //[40:33]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//WRITE BIT CHANNEL. merging 1bit mask from IDMAC mask channel with data and write to display
+	if (!strcmp(opcode, "WRBC")){
+		operand = 0;//fixed
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		opcode_fixed = 0x19B;                       //
+		HighWord = HighWord | (opcode_fixed << 0);  //[40:32]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//WAIT CLOCK - Waiting N clocks
+	if (!strcmp(opcode, "WCLK")){
+		sync = 0;//fixed
+		gluelogic = 0;//fixed
+		waveform = 0;//fixed
+		mapping = 0;//fixed
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[32]
+		opcode_fixed = 0xC9;                         //
+		HighWord = HighWord | (opcode_fixed << 1);  //[40:33]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//WAIT STATUS - 3 microcodes command loop for  checking display status by POLLING READ. THE WSTS_II has to be used immediately after WSTS _III
+	if (!strcmp(opcode, "WSTS_III")){
+		stop = 0;//fixed
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+		//number of IPU's clock to latch data from DI. after WSTS cycle start, defined by user
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[32]
+		opcode_fixed = 0x8B;                         //
+		HighWord = HighWord | (opcode_fixed << 1);  //[40:33]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//WAIT STATUS - second command in  3 microcode commands loop or first command in 2 microcode commands loop for  checking display status by POLLING READ. THE WSTS_I has to be used immediately after WSTS_II
+	if (!strcmp(opcode, "WSTS_II")){
+		stop = 0;//fixed
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+		//number of IPU's clock to latch data from DI. after WSTS cycle start, defined by user
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[32]
+		opcode_fixed = 0x8A;                        //
+		HighWord = HighWord | (opcode_fixed << 1);  //[40:33]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//WAIT STATUS - third command in  3 microcode commands loop or second command in 2 microcode commands loop or first command in one command loop for  checking display status by POLLING READ.
+	if (!strcmp(opcode, "WSTS_I")){
+		stop = 0;//fixed
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+		//number of IPU's clock to latch data from DI. after WSTS cycle start, defined by user
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[32]
+		opcode_fixed = 0x89;                         //
+		HighWord = HighWord | (opcode_fixed << 1);  //[40:33]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//HOLD ADDRESS in REGISTER: display's address which is calculated by IPU, is stored in register
+	if (!strcmp(opcode, "HLOA")){
+		sync = 0;//fixed
+		gluelogic = 0;//fixed
+		waveform = 0;//fixed
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+	//Generic data, this data is attached with OR to 16 MSB of mapped address	
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[35:32]
+		//1 0 1 0 AF:  AF - Address shift flag is defined by user: 
+		//0: 24bit LSB operating or no operating, 
+		//1: 8 bit right shift, 24 MSB operating,
+		opcode_fixed = 0x14 | (af << 0);            //1-0-1-0-AF
+		HighWord = HighWord | (opcode_fixed << 4);  //[40:36]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//HOLD ADDRESS in REGISTER: display's address which is calculated by IPU, is stored in register
+	if (!strcmp(opcode, "WROA")){
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+	//Generic data, this data is attached with OR to 16 MSB of mapped address	
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[35:32]
+		//1 0 1 0 AF:  AF - Address shift flag is defined by user: 
+		//0: 24bit LSB operating or no operating, 
+		//1: 8 bit right shift, 24 MSB operating,
+		opcode_fixed = 0x1C | (af << 0);            //1-1-1-0-AF
+		HighWord = HighWord | (opcode_fixed << 4);  //[40:36]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//HOLD DATA in REGISTER
+	if (!strcmp(opcode, "HLOD")){
+		sync = 0;//fixed
+		gluelogic=0;//fixed
+		waveform=0;//fixed
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+	//Generic data, this data is attached with OR to 16 MSB of mapped address	
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[35:32]
+		opcode_fixed = 0x10;                        //1-0-0-0-0
+		HighWord = HighWord | (opcode_fixed << 4);  //[40:36]
+		HighWord = HighWord | (stop << 9);          //[41]
+    	}
+//=========================================================================================================	
+	//WRG - Write 24bit word to DI and Hold the word in register
+	//WRITE WORD GENERIC
+	//This opcode is used for sending "a user's code", which is stored in microcode memory  to  a display
+	//NO MAPPING
+	if (!strcmp(opcode, "WRG")){
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11]
+		LowWord = LowWord | (operand << 15);        //[31:15]
+
+		HighWord = HighWord | (operand >> 17);      //[38:32]
+		opcode_fixed = 1;                           //0-1
+		HighWord = HighWord | (opcode_fixed << 7);  //[40:39]
+		HighWord = HighWord | (stop << 9);          //[41]		
+	}
+//=========================================================================================================	
+        //RD - Read command parameters:
+	if (!strcmp(opcode, "RD")){
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11] = synchronization
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+		//operand - means delay value in DI_CLK for display's data latching by DI, defined by user
+		//number of IPU's clock to latch data from DI. after WSTS cycle start
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		HighWord = HighWord | (operand >> 12);      //[32]
+		opcode_fixed = 0x88;                        //
+		HighWord = HighWord | (opcode_fixed << 1);  //[40:33]
+		HighWord = HighWord | (stop << 9);          //[41]
+
+	}
+//=========================================================================================================	
+        //WAIT FOR ACKNOWLEDGE
+	if (!strcmp(opcode, "WACK")){
+		mapping = 0;//fixed
+		operand = 0;//fixed
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11] = synchronization
+		LowWord = LowWord | (mapping   << 15);      //[19:15]
+		//operand - means delay value in DI_CLK for display's data latching by DI, defined by user
+		//number of IPU's clock to latch data from DI. after WSTS cycle start
+		LowWord = LowWord | (operand << 20);        //[31:20]
+
+		opcode_fixed = 0x11A;                       //
+		HighWord = HighWord | (opcode_fixed << 0);  //[40:32]
+		HighWord = HighWord | (stop << 9);          //[41]
+
+	}
+//=========================================================================================================	
+        //HMA  - HOLD_MICROCODE_ADDRESS - hold operand in special Microcode address register
+	if (!strcmp(opcode, "HMA")){
+		                                            //[4:0]
+		//Microcode address defined by user
+		LowWord = LowWord | (operand << 5);         //[12:5]
+		opcode_fixed = 0x2;                         //
+		HighWord = HighWord | (opcode_fixed << 5);  //[40:37]
+		HighWord = HighWord | (stop << 9);          //[41]
+
+	}
+//========================================================================================================= 
+		//HMA1  - HOLD_MICROCODE_ADDRESS - hold operand in special Microcode address register
+	if (!strcmp(opcode, "HMA1")){
+													//[4:0]
+		//Microcode address defined by user
+		LowWord = LowWord | (operand << 5); 		//[12:5]
+		opcode_fixed = 0x1; 						//
+		HighWord = HighWord | (opcode_fixed << 5);	//[40:37]
+		HighWord = HighWord | (stop << 9);			//[41]
+
+	}
+//=========================================================================================================	
+        //BMA  - BRANCH_MICROCODE_ADDRESS jump to Microcode address which is stored at 
+	//special Microcode address register
+	if (!strcmp(opcode, "BMA")){
+		                                            //[36:0] ==0
+		LowWord = LowWord | sync; 		//[2:0]
+		LowWord = LowWord | (operand << 5); 		//[12:5]
+		opcode_fixed = 0x3;                         //
+		HighWord = HighWord | (af << 3);	//[35]
+		HighWord = HighWord | (lf << 4);	//[36]
+		HighWord = HighWord | (opcode_fixed << 5);  //[40:37]
+		HighWord = HighWord | (stop << 9);          //[41]
+
+	}
+//=========================================================================================================	
+        //Additional information for event masking
+	if (!strcmp(opcode, "MSK")){
+		sync = 0;//fixed
+		gluelogic = 0;//fixed
+		waveform = 0;//fixed
+		stop = 0;//fixed 
+		//(no mapping)
+		LowWord = LowWord | sync;                   //[3:0]
+		LowWord = LowWord | (gluelogic << 4);       //[10:4]
+		LowWord = LowWord | (waveform  << 11);      //[14:11] = synchronization
+		//[32-28] - 0
+                //[27] e0m- event 0 mask, defined by user
+                //[26] e1m - event 1 mask, defined by user
+                //[25] e2m - event 2 mask, defined by user
+                //[24] e3m - event 3 mask, defined by user
+                //[23] nfm- new frame mask , defined by user
+                //[22] nlm- new line mask , defined by user
+                //[21] nfldm- new field mask , defined by user
+                //[20] eofm- end of frame mask, defined by user
+                //[19] eolm- end of line mask, defined by user
+                //[18] eofldm-  end of field mask, defined by user
+                //[17] nadm- new address mask, defined by user
+                //[16] ncm- new channel mask, defined by user
+                //[15] dm - data mask, defined by user 
+		LowWord = LowWord | (operand   << 15);      //[19:15]
+
+		HighWord = HighWord | (operand >> 17);      //[32]
+		opcode_fixed = 0xC8;                        //
+		HighWord = HighWord | (opcode_fixed << 1);  //[40:33]
+		HighWord = HighWord | (stop << 9);          //[41]
+
+	}
+//=========================================================================================================	
+		
+	writel(LowWord, IPU_BASE_ADDRE + IPU_MEM_DC_MICROCODE_BASE_ADDR + word * 8);
+	writel(HighWord, IPU_BASE_ADDRE + IPU_MEM_DC_MICROCODE_BASE_ADDR + word * 8 + 4);
+}
+
+void microcode_event(int ipu_num, int channel, char event[8], int priority, int address)
+{
+   if(channel == 0){
+
+     if(!strcmp(event, "NL")){
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_0__COD_NL_START_CHAN_0, address);
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_0__COD_NL_PRIORITY_CHAN_0, priority);
+     }//NL
+     if(!strcmp(event, "NF")){
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_0__COD_NF_START_CHAN_0, address);
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_0__COD_NF_PRIORITY_CHAN_0, priority);
+     }//NF
+     if(!strcmp(event, "NFIELD")){
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_0__COD_NFIELD_START_CHAN_0, address);
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_0__COD_NFIELD_PRIORITY_CHAN_0, priority);
+     }//NFIELD
+      if(!strcmp(event, "EOF")){
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_0__COD_EOF_START_CHAN_0, address);
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_0__COD_EOF_PRIORITY_CHAN_0, priority);
+     }//EOF
+      if(!strcmp(event, "EOFIELD")){
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_0__COD_EOFIELD_START_CHAN_0, address);
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_0__COD_EOFIELD_PRIORITY_CHAN_0, priority);
+     }//EOFIELD
+      if(!strcmp(event, "EOL")){
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_0__COD_EOL_START_CHAN_0, address);
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_0__COD_EOL_PRIORITY_CHAN_0, priority);
+     }//EOL
+      if(!strcmp(event, "NEW_CHAN")){
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_0__COD_NEW_CHAN_START_CHAN_0, address);
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_0__COD_NEW_CHAN_PRIORITY_CHAN_0, priority);
+     }//NEW_CHAN
+      if(!strcmp(event, "NEW_ADDR")){
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_0__COD_NEW_ADDR_START_CHAN_0, address);
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_0__COD_NEW_ADDR_PRIORITY_CHAN_0, priority);
+     }//NEW_ADDR
+      if(!strcmp(event, "NEW_DATA")){
+       ipu_write_field(ipu_num, IPU_DC_RL4_CH_0__COD_NEW_DATA_START_CHAN_0, address);
+       ipu_write_field(ipu_num, IPU_DC_RL4_CH_0__COD_NEW_DATA_PRIORITY_CHAN_0, priority);
+     }//NEW_DATA
+   }//channel 0 ******************************************************************************
+
+//*************************************************************************************   
+   if(channel == 1){
+
+     if(!strcmp(event, "NL")){
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_1__COD_NL_START_CHAN_1, address);
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_1__COD_NL_PRIORITY_CHAN_1, priority);
+     }//NL
+     if(!strcmp(event, "NF")){
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_1__COD_NF_START_CHAN_1, address);
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_1__COD_NF_PRIORITY_CHAN_1, priority);
+     }//NF
+     if(!strcmp(event, "NFIELD")){
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_1__COD_NFIELD_START_CHAN_1, address);
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_1__COD_NFIELD_PRIORITY_CHAN_1, priority);
+     }//NFIELD
+      if(!strcmp(event, "EOF")){
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_1__COD_EOF_START_CHAN_1, address);
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_1__COD_EOF_PRIORITY_CHAN_1, priority);
+     }//EOF
+      if(!strcmp(event, "EOFIELD")){
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_1__COD_EOFIELD_START_CHAN_1, address);
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_1__COD_EOFIELD_PRIORITY_CHAN_1, priority);
+     }//EOFIELD
+      if(!strcmp(event, "EOL")){
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_1__COD_EOL_START_CHAN_1, address);
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_1__COD_EOL_PRIORITY_CHAN_1, priority);
+     }//EOL
+      if(!strcmp(event, "NEW_CHAN")){
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_1__COD_NEW_CHAN_START_CHAN_1, address);
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_1__COD_NEW_CHAN_PRIORITY_CHAN_1, priority);
+     }//NEW_CHAN
+      if(!strcmp(event, "NEW_ADDR")){
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_1__COD_NEW_ADDR_START_CHAN_1, address);
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_1__COD_NEW_ADDR_PRIORITY_CHAN_1, priority);
+     }//NEW_ADDR
+      if(!strcmp(event, "NEW_DATA")){
+       ipu_write_field(ipu_num, IPU_DC_RL4_CH_1__COD_NEW_DATA_START_CHAN_1, address);
+       ipu_write_field(ipu_num, IPU_DC_RL4_CH_1__COD_NEW_DATA_PRIORITY_CHAN_1, priority);
+     }//NEW_DATA
+   }//channel 1 ****************************************************************************************
+
+//*************************************************************************************   
+   if(channel == 2){
+
+     if(!strcmp(event, "NL")){
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_2__COD_NL_START_CHAN_2, address);
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_2__COD_NL_PRIORITY_CHAN_2, priority);
+     }//NL
+     if(!strcmp(event, "NF")){
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_2__COD_NF_START_CHAN_2, address);
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_2__COD_NF_PRIORITY_CHAN_2, priority);
+     }//NF
+     if(!strcmp(event, "NFIELD")){
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_2__COD_NFIELD_START_CHAN_2, address);
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_2__COD_NFIELD_PRIORITY_CHAN_2, priority);
+     }//NFIELD
+      if(!strcmp(event, "EOF")){
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_2__COD_EOF_START_CHAN_2, address);
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_2__COD_EOF_PRIORITY_CHAN_2, priority);
+     }//EOF
+      if(!strcmp(event, "EOFIELD")){
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_2__COD_EOFIELD_START_CHAN_2, address);
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_2__COD_EOFIELD_PRIORITY_CHAN_2, priority);
+     }//EOFIELD
+      if(!strcmp(event, "EOL")){
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_2__COD_EOL_START_CHAN_2, address);
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_2__COD_EOL_PRIORITY_CHAN_2, priority);
+     }//EOL
+      if(!strcmp(event, "NEW_CHAN")){
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_2__COD_NEW_CHAN_START_CHAN_2, address);
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_2__COD_NEW_CHAN_PRIORITY_CHAN_2, priority);
+     }//NEW_CHAN
+      if(!strcmp(event, "NEW_ADDR")){
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_2__COD_NEW_ADDR_START_CHAN_2, address);
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_2__COD_NEW_ADDR_PRIORITY_CHAN_2, priority);
+     }//NEW_ADDR
+      if(!strcmp(event, "NEW_DATA")){
+       ipu_write_field(ipu_num, IPU_DC_RL4_CH_2__COD_NEW_DATA_START_CHAN_2, address);
+       ipu_write_field(ipu_num, IPU_DC_RL4_CH_2__COD_NEW_DATA_PRIORITY_CHAN_2, priority);
+     }//NEW_DATA
+   }//channel 2 ****************************************************************************************
+   
+//*************************************************************************************   
+   if(channel == 5){
+
+     if(!strcmp(event, "NL")){
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_5__COD_NL_START_CHAN_5, address);
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_5__COD_NL_PRIORITY_CHAN_5, priority);
+     }//NL
+     if(!strcmp(event, "NF")){
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_5__COD_NF_START_CHAN_5, address);
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_5__COD_NF_PRIORITY_CHAN_5, priority);
+     }//NF
+     if(!strcmp(event, "NFIELD")){
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_5__COD_NFIELD_START_CHAN_5, address);
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_5__COD_NFIELD_PRIORITY_CHAN_5, priority);
+     }//NFIELD
+      if(!strcmp(event, "EOF")){
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_5__COD_EOF_START_CHAN_5, address);
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_5__COD_EOF_PRIORITY_CHAN_5, priority);
+     }//EOF
+      if(!strcmp(event, "EOFIELD")){
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_5__COD_EOFIELD_START_CHAN_5, address);
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_5__COD_EOFIELD_PRIORITY_CHAN_5, priority);
+     }//EOFIELD
+      if(!strcmp(event, "EOL")){
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_5__COD_EOL_START_CHAN_5, address);
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_5__COD_EOL_PRIORITY_CHAN_5, priority);
+     }//EOL
+      if(!strcmp(event, "NEW_CHAN")){
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_5__COD_NEW_CHAN_START_CHAN_5, address);
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_5__COD_NEW_CHAN_PRIORITY_CHAN_5, priority);
+     }//NEW_CHAN
+      if(!strcmp(event, "NEW_ADDR")){
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_5__COD_NEW_ADDR_START_CHAN_5, address);
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_5__COD_NEW_ADDR_PRIORITY_CHAN_5, priority);
+     }//NEW_ADDR
+      if(!strcmp(event, "NEW_DATA")){
+       ipu_write_field(ipu_num, IPU_DC_RL4_CH_5__COD_NEW_DATA_START_CHAN_5, address);
+       ipu_write_field(ipu_num, IPU_DC_RL4_CH_5__COD_NEW_DATA_PRIORITY_CHAN_5, priority);
+     }//NEW_DATA
+   }//channel 5 ****************************************************************************************
+
+//*************************************************************************************   
+   if(channel == 6){
+
+     if(!strcmp(event, "NL")){
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_6__COD_NL_START_CHAN_6, address);
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_6__COD_NL_PRIORITY_CHAN_6, priority);
+     }//NL
+     if(!strcmp(event, "NF")){
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_6__COD_NF_START_CHAN_6, address);
+       ipu_write_field(ipu_num, IPU_DC_RL0_CH_6__COD_NF_PRIORITY_CHAN_6, priority);
+     }//NF
+     if(!strcmp(event, "NFIELD")){
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_6__COD_NFIELD_START_CHAN_6, address);
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_6__COD_NFIELD_PRIORITY_CHAN_6, priority);
+     }//NFIELD
+      if(!strcmp(event, "EOF")){
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_6__COD_EOF_START_CHAN_6, address);
+       ipu_write_field(ipu_num, IPU_DC_RL1_CH_6__COD_EOF_PRIORITY_CHAN_6, priority);
+     }//EOF
+      if(!strcmp(event, "EOFIELD")){
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_6__COD_EOFIELD_START_CHAN_6, address);
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_6__COD_EOFIELD_PRIORITY_CHAN_6, priority);
+     }//EOFIELD
+      if(!strcmp(event, "EOL")){
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_6__COD_EOL_START_CHAN_6, address);
+       ipu_write_field(ipu_num, IPU_DC_RL2_CH_6__COD_EOL_PRIORITY_CHAN_6, priority);
+     }//EOL
+      if(!strcmp(event, "NEW_CHAN")){
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_6__COD_NEW_CHAN_START_CHAN_6, address);
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_6__COD_NEW_CHAN_PRIORITY_CHAN_6, priority);
+     }//NEW_CHAN
+      if(!strcmp(event, "NEW_ADDR")){
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_6__COD_NEW_ADDR_START_CHAN_6, address);
+       ipu_write_field(ipu_num, IPU_DC_RL3_CH_6__COD_NEW_ADDR_PRIORITY_CHAN_6, priority);
+     }//NEW_ADDR
+      if(!strcmp(event, "NEW_DATA")){
+       ipu_write_field(ipu_num, IPU_DC_RL4_CH_6__COD_NEW_DATA_START_CHAN_6, address);
+       ipu_write_field(ipu_num, IPU_DC_RL4_CH_6__COD_NEW_DATA_PRIORITY_CHAN_6, priority);
+     }//NEW_DATA
+   }//channel 6 ****************************************************************************************
+
+   
+}
+
+
+#ifdef DISPLAY_INTERLACED
+void dc_config_interlaced(unsigned int IPU, unsigned int DI)
+{
+	unsigned int microCodeAddr_DATA;
+	int mapping = 1;
+
+#if (DISPLAY_IF_BPP == 24)
+	mapping = 1;
+#endif
+
+#if (DISPLAY_IF_BPP == 18)
+	mapping = 2;
+#endif
+
+#if (DISPLAY_IF_BPP == 16)
+	mapping = 4;
+#endif
+
+	microCodeAddr_DATA = 1;
+
+	//DATA
+	microcode_config(
+	                 IPU, 
+	                 microCodeAddr_DATA,//word address
+	                 1,//stop
+	                 "WROD",//OPCODE
+	                 0, //LF
+	                 0, //AF
+	                 0, //OPERAND
+	                 mapping, //MAPPING
+	                 DI_SDC_WAVEFORM + 1, //WAVEFORM
+	                 0, //GLUELOGIC
+	                 DI_COUNTER_APIXEL);//SYNC
+
+#ifdef IPU_USE_DC_CHANNEL
+	/*********************************************************************
+	* link events to routines
+	**********************************************************************/
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NL",			3,	microCodeAddr_DATA);  //prior=3
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NF",			0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NFIELD",		0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "EOF",		 	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "EOFIELD",		0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "EOL",			2,	microCodeAddr_DATA);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NEW_CHAN",	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NEW_ADDR",	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NEW_DATA",	1,	microCodeAddr_DATA); 
+
+	//WR_CH_CONF_1  
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__PROG_START_TIME_1, 0);  //no anti-tearing elimination used
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__CHAN_MASK_DEFAULT_1, 0);  //only the highest priority event will be served
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__PROG_CHAN_TYP_1, 4);  //normal mode without anti-tearing.DO NOT CHANGE!!
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__PROG_DISP_ID_1, 1);  //select dc_display 1 to link channel #1
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__PROG_DI_ID_1, DI);  //DC channel 1 associated to current DI
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__PROG_DI_ID_5, 1 - DI);  //DC channel 5 associated to another DI
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__W_SIZE_1, 2);  //component size access to DC set to 24bit MSB.
+#ifdef DISPLAY_INTERLACED
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__FIELD_MODE_1, 1);  //field mode enable
+#else
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__FIELD_MODE_1, 0);  //frame mode enable
+#endif
+	ipu_write_field(IPU, IPU_DC_WR_CH_ADDR_1__ST_ADDR_1, 0);  //START ADDRESS OF CHANNEL
+
+#else
+
+	/*********************************************************************
+	* link events to routines
+	**********************************************************************/
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NL",			3,	microCodeAddr_DATA);  //prior=3
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NF",			0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NFIELD",		0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "EOF",		 	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "EOFIELD",		0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "EOL",			2,	microCodeAddr_DATA);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NEW_CHAN",	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NEW_ADDR",	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NEW_DATA",	1,	microCodeAddr_DATA); 
+
+	//WR_CH_CONF_5  
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__PROG_START_TIME_5, 0);  //no anti-tearing elimination used
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__CHAN_MASK_DEFAULT_5, 0);  //only the highest priority event will be served
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__PROG_CHAN_TYP_5, 4);  //normal mode without anti-tearing.DO NOT CHANGE!!
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__PROG_DISP_ID_5, 1);  //select dc_display 1 to link channel #5
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__PROG_DI_ID_5, DI);  //DC channel 5 associated to current DI
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__PROG_DI_ID_1, 1 - DI);  //DC channel 1 associated to another DI
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__W_SIZE_5, 2);  //component size access to DC set to 24bit MSB.
+#ifdef DISPLAY_INTERLACED
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__FIELD_MODE_5, 1);  //field mode enable
+#else
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__FIELD_MODE_5, 0);  //frame mode enable
+#endif
+	ipu_write_field(IPU, IPU_DC_WR_CH_ADDR_5__ST_ADDR_5, 0);  //START ADDRESS OF CHANNEL
+#endif
+
+	//GENERAL 
+	ipu_write_field(IPU, IPU_DC_GEN__SYNC_PRIORITY_5, 1);  //sets the priority of channel #5 to high.
+	ipu_write_field(IPU, IPU_DC_GEN__SYNC_PRIORITY_1, 1);  //sets the priority of channel #1 to high.
+	ipu_write_field(IPU, IPU_DC_GEN__MASK4CHAN_5, 0);  // mask channel is associated to the sync flow via DC (without DP)
+	ipu_write_field(IPU, IPU_DC_GEN__MASK_EN, 0);  // mask channel is disabled.(mask channel can associated with different IDMAC channels)
+	ipu_write_field(IPU, IPU_DC_GEN__DC_CH5_TYPE, 0);  // alternate sync or asyn flow
+	ipu_write_field(IPU, IPU_DC_GEN__SYNC_1_6, 2);  //DC channel #1 handles sync flow
+
+	//DISP_CONF  
+	ipu_write_field(IPU, IPU_DC_DISP_CONF1_1__ADDR_INCREMENT_1, 0);  //automatical address increase by 1
+	ipu_write_field(IPU, IPU_DC_DISP_CONF1_1__DISP_TYP_1, 2);  //paralel display without byte enable
+	ipu_write_field(IPU, IPU_DC_DISP_CONF2_1__SL_1, DISPLAY_WIDTH);  //stride line
+
+	//DC_UGDE 
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__NF_NL_1, 0);  //NL->0,NF->1,NFIELD->2
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__AUTORESTART_1, 0);  //no autorestart
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__ODD_EN_1, 0);  // disable 'odd'
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__COD_ODD_START_1, 1);  //words 1 1st part
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__COD_EV_START_1, 5);  //word 2 2nd part
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__COD_EV_PRIORITY_1,  1);  //enabled. all others are disabled.
+#ifdef IPU_USE_DC_CHANNEL
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__ID_CODED_1, 0x1);  //DC_CHANNEL_DC_SYNC_OR_ASYNC
+#else
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__ID_CODED_1, 0x3);  //DC_CHANNEL_DP_PRIMARY
+#endif
+	ipu_write_field(IPU, IPU_DC_UGDE1_1__STEP_1, 0);  //every data
+	ipu_write_field(IPU, IPU_DC_UGDE1_2__OFFSET_DT_1, 0);  //no offset
+	ipu_write_field(IPU, IPU_DC_UGDE1_3__STEP_REPEAT_1, (DISPLAY_WIDTH - 1));
+
+	//DC_MAP, same as _ipu_init_dc_mappings() in kernel
+	// config DC mapping point 1, IPU_PIX_FMT_RGB24
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_15__MD_OFFSET_0, 7);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_15__MD_MASK_0, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_15__MD_OFFSET_1, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_15__MD_MASK_1, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_16__MD_OFFSET_2, 23);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_16__MD_MASK_2, 0xFF);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE0_0, 0);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE1_0, 1);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE2_0, 2);
+
+	// config DC mapping point 2, IPU_PIX_FMT_RGB666
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_16__MD_OFFSET_3, 5);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_16__MD_MASK_3, 0xFC);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_17__MD_OFFSET_4, 11);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_17__MD_MASK_4, 0xFC);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_17__MD_OFFSET_5, 17);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_17__MD_MASK_5, 0xFC);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE0_1, 3);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE1_1, 4);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE2_1, 5);
+
+	// config DC mapping point 3, IPU_PIX_FMT_YUV444
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_18__MD_OFFSET_6, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_18__MD_MASK_6, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_18__MD_OFFSET_7, 23);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_18__MD_MASK_7, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_19__MD_OFFSET_8, 7);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_19__MD_MASK_8, 0xFF);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE0_2, 6);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE1_2, 7);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE2_2, 8);
+
+	// config DC mapping point 4, IPU_PIX_FMT_RGB565
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_19__MD_OFFSET_9, 4);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_19__MD_MASK_9, 0xF8);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_20__MD_OFFSET_10, 10);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_20__MD_MASK_10, 0xFC);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_20__MD_OFFSET_11, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_20__MD_MASK_11, 0xF8);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE0_3, 9);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE1_3, 10);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE2_3, 11);
+
+	// config DC mapping point 5, IPU_PIX_FMT_LVDS666
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_21__MD_OFFSET_12, 5);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_21__MD_MASK_12, 0xFC);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_21__MD_OFFSET_13, 13);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_21__MD_MASK_13, 0xFC);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_22__MD_OFFSET_14, 21);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_22__MD_MASK_14, 0xFC);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE0_4, 12);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE1_4, 13);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE2_4, 14);
+
+	// config DC mapping point 6,7, IPU_PIX_FMT_VYUY
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_22__MD_OFFSET_15, 7);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_22__MD_MASK_15, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_23__MD_OFFSET_16, 0);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_23__MD_MASK_16, 0x00);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_23__MD_OFFSET_17, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_23__MD_MASK_17, 0xFF);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE0_5, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE1_5, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE2_5, 17);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_24__MD_OFFSET_18, 0);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_24__MD_MASK_18, 0x00);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_24__MD_OFFSET_19, 7);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_24__MD_MASK_19, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_25__MD_OFFSET_20, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_25__MD_MASK_20, 0xFF);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE0_6, 18);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE1_6, 19);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE2_6, 20);
+
+	// config DC mapping point 8,9, IPU_PIX_FMT_UYVY
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE0_7, 18);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE1_7, 19);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE2_7, 20);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE0_8, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE1_8, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE2_8, 17);
+
+	// config DC mapping point 10,11, IPU_PIX_FMT_YUYV
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE0_9, 17);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE1_9, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE2_9, 15);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE0_10, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE1_10, 17);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE2_10, 15);
+
+	// config DC mapping point 12,13, IPU_PIX_FMT_YVYU
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE0_11, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE1_11, 17);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE2_11, 15);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE0_12, 17);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE1_12, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE2_12, 15);
+
+	// config DC mapping point 14, IPU_PIX_FMT_GBR24, IPU_PIX_FMT_VYU444
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE0_13, 2);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE1_13, 0);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE2_13, 1);
+
+	// config DC mapping point 15, IPU_PIX_FMT_BGR24
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE0_14, 2);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE1_14, 1);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE2_14, 0);
+}
+#else
+void dc_config(unsigned int IPU, unsigned int DI)
+{
+	unsigned int microCodeAddr_NL, microCodeAddr_EOL, microCodeAddr_DATA;
+	int mapping = 1;
+
+#if (DISPLAY_IF_BPP == 24)
+	mapping = 1;
+#endif
+
+#if (DISPLAY_IF_BPP == 18)
+	mapping = 2;
+#endif
+
+#if (DISPLAY_IF_BPP == 16)
+	mapping = 4;
+#endif
+
+	microCodeAddr_NL = 2;
+	microCodeAddr_EOL = 3;
+	microCodeAddr_DATA = 4;
+
+	//MICROCODE 
+	microcode_config(
+	                 IPU, 
+	                 1,//word address
+	                 1,//stop
+	                 "WROD",//OPCODE
+	                 0, //LF
+	                 0, //AF
+	                 0, //OPERAND
+	                 mapping, //MAPPING
+	                 DI_SDC_WAVEFORM + 1, //WAVEFORM
+	                 0, //GLUELOGIC
+	                 DI_COUNTER_APIXEL);//SYNC
+
+	microcode_config(
+			 IPU, 
+			 5,//word address
+			 1,//stop
+			 "WROD",//OPCODE
+			 0, //LF
+			 0, //AF
+			 0, //OPERAND
+			 mapping, //MAPPING
+			 DI_SDC_WAVEFORM + 1, //WAVEFORM
+			 0, //GLUELOGIC
+			 DI_COUNTER_APIXEL);//SYNC
+ 
+	//NL                 
+	microcode_config(
+	                 IPU, 
+	                 microCodeAddr_NL,//word address
+	                 1,//stop
+	                 "WROD",//OPCODE
+	                 0, //LF
+	                 0, //AF
+	                 0, //OPERAND
+	                 mapping, //MAPPING
+	                 DI_SDC_WAVEFORM + 1, //WAVEFORM
+	                 0, //GLUELOGIC
+	                 DI_COUNTER_APIXEL);//SYNC
+
+	//EOL		 
+	microcode_config(
+	                 IPU, 
+	                 microCodeAddr_EOL,//word address
+	                 1,//stop
+	                 "WROD",//OPCODE
+	                 0, //LF
+	                 0, //AF
+	                 0, //OPERAND
+	                 mapping, //MAPPING
+	                 DI_SDC_WAVEFORM + 1, //WAVEFORM
+	                 0, //GLUELOGIC
+	                 DI_COUNTER_APIXEL);//SYNC
+
+	//DATA
+	microcode_config(
+	                 IPU, 
+	                 microCodeAddr_DATA,//word address
+	                 1,//stop
+	                 "WROD",//OPCODE
+	                 0, //LF
+	                 0, //AF
+	                 0, //OPERAND
+	                 mapping, //MAPPING
+	                 DI_SDC_WAVEFORM + 1, //WAVEFORM
+	                 0, //GLUELOGIC
+	                 DI_COUNTER_APIXEL);//SYNC
+
+#ifdef IPU_USE_DC_CHANNEL
+	/*********************************************************************
+	* link events to routines
+	**********************************************************************/
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NL",			3,	microCodeAddr_NL);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NF",			0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NFIELD",		0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "EOF",		 	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "EOFIELD",		0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "EOL",			2,	microCodeAddr_EOL);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NEW_CHAN",	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NEW_ADDR",	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DC_SYNC_OR_ASYNC, "NEW_DATA",	1,	microCodeAddr_DATA); 
+
+	//WR_CH_CONF_1  
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__PROG_START_TIME_1, 0);  //no anti-tearing elimination used
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__CHAN_MASK_DEFAULT_1, 0);  //only the highest priority event will be served
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__PROG_CHAN_TYP_1, 4);  //normal mode without anti-tearing.DO NOT CHANGE!!
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__PROG_DISP_ID_1, 1);  //select dc_display 1 to link channel #1
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__PROG_DI_ID_1, DI);  //DC channel 1 associated to current DI
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__PROG_DI_ID_5, 1 - DI);  //DC channel 5 associated to another DI
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__W_SIZE_1, 2);  //component size access to DC set to 24bit MSB.
+#ifdef DISPLAY_INTERLACED
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__FIELD_MODE_1, 1);  //field mode enable
+#else
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__FIELD_MODE_1, 0);  //frame mode enable
+#endif
+	ipu_write_field(IPU, IPU_DC_WR_CH_ADDR_1__ST_ADDR_1, 0);  //START ADDRESS OF CHANNEL
+
+#else
+
+	/*********************************************************************
+	* link events to routines
+	**********************************************************************/
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NL",			3,	microCodeAddr_NL);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NF",			0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NFIELD",		0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "EOF",		 	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "EOFIELD",		0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "EOL",			2,	microCodeAddr_EOL);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NEW_CHAN",	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NEW_ADDR",	0,	0);
+	microcode_event(IPU, DC_CHANNEL_DP_PRIMARY, "NEW_DATA",	1,	microCodeAddr_DATA); 
+
+	//WR_CH_CONF_5  
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__PROG_START_TIME_5, 0);  //no anti-tearing elimination used
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__CHAN_MASK_DEFAULT_5, 0);  //only the highest priority event will be served
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__PROG_CHAN_TYP_5, 4);  //normal mode without anti-tearing.DO NOT CHANGE!!
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__PROG_DISP_ID_5, 1);  //select dc_display 1 to link channel #5
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__PROG_DI_ID_5, DI);  //DC channel 5 associated to current DI
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_1__PROG_DI_ID_1, 1 - DI);  //DC channel 1 associated to another DI
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__W_SIZE_5, 2);  //component size access to DC set to 24bit MSB.
+#ifdef DISPLAY_INTERLACED
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__FIELD_MODE_5, 1);  //field mode enable
+#else
+	ipu_write_field(IPU, IPU_DC_WR_CH_CONF_5__FIELD_MODE_5, 0);  //frame mode enable
+#endif
+	ipu_write_field(IPU, IPU_DC_WR_CH_ADDR_5__ST_ADDR_5, 0);  //START ADDRESS OF CHANNEL
+#endif
+
+	//GENERAL 
+	ipu_write_field(IPU, IPU_DC_GEN__SYNC_PRIORITY_5, 1);  //sets the priority of channel #5 to high.
+	ipu_write_field(IPU, IPU_DC_GEN__SYNC_PRIORITY_1, 1);  //sets the priority of channel #1 to high.
+	ipu_write_field(IPU, IPU_DC_GEN__MASK4CHAN_5, 0);  // mask channel is associated to the sync flow via DC (without DP)
+	ipu_write_field(IPU, IPU_DC_GEN__MASK_EN, 0);  // mask channel is disabled.(mask channel can associated with different IDMAC channels)
+	ipu_write_field(IPU, IPU_DC_GEN__DC_CH5_TYPE, 0);  // alternate sync or asyn flow
+	ipu_write_field(IPU, IPU_DC_GEN__SYNC_1_6, 2);  //DC channel #1 handles sync flow
+
+	//DISP_CONF  
+	ipu_write_field(IPU, IPU_DC_DISP_CONF1_1__ADDR_INCREMENT_1, 0);  //automatical address increase by 1
+	ipu_write_field(IPU, IPU_DC_DISP_CONF1_1__DISP_TYP_1, 2);  //paralel display without byte enable
+	ipu_write_field(IPU, IPU_DC_DISP_CONF2_1__SL_1, DISPLAY_WIDTH);  //stride line
+
+	//DC_UGDE 
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__NF_NL_1, 0);  //NL->0,NF->1,NFIELD->2
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__AUTORESTART_1, 0);  //no autorestart
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__ODD_EN_1, 0);  // disable 'odd'
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__COD_ODD_START_1, 1);  //words 1 1st part
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__COD_EV_START_1, 5);  //word 2 2nd part
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__COD_EV_PRIORITY_1,  1);  //enabled. all others are disabled.
+#ifdef IPU_USE_DC_CHANNEL
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__ID_CODED_1, 0x1);  //DC_CHANNEL_DC_SYNC_OR_ASYNC
+#else
+	ipu_write_field(IPU, IPU_DC_UGDE1_0__ID_CODED_1, 0x3);  //DC_CHANNEL_DP_PRIMARY
+#endif
+	ipu_write_field(IPU, IPU_DC_UGDE1_1__STEP_1, 0);  //every data
+	ipu_write_field(IPU, IPU_DC_UGDE1_2__OFFSET_DT_1, 0);  //no offset
+	ipu_write_field(IPU, IPU_DC_UGDE1_3__STEP_REPEAT_1, (DISPLAY_WIDTH - 1));
+
+	//DC_MAP, same as _ipu_init_dc_mappings() in kernel
+	// config DC mapping point 1, IPU_PIX_FMT_RGB24
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_15__MD_OFFSET_0, 7);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_15__MD_MASK_0, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_15__MD_OFFSET_1, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_15__MD_MASK_1, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_16__MD_OFFSET_2, 23);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_16__MD_MASK_2, 0xFF);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE0_0, 0);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE1_0, 1);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE2_0, 2);
+
+	// config DC mapping point 2, IPU_PIX_FMT_RGB666
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_16__MD_OFFSET_3, 5);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_16__MD_MASK_3, 0xFC);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_17__MD_OFFSET_4, 11);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_17__MD_MASK_4, 0xFC);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_17__MD_OFFSET_5, 17);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_17__MD_MASK_5, 0xFC);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE0_1, 3);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE1_1, 4);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE2_1, 5);
+
+	// config DC mapping point 3, IPU_PIX_FMT_YUV444
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_18__MD_OFFSET_6, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_18__MD_MASK_6, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_18__MD_OFFSET_7, 23);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_18__MD_MASK_7, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_19__MD_OFFSET_8, 7);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_19__MD_MASK_8, 0xFF);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE0_2, 6);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE1_2, 7);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE2_2, 8);
+
+	// config DC mapping point 4, IPU_PIX_FMT_RGB565
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_19__MD_OFFSET_9, 4);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_19__MD_MASK_9, 0xF8);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_20__MD_OFFSET_10, 10);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_20__MD_MASK_10, 0xFC);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_20__MD_OFFSET_11, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_20__MD_MASK_11, 0xF8);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE0_3, 9);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE1_3, 10);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE2_3, 11);
+
+	// config DC mapping point 5, IPU_PIX_FMT_LVDS666
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_21__MD_OFFSET_12, 5);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_21__MD_MASK_12, 0xFC);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_21__MD_OFFSET_13, 13);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_21__MD_MASK_13, 0xFC);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_22__MD_OFFSET_14, 21);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_22__MD_MASK_14, 0xFC);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE0_4, 12);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE1_4, 13);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE2_4, 14);
+
+	// config DC mapping point 6,7, IPU_PIX_FMT_VYUY
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_22__MD_OFFSET_15, 7);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_22__MD_MASK_15, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_23__MD_OFFSET_16, 0);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_23__MD_MASK_16, 0x00);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_23__MD_OFFSET_17, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_23__MD_MASK_17, 0xFF);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE0_5, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE1_5, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE2_5, 17);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_24__MD_OFFSET_18, 0);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_24__MD_MASK_18, 0x00);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_24__MD_OFFSET_19, 7);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_24__MD_MASK_19, 0xFF);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_25__MD_OFFSET_20, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_25__MD_MASK_20, 0xFF);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE0_6, 18);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE1_6, 19);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE2_6, 20);
+
+	// config DC mapping point 8,9, IPU_PIX_FMT_UYVY
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE0_7, 18);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE1_7, 19);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE2_7, 20);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE0_8, 15);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE1_8, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE2_8, 17);
+
+	// config DC mapping point 10,11, IPU_PIX_FMT_YUYV
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE0_9, 17);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE1_9, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE2_9, 15);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE0_10, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE1_10, 17);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE2_10, 15);
+
+	// config DC mapping point 12,13, IPU_PIX_FMT_YVYU
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE0_11, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE1_11, 17);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE2_11, 15);
+
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE0_12, 17);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE1_12, 16);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE2_12, 15);
+
+	// config DC mapping point 14, IPU_PIX_FMT_GBR24, IPU_PIX_FMT_VYU444
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE0_13, 2);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE1_13, 0);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE2_13, 1);
+
+	// config DC mapping point 15, IPU_PIX_FMT_BGR24
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE0_14, 2);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE1_14, 1);
+	ipu_write_field(IPU, IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE2_14, 0);
+}
+#endif
+
+void di_sync_config(
+                int ipu_num, 
+                int di, 
+                int pointer,
+                int run_value_m1,           
+                int run_resolution,         
+                int offset_value,           
+                int offset_resolution,      
+                int cnt_auto_reload,        
+                int step_repeat,           
+                int cnt_clr_sel,            
+                int cnt_polarity_gen_en,    
+                int cnt_polarity_trigger_sel,
+                int cnt_polarity_clr_sel,   
+                int cnt_up,                 
+                int cnt_down, 
+                int gentime_sel
+                )
+{
+    if(di == 0){
+        switch(pointer){
+            case  1:{
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_1__DI0_RUN_VALUE_M1_1, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_1__DI0_RUN_RESOLUTION_1, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_1__DI0_OFFSET_VALUE_1, offset_value);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_1__DI0_OFFSET_RESOLUTION_1, offset_resolution);                                                                          
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_1__DI0_CNT_POLARITY_GEN_EN_1, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_1__DI0_CNT_AUTO_RELOAD_1, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_1__DI0_CNT_CLR_SEL_1, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_1__DI0_CNT_DOWN_1, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_1__DI0_CNT_POLARITY_TRIGGER_SEL_1, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_1__DI0_CNT_POLARITY_CLR_SEL_1, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_1__DI0_CNT_UP_1, cnt_up);                                                                             
+                ipu_write_field(ipu_num, IPU_DI0_STP_REP_1__DI0_STEP_REPEAT_1, step_repeat);
+                break;
+            }
+            case  2:{
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_2__DI0_RUN_VALUE_M1_2, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_2__DI0_RUN_RESOLUTION_2, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_2__DI0_OFFSET_VALUE_2, offset_value);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_2__DI0_OFFSET_RESOLUTION_2, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_2__DI0_CNT_POLARITY_GEN_EN_2, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_2__DI0_CNT_AUTO_RELOAD_2, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_2__DI0_CNT_CLR_SEL_2, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_2__DI0_CNT_DOWN_2, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_2__DI0_CNT_POLARITY_TRIGGER_SEL_2, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_2__DI0_CNT_POLARITY_CLR_SEL_2, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_2__DI0_CNT_UP_2, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI0_STP_REP_1__DI0_STEP_REPEAT_2, step_repeat);
+                break;
+            }
+            case  3:{
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_3__DI0_RUN_VALUE_M1_3, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_3__DI0_RUN_RESOLUTION_3, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_3__DI0_OFFSET_VALUE_3, offset_value);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_3__DI0_OFFSET_RESOLUTION_3, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_3__DI0_CNT_POLARITY_GEN_EN_3, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_3__DI0_CNT_AUTO_RELOAD_3, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_3__DI0_CNT_CLR_SEL_3, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_3__DI0_CNT_DOWN_3, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_3__DI0_CNT_POLARITY_TRIGGER_SEL_3, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_3__DI0_CNT_POLARITY_CLR_SEL_3, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_3__DI0_CNT_UP_3, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI0_STP_REP_2__DI0_STEP_REPEAT_3, step_repeat);
+                break;
+            }
+            case  4:{
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_4__DI0_RUN_VALUE_M1_4, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_4__DI0_RUN_RESOLUTION_4, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_4__DI0_OFFSET_VALUE_4, offset_value);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_4__DI0_OFFSET_RESOLUTION_4, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_4__DI0_CNT_POLARITY_GEN_EN_4, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_4__DI0_CNT_AUTO_RELOAD_4, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_4__DI0_CNT_CLR_SEL_4, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_4__DI0_CNT_DOWN_4, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_4__DI0_CNT_POLARITY_TRIGGER_SEL_4, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_4__DI0_CNT_POLARITY_CLR_SEL_4, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_4__DI0_CNT_UP_4, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI0_STP_REP_2__DI0_STEP_REPEAT_4, step_repeat);
+                break;
+            }
+            case  5:{
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_5__DI0_RUN_VALUE_M1_5, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_5__DI0_RUN_RESOLUTION_5, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_5__DI0_OFFSET_VALUE_5, offset_value);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_5__DI0_OFFSET_RESOLUTION_5, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_5__DI0_CNT_POLARITY_GEN_EN_5, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_5__DI0_CNT_AUTO_RELOAD_5, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_5__DI0_CNT_CLR_SEL_5, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_5__DI0_CNT_DOWN_5, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_5__DI0_CNT_POLARITY_TRIGGER_SEL_5, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_5__DI0_CNT_POLARITY_CLR_SEL_5, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_5__DI0_CNT_UP_5, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI0_STP_REP_3__DI0_STEP_REPEAT_5, step_repeat);
+                break;
+            }
+            case  6:{
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_6__DI0_RUN_VALUE_M1_6, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_6__DI0_RUN_RESOLUTION_6, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_6__DI0_OFFSET_VALUE_6, offset_value);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_6__DI0_OFFSET_RESOLUTION_6, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_6__DI0_CNT_POLARITY_GEN_EN_6, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_6__DI0_CNT_AUTO_RELOAD_6, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_6__DI0_CNT_CLR_SEL_6, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_6__DI0_CNT_DOWN_6, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_6__DI0_CNT_POLARITY_TRIGGER_SEL_6, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_6__DI0_CNT_POLARITY_CLR_SEL_6, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_6__DI0_CNT_UP_6, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI0_STP_REP_3__DI0_STEP_REPEAT_6, step_repeat);
+                break;
+            }
+            case  7:{
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_7__DI0_RUN_VALUE_M1_7, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_7__DI0_RUN_RESOLUTION_7, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_7__DI0_OFFSET_VALUE_7, offset_value);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_7__DI0_OFFSET_RESOLUTION_7, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_7__DI0_CNT_POLARITY_GEN_EN_7, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_7__DI0_CNT_AUTO_RELOAD_7, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_7__DI0_CNT_CLR_SEL_7, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_7__DI0_CNT_DOWN_7, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_7__DI0_CNT_POLARITY_TRIGGER_SEL_7, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_7__DI0_CNT_POLARITY_CLR_SEL_7, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_7__DI0_CNT_UP_7, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI0_STP_REP_4__DI0_STEP_REPEAT_7, step_repeat);
+                break;
+            }
+            case  8:{
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_8__DI0_RUN_VALUE_M1_8, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_8__DI0_RUN_RESOLUTION_8, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_8__DI0_OFFSET_VALUE_8, offset_value);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_8__DI0_OFFSET_RESOLUTION_8, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_8__DI0_CNT_POLARITY_GEN_EN_8, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_8__DI0_CNT_AUTO_RELOAD_8, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_8__DI0_CNT_CLR_SEL_8, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_8__DI0_CNT_DOWN_8, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_8__DI0_CNT_POLARITY_TRIGGER_SEL_8, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_8__DI0_CNT_POLARITY_CLR_SEL_8, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_8__DI0_CNT_UP_8, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI0_STP_REP_4__DI0_STEP_REPEAT_8, step_repeat);
+                break;
+            }
+            case  9:{
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_9__DI0_RUN_VALUE_M1_9, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_9__DI0_RUN_RESOLUTION_9, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_9__DI0_OFFSET_VALUE_9, offset_value);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN0_9__DI0_OFFSET_RESOLUTION_9, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_9__DI0_GENTIME_SEL_9, gentime_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_9__DI0_CNT_AUTO_RELOAD_9, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_9__DI0_CNT_CLR_SEL_9, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_9__DI0_CNT_DOWN_9, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI0_SW_GEN1_9__DI0_CNT_UP_9, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI0_STP_REP_9__DI0_STEP_REPEAT_9, step_repeat);
+                break;
+            }
+        }
+    }
+    else
+    {
+        switch(pointer){
+            case  1:{
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_1__DI1_RUN_VALUE_M1_1, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_1__DI1_RUN_RESOLUTION_1, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_1__DI1_OFFSET_VALUE_1, offset_value);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_1__DI1_OFFSET_RESOLUTION_1, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_1__DI1_CNT_POLARITY_GEN_EN_1, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_1__DI1_CNT_AUTO_RELOAD_1, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_1__DI1_CNT_CLR_SEL_1, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_1__DI1_CNT_DOWN_1, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_1__DI1_CNT_POLARITY_TRIGGER_SEL_1, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_1__DI1_CNT_POLARITY_CLR_SEL_1, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_1__DI1_CNT_UP_1, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI1_STP_REP_1__DI1_STEP_REPEAT_1, step_repeat);
+                break;
+            }
+            case  2:{
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_2__DI1_RUN_VALUE_M1_2, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_2__DI1_RUN_RESOLUTION_2, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_2__DI1_OFFSET_VALUE_2, offset_value);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_2__DI1_OFFSET_RESOLUTION_2, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_2__DI1_CNT_POLARITY_GEN_EN_2, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_2__DI1_CNT_AUTO_RELOAD_2, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_2__DI1_CNT_CLR_SEL_2, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_2__DI1_CNT_DOWN_2, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_2__DI1_CNT_POLARITY_TRIGGER_SEL_2, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_2__DI1_CNT_POLARITY_CLR_SEL_2, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_2__DI1_CNT_UP_2, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI1_STP_REP_1__DI1_STEP_REPEAT_2, step_repeat);
+                break;
+            }
+            case  3:{
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_3__DI1_RUN_VALUE_M1_3, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_3__DI1_RUN_RESOLUTION_3, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_3__DI1_OFFSET_VALUE_3, offset_value);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_3__DI1_OFFSET_RESOLUTION_3, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_3__DI1_CNT_POLARITY_GEN_EN_3, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_3__DI1_CNT_AUTO_RELOAD_3, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_3__DI1_CNT_CLR_SEL_3, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_3__DI1_CNT_DOWN_3, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_3__DI1_CNT_POLARITY_TRIGGER_SEL_3, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_3__DI1_CNT_POLARITY_CLR_SEL_3, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_3__DI1_CNT_UP_3, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI1_STP_REP_2__DI1_STEP_REPEAT_3, step_repeat);
+                break;
+            }
+            case  4:{
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_4__DI1_RUN_VALUE_M1_4, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_4__DI1_RUN_RESOLUTION_4, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_4__DI1_OFFSET_VALUE_4, offset_value);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_4__DI1_OFFSET_RESOLUTION_4, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_4__DI1_CNT_POLARITY_GEN_EN_4, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_4__DI1_CNT_AUTO_RELOAD_4, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_4__DI1_CNT_CLR_SEL_4, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_4__DI1_CNT_DOWN_4, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_4__DI1_CNT_POLARITY_TRIGGER_SEL_4, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_4__DI1_CNT_POLARITY_CLR_SEL_4, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_4__DI1_CNT_UP_4, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI1_STP_REP_2__DI1_STEP_REPEAT_4, step_repeat);
+                break;
+            }
+            case  5:{
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_5__DI1_RUN_VALUE_M1_5, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_5__DI1_RUN_RESOLUTION_5, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_5__DI1_OFFSET_VALUE_5, offset_value);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_5__DI1_OFFSET_RESOLUTION_5, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_5__DI1_CNT_POLARITY_GEN_EN_5, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_5__DI1_CNT_AUTO_RELOAD_5, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_5__DI1_CNT_CLR_SEL_5, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_5__DI1_CNT_DOWN_5, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_5__DI1_CNT_POLARITY_TRIGGER_SEL_5, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_5__DI1_CNT_POLARITY_CLR_SEL_5, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_5__DI1_CNT_UP_5, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI1_STP_REP_3__DI1_STEP_REPEAT_5, step_repeat);
+                break;
+            }
+            case  6:{
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_6__DI1_RUN_VALUE_M1_6, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_6__DI1_RUN_RESOLUTION_6, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_6__DI1_OFFSET_VALUE_6, offset_value);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_6__DI1_OFFSET_RESOLUTION_6, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_6__DI1_CNT_POLARITY_GEN_EN_6, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_6__DI1_CNT_AUTO_RELOAD_6, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_6__DI1_CNT_CLR_SEL_6, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_6__DI1_CNT_DOWN_6, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_6__DI1_CNT_POLARITY_TRIGGER_SEL_6, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_6__DI1_CNT_POLARITY_CLR_SEL_6, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_6__DI1_CNT_UP_6, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI1_STP_REP_3__DI1_STEP_REPEAT_6, step_repeat);
+                break;
+            }
+            case  7:{
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_7__DI1_RUN_VALUE_M1_7, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_7__DI1_RUN_RESOLUTION_7, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_7__DI1_OFFSET_VALUE_7, offset_value);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_7__DI1_OFFSET_RESOLUTION_7, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_7__DI1_CNT_POLARITY_GEN_EN_7, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_7__DI1_CNT_AUTO_RELOAD_7, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_7__DI1_CNT_CLR_SEL_7, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_7__DI1_CNT_DOWN_7, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_7__DI1_CNT_POLARITY_TRIGGER_SEL_7, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_7__DI1_CNT_POLARITY_CLR_SEL_7, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_7__DI1_CNT_UP_7, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI1_STP_REP_4__DI1_STEP_REPEAT_7, step_repeat);
+            }
+            case  8:{
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_8__DI1_RUN_VALUE_M1_8, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_8__DI1_RUN_RESOLUTION_8, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_8__DI1_OFFSET_VALUE_8, offset_value);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_8__DI1_OFFSET_RESOLUTION_8, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_8__DI1_CNT_POLARITY_GEN_EN_8, cnt_polarity_gen_en);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_8__DI1_CNT_AUTO_RELOAD_8, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_8__DI1_CNT_CLR_SEL_8, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_8__DI1_CNT_DOWN_8, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_8__DI1_CNT_POLARITY_TRIGGER_SEL_8, cnt_polarity_trigger_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_8__DI1_CNT_POLARITY_CLR_SEL_8, cnt_polarity_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_8__DI1_CNT_UP_8, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI1_STP_REP_4__DI1_STEP_REPEAT_8, step_repeat);
+                break;
+            }
+            case  9:{
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_9__DI1_RUN_VALUE_M1_9, run_value_m1);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_9__DI1_RUN_RESOLUTION_9, run_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_9__DI1_OFFSET_VALUE_9, offset_value);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN0_9__DI1_OFFSET_RESOLUTION_9, offset_resolution);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_9__DI1_GENTIME_SEL_9, gentime_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_9__DI1_CNT_AUTO_RELOAD_9, cnt_auto_reload);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_9__DI1_CNT_CLR_SEL_9, cnt_clr_sel);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_9__DI1_CNT_DOWN_9, cnt_down);
+                ipu_write_field(ipu_num, IPU_DI1_SW_GEN1_9__DI1_CNT_UP_9, cnt_up);
+                ipu_write_field(ipu_num, IPU_DI1_STP_REP_9__DI1_STEP_REPEAT_9, step_repeat);
+                break;
+            }
+        }
+    }
+}
+
+void di_pointer_config(int ipu_num, int di, int pointer, int access, int component, int cst, int pt0, int pt1, int pt2, int pt3, int pt4, int pt5, int pt6)
+{
+    if(di == 0){
+        switch(pointer){
+            case  0:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_0__DI0_ACCESS_SIZE_0,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_0__DI0_COMPONNENT_SIZE_0,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_0__DI0_CST_0,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_0__DI0_PT_0_0,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_0__DI0_PT_1_0,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_0__DI0_PT_2_0,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_0__DI0_PT_3_0,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_0__DI0_PT_4_0,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_0__DI0_PT_5_0,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_0__DI0_PT_6_0,pt6);
+                break;
+            }
+            case  1:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_1__DI0_ACCESS_SIZE_1,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_1__DI0_COMPONNENT_SIZE_1,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_1__DI0_CST_1,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_1__DI0_PT_0_1,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_1__DI0_PT_1_1,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_1__DI0_PT_2_1,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_1__DI0_PT_3_1,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_1__DI0_PT_4_1,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_1__DI0_PT_5_1,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_1__DI0_PT_6_1,pt6);
+                break;
+            }
+            case  2:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_2__DI0_ACCESS_SIZE_2,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_2__DI0_COMPONNENT_SIZE_2,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_2__DI0_CST_2,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_2__DI0_PT_0_2,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_2__DI0_PT_1_2,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_2__DI0_PT_2_2,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_2__DI0_PT_3_2,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_2__DI0_PT_4_2,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_2__DI0_PT_5_2,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_2__DI0_PT_6_2,pt6);
+                break;
+            }
+            case  3:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_3__DI0_ACCESS_SIZE_3,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_3__DI0_COMPONNENT_SIZE_3,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_3__DI0_CST_3,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_3__DI0_PT_0_3,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_3__DI0_PT_1_3,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_3__DI0_PT_2_3,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_3__DI0_PT_3_3,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_3__DI0_PT_4_3,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_3__DI0_PT_5_3,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_3__DI0_PT_6_3,pt6);
+                break;
+            }
+            case  4:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_4__DI0_ACCESS_SIZE_4,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_4__DI0_COMPONNENT_SIZE_4,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_4__DI0_CST_4,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_4__DI0_PT_0_4,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_4__DI0_PT_1_4,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_4__DI0_PT_2_4,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_4__DI0_PT_3_4,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_4__DI0_PT_4_4,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_4__DI0_PT_5_4,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_4__DI0_PT_6_4,pt6);
+                break;
+            }
+            case  5:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_5__DI0_ACCESS_SIZE_5,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_5__DI0_COMPONNENT_SIZE_5,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_5__DI0_CST_5,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_5__DI0_PT_0_5,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_5__DI0_PT_1_5,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_5__DI0_PT_2_5,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_5__DI0_PT_3_5,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_5__DI0_PT_4_5,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_5__DI0_PT_5_5,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_5__DI0_PT_6_5,pt6);
+                break;
+            }
+            case  6:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_6__DI0_ACCESS_SIZE_6,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_6__DI0_COMPONNENT_SIZE_6,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_6__DI0_CST_6,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_6__DI0_PT_0_6,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_6__DI0_PT_1_6,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_6__DI0_PT_2_6,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_6__DI0_PT_3_6,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_6__DI0_PT_4_6,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_6__DI0_PT_5_6,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_6__DI0_PT_6_6,pt6);
+                break;
+            }
+            case  7:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_7__DI0_ACCESS_SIZE_7,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_7__DI0_COMPONNENT_SIZE_7,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_7__DI0_CST_7,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_7__DI0_PT_0_7,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_7__DI0_PT_1_7,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_7__DI0_PT_2_7,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_7__DI0_PT_3_7,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_7__DI0_PT_4_7,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_7__DI0_PT_5_7,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_7__DI0_PT_6_7,pt6);
+                break;
+            }
+            case  8:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_8__DI0_ACCESS_SIZE_8,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_8__DI0_COMPONNENT_SIZE_8,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_8__DI0_CST_8,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_8__DI0_PT_0_8,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_8__DI0_PT_1_8,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_8__DI0_PT_2_8,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_8__DI0_PT_3_8,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_8__DI0_PT_4_8,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_8__DI0_PT_5_8,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_8__DI0_PT_6_8,pt6);
+                break;
+            }
+            case  9:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_9__DI0_ACCESS_SIZE_9,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_9__DI0_COMPONNENT_SIZE_9,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_9__DI0_CST_9,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_9__DI0_PT_0_9,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_9__DI0_PT_1_9,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_9__DI0_PT_2_9,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_9__DI0_PT_3_9,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_9__DI0_PT_4_9,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_9__DI0_PT_5_9,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_9__DI0_PT_6_9,pt6);
+                break;
+            }
+            case  10:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_10__DI0_ACCESS_SIZE_10,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_10__DI0_COMPONNENT_SIZE_10,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_10__DI0_CST_10,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_10__DI0_PT_0_10,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_10__DI0_PT_1_10,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_10__DI0_PT_2_10,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_10__DI0_PT_3_10,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_10__DI0_PT_4_10,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_10__DI0_PT_5_10,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_10__DI0_PT_6_10,pt6);
+                break;
+            }
+            case  11:{
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_11__DI0_ACCESS_SIZE_11,access);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_11__DI0_COMPONNENT_SIZE_11,component);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_11__DI0_CST_11,cst);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_11__DI0_PT_0_11,pt0);      
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_11__DI0_PT_1_11,pt1);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_11__DI0_PT_2_11,pt2);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_11__DI0_PT_3_11,pt3);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_11__DI0_PT_4_11,pt4);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_11__DI0_PT_5_11,pt5);
+                ipu_write_field(ipu_num, IPU_DI0_DW_GEN_11__DI0_PT_6_11,pt6);
+                break;
+            }
+        }
+    }
+    else {
+        switch(pointer){
+            case  0:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_0__DI1_ACCESS_SIZE_0,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_0__DI1_COMPONNENT_SIZE_0,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_0__DI1_CST_0,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_0__DI1_PT_0_0,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_0__DI1_PT_1_0,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_0__DI1_PT_2_0,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_0__DI1_PT_3_0,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_0__DI1_PT_4_0,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_0__DI1_PT_5_0,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_0__DI1_PT_6_0,pt6);
+                break;
+            }
+            case  1:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_1__DI1_ACCESS_SIZE_1,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_1__DI1_COMPONNENT_SIZE_1,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_1__DI1_CST_1,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_1__DI1_PT_0_1,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_1__DI1_PT_1_1,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_1__DI1_PT_2_1,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_1__DI1_PT_3_1,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_1__DI1_PT_4_1,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_1__DI1_PT_5_1,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_1__DI1_PT_6_1,pt6);
+                break;
+            }
+            case  2:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_2__DI1_ACCESS_SIZE_2,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_2__DI1_COMPONNENT_SIZE_2,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_2__DI1_CST_2,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_2__DI1_PT_0_2,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_2__DI1_PT_1_2,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_2__DI1_PT_2_2,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_2__DI1_PT_3_2,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_2__DI1_PT_4_2,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_2__DI1_PT_5_2,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_2__DI1_PT_6_2,pt6);
+                break;
+            }
+            case  3:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_3__DI1_ACCESS_SIZE_3,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_3__DI1_COMPONNENT_SIZE_3,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_3__DI1_CST_3,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_3__DI1_PT_0_3,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_3__DI1_PT_1_3,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_3__DI1_PT_2_3,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_3__DI1_PT_3_3,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_3__DI1_PT_4_3,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_3__DI1_PT_5_3,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_3__DI1_PT_6_3,pt6);
+                break;
+            }
+            case  4:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_4__DI1_ACCESS_SIZE_4,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_4__DI1_COMPONNENT_SIZE_4,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_4__DI1_CST_4,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_4__DI1_PT_0_4,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_4__DI1_PT_1_4,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_4__DI1_PT_2_4,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_4__DI1_PT_3_4,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_4__DI1_PT_4_4,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_4__DI1_PT_5_4,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_4__DI1_PT_6_4,pt6);
+                break;
+            }
+            case  5:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_5__DI1_ACCESS_SIZE_5,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_5__DI1_COMPONNENT_SIZE_5,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_5__DI1_CST_5,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_5__DI1_PT_0_5,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_5__DI1_PT_1_5,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_5__DI1_PT_2_5,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_5__DI1_PT_3_5,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_5__DI1_PT_4_5,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_5__DI1_PT_5_5,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_5__DI1_PT_6_5,pt6);
+                break;
+            }
+            case  6:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_6__DI1_ACCESS_SIZE_6,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_6__DI1_COMPONNENT_SIZE_6,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_6__DI1_CST_6,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_6__DI1_PT_0_6,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_6__DI1_PT_1_6,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_6__DI1_PT_2_6,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_6__DI1_PT_3_6,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_6__DI1_PT_4_6,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_6__DI1_PT_5_6,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_6__DI1_PT_6_6,pt6);
+                break;
+            }
+            case  7:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_7__DI1_ACCESS_SIZE_7,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_7__DI1_COMPONNENT_SIZE_7,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_7__DI1_CST_7,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_7__DI1_PT_0_7,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_7__DI1_PT_1_7,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_7__DI1_PT_2_7,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_7__DI1_PT_3_7,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_7__DI1_PT_4_7,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_7__DI1_PT_5_7,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_7__DI1_PT_6_7,pt6);
+                break;
+            }
+            case  8:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_8__DI1_ACCESS_SIZE_8,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_8__DI1_COMPONNENT_SIZE_8,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_8__DI1_CST_8,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_8__DI1_PT_0_8,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_8__DI1_PT_1_8,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_8__DI1_PT_2_8,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_8__DI1_PT_3_8,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_8__DI1_PT_4_8,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_8__DI1_PT_5_8,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_8__DI1_PT_6_8,pt6);
+                break;
+            }
+            case  9:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_9__DI1_ACCESS_SIZE_9,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_9__DI1_COMPONNENT_SIZE_9,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_9__DI1_CST_9,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_9__DI1_PT_0_9,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_9__DI1_PT_1_9,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_9__DI1_PT_2_9,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_9__DI1_PT_3_9,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_9__DI1_PT_4_9,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_9__DI1_PT_5_9,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_9__DI1_PT_6_9,pt6);
+                break;
+            }
+            case  10:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_10__DI1_ACCESS_SIZE_10,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_10__DI1_COMPONNENT_SIZE_10,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_10__DI1_CST_10,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_10__DI1_PT_0_10,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_10__DI1_PT_1_10,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_10__DI1_PT_2_10,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_10__DI1_PT_3_10,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_10__DI1_PT_4_10,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_10__DI1_PT_5_10,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_10__DI1_PT_6_10,pt6);
+                break;
+            }
+            case  11:{
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_11__DI1_ACCESS_SIZE_11,access);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_11__DI1_COMPONNENT_SIZE_11,component);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_11__DI1_CST_11,cst);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_11__DI1_PT_0_11,pt0);      
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_11__DI1_PT_1_11,pt1);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_11__DI1_PT_2_11,pt2);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_11__DI1_PT_3_11,pt3);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_11__DI1_PT_4_11,pt4);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_11__DI1_PT_5_11,pt5);
+                ipu_write_field(ipu_num, IPU_DI1_DW_GEN_11__DI1_PT_6_11,pt6);
+                break;
+            }
+        }
+    }
+}
+
+void di_up_down_config(int ipu_num, int di, int pointer, int set, int up, int down)
+{
+    if(di == 0){
+        switch(pointer){
+        case  0:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_0__DI0_DATA_CNT_UP0_0,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_0__DI0_DATA_CNT_DOWN0_0,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_0__DI0_DATA_CNT_UP1_0,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_0__DI0_DATA_CNT_DOWN1_0,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_0__DI0_DATA_CNT_UP2_0,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_0__DI0_DATA_CNT_DOWN2_0,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_0__DI0_DATA_CNT_UP3_0,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_0__DI0_DATA_CNT_DOWN3_0,down);
+                }
+                break;}
+        case  1:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_1__DI0_DATA_CNT_UP0_1,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_1__DI0_DATA_CNT_DOWN0_1,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_1__DI0_DATA_CNT_UP1_1,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_1__DI0_DATA_CNT_DOWN1_1,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_1__DI0_DATA_CNT_UP2_1,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_1__DI0_DATA_CNT_DOWN2_1,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_1__DI0_DATA_CNT_UP3_1,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_1__DI0_DATA_CNT_DOWN3_1,down);
+                }
+                break;}
+        case  2:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_2__DI0_DATA_CNT_UP0_2,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_2__DI0_DATA_CNT_DOWN0_2,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_2__DI0_DATA_CNT_UP1_2,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_2__DI0_DATA_CNT_DOWN1_2,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_2__DI0_DATA_CNT_UP2_2,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_2__DI0_DATA_CNT_DOWN2_2,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_2__DI0_DATA_CNT_UP3_2,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_2__DI0_DATA_CNT_DOWN3_2,down);
+                }
+                break;}
+        case  3:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_3__DI0_DATA_CNT_UP0_3,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_3__DI0_DATA_CNT_DOWN0_3,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_3__DI0_DATA_CNT_UP1_3,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_3__DI0_DATA_CNT_DOWN1_3,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_3__DI0_DATA_CNT_UP2_3,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_3__DI0_DATA_CNT_DOWN2_3,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_3__DI0_DATA_CNT_UP3_3,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_3__DI0_DATA_CNT_DOWN3_3,down);
+                }
+                break;}
+        case  4:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_4__DI0_DATA_CNT_UP0_4,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_4__DI0_DATA_CNT_DOWN0_4,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_4__DI0_DATA_CNT_UP1_4,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_4__DI0_DATA_CNT_DOWN1_4,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_4__DI0_DATA_CNT_UP2_4,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_4__DI0_DATA_CNT_DOWN2_4,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_4__DI0_DATA_CNT_UP3_4,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_4__DI0_DATA_CNT_DOWN3_4,down);
+                }
+                break;}
+        case  5:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_5__DI0_DATA_CNT_UP0_5,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_5__DI0_DATA_CNT_DOWN0_5,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_5__DI0_DATA_CNT_UP1_5,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_5__DI0_DATA_CNT_DOWN1_5,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_5__DI0_DATA_CNT_UP2_5,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_5__DI0_DATA_CNT_DOWN2_5,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_5__DI0_DATA_CNT_UP3_5,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_5__DI0_DATA_CNT_DOWN3_5,down);
+                }
+                break;}
+        case  6:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_6__DI0_DATA_CNT_UP0_6,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_6__DI0_DATA_CNT_DOWN0_6,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_6__DI0_DATA_CNT_UP1_6,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_6__DI0_DATA_CNT_DOWN1_6,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_6__DI0_DATA_CNT_UP2_6,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_6__DI0_DATA_CNT_DOWN2_6,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_6__DI0_DATA_CNT_UP3_6,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_6__DI0_DATA_CNT_DOWN3_6,down);
+                }
+                break;}
+        case  7:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_7__DI0_DATA_CNT_UP0_7,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_7__DI0_DATA_CNT_DOWN0_7,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_7__DI0_DATA_CNT_UP1_7,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_7__DI0_DATA_CNT_DOWN1_7,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_7__DI0_DATA_CNT_UP2_7,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_7__DI0_DATA_CNT_DOWN2_7,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_7__DI0_DATA_CNT_UP3_7,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_7__DI0_DATA_CNT_DOWN3_7,down);
+                }
+                break;}
+        case  8:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_8__DI0_DATA_CNT_UP0_8,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_8__DI0_DATA_CNT_DOWN0_8,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_8__DI0_DATA_CNT_UP1_8,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_8__DI0_DATA_CNT_DOWN1_8,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_8__DI0_DATA_CNT_UP2_8,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_8__DI0_DATA_CNT_DOWN2_8,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_8__DI0_DATA_CNT_UP3_8,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_8__DI0_DATA_CNT_DOWN3_8,down);
+                }
+                break;}
+        case  9:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_9__DI0_DATA_CNT_UP0_9,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_9__DI0_DATA_CNT_DOWN0_9,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_9__DI0_DATA_CNT_UP1_9,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_9__DI0_DATA_CNT_DOWN1_9,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_9__DI0_DATA_CNT_UP2_9,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_9__DI0_DATA_CNT_DOWN2_9,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_9__DI0_DATA_CNT_UP3_9,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_9__DI0_DATA_CNT_DOWN3_9,down);
+                }
+                break;}
+        case 10:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_10__DI0_DATA_CNT_UP0_10,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_10__DI0_DATA_CNT_DOWN0_10,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_10__DI0_DATA_CNT_UP1_10,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_10__DI0_DATA_CNT_DOWN1_10,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_10__DI0_DATA_CNT_UP2_10,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_10__DI0_DATA_CNT_DOWN2_10,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_10__DI0_DATA_CNT_UP3_10,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_10__DI0_DATA_CNT_DOWN3_10,down);
+                }
+                break;}
+        case 11:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_11__DI0_DATA_CNT_UP0_11,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET0_11__DI0_DATA_CNT_DOWN0_11,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_11__DI0_DATA_CNT_UP1_11,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET1_11__DI0_DATA_CNT_DOWN1_11,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_11__DI0_DATA_CNT_UP2_11,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET2_11__DI0_DATA_CNT_DOWN2_11,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_11__DI0_DATA_CNT_UP3_11,up);
+                    ipu_write_field(ipu_num, IPU_DI0_DW_SET3_11__DI0_DATA_CNT_DOWN3_11,down);
+                }
+                break;}
+		default:{
+			    break;}	
+        }
+    }
+    else {
+        switch(pointer){
+        case  0:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_0__DI1_DATA_CNT_UP0_0,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_0__DI1_DATA_CNT_DOWN0_0,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_0__DI1_DATA_CNT_UP1_0,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_0__DI1_DATA_CNT_DOWN1_0,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_0__DI1_DATA_CNT_UP2_0,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_0__DI1_DATA_CNT_DOWN2_0,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_0__DI1_DATA_CNT_UP3_0,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_0__DI1_DATA_CNT_DOWN3_0,down);
+                }
+                break;}
+        case  1:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_1__DI1_DATA_CNT_UP0_1,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_1__DI1_DATA_CNT_DOWN0_1,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_1__DI1_DATA_CNT_UP1_1,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_1__DI1_DATA_CNT_DOWN1_1,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_1__DI1_DATA_CNT_UP2_1,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_1__DI1_DATA_CNT_DOWN2_1,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_1__DI1_DATA_CNT_UP3_1,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_1__DI1_DATA_CNT_DOWN3_1,down);
+                }
+                break;}
+        case  2:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_2__DI1_DATA_CNT_UP0_2,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_2__DI1_DATA_CNT_DOWN0_2,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_2__DI1_DATA_CNT_UP1_2,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_2__DI1_DATA_CNT_DOWN1_2,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_2__DI1_DATA_CNT_UP2_2,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_2__DI1_DATA_CNT_DOWN2_2,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_2__DI1_DATA_CNT_UP3_2,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_2__DI1_DATA_CNT_DOWN3_2,down);
+                }
+                break;}
+        case  3:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_3__DI1_DATA_CNT_UP0_3,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_3__DI1_DATA_CNT_DOWN0_3,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_3__DI1_DATA_CNT_UP1_3,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_3__DI1_DATA_CNT_DOWN1_3,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_3__DI1_DATA_CNT_UP2_3,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_3__DI1_DATA_CNT_DOWN2_3,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_3__DI1_DATA_CNT_UP3_3,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_3__DI1_DATA_CNT_DOWN3_3,down);
+                }
+                break;}
+        case  4:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_4__DI1_DATA_CNT_UP0_4,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_4__DI1_DATA_CNT_DOWN0_4,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_4__DI1_DATA_CNT_UP1_4,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_4__DI1_DATA_CNT_DOWN1_4,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_4__DI1_DATA_CNT_UP2_4,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_4__DI1_DATA_CNT_DOWN2_4,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_4__DI1_DATA_CNT_UP3_4,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_4__DI1_DATA_CNT_DOWN3_4,down);
+                }
+                break;}
+        case  5:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_5__DI1_DATA_CNT_UP0_5,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_5__DI1_DATA_CNT_DOWN0_5,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_5__DI1_DATA_CNT_UP1_5,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_5__DI1_DATA_CNT_DOWN1_5,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_5__DI1_DATA_CNT_UP2_5,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_5__DI1_DATA_CNT_DOWN2_5,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_5__DI1_DATA_CNT_UP3_5,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_5__DI1_DATA_CNT_DOWN3_5,down);
+                }
+                break;}
+        case  6:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_6__DI1_DATA_CNT_UP0_6,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_6__DI1_DATA_CNT_DOWN0_6,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_6__DI1_DATA_CNT_UP1_6,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_6__DI1_DATA_CNT_DOWN1_6,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_6__DI1_DATA_CNT_UP2_6,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_6__DI1_DATA_CNT_DOWN2_6,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_6__DI1_DATA_CNT_UP3_6,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_6__DI1_DATA_CNT_DOWN3_6,down);
+                }
+                break;}
+        case  7:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_7__DI1_DATA_CNT_UP0_7,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_7__DI1_DATA_CNT_DOWN0_7,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_7__DI1_DATA_CNT_UP1_7,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_7__DI1_DATA_CNT_DOWN1_7,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_7__DI1_DATA_CNT_UP2_7,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_7__DI1_DATA_CNT_DOWN2_7,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_7__DI1_DATA_CNT_UP3_7,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_7__DI1_DATA_CNT_DOWN3_7,down);
+                }
+                break;}
+        case  8:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_8__DI1_DATA_CNT_UP0_8,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_8__DI1_DATA_CNT_DOWN0_8,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_8__DI1_DATA_CNT_UP1_8,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_8__DI1_DATA_CNT_DOWN1_8,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_8__DI1_DATA_CNT_UP2_8,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_8__DI1_DATA_CNT_DOWN2_8,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_8__DI1_DATA_CNT_UP3_8,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_8__DI1_DATA_CNT_DOWN3_8,down);
+                }
+                break;}
+        case  9:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_9__DI1_DATA_CNT_UP0_9,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_9__DI1_DATA_CNT_DOWN0_9,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_9__DI1_DATA_CNT_UP1_9,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_9__DI1_DATA_CNT_DOWN1_9,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_9__DI1_DATA_CNT_UP2_9,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_9__DI1_DATA_CNT_DOWN2_9,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_9__DI1_DATA_CNT_UP3_9,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_9__DI1_DATA_CNT_DOWN3_9,down);
+                }
+                break;}
+        case 10:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_10__DI1_DATA_CNT_UP0_10,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_10__DI1_DATA_CNT_DOWN0_10,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_10__DI1_DATA_CNT_UP1_10,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_10__DI1_DATA_CNT_DOWN1_10,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_10__DI1_DATA_CNT_UP2_10,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_10__DI1_DATA_CNT_DOWN2_10,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_10__DI1_DATA_CNT_UP3_10,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_10__DI1_DATA_CNT_DOWN3_10,down);
+                }
+                break;}
+        case 11:{if (set == 0){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_11__DI1_DATA_CNT_UP0_11,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET0_11__DI1_DATA_CNT_DOWN0_11,down);
+                }
+                if (set == 1){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_11__DI1_DATA_CNT_UP1_11,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET1_11__DI1_DATA_CNT_DOWN1_11,down);
+                }
+                if (set == 2){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_11__DI1_DATA_CNT_UP2_11,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET2_11__DI1_DATA_CNT_DOWN2_11,down);
+                }
+                if (set == 3){
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_11__DI1_DATA_CNT_UP3_11,up);
+                    ipu_write_field(ipu_num, IPU_DI1_DW_SET3_11__DI1_DATA_CNT_DOWN3_11,down);
+                }
+                break;}
+		default:{
+			    break;}	
+        }
+    }
+}
+
+void enable_display(unsigned int IPU, unsigned int DI)
+{
+	if(DI == 0)
+	{
+		//enable DI0 (display interface 0)
+		ipu_write_field(IPU, IPU_IPU_CONF__DI0_EN, 1);
+	}
+	else if(DI == 1)
+	{
+		//enable DI1 (display interface 1)
+		ipu_write_field(IPU, IPU_IPU_CONF__DI1_EN, 1);
+	}
+
+#ifndef IPU_USE_DC_CHANNEL
+	//enble DP (display processor)
+	ipu_write_field(IPU, IPU_IPU_CONF__DP_EN, 1);
+#endif
+
+	//enble DC (display controller)
+	ipu_write_field(IPU, IPU_IPU_CONF__DC_EN, 1);
+
+	//enble DMFC (display multi-fifo controller)
+	ipu_write_field(IPU, IPU_IPU_CONF__DMFC_EN, 1);
+}
+
+void idmac_config(unsigned int IPU)
+{
+	ipu_channel_parameter_t ipu_channel_params;
+
+	memset(&ipu_channel_params, 0, sizeof(ipu_channel_parameter_t));
+
+#ifdef IPU_USE_DC_CHANNEL
+	ipu_channel_params.channel = 28;
+#else
+	ipu_channel_params.channel	 = 23;
+#endif
+	ipu_channel_params.eba0 = DISPLAY_EBA0 / 8;
+//	ipu_channel_params.eba0 = (unsigned int)(&logobmp[0]) / 8;
+	ipu_channel_params.eba1 = ipu_channel_params.eba0;
+	ipu_channel_params.fw = DISPLAY_WIDTH - 1;  //frame width
+	ipu_channel_params.fh = DISPLAY_HEIGHT - 1;  //frame hight
+	ipu_channel_params.sl = DISPLAY_WIDTH * (DISPLAY_BPP / 8) - 1;
+	ipu_channel_params.npb = 15;  //16 pixels per burst
+	ipu_channel_params.pfs = 7;  //7->RGB
+
+#if (DISPLAY_BPP == 16)
+	ipu_channel_params.bpp = 3;  //0->32bpp; 1->24bpp; 3->16bpp
+	ipu_channel_params.wid0 = 5 - 1;
+	ipu_channel_params.wid1 = 6 - 1;
+	ipu_channel_params.wid2 = 5 - 1;
+	ipu_channel_params.wid3 = 0;
+	ipu_channel_params.ofs0 = 0;
+	ipu_channel_params.ofs1 = 5;
+	ipu_channel_params.ofs2 = 11;
+	ipu_channel_params.ofs3 = 0;
+#endif
+#if (DISPLAY_BPP == 24)
+	ipu_channel_params.bpp = 1;  //0->32bpp; 1->24bpp; 3->16bpp
+	ipu_channel_params.wid0 = 8 - 1;
+	ipu_channel_params.wid1 = 8 - 1;
+	ipu_channel_params.wid2 = 8 - 1;
+	ipu_channel_params.wid3 = 0;
+	ipu_channel_params.ofs0 = 0;
+	ipu_channel_params.ofs1 = 8;
+	ipu_channel_params.ofs2 = 16;
+	ipu_channel_params.ofs3 = 0;
+#endif
+#if (DISPLAY_BPP == 32)
+	ipu_channel_params.bpp = 0;  //0->32bpp; 1->24bpp; 3->16bpp
+	ipu_channel_params.wid0 = 8 - 1;
+	ipu_channel_params.wid1 = 8 - 1;
+	ipu_channel_params.wid2 = 8 - 1;
+	ipu_channel_params.wid3 = 8 - 1;
+	ipu_channel_params.ofs0 = 8;
+	ipu_channel_params.ofs1 = 16;
+	ipu_channel_params.ofs2 = 24;
+	ipu_channel_params.ofs3 = 0;
+#endif
+
+#ifdef DISPLAY_INTERLACED
+	ipu_channel_params.so = 1;	//Scan order is interlaced
+	ipu_channel_params.ilo = (ipu_channel_params.sl + 1) / 8;  //Interlace Offset
+	ipu_channel_params.sl = (ipu_channel_params.sl + 1) * 2 - 1;  //Stride Line
+#endif
+
+	config_idmac_interleaved_channel(IPU, ipu_channel_params);
+}
+
+#ifdef DISPLAY_INTERLACED
+void di_config_interlaced(unsigned int IPU, unsigned int DI)
+{
+	/*********************************************************************
+	*	DI configuration:
+	**********************************************************************/
+
+	int clkUp, clkDown;
+#ifdef DI_CLOCK_EXTERNAL_MODE
+#if defined(IPU_OUTPUT_MODE_LVDS)  || defined(IPU_OUTPUT_MODE_HDMI)
+	int ipuDiClk = DISPLAY_PIX_CLOCK;  //For iMX6Q, external clock, ipu_di_clk
+#else
+	int ipuDiClk = DISPLAY_PIX_CLOCK * 4;  //For iMX6Q, external clock, ipu_di_clk
+#endif
+#else
+	int ipuDiClk = CONFIG_IPUV3_CLK;  //For iMX6, internel IPU clock, ipu_hsp_clk
+#endif
+	int typPixClk = DISPLAY_PIX_CLOCK; // typical value of pixel clock, (hSyncStartWidth + hSyncEndWidth + hSyncWidth + hDisp) * (vSyncStartWidth + vSyncEndWidth + vSyncWidth + vDisp) * refresh rate (60Hz)
+	int div = (int)((float)ipuDiClk / (float)typPixClk + 0.5);// get the nearest value of typical pixel clock
+	int hSyncStartWidth = DISPLAY_HSYNC_START;
+	int hSyncWidth = DISPLAY_HSYNC_WIDTH;
+	int hSyncEndWidth = DISPLAY_HSYNC_END;
+	int hDisp = DISPLAY_WIDTH;
+	int vSyncStartWidth = DISPLAY_VSYNC_START;
+	int vSyncWidth = DISPLAY_VSYNC_WIDTH;
+	int vSyncEndWidth = DISPLAY_VSYNC_END;
+	int vDisp = DISPLAY_HEIGHT;
+
+	// config (DRDY signal) DI_PIN15
+	//di_pointer_config(IPU, di, pointer, access, componnent, cst, pt0, pt1, pt2, pt3, pt4, pt5, pt6);
+	di_pointer_config(IPU, DI, DI_SDC_WAVEFORM, div - 1, div - 1, DI_NOUSE_SIGNAL, DI_NOUSE_SIGNAL, DI_NOUSE_SIGNAL, DI_NOUSE_SIGNAL, DI_NOUSE_SIGNAL, DI_DEN_SIGNAL, DI_NOUSE_SIGNAL, DI_NOUSE_SIGNAL);		
+
+	//di_up_down_config(IPU, di, pointer, set, up, down)
+	di_up_down_config(IPU, DI, DI_SDC_WAVEFORM, DI_DEN_SIGNAL, 0, div * 2);
+	di_up_down_config(IPU, DI, DI_SDC_WAVEFORM, DI_NOUSE_SIGNAL, 0, 0);
+
+	// set clk for DI
+	// generate base clock for di
+	clkUp = 0;
+	clkDown = div;
+	if(DI == 0)
+	{
+		ipu_write_field(IPU, IPU_DI0_BS_CLKGEN0__DI0_DISP_CLK_OFFSET, 0);
+		ipu_write_field(IPU, IPU_DI0_BS_CLKGEN0__DI0_DISP_CLK_PERIOD, div << 4);
+		ipu_write_field(IPU, IPU_DI0_BS_CLKGEN1__DI0_DISP_CLK_DOWN, clkDown);
+		ipu_write_field(IPU, IPU_DI0_BS_CLKGEN1__DI0_DISP_CLK_UP, clkUp);
+
+		//DI_SCR, set the screen height for field0
+		ipu_write_field(IPU, IPU_DI0_SCR_CONF__DI0_SCREEN_HEIGHT, (vDisp + vSyncStartWidth + vSyncEndWidth + vSyncWidth) / 2 - 1);
+	}
+	else if(DI == 1)
+	{
+		ipu_write_field(IPU, IPU_DI1_BS_CLKGEN0__DI1_DISP_CLK_OFFSET, 0);
+		ipu_write_field(IPU, IPU_DI1_BS_CLKGEN0__DI1_DISP_CLK_PERIOD, div << 4);
+		ipu_write_field(IPU, IPU_DI1_BS_CLKGEN1__DI1_DISP_CLK_DOWN, clkDown);
+		ipu_write_field(IPU, IPU_DI1_BS_CLKGEN1__DI1_DISP_CLK_UP, clkUp);
+
+		//DI_SCR, set the screen height for field0
+		ipu_write_field(IPU, IPU_DI1_SCR_CONF__DI1_SCREEN_HEIGHT, (vDisp + vSyncStartWidth + vSyncEndWidth + vSyncWidth) / 2 - 1);
+	}
+
+	// COUNTER_1: Internal VSYNC for each frame
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_1, // pointer
+		(vDisp + vSyncStartWidth + vSyncEndWidth + vSyncWidth) * 2 - 1, // run value for auto reload
+		3, // run resolution, counter 1 can reference to counter 6,7,8 with run_resolution=2,3,4
+		1, // offset value
+		3, // offset resolution, 3=counter 7
+		1, // auto reload mode
+		0, // step repeat
+		0, // counter clear source selection
+		0, // counter polarity
+		0, // counter polarity trigger selection
+		0, // counter polarity clear selection
+		0, // counter up
+		0, // counter down
+		0 // gentime select
+	);
+
+	//COUNTER_2: HSYNC waveform on DI_PIN02
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_HSYNC, // pointer
+		hDisp + hSyncStartWidth + hSyncEndWidth + hSyncWidth - 1, // run value for auto reload
+		DI_COUNTER_BASECLK + 1, // run resolution
+		0, // offset value
+		0, // offset resolution
+		1, // auto reload mode
+		0, // step repeat
+		0, // counter clear source selection
+		1, // counter polarity
+		DI_COUNTER_BASECLK + 1, // counter polarity trigger selection
+		0, // counter polarity clear selection
+		0, // counter up
+		hSyncWidth << 1, // counter down
+		0 // gentime select
+	);
+
+	//COUNTER_3: VSYNC waveform on DI_PIN03
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_VSYNC, // pointer
+		vDisp + vSyncStartWidth + vSyncEndWidth + vSyncWidth - 1, // run value for auto reload
+		4, // run resolution, counter 3 can reference to counter 7 with run_resolution=4
+		1, // offset value
+		4, // offset resolution, 4=counter 7
+		0, // auto reload mode
+		2, // step repeat
+		DI_COUNTER_1 + 1, // counter clear source selection
+		1, // counter polarity
+		4, // counter polarity trigger selection, 4=counter 7
+		0, // counter polarity clear selection
+		0, // counter up
+		vSyncWidth << 1, // counter down
+		0 // gentime select
+	);
+
+	//COUNTER_4: Active Field
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_AFIELD, // pointer
+		((vDisp + vSyncStartWidth + vSyncEndWidth + vSyncWidth) / 2 + 1) - 1, // run value for auto reload
+		DI_COUNTER_HSYNC + 1, // run resolution
+		(hDisp + hSyncStartWidth + hSyncEndWidth + hSyncWidth) / 2, // offset value
+		DI_COUNTER_BASECLK + 1, // offset resolution
+		0, // auto reload mode
+		2, // step repeat
+		DI_COUNTER_1 + 1, // counter clear source selection
+		0, // counter polarity
+		0, // counter polarity trigger selection
+		0, // counter polarity clear selection
+		0, // counter up
+		0, // counter down
+		0 // gentime select
+	);
+
+	//COUNTER_5: Active Line
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_ALINE, // pointer
+		0, // run value for auto reload
+		DI_COUNTER_HSYNC + 1, // run resolution
+		(vSyncStartWidth + vSyncWidth) / 2, // offset value
+		DI_COUNTER_HSYNC + 1, // offset resolution
+		0, // auto reload mode
+		vDisp / 2, // step repeat
+		DI_COUNTER_AFIELD + 1, // counter clear source selection
+		0, // counter polarity
+		0, // counter polarity trigger selection
+		0, // counter polarity clear selection
+		0, // counter up
+		0, // counter down
+		0 // gentime select
+	);
+
+	//COUNTER_6: Active Pixel
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_APIXEL, // pointer
+		0, // run value for auto reload
+		DI_COUNTER_BASECLK + 1, // run resolution
+		hSyncStartWidth + hSyncWidth, // offset value
+		DI_COUNTER_BASECLK + 1, // offset resolution
+		0, // auto reload mode
+		hDisp, // step repeat
+		DI_COUNTER_ALINE + 1, // counter clear source selection
+		0, // counter polarity
+		0, // counter polarity trigger selection
+		0, // counter polarity clear selection
+		0, // counter up
+		0, // counter down
+		0 // gentime select
+	);
+
+	//COUNTER_7: Half line HSYNC
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_7, // pointer
+		(hDisp + hSyncStartWidth + hSyncEndWidth + hSyncWidth) / 2 - 1, // run value for auto reload
+		DI_COUNTER_BASECLK + 1, // run resolution
+		0, // offset value
+		0, // offset resolution
+		1, // auto reload mode
+		0, // step repeat
+		0, // counter clear source selection
+		0, // counter polarity
+		0, // counter polarity trigger selection
+		0, // counter polarity clear selection
+		0, // counter up
+		0, // counter down
+		0 // gentime select
+	);
+
+	if(DI == 0)
+	{
+		ipu_write_field(IPU, IPU_DI0_SYNC_AS_GEN__DI0_SYNC_START, 0);  //0 lines predictions
+		ipu_write_field(IPU, IPU_DI0_SYNC_AS_GEN__DI0_VSYNC_SEL, DI_COUNTER_VSYNC - 1); //pin3/counter 3 as VSYNC
+#ifdef DI_CLOCK_EXTERNAL_MODE
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_CLK_EXT, 1); // select external generated clock 
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_VSYNC_EXT, 1); // select external VSYNC 
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_ERM_VSYNC_SEL, 1);
+#else
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_CLK_EXT, 0); // select internal generated clock 
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_VSYNC_EXT, 0); // select internal VSYNC 
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_ERM_VSYNC_SEL, 0);
+#endif
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_POLARITY_DISP_CLK, DISPLAY_CLOCK_POLARITY); 
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_POLARITY_2, DISPLAY_HSYNC_POLARITY);
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_POLARITY_3, DISPLAY_VSYNC_POLARITY);
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_DISP_Y_SEL, DI_COUNTER_HSYNC - 1);  //pin2/counter 2 as HSYNC
+
+		ipu_write_field(IPU, IPU_DI0_POL__DI0_DRDY_DATA_POLARITY, DISPLAY_DATA_POLARITY);
+		ipu_write_field(IPU, IPU_DI0_POL__DI0_DRDY_POLARITY_15, DISPLAY_DATA_ENABLE_POLARITY);
+
+		//release ipu DI counter
+		ipu_write_field(IPU, IPU_IPU_DISP_GEN__DI0_COUNTER_RELEASE, 1);
+	}
+	else if(DI == 1)
+	{
+		ipu_write_field(IPU, IPU_DI1_SYNC_AS_GEN__DI1_SYNC_START, 0);  //0 lines predictions
+		ipu_write_field(IPU, IPU_DI1_SYNC_AS_GEN__DI1_VSYNC_SEL, DI_COUNTER_VSYNC - 1); //pin3/counter 3 as VSYNC
+#ifdef DI_CLOCK_EXTERNAL_MODE
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_CLK_EXT, 1); // select external generated clock 
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_VSYNC_EXT, 1); // select external VSYNC 
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_ERM_VSYNC_SEL, 1);
+#else
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_CLK_EXT, 0); // select internal generated clock 
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_VSYNC_EXT, 0); // select internal VSYNC 
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_ERM_VSYNC_SEL, 0);
+#endif
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_POLARITY_DISP_CLK, DISPLAY_CLOCK_POLARITY); 
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_POLARITY_2, DISPLAY_HSYNC_POLARITY);
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_POLARITY_3, DISPLAY_VSYNC_POLARITY);
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_DISP_Y_SEL, DI_COUNTER_HSYNC - 1);  //pin2/counter 2 as HSYNC
+
+		ipu_write_field(IPU, IPU_DI1_POL__DI1_DRDY_DATA_POLARITY, DISPLAY_DATA_POLARITY);
+		ipu_write_field(IPU, IPU_DI1_POL__DI1_DRDY_POLARITY_15, DISPLAY_DATA_ENABLE_POLARITY);
+
+		//release ipu DI counter
+		ipu_write_field(IPU, IPU_IPU_DISP_GEN__DI1_COUNTER_RELEASE, 1);
+	}
+}
+
+#else
+
+void di_config(unsigned int IPU, unsigned int DI)
+{
+	/*********************************************************************
+	*	DI configuration:
+	**********************************************************************/
+
+	int clkUp, clkDown;
+#ifdef DI_CLOCK_EXTERNAL_MODE
+#if defined(IPU_OUTPUT_MODE_LVDS)  || defined(IPU_OUTPUT_MODE_HDMI)
+	int ipuDiClk = DISPLAY_PIX_CLOCK;  //For iMX6Q, external clock, ipu_di_clk
+#else
+	int ipuDiClk = DISPLAY_PIX_CLOCK * 4;  //For iMX6Q, external clock, ipu_di_clk
+#endif
+#else
+	int ipuDiClk = CONFIG_IPUV3_CLK;  //For iMX6, internel IPU clock, ipu_hsp_clk
+#endif
+	int typPixClk = DISPLAY_PIX_CLOCK; // typical value of pixel clock, (hSyncStartWidth + hSyncEndWidth + hSyncWidth + hDisp) * (vSyncStartWidth + vSyncEndWidth + vSyncWidth + vDisp) * refresh rate (60Hz)
+	int div = (int)((float)ipuDiClk / (float)typPixClk + 0.5);// get the nearest value of typical pixel clock
+	int hSyncStartWidth = DISPLAY_HSYNC_START;
+	int hSyncWidth = DISPLAY_HSYNC_WIDTH;
+	int hSyncEndWidth = DISPLAY_HSYNC_END;
+	int hDisp = DISPLAY_WIDTH;
+	int vSyncStartWidth = DISPLAY_VSYNC_START;
+	int vSyncWidth = DISPLAY_VSYNC_WIDTH;
+	int vSyncEndWidth = DISPLAY_VSYNC_END;
+	int vDisp = DISPLAY_HEIGHT;
+
+	// config (DRDY signal) DI_PIN15
+	//di_pointer_config(IPU, di, pointer, access, componnent, cst, pt0, pt1, pt2, pt3, pt4, pt5, pt6);
+	di_pointer_config(IPU, DI, DI_SDC_WAVEFORM, div - 1, div - 1, DI_NOUSE_SIGNAL, DI_NOUSE_SIGNAL, DI_NOUSE_SIGNAL, DI_NOUSE_SIGNAL, DI_NOUSE_SIGNAL, DI_DEN_SIGNAL, DI_NOUSE_SIGNAL, DI_NOUSE_SIGNAL);		
+
+	//di_up_down_config(IPU, di, pointer, set, up, down)
+	di_up_down_config(IPU, DI, DI_SDC_WAVEFORM, DI_DEN_SIGNAL, 0, div * 2);
+	di_up_down_config(IPU, DI, DI_SDC_WAVEFORM, DI_NOUSE_SIGNAL, 0, 0);
+
+	// set clk for DI
+	// generate base clock for di
+	clkUp = 0;
+	clkDown = div;
+	if(DI == 0)
+	{
+		ipu_write_field(IPU, IPU_DI0_BS_CLKGEN0__DI0_DISP_CLK_OFFSET, 0);
+		ipu_write_field(IPU, IPU_DI0_BS_CLKGEN0__DI0_DISP_CLK_PERIOD, div << 4);
+		ipu_write_field(IPU, IPU_DI0_BS_CLKGEN1__DI0_DISP_CLK_DOWN, clkDown);
+		ipu_write_field(IPU, IPU_DI0_BS_CLKGEN1__DI0_DISP_CLK_UP, clkUp);
+
+		//DI_SCR, set the screen height   
+		ipu_write_field(IPU, IPU_DI0_SCR_CONF__DI0_SCREEN_HEIGHT, vDisp + vSyncStartWidth + vSyncEndWidth + vSyncWidth - 1);
+	}
+	else if(DI == 1)
+	{
+		ipu_write_field(IPU, IPU_DI1_BS_CLKGEN0__DI1_DISP_CLK_OFFSET, 0);
+		ipu_write_field(IPU, IPU_DI1_BS_CLKGEN0__DI1_DISP_CLK_PERIOD, div << 4);
+		ipu_write_field(IPU, IPU_DI1_BS_CLKGEN1__DI1_DISP_CLK_DOWN, clkDown);
+		ipu_write_field(IPU, IPU_DI1_BS_CLKGEN1__DI1_DISP_CLK_UP, clkUp);
+
+		//DI_SCR, set the screen height   
+		ipu_write_field(IPU, IPU_DI1_SCR_CONF__DI1_SCREEN_HEIGHT, vDisp + vSyncStartWidth + vSyncEndWidth + vSyncWidth - 1);
+	}
+
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_IHSYNC, // pointer
+		hDisp + hSyncStartWidth + hSyncEndWidth + hSyncWidth - 1, // run value for auto reload
+		DI_COUNTER_BASECLK + 1, // run resolution
+		0, // offset value
+		0, // offset resolution
+		1, // auto reload mode
+		0, // step repeat
+		0, // counter clear source selection
+		0, // counter polarity
+		0, // counter polarity trigger selection
+		0, // counter polarity clear selection
+		0, // counter up
+		0, // counter down
+		0 // gentime select
+	);
+
+	//Output HSYNC
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_HSYNC, // pointer
+		hDisp + hSyncStartWidth + hSyncEndWidth + hSyncWidth - 1, // run value for auto reload
+		DI_COUNTER_BASECLK + 1, // run resolution
+		0, // offset value
+		0, // offset resolution
+		1, // auto reload mode
+		0, // step repeat
+		0, // counter clear source selection
+		1, // counter polarity
+		DI_COUNTER_BASECLK + 1, // counter polarity trigger selection
+		0, // counter polarity clear selection
+		0, // counter up
+		hSyncWidth << 1, // counter down
+		0 // gentime select
+	);
+
+	//Output VSYNC
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_VSYNC, // pointer
+		vDisp + vSyncStartWidth + vSyncEndWidth + vSyncWidth - 1, // run value for auto reload
+		DI_COUNTER_HSYNC + 1, // run resolution
+		0, // offset value
+		0, // offset resolution
+		1, // auto reload mode
+		0, // step repeat
+		0, // counter clear source selection
+		1, // counter polarity
+		DI_COUNTER_HSYNC + 1, // counter polarity trigger selection
+		0, // counter polarity clear selection
+		0, // counter up
+		vSyncWidth << 1, // counter down
+		0 // gentime select
+	);
+
+	//Active Lines start points
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_ALINE, // pointer
+		0, // run value for auto reload	
+		DI_COUNTER_HSYNC + 1, // run resolution
+		vSyncStartWidth + vSyncWidth, // offset value
+		DI_COUNTER_HSYNC + 1, // offset resolution
+		0, // auto reload mode
+		vDisp, // step repeat
+		DI_COUNTER_VSYNC + 1, // counter clear source selection
+		0, // counter polarity
+		0, // counter polarity trigger selection
+		0, // counter polarity clear selection
+		0, // counter up
+		0, // counter down
+		0 // gentime select
+	);
+
+	//Active clock start points
+	di_sync_config(
+		IPU, // ipu num
+		DI, // di
+		DI_COUNTER_APIXEL, // pointer
+		0, // run value for auto reload
+		DI_COUNTER_BASECLK + 1, // run resolution
+		hSyncStartWidth + hSyncWidth, // offset value
+		DI_COUNTER_BASECLK + 1, // offset resolution
+		0, // auto reload mode
+		hDisp, // step repeat
+		DI_COUNTER_ALINE + 1, // counter clear source selection
+		0, // counter polarity
+		0, // counter polarity trigger selection
+		0, // counter polarity clear selection
+		0, // counter up
+		0, // counter down
+		0 // gentime select
+	);
+
+	if(DI == 0)
+	{
+		ipu_write_field(IPU, IPU_DI0_SYNC_AS_GEN__DI0_SYNC_START, 2);  // 2 lines predictions
+		ipu_write_field(IPU, IPU_DI0_SYNC_AS_GEN__DI0_VSYNC_SEL, DI_COUNTER_VSYNC - 1);  //select PIN3 as VSYNC
+#ifdef DI_CLOCK_EXTERNAL_MODE
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_CLK_EXT, 1);  //select external generated clock 
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_VSYNC_EXT, 1);  //select external VSYNC 
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_ERM_VSYNC_SEL, 1);
+#else
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_CLK_EXT, 0);  //select internal generated clock 
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_VSYNC_EXT, 0);  //select internal VSYNC 
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_ERM_VSYNC_SEL, 0);
+#endif
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_POLARITY_DISP_CLK, DISPLAY_CLOCK_POLARITY); 
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_POLARITY_2, DISPLAY_HSYNC_POLARITY);  //HSYNC polarity
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_POLARITY_3, DISPLAY_VSYNC_POLARITY);  //VSYNC polarity
+		ipu_write_field(IPU, IPU_DI0_GENERAL__DI0_DISP_Y_SEL, DI_COUNTER_HSYNC - 1);  //pin2/counter 2 as HSYNC
+
+		ipu_write_field(IPU, IPU_DI0_POL__DI0_DRDY_DATA_POLARITY, DISPLAY_DATA_POLARITY);
+		ipu_write_field(IPU, IPU_DI0_POL__DI0_DRDY_POLARITY_15, DISPLAY_DATA_ENABLE_POLARITY);  //VIDEO_DATA_EN POLARITY
+
+		//release ipu DI counter
+		ipu_write_field(IPU, IPU_IPU_DISP_GEN__DI0_COUNTER_RELEASE, 1);
+	}
+	else if(DI == 1)
+	{
+		ipu_write_field(IPU, IPU_DI1_SYNC_AS_GEN__DI1_SYNC_START, 2);  // 2 lines predictions
+		ipu_write_field(IPU, IPU_DI1_SYNC_AS_GEN__DI1_VSYNC_SEL, DI_COUNTER_VSYNC - 1);  //select PIN3 as VSYNC
+#ifdef DI_CLOCK_EXTERNAL_MODE
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_CLK_EXT, 1);	//select external generated clock 
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_VSYNC_EXT, 1);  //select external VSYNC 
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_ERM_VSYNC_SEL, 1);
+#else
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_CLK_EXT, 0);	//select internal generated clock 
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_VSYNC_EXT, 0);  //select internal VSYNC 
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_ERM_VSYNC_SEL, 0);
+#endif
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_POLARITY_DISP_CLK, DISPLAY_CLOCK_POLARITY); 
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_POLARITY_2, DISPLAY_HSYNC_POLARITY);	//HSYNC polarity
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_POLARITY_3, DISPLAY_VSYNC_POLARITY);	//VSYNC polarity
+		ipu_write_field(IPU, IPU_DI1_GENERAL__DI1_DISP_Y_SEL, DI_COUNTER_HSYNC - 1);  //pin2/counter 2 as HSYNC
+
+		ipu_write_field(IPU, IPU_DI1_POL__DI1_DRDY_DATA_POLARITY, DISPLAY_DATA_POLARITY);
+		ipu_write_field(IPU, IPU_DI1_POL__DI1_DRDY_POLARITY_15, DISPLAY_DATA_ENABLE_POLARITY);	//VIDEO_DATA_EN POLARITY
+
+		//release ipu DI counter
+		ipu_write_field(IPU, IPU_IPU_DISP_GEN__DI1_COUNTER_RELEASE, 1);
+	}
+}
+#endif
+
+void ipu_setup(unsigned int IPU, unsigned int DI)
+{
+	unsigned int reg;
+	struct src *src_regs = (struct src *)SRC_BASE_ADDR;
+	struct mxc_ccm_reg *imx_ccm = (struct mxc_ccm_reg *)CCM_BASE_ADDR;
+
+	//Disable IPU and DI clocks
+	reg = __raw_readl(&imx_ccm->CCGR3);
+	reg &= ~0xFFFF;
+	__raw_writel(reg, &imx_ccm->CCGR3);
+
+#ifdef CONFIG_MX6DL
+	reg = __raw_readl(&imx_ccm->cscdr3);
+	reg |= (0x3 << 9);
+	__raw_writel(reg, &imx_ccm->cscdr3);
+#endif
+
+#ifdef DI_CLOCK_EXTERNAL_MODE
+#ifdef IPU_OUTPUT_MODE_LVDS
+#ifdef LVDS_SPLIT_MODE
+	if (IPU == 1)
+	{
+		if (DI == 0)
+			display_clk_config(MXC_IPU1_LVDS_DI0_CLK, DISPLAY_PIX_CLOCK * 7 / 2);
+		else if(DI == 1)
+			display_clk_config(MXC_IPU1_LVDS_DI1_CLK, DISPLAY_PIX_CLOCK * 7 / 2);
+	}
+	else if(IPU == 2)
+	{
+		if (DI == 0)
+			display_clk_config(MXC_IPU2_LVDS_DI0_CLK, DISPLAY_PIX_CLOCK * 7 / 2);
+		else if(DI == 1)
+			display_clk_config(MXC_IPU2_LVDS_DI1_CLK, DISPLAY_PIX_CLOCK * 7 / 2);
+	}
+#ifdef LVDS_SPLIT_MODE_MADI
+	display_clk_config(MXC_IPU1_LVDS_DI0_CLK, DISPLAY_PIX_CLOCK * 7 / 2);
+	display_clk_config(MXC_IPU1_LVDS_DI0_CLK, DISPLAY_PIX_CLOCK * 7 / 2);
+#endif
+#else
+	if (IPU == 1)
+	{
+		if (DI == 0)
+			display_clk_config(MXC_IPU1_LVDS_DI0_CLK, DISPLAY_PIX_CLOCK * 7);
+		else if(DI == 1)
+			display_clk_config(MXC_IPU1_LVDS_DI1_CLK, DISPLAY_PIX_CLOCK * 7);
+	}
+	else if(IPU == 2)
+	{
+		if (DI == 0)
+			display_clk_config(MXC_IPU2_LVDS_DI0_CLK, DISPLAY_PIX_CLOCK * 7);
+		else if(DI == 1)
+			display_clk_config(MXC_IPU2_LVDS_DI1_CLK, DISPLAY_PIX_CLOCK * 7);
+	}
+#endif
+#endif  //IPU_OUTPUT_MODE_LVDS
+
+#ifdef IPU_OUTPUT_MODE_HDMI
+	if (IPU == 1)
+	{
+		if(DI == 0)
+			display_clk_config(MXC_IPU1_DI0_CLK, DISPLAY_PIX_CLOCK);
+		else
+			display_clk_config(MXC_IPU1_DI1_CLK, DISPLAY_PIX_CLOCK);
+	}
+	else if(IPU == 2)
+	{
+		if(DI == 0)
+			display_clk_config(MXC_IPU2_DI0_CLK, DISPLAY_PIX_CLOCK);
+		else
+			display_clk_config(MXC_IPU2_DI1_CLK, DISPLAY_PIX_CLOCK);
+	}
+#endif  //IPU_OUTPUT_MODE_HDMI
+
+#ifdef IPU_OUTPUT_MODE_LCD
+	if (IPU == 1)
+	{
+		if(DI == 0)
+			display_clk_config(MXC_IPU1_DI0_CLK, DISPLAY_PIX_CLOCK * 4);
+		else
+			display_clk_config(MXC_IPU1_DI1_CLK, DISPLAY_PIX_CLOCK * 4);
+	}
+	else if(IPU == 2)
+	{
+		if(DI == 0)
+			display_clk_config(MXC_IPU2_DI0_CLK, DISPLAY_PIX_CLOCK * 4);
+		else
+			display_clk_config(MXC_IPU2_DI1_CLK, DISPLAY_PIX_CLOCK * 4);
+	}
+#endif  //IPU_OUTPUT_MODE_LCD
+#endif  //DI_CLOCK_EXTERNAL_MODE
+
+	if (IPU == 1)
+	{
+		// Reset IPU
+		reg = __raw_readl(&src_regs->scr);
+		reg |= 0x8;
+		__raw_writel(reg, &src_regs->scr);
+
+		// Enable IPU clock
+		reg = __raw_readl(&imx_ccm->CCGR3);
+		reg |= (3 << 0);
+		__raw_writel(reg, &imx_ccm->CCGR3);
+
+		// Reset IPU memory 
+		writel(0x807FFFFF, IPU1_ARB_BASE_ADDR + IPU_IPU_MEM_RST__ADDR);
+		while (readl(IPU1_ARB_BASE_ADDR + IPU_IPU_MEM_RST__ADDR) & 0x80000000);
+
+		if (DI == 0)
+		{
+			//Enable DI0 clock
+			reg = __raw_readl(&imx_ccm->CCGR3);
+			reg |= (3 << 2);
+			__raw_writel(reg, &imx_ccm->CCGR3);
+		}
+		else if(DI == 1)
+		{
+			//Enable DI1 clock
+			reg = __raw_readl(&imx_ccm->CCGR3);
+			reg |= (3 << 4);
+			__raw_writel(reg, &imx_ccm->CCGR3);
+		}
+	}
+	else if(IPU == 2)
+	{
+		// Reset IPU
+		reg = __raw_readl(&src_regs->scr);
+		reg |= 0x1000;
+		__raw_writel(reg, &src_regs->scr);
+
+		// Enable IPU clock
+		reg = __raw_readl(&imx_ccm->CCGR3);
+		reg |= (3 << 6);
+		__raw_writel(reg, &imx_ccm->CCGR3);
+
+		// Reset IPU memory	
+		writel(0x807FFFFF, IPU2_ARB_BASE_ADDR + IPU_IPU_MEM_RST__ADDR);
+		while (readl(IPU2_ARB_BASE_ADDR + IPU_IPU_MEM_RST__ADDR) & 0x80000000);
+
+		if (DI == 0)
+		{
+			//Enable DI0 clock
+			reg = __raw_readl(&imx_ccm->CCGR3);
+			reg |= (3 << 8);
+			__raw_writel(reg, &imx_ccm->CCGR3);
+		}
+		else if(DI == 1)
+		{
+			//Enable DI1 clock
+			reg = __raw_readl(&imx_ccm->CCGR3);
+			reg |= (3 << 10);
+			__raw_writel(reg, &imx_ccm->CCGR3);
+		}
+	}
+
+#ifdef IPU_OUTPUT_MODE_LVDS
+	//Enable LDB DI clocks
+	reg = __raw_readl(&imx_ccm->CCGR3);
+	reg |= (0xF << 12);
+	__raw_writel(reg, &imx_ccm->CCGR3);
+#endif
+
+#ifdef IPU_OUTPUT_MODE_HDMI
+	//Enable HDMI clock
+	reg = __raw_readl(&imx_ccm->CCGR2);
+	reg |= (3 << 0);
+	reg |= (3 << 4);
+	__raw_writel(reg, &imx_ccm->CCGR2);
+#endif
+
+	dmfc_config(IPU);
+	idmac_config(IPU);
+
+#ifndef IPU_USE_DC_CHANNEL
+	dp_config(IPU);
+#endif
+
+#ifdef DISPLAY_INTERLACED
+	dc_config_interlaced(IPU, DI);
+	di_config_interlaced(IPU, DI);
+#else
+	dc_config(IPU, DI);
+	di_config(IPU, DI);
+#endif
+
+	enable_display(IPU, DI);
+
+#ifdef IPU_USE_DC_CHANNEL
+//	ipu_write_field(IPU, IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_28, 1);
+	ipu_write_field(IPU, IPU_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_28, 1);
+	ipu_write_field(IPU, IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_28, 1);
+	ipu_write_field(IPU, IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_28, 0x1);  //enable channel 28
+#else
+//	ipu_write_field(IPU, IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_23, 1);
+	ipu_write_field(IPU, IPU_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_23, 1);
+	ipu_write_field(IPU, IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_23, 1);
+	ipu_write_field(IPU, IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_23, 0x1);  //enable channel 23
+#endif
+}
+
+#ifdef IPU_OUTPUT_MODE_HDMI
+extern void hdmi_display_enable(unsigned int mCode);
+void setup_hdmi(unsigned int IPU, unsigned int DI)
+{
+	if(IPU == 1)
+	{
+		if(DI == 0)
+			imx_iomux_set_gpr_register(3, 2, 2, 0);
+		else if(DI == 1)
+			imx_iomux_set_gpr_register(3, 2, 2, 1);
+	}
+
+	if(IPU == 2)
+	{
+		if(DI == 0)
+			imx_iomux_set_gpr_register(3, 2, 2, 2);
+		else if(DI == 1)
+			imx_iomux_set_gpr_register(3, 2, 2, 3);
+	}
+
+#ifdef DISPLAY_INTERLACED
+#if (DISPLAY_WIDTH == 1920) && (DISPLAY_HEIGHT == 1080)
+	hdmi_display_enable(5);  //1080i@60Hz
+#endif
+
+#else
+
+#if (DISPLAY_WIDTH == 1920) && (DISPLAY_HEIGHT == 1080)
+	hdmi_display_enable(16);  //1080p@60Hz
+#else
+	hdmi_display_enable(4);  //720p@60Hz
+#endif
+#endif  //DISPLAY_INTERLACED
+}
+#endif
+
+#ifdef IPU_OUTPUT_MODE_LVDS
+void setup_lvds(unsigned int IPU, unsigned int DI)
+{
+	unsigned int reg;
+
+#if (LVDS_PORT == 0)
+	if(IPU == 1)
+	{
+		if(DI == 0)
+			imx_iomux_set_gpr_register(3, 6, 2, 0);
+		else if(DI == 1)
+			imx_iomux_set_gpr_register(3, 6, 2, 1);
+	}
+
+	if(IPU == 2)
+	{
+		if(DI == 0)
+			imx_iomux_set_gpr_register(3, 6, 2, 2);
+		else if(DI == 1)
+			imx_iomux_set_gpr_register(3, 6, 2, 3);
+	}
+#endif
+
+#if (LVDS_PORT == 1)
+	if(IPU == 1)
+	{
+		if(DI == 0)
+			imx_iomux_set_gpr_register(3, 8, 2, 0);
+		else if(DI == 1)
+			imx_iomux_set_gpr_register(3, 8, 2, 1);
+	}
+
+	if(IPU == 2)
+	{
+		if(DI == 0)
+			imx_iomux_set_gpr_register(3, 8, 2, 2);
+		else if(DI == 1)
+			imx_iomux_set_gpr_register(3, 8, 2, 3);
+	}
+#endif
+
+	reg = 0;
+	if (DI == 0)
+		reg |= (DISPLAY_VSYNC_POLARITY << 9);
+	else if(DI == 1)
+		reg |= (DISPLAY_VSYNC_POLARITY << 10);
+
+#if (LVDS_PORT == 0)
+#if (DISPLAY_IF_BPP == 24)
+	reg |= (1 << 5);
+#endif
+
+	if (DI == 0)
+		reg |= (1 << 0);
+	else if(DI == 1)
+		reg |= (3 << 0);
+
+#ifdef LVDS_SPLIT_MODE
+	reg |= (1 << 4);
+	if (DI == 0)
+		reg |= (1 << 2);
+	else if(DI == 1)
+		reg |= (3 << 2);
+#endif
+#endif
+
+#if (LVDS_PORT == 1)
+#if (DISPLAY_IF_BPP == 24)
+	reg |= (1 << 7);
+#endif
+
+	if (DI == 0)
+		reg |= (1 << 2);
+	else if(DI == 1)
+		reg |= (3 << 2);
+#ifdef LVDS_SPLIT_MODE
+	reg |= (1 << 4);
+	if (DI == 0)
+		reg |= (1 << 0);
+	else if(DI == 1)
+		reg |= (3 << 0);
+#endif
+#endif
+#ifdef LVDS_SPLIT_MODE_MADI
+	reg |= (1 << 0);
+	reg |= (1 << 2);
+	reg |= (1 << 4);
+	reg |= (1 << 5);
+	reg |= (0 << 6);
+	reg |= (1 << 7);
+	reg |= (0 << 8);
+#endif
+
+	writel(reg, IOMUXC_BASE_ADDR + 0x8);  //Set LDB_CTRL
+}
+#endif
+
+int ipu_display_setup(void)
+{
+	ipu_setup(IPU_NUM, DI_NUM);
+
+#ifdef IPU_OUTPUT_MODE_HDMI
+	setup_hdmi(IPU_NUM, DI_NUM);
+#endif
+
+#ifdef IPU_OUTPUT_MODE_LVDS
+	setup_lvds(IPU_NUM, DI_NUM);
+#endif
+
+	return 0;
+}
+
diff --git a/arch/arm/include/asm/arch-mx6/clock.h b/arch/arm/include/asm/arch-mx6/clock.h
index 9670c25..296ca22 100644
--- a/arch/arm/include/asm/arch-mx6/clock.h
+++ b/arch/arm/include/asm/arch-mx6/clock.h
@@ -40,6 +40,16 @@ enum mxc_clock {
 	MXC_SATA_CLK,
 	MXC_NFC_CLK,
 	MXC_I2C_CLK,
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+	MXC_IPU1_LVDS_DI0_CLK,
+	MXC_IPU1_LVDS_DI1_CLK,
+	MXC_IPU2_LVDS_DI0_CLK,
+	MXC_IPU2_LVDS_DI1_CLK,
+	MXC_IPU1_DI0_CLK,
+	MXC_IPU1_DI1_CLK,
+	MXC_IPU2_DI0_CLK,
+	MXC_IPU2_DI1_CLK,
+#endif
 };
 
 enum enet_freq {
diff --git a/arch/arm/include/asm/arch-mx6/ipuv3h_reg_def.h b/arch/arm/include/asm/arch-mx6/ipuv3h_reg_def.h
new file mode 100644
index 0000000..2e97060
--- /dev/null
+++ b/arch/arm/include/asm/arch-mx6/ipuv3h_reg_def.h
@@ -0,0 +1,13930 @@
+//==========================================================================
+//
+//      IPUV3H_REG_DEF.h
+//
+//      regs definitions of IPU 
+//
+//==========================================================================
+
+#ifndef _IPUV3H_REGS_DEF_H_
+#define _IPUV3H_REGS_DEF_H_
+
+
+#define IPU_REGISTERS_OFFSET	0x00200000			
+#define IPU_MEMORY_OFFSET IPU_REGISTERS_OFFSET + 0x00100000			
+
+// ================= Start of IPUV3H Common Registers =====================
+
+#define IPU_IPU_CONF__ADDR             IPU_REGISTERS_OFFSET+0x00000000
+#define IPU_IPU_CONF__EMPTY            IPU_REGISTERS_OFFSET+0x00000000,0x00000000
+#define IPU_IPU_CONF__FULL             IPU_REGISTERS_OFFSET+0x00000000,0xffffffff
+#define IPU_IPU_CONF__CSI_SEL          IPU_REGISTERS_OFFSET+0x00000000,0x80000000
+#define IPU_IPU_CONF__IC_INPUT         IPU_REGISTERS_OFFSET+0x00000000,0x40000000
+#define IPU_IPU_CONF__CSI1_DATA_SOURCE IPU_REGISTERS_OFFSET+0x00000000,0x20000000
+#define IPU_IPU_CONF__CSI0_DATA_SOURCE IPU_REGISTERS_OFFSET+0x00000000,0x10000000
+#define IPU_IPU_CONF__VDI_DMFC_SYNC    IPU_REGISTERS_OFFSET+0x00000000,0x08000000
+#define IPU_IPU_CONF__IC_DMFC_SYNC     IPU_REGISTERS_OFFSET+0x00000000,0x04000000
+#define IPU_IPU_CONF__IC_DMFC_SEL      IPU_REGISTERS_OFFSET+0x00000000,0x02000000
+#define IPU_IPU_CONF__IDMAC_DISABLE    IPU_REGISTERS_OFFSET+0x00000000,0x00400000
+#define IPU_IPU_CONF__IPU_DIAGBUS_ON   IPU_REGISTERS_OFFSET+0x00000000,0x00200000
+#define IPU_IPU_CONF__IPU_DIAGBUS_MODE IPU_REGISTERS_OFFSET+0x00000000,0x001F0000
+#define IPU_IPU_CONF__VDI_EN           IPU_REGISTERS_OFFSET+0x00000000,0x00001000
+#define IPU_IPU_CONF__SISG_EN          IPU_REGISTERS_OFFSET+0x00000000,0x00000800
+#define IPU_IPU_CONF__DMFC_EN          IPU_REGISTERS_OFFSET+0x00000000,0x00000400
+#define IPU_IPU_CONF__DC_EN            IPU_REGISTERS_OFFSET+0x00000000,0x00000200
+#define IPU_IPU_CONF__SMFC_EN          IPU_REGISTERS_OFFSET+0x00000000,0x00000100
+#define IPU_IPU_CONF__DI1_EN           IPU_REGISTERS_OFFSET+0x00000000,0x00000080
+#define IPU_IPU_CONF__DI0_EN           IPU_REGISTERS_OFFSET+0x00000000,0x00000040
+#define IPU_IPU_CONF__DP_EN            IPU_REGISTERS_OFFSET+0x00000000,0x00000020
+#define IPU_IPU_CONF__IRT_EN           IPU_REGISTERS_OFFSET+0x00000000,0x00000008
+#define IPU_IPU_CONF__IC_EN            IPU_REGISTERS_OFFSET+0x00000000,0x00000004
+#define IPU_IPU_CONF__CSI1_EN          IPU_REGISTERS_OFFSET+0x00000000,0x00000002
+#define IPU_IPU_CONF__CSI0_EN          IPU_REGISTERS_OFFSET+0x00000000,0x00000001
+
+#define IPU_SISG_CTRL0__ADDR                  IPU_REGISTERS_OFFSET+0x00000004
+#define IPU_SISG_CTRL0__EMPTY                 IPU_REGISTERS_OFFSET+0x00000004,0x00000000
+#define IPU_SISG_CTRL0__FULL                  IPU_REGISTERS_OFFSET+0x00000004,0xffffffff
+#define IPU_SISG_CTRL0__EXT_ACTV              IPU_REGISTERS_OFFSET+0x00000004,0x40000000
+#define IPU_SISG_CTRL0__MCU_ACTV_TRIG         IPU_REGISTERS_OFFSET+0x00000004,0x20000000
+#define IPU_SISG_CTRL0__VAL_STOP_SISG_COUNTER IPU_REGISTERS_OFFSET+0x00000004,0x1FFFFFF0
+#define IPU_SISG_CTRL0__NO_OF_VSYNC           IPU_REGISTERS_OFFSET+0x00000004,0x0000000E
+#define IPU_SISG_CTRL0__VSYNC_RESET_COUNTER   IPU_REGISTERS_OFFSET+0x00000004,0x00000001
+
+#define IPU_SISG_CTRL1__ADDR            IPU_REGISTERS_OFFSET+0x00000008
+#define IPU_SISG_CTRL1__EMPTY           IPU_REGISTERS_OFFSET+0x00000008,0x00000000
+#define IPU_SISG_CTRL1__FULL            IPU_REGISTERS_OFFSET+0x00000008,0xffffffff
+#define IPU_SISG_CTRL1__SISG_OUT_POL    IPU_REGISTERS_OFFSET+0x00000008,0x00003F00
+#define IPU_SISG_CTRL1__SISG_STROBE_CNT IPU_REGISTERS_OFFSET+0x00000008,0x0000001F
+
+#define IPU_SISG_SET_1__ADDR       IPU_REGISTERS_OFFSET+0x0000000C
+#define IPU_SISG_SET_1__EMPTY      IPU_REGISTERS_OFFSET+0x0000000C,0x00000000
+#define IPU_SISG_SET_1__FULL       IPU_REGISTERS_OFFSET+0x0000000C,0xffffffff
+#define IPU_SISG_SET_1__SISG_SET_1 IPU_REGISTERS_OFFSET+0x0000000C,0x01FFFFFF
+
+#define IPU_SISG_SET_2__ADDR       IPU_REGISTERS_OFFSET+0x00000010
+#define IPU_SISG_SET_2__EMPTY      IPU_REGISTERS_OFFSET+0x00000010,0x00000000
+#define IPU_SISG_SET_2__FULL       IPU_REGISTERS_OFFSET+0x00000010,0xffffffff
+#define IPU_SISG_SET_2__SISG_SET_2 IPU_REGISTERS_OFFSET+0x00000010,0x01FFFFFF
+
+#define IPU_SISG_SET_3__ADDR       IPU_REGISTERS_OFFSET+0x00000014
+#define IPU_SISG_SET_3__EMPTY      IPU_REGISTERS_OFFSET+0x00000014,0x00000000
+#define IPU_SISG_SET_3__FULL       IPU_REGISTERS_OFFSET+0x00000014,0xffffffff
+#define IPU_SISG_SET_3__SISG_SET_3 IPU_REGISTERS_OFFSET+0x00000014,0x01FFFFFF
+
+#define IPU_SISG_SET_4__ADDR       IPU_REGISTERS_OFFSET+0x00000018
+#define IPU_SISG_SET_4__EMPTY      IPU_REGISTERS_OFFSET+0x00000018,0x00000000
+#define IPU_SISG_SET_4__FULL       IPU_REGISTERS_OFFSET+0x00000018,0xffffffff
+#define IPU_SISG_SET_4__SISG_SET_4 IPU_REGISTERS_OFFSET+0x00000018,0x01FFFFFF
+
+#define IPU_SISG_SET_5__ADDR       IPU_REGISTERS_OFFSET+0x0000001C
+#define IPU_SISG_SET_5__EMPTY      IPU_REGISTERS_OFFSET+0x0000001C,0x00000000
+#define IPU_SISG_SET_5__FULL       IPU_REGISTERS_OFFSET+0x0000001C,0xffffffff
+#define IPU_SISG_SET_5__SISG_SET_5 IPU_REGISTERS_OFFSET+0x0000001C,0x01FFFFFF
+
+#define IPU_SISG_SET_6__ADDR       IPU_REGISTERS_OFFSET+0x00000020
+#define IPU_SISG_SET_6__EMPTY      IPU_REGISTERS_OFFSET+0x00000020,0x00000000
+#define IPU_SISG_SET_6__FULL       IPU_REGISTERS_OFFSET+0x00000020,0xffffffff
+#define IPU_SISG_SET_6__SISG_SET_6 IPU_REGISTERS_OFFSET+0x00000020,0x01FFFFFF
+
+#define IPU_SISG_CLR_1__ADDR         IPU_REGISTERS_OFFSET+0x00000024
+#define IPU_SISG_CLR_1__EMPTY        IPU_REGISTERS_OFFSET+0x00000024,0x00000000
+#define IPU_SISG_CLR_1__FULL         IPU_REGISTERS_OFFSET+0x00000024,0xffffffff
+#define IPU_SISG_CLR_1__SISG_CLEAR_1 IPU_REGISTERS_OFFSET+0x00000024,0x01FFFFFF
+
+#define IPU_SISG_CLR_2__ADDR         IPU_REGISTERS_OFFSET+0x00000028
+#define IPU_SISG_CLR_2__EMPTY        IPU_REGISTERS_OFFSET+0x00000028,0x00000000
+#define IPU_SISG_CLR_2__FULL         IPU_REGISTERS_OFFSET+0x00000028,0xffffffff
+#define IPU_SISG_CLR_2__SISG_CLEAR_2 IPU_REGISTERS_OFFSET+0x00000028,0x01FFFFFF
+
+#define IPU_SISG_CLR_3__ADDR         IPU_REGISTERS_OFFSET+0x0000002C
+#define IPU_SISG_CLR_3__EMPTY        IPU_REGISTERS_OFFSET+0x0000002C,0x00000000
+#define IPU_SISG_CLR_3__FULL         IPU_REGISTERS_OFFSET+0x0000002C,0xffffffff
+#define IPU_SISG_CLR_3__SISG_CLEAR_3 IPU_REGISTERS_OFFSET+0x0000002C,0x01FFFFFF
+
+#define IPU_SISG_CLR_4__ADDR         IPU_REGISTERS_OFFSET+0x00000030
+#define IPU_SISG_CLR_4__EMPTY        IPU_REGISTERS_OFFSET+0x00000030,0x00000000
+#define IPU_SISG_CLR_4__FULL         IPU_REGISTERS_OFFSET+0x00000030,0xffffffff
+#define IPU_SISG_CLR_4__SISG_CLEAR_4 IPU_REGISTERS_OFFSET+0x00000030,0x01FFFFFF
+
+#define IPU_SISG_CLR_5__ADDR         IPU_REGISTERS_OFFSET+0x00000034
+#define IPU_SISG_CLR_5__EMPTY        IPU_REGISTERS_OFFSET+0x00000034,0x00000000
+#define IPU_SISG_CLR_5__FULL         IPU_REGISTERS_OFFSET+0x00000034,0xffffffff
+#define IPU_SISG_CLR_5__SISG_CLEAR_5 IPU_REGISTERS_OFFSET+0x00000034,0x01FFFFFF
+
+#define IPU_SISG_CLR_6__ADDR         IPU_REGISTERS_OFFSET+0x00000038
+#define IPU_SISG_CLR_6__EMPTY        IPU_REGISTERS_OFFSET+0x00000038,0x00000000
+#define IPU_SISG_CLR_6__FULL         IPU_REGISTERS_OFFSET+0x00000038,0xffffffff
+#define IPU_SISG_CLR_6__SISG_CLEAR_6 IPU_REGISTERS_OFFSET+0x00000038,0x01FFFFFF
+
+#define IPU_IPU_INT_CTRL_1__ADDR            IPU_REGISTERS_OFFSET+0x0000003C
+#define IPU_IPU_INT_CTRL_1__EMPTY           IPU_REGISTERS_OFFSET+0x0000003C,0x00000000
+#define IPU_IPU_INT_CTRL_1__FULL            IPU_REGISTERS_OFFSET+0x0000003C,0xffffffff
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_31 IPU_REGISTERS_OFFSET+0x0000003C,0x80000000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_29 IPU_REGISTERS_OFFSET+0x0000003C,0x20000000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_28 IPU_REGISTERS_OFFSET+0x0000003C,0x10000000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_27 IPU_REGISTERS_OFFSET+0x0000003C,0x08000000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_26 IPU_REGISTERS_OFFSET+0x0000003C,0x04000000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_25 IPU_REGISTERS_OFFSET+0x0000003C,0x02000000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_24 IPU_REGISTERS_OFFSET+0x0000003C,0x01000000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_23 IPU_REGISTERS_OFFSET+0x0000003C,0x00800000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_22 IPU_REGISTERS_OFFSET+0x0000003C,0x00400000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_21 IPU_REGISTERS_OFFSET+0x0000003C,0x00200000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_20 IPU_REGISTERS_OFFSET+0x0000003C,0x00100000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_19 IPU_REGISTERS_OFFSET+0x0000003C,0x00080000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_18 IPU_REGISTERS_OFFSET+0x0000003C,0x00040000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_17 IPU_REGISTERS_OFFSET+0x0000003C,0x00020000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_15 IPU_REGISTERS_OFFSET+0x0000003C,0x00008000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_14 IPU_REGISTERS_OFFSET+0x0000003C,0x00004000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_13 IPU_REGISTERS_OFFSET+0x0000003C,0x00002000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_12 IPU_REGISTERS_OFFSET+0x0000003C,0x00001000
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_11 IPU_REGISTERS_OFFSET+0x0000003C,0x00000800
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_10 IPU_REGISTERS_OFFSET+0x0000003C,0x00000400
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_9  IPU_REGISTERS_OFFSET+0x0000003C,0x00000200
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_8  IPU_REGISTERS_OFFSET+0x0000003C,0x00000100
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_5  IPU_REGISTERS_OFFSET+0x0000003C,0x00000020
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_3  IPU_REGISTERS_OFFSET+0x0000003C,0x00000008
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_2  IPU_REGISTERS_OFFSET+0x0000003C,0x00000004
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_1  IPU_REGISTERS_OFFSET+0x0000003C,0x00000002
+#define IPU_IPU_INT_CTRL_1__IDMAC_EOF_EN_0  IPU_REGISTERS_OFFSET+0x0000003C,0x00000001
+
+#define IPU_IPU_INT_CTRL_2__ADDR            IPU_REGISTERS_OFFSET+0x00000040
+#define IPU_IPU_INT_CTRL_2__EMPTY           IPU_REGISTERS_OFFSET+0x00000040,0x00000000
+#define IPU_IPU_INT_CTRL_2__FULL            IPU_REGISTERS_OFFSET+0x00000040,0xffffffff
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_52 IPU_REGISTERS_OFFSET+0x00000040,0x00100000
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_51 IPU_REGISTERS_OFFSET+0x00000040,0x00080000
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_50 IPU_REGISTERS_OFFSET+0x00000040,0x00040000
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_49 IPU_REGISTERS_OFFSET+0x00000040,0x00020000
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_48 IPU_REGISTERS_OFFSET+0x00000040,0x00010000
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_47 IPU_REGISTERS_OFFSET+0x00000040,0x00008000
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_46 IPU_REGISTERS_OFFSET+0x00000040,0x00004000
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_45 IPU_REGISTERS_OFFSET+0x00000040,0x00002000
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_44 IPU_REGISTERS_OFFSET+0x00000040,0x00001000
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_43 IPU_REGISTERS_OFFSET+0x00000040,0x00000800
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_42 IPU_REGISTERS_OFFSET+0x00000040,0x00000400
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_41 IPU_REGISTERS_OFFSET+0x00000040,0x00000200
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_40 IPU_REGISTERS_OFFSET+0x00000040,0x00000100
+#define IPU_IPU_INT_CTRL_2__IDMAC_EOF_EN_33 IPU_REGISTERS_OFFSET+0x00000040,0x00000002
+
+#define IPU_IPU_INT_CTRL_3__ADDR              IPU_REGISTERS_OFFSET+0x00000044
+#define IPU_IPU_INT_CTRL_3__EMPTY             IPU_REGISTERS_OFFSET+0x00000044,0x00000000
+#define IPU_IPU_INT_CTRL_3__FULL              IPU_REGISTERS_OFFSET+0x00000044,0xffffffff
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_31 IPU_REGISTERS_OFFSET+0x00000044,0x80000000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_29 IPU_REGISTERS_OFFSET+0x00000044,0x20000000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_28 IPU_REGISTERS_OFFSET+0x00000044,0x10000000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_27 IPU_REGISTERS_OFFSET+0x00000044,0x08000000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_26 IPU_REGISTERS_OFFSET+0x00000044,0x04000000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_25 IPU_REGISTERS_OFFSET+0x00000044,0x02000000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_24 IPU_REGISTERS_OFFSET+0x00000044,0x01000000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_23 IPU_REGISTERS_OFFSET+0x00000044,0x00800000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_22 IPU_REGISTERS_OFFSET+0x00000044,0x00400000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_21 IPU_REGISTERS_OFFSET+0x00000044,0x00200000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_20 IPU_REGISTERS_OFFSET+0x00000044,0x00100000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_19 IPU_REGISTERS_OFFSET+0x00000044,0x00080000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_18 IPU_REGISTERS_OFFSET+0x00000044,0x00040000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_17 IPU_REGISTERS_OFFSET+0x00000044,0x00020000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_15 IPU_REGISTERS_OFFSET+0x00000044,0x00008000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_14 IPU_REGISTERS_OFFSET+0x00000044,0x00004000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_13 IPU_REGISTERS_OFFSET+0x00000044,0x00002000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_12 IPU_REGISTERS_OFFSET+0x00000044,0x00001000
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_11 IPU_REGISTERS_OFFSET+0x00000044,0x00000800
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_10 IPU_REGISTERS_OFFSET+0x00000044,0x00000400
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_9  IPU_REGISTERS_OFFSET+0x00000044,0x00000200
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_8  IPU_REGISTERS_OFFSET+0x00000044,0x00000100
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_5  IPU_REGISTERS_OFFSET+0x00000044,0x00000020
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_3  IPU_REGISTERS_OFFSET+0x00000044,0x00000008
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_2  IPU_REGISTERS_OFFSET+0x00000044,0x00000004
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_1  IPU_REGISTERS_OFFSET+0x00000044,0x00000002
+#define IPU_IPU_INT_CTRL_3__IDMAC_NFACK_EN_0  IPU_REGISTERS_OFFSET+0x00000044,0x00000001
+
+#define IPU_IPU_INT_CTRL_4__ADDR              IPU_REGISTERS_OFFSET+0x00000048
+#define IPU_IPU_INT_CTRL_4__EMPTY             IPU_REGISTERS_OFFSET+0x00000048,0x00000000
+#define IPU_IPU_INT_CTRL_4__FULL              IPU_REGISTERS_OFFSET+0x00000048,0xffffffff
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_52 IPU_REGISTERS_OFFSET+0x00000048,0x00100000
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_51 IPU_REGISTERS_OFFSET+0x00000048,0x00080000
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_50 IPU_REGISTERS_OFFSET+0x00000048,0x00040000
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_49 IPU_REGISTERS_OFFSET+0x00000048,0x00020000
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_48 IPU_REGISTERS_OFFSET+0x00000048,0x00010000
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_47 IPU_REGISTERS_OFFSET+0x00000048,0x00008000
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_46 IPU_REGISTERS_OFFSET+0x00000048,0x00004000
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_45 IPU_REGISTERS_OFFSET+0x00000048,0x00002000
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_44 IPU_REGISTERS_OFFSET+0x00000048,0x00001000
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_43 IPU_REGISTERS_OFFSET+0x00000048,0x00000800
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_42 IPU_REGISTERS_OFFSET+0x00000048,0x00000400
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_41 IPU_REGISTERS_OFFSET+0x00000048,0x00000200
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_40 IPU_REGISTERS_OFFSET+0x00000048,0x00000100
+#define IPU_IPU_INT_CTRL_4__IDMAC_NFACK_EN_33 IPU_REGISTERS_OFFSET+0x00000048,0x00000002
+
+#define IPU_IPU_INT_CTRL_5__ADDR                IPU_REGISTERS_OFFSET+0x0000004C
+#define IPU_IPU_INT_CTRL_5__EMPTY               IPU_REGISTERS_OFFSET+0x0000004C,0x00000000
+#define IPU_IPU_INT_CTRL_5__FULL                IPU_REGISTERS_OFFSET+0x0000004C,0xffffffff
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_31 IPU_REGISTERS_OFFSET+0x0000004C,0x80000000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_29 IPU_REGISTERS_OFFSET+0x0000004C,0x20000000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_28 IPU_REGISTERS_OFFSET+0x0000004C,0x10000000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_27 IPU_REGISTERS_OFFSET+0x0000004C,0x08000000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_26 IPU_REGISTERS_OFFSET+0x0000004C,0x04000000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_25 IPU_REGISTERS_OFFSET+0x0000004C,0x02000000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_24 IPU_REGISTERS_OFFSET+0x0000004C,0x01000000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_23 IPU_REGISTERS_OFFSET+0x0000004C,0x00800000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_22 IPU_REGISTERS_OFFSET+0x0000004C,0x00400000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_21 IPU_REGISTERS_OFFSET+0x0000004C,0x00200000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_20 IPU_REGISTERS_OFFSET+0x0000004C,0x00100000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_19 IPU_REGISTERS_OFFSET+0x0000004C,0x00080000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_18 IPU_REGISTERS_OFFSET+0x0000004C,0x00040000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_17 IPU_REGISTERS_OFFSET+0x0000004C,0x00020000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_15 IPU_REGISTERS_OFFSET+0x0000004C,0x00008000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_14 IPU_REGISTERS_OFFSET+0x0000004C,0x00004000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_13 IPU_REGISTERS_OFFSET+0x0000004C,0x00002000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_12 IPU_REGISTERS_OFFSET+0x0000004C,0x00001000
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_11 IPU_REGISTERS_OFFSET+0x0000004C,0x00000800
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_10 IPU_REGISTERS_OFFSET+0x0000004C,0x00000400
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_9  IPU_REGISTERS_OFFSET+0x0000004C,0x00000200
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_8  IPU_REGISTERS_OFFSET+0x0000004C,0x00000100
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_5  IPU_REGISTERS_OFFSET+0x0000004C,0x00000020
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_3  IPU_REGISTERS_OFFSET+0x0000004C,0x00000008
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_2  IPU_REGISTERS_OFFSET+0x0000004C,0x00000004
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_1  IPU_REGISTERS_OFFSET+0x0000004C,0x00000002
+#define IPU_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_0  IPU_REGISTERS_OFFSET+0x0000004C,0x00000001
+
+#define IPU_IPU_INT_CTRL_6__ADDR                IPU_REGISTERS_OFFSET+0x00000050
+#define IPU_IPU_INT_CTRL_6__EMPTY               IPU_REGISTERS_OFFSET+0x00000050,0x00000000
+#define IPU_IPU_INT_CTRL_6__FULL                IPU_REGISTERS_OFFSET+0x00000050,0xffffffff
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_52 IPU_REGISTERS_OFFSET+0x00000050,0x00100000
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_51 IPU_REGISTERS_OFFSET+0x00000050,0x00080000
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_50 IPU_REGISTERS_OFFSET+0x00000050,0x00040000
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_49 IPU_REGISTERS_OFFSET+0x00000050,0x00020000
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_48 IPU_REGISTERS_OFFSET+0x00000050,0x00010000
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_47 IPU_REGISTERS_OFFSET+0x00000050,0x00008000
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_46 IPU_REGISTERS_OFFSET+0x00000050,0x00004000
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_45 IPU_REGISTERS_OFFSET+0x00000050,0x00002000
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_44 IPU_REGISTERS_OFFSET+0x00000050,0x00001000
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_43 IPU_REGISTERS_OFFSET+0x00000050,0x00000800
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_42 IPU_REGISTERS_OFFSET+0x00000050,0x00000400
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_41 IPU_REGISTERS_OFFSET+0x00000050,0x00000200
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_40 IPU_REGISTERS_OFFSET+0x00000050,0x00000100
+#define IPU_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_33 IPU_REGISTERS_OFFSET+0x00000050,0x00000002
+
+#define IPU_IPU_INT_CTRL_7__ADDR            IPU_REGISTERS_OFFSET+0x00000054
+#define IPU_IPU_INT_CTRL_7__EMPTY           IPU_REGISTERS_OFFSET+0x00000054,0x00000000
+#define IPU_IPU_INT_CTRL_7__FULL            IPU_REGISTERS_OFFSET+0x00000054,0xffffffff
+#define IPU_IPU_INT_CTRL_7__IDMAC_EOS_EN_31 IPU_REGISTERS_OFFSET+0x00000054,0x80000000
+#define IPU_IPU_INT_CTRL_7__IDMAC_EOS_EN_29 IPU_REGISTERS_OFFSET+0x00000054,0x20000000
+#define IPU_IPU_INT_CTRL_7__IDMAC_EOS_EN_28 IPU_REGISTERS_OFFSET+0x00000054,0x10000000
+#define IPU_IPU_INT_CTRL_7__IDMAC_EOS_EN_27 IPU_REGISTERS_OFFSET+0x00000054,0x08000000
+#define IPU_IPU_INT_CTRL_7__IDMAC_EOS_EN_26 IPU_REGISTERS_OFFSET+0x00000054,0x04000000
+#define IPU_IPU_INT_CTRL_7__IDMAC_EOS_EN_25 IPU_REGISTERS_OFFSET+0x00000054,0x02000000
+#define IPU_IPU_INT_CTRL_7__IDMAC_EOS_EN_24 IPU_REGISTERS_OFFSET+0x00000054,0x01000000
+#define IPU_IPU_INT_CTRL_7__IDMAC_EOS_EN_23 IPU_REGISTERS_OFFSET+0x00000054,0x00800000
+#define IPU_IPU_INT_CTRL_7__IDMAC_EOS_EN_19 IPU_REGISTERS_OFFSET+0x00000054,0x00080000
+
+#define IPU_IPU_INT_CTRL_8__ADDR            IPU_REGISTERS_OFFSET+0x00000058
+#define IPU_IPU_INT_CTRL_8__EMPTY           IPU_REGISTERS_OFFSET+0x00000058,0x00000000
+#define IPU_IPU_INT_CTRL_8__FULL            IPU_REGISTERS_OFFSET+0x00000058,0xffffffff
+#define IPU_IPU_INT_CTRL_8__IDMAC_EOS_EN_52 IPU_REGISTERS_OFFSET+0x00000058,0x00100000
+#define IPU_IPU_INT_CTRL_8__IDMAC_EOS_EN_51 IPU_REGISTERS_OFFSET+0x00000058,0x00080000
+#define IPU_IPU_INT_CTRL_8__IDMAC_EOS_EN_44 IPU_REGISTERS_OFFSET+0x00000058,0x00001000
+#define IPU_IPU_INT_CTRL_8__IDMAC_EOS_EN_43 IPU_REGISTERS_OFFSET+0x00000058,0x00000800
+#define IPU_IPU_INT_CTRL_8__IDMAC_EOS_EN_42 IPU_REGISTERS_OFFSET+0x00000058,0x00000400
+#define IPU_IPU_INT_CTRL_8__IDMAC_EOS_EN_41 IPU_REGISTERS_OFFSET+0x00000058,0x00000200
+#define IPU_IPU_INT_CTRL_8__IDMAC_EOS_EN_33 IPU_REGISTERS_OFFSET+0x00000058,0x00000002
+
+#define IPU_IPU_INT_CTRL_9__ADDR                IPU_REGISTERS_OFFSET+0x0000005C
+#define IPU_IPU_INT_CTRL_9__EMPTY               IPU_REGISTERS_OFFSET+0x0000005C,0x00000000
+#define IPU_IPU_INT_CTRL_9__FULL                IPU_REGISTERS_OFFSET+0x0000005C,0xffffffff
+#define IPU_IPU_INT_CTRL_9__CSI1_PUPE_EN        IPU_REGISTERS_OFFSET+0x0000005C,0x80000000
+#define IPU_IPU_INT_CTRL_9__CSI0_PUPE_EN        IPU_REGISTERS_OFFSET+0x0000005C,0x40000000
+#define IPU_IPU_INT_CTRL_9__IC_VF_BUF_OVF_EN    IPU_REGISTERS_OFFSET+0x0000005C,0x10000000
+#define IPU_IPU_INT_CTRL_9__IC_ENC_BUF_OVF_EN   IPU_REGISTERS_OFFSET+0x0000005C,0x08000000
+#define IPU_IPU_INT_CTRL_9__IC_BAYER_BUF_OVF_EN IPU_REGISTERS_OFFSET+0x0000005C,0x04000000
+#define IPU_IPU_INT_CTRL_9__VDI_FIFO1_OVF_EN    IPU_REGISTERS_OFFSET+0x0000005C,0x00000001
+
+#define IPU_IPU_INT_CTRL_10__ADDR                      IPU_REGISTERS_OFFSET+0x00000060
+#define IPU_IPU_INT_CTRL_10__EMPTY                     IPU_REGISTERS_OFFSET+0x00000060,0x00000000
+#define IPU_IPU_INT_CTRL_10__FULL                      IPU_REGISTERS_OFFSET+0x00000060,0xffffffff
+#define IPU_IPU_INT_CTRL_10__AXIR_ERR_EN               IPU_REGISTERS_OFFSET+0x00000060,0x40000000
+#define IPU_IPU_INT_CTRL_10__AXIW_ERR_EN               IPU_REGISTERS_OFFSET+0x00000060,0x20000000
+#define IPU_IPU_INT_CTRL_10__NON_PRIVILEGED_ACC_ERR_EN IPU_REGISTERS_OFFSET+0x00000060,0x10000000
+#define IPU_IPU_INT_CTRL_10__IC_BAYER_FRM_LOST_ERR_EN  IPU_REGISTERS_OFFSET+0x00000060,0x04000000
+#define IPU_IPU_INT_CTRL_10__IC_ENC_FRM_LOST_ERR_EN    IPU_REGISTERS_OFFSET+0x00000060,0x02000000
+#define IPU_IPU_INT_CTRL_10__IC_VF_FRM_LOST_ERR_EN     IPU_REGISTERS_OFFSET+0x00000060,0x01000000
+#define IPU_IPU_INT_CTRL_10__DI1_TIME_OUT_ERR_EN       IPU_REGISTERS_OFFSET+0x00000060,0x00400000
+#define IPU_IPU_INT_CTRL_10__DI0_TIME_OUT_ERR_EN       IPU_REGISTERS_OFFSET+0x00000060,0x00200000
+#define IPU_IPU_INT_CTRL_10__DI1_SYNC_DISP_ERR_EN      IPU_REGISTERS_OFFSET+0x00000060,0x00100000
+#define IPU_IPU_INT_CTRL_10__DI0_SYNC_DISP_ERR_EN      IPU_REGISTERS_OFFSET+0x00000060,0x00080000
+#define IPU_IPU_INT_CTRL_10__DC_TEARING_ERR_6_EN       IPU_REGISTERS_OFFSET+0x00000060,0x00040000
+#define IPU_IPU_INT_CTRL_10__DC_TEARING_ERR_2_EN       IPU_REGISTERS_OFFSET+0x00000060,0x00020000
+#define IPU_IPU_INT_CTRL_10__DC_TEARING_ERR_1_EN       IPU_REGISTERS_OFFSET+0x00000060,0x00010000
+#define IPU_IPU_INT_CTRL_10__SMFC3_FRM_LOST_EN         IPU_REGISTERS_OFFSET+0x00000060,0x00000008
+#define IPU_IPU_INT_CTRL_10__SMFC2_FRM_LOST_EN         IPU_REGISTERS_OFFSET+0x00000060,0x00000004
+#define IPU_IPU_INT_CTRL_10__SMFC1_FRM_LOST_EN         IPU_REGISTERS_OFFSET+0x00000060,0x00000002
+#define IPU_IPU_INT_CTRL_10__SMFC0_FRM_LOST_EN         IPU_REGISTERS_OFFSET+0x00000060,0x00000001
+
+#define IPU_IPU_INT_CTRL_11__ADDR              IPU_REGISTERS_OFFSET+0x00000064
+#define IPU_IPU_INT_CTRL_11__EMPTY             IPU_REGISTERS_OFFSET+0x00000064,0x00000000
+#define IPU_IPU_INT_CTRL_11__FULL              IPU_REGISTERS_OFFSET+0x00000064,0xffffffff
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_26 IPU_REGISTERS_OFFSET+0x00000064,0x04000000
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_25 IPU_REGISTERS_OFFSET+0x00000064,0x02000000
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_22 IPU_REGISTERS_OFFSET+0x00000064,0x00400000
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_21 IPU_REGISTERS_OFFSET+0x00000064,0x00200000
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_20 IPU_REGISTERS_OFFSET+0x00000064,0x00100000
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_12 IPU_REGISTERS_OFFSET+0x00000064,0x00001000
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_11 IPU_REGISTERS_OFFSET+0x00000064,0x00000800
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_10 IPU_REGISTERS_OFFSET+0x00000064,0x00000400
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_9  IPU_REGISTERS_OFFSET+0x00000064,0x00000200
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_8  IPU_REGISTERS_OFFSET+0x00000064,0x00000100
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_5  IPU_REGISTERS_OFFSET+0x00000064,0x00000020
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_3  IPU_REGISTERS_OFFSET+0x00000064,0x00000008
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_2  IPU_REGISTERS_OFFSET+0x00000064,0x00000004
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_1  IPU_REGISTERS_OFFSET+0x00000064,0x00000002
+#define IPU_IPU_INT_CTRL_11__IDMAC_EOBND_EN_0  IPU_REGISTERS_OFFSET+0x00000064,0x00000001
+
+#define IPU_IPU_INT_CTRL_12__ADDR              IPU_REGISTERS_OFFSET+0x00000068
+#define IPU_IPU_INT_CTRL_12__EMPTY             IPU_REGISTERS_OFFSET+0x00000068,0x00000000
+#define IPU_IPU_INT_CTRL_12__FULL              IPU_REGISTERS_OFFSET+0x00000068,0xffffffff
+#define IPU_IPU_INT_CTRL_12__IDMAC_EOBND_EN_50 IPU_REGISTERS_OFFSET+0x00000068,0x00040000
+#define IPU_IPU_INT_CTRL_12__IDMAC_EOBND_EN_49 IPU_REGISTERS_OFFSET+0x00000068,0x00020000
+#define IPU_IPU_INT_CTRL_12__IDMAC_EOBND_EN_48 IPU_REGISTERS_OFFSET+0x00000068,0x00010000
+#define IPU_IPU_INT_CTRL_12__IDMAC_EOBND_EN_47 IPU_REGISTERS_OFFSET+0x00000068,0x00008000
+#define IPU_IPU_INT_CTRL_12__IDMAC_EOBND_EN_46 IPU_REGISTERS_OFFSET+0x00000068,0x00004000
+#define IPU_IPU_INT_CTRL_12__IDMAC_EOBND_EN_45 IPU_REGISTERS_OFFSET+0x00000068,0x00002000
+
+#define IPU_IPU_INT_CTRL_13__ADDR           IPU_REGISTERS_OFFSET+0x0000006C
+#define IPU_IPU_INT_CTRL_13__EMPTY          IPU_REGISTERS_OFFSET+0x0000006C,0x00000000
+#define IPU_IPU_INT_CTRL_13__FULL           IPU_REGISTERS_OFFSET+0x0000006C,0xffffffff
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_31 IPU_REGISTERS_OFFSET+0x0000006C,0x80000000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_29 IPU_REGISTERS_OFFSET+0x0000006C,0x20000000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_28 IPU_REGISTERS_OFFSET+0x0000006C,0x10000000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_27 IPU_REGISTERS_OFFSET+0x0000006C,0x08000000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_26 IPU_REGISTERS_OFFSET+0x0000006C,0x04000000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_25 IPU_REGISTERS_OFFSET+0x0000006C,0x02000000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_24 IPU_REGISTERS_OFFSET+0x0000006C,0x01000000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_23 IPU_REGISTERS_OFFSET+0x0000006C,0x00800000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_22 IPU_REGISTERS_OFFSET+0x0000006C,0x00400000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_21 IPU_REGISTERS_OFFSET+0x0000006C,0x00200000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_20 IPU_REGISTERS_OFFSET+0x0000006C,0x00100000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_19 IPU_REGISTERS_OFFSET+0x0000006C,0x00080000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_18 IPU_REGISTERS_OFFSET+0x0000006C,0x00040000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_17 IPU_REGISTERS_OFFSET+0x0000006C,0x00020000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_15 IPU_REGISTERS_OFFSET+0x0000006C,0x00008000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_14 IPU_REGISTERS_OFFSET+0x0000006C,0x00004000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_13 IPU_REGISTERS_OFFSET+0x0000006C,0x00002000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_12 IPU_REGISTERS_OFFSET+0x0000006C,0x00001000
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_11 IPU_REGISTERS_OFFSET+0x0000006C,0x00000800
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_10 IPU_REGISTERS_OFFSET+0x0000006C,0x00000400
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_9  IPU_REGISTERS_OFFSET+0x0000006C,0x00000200
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_8  IPU_REGISTERS_OFFSET+0x0000006C,0x00000100
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_5  IPU_REGISTERS_OFFSET+0x0000006C,0x00000020
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_3  IPU_REGISTERS_OFFSET+0x0000006C,0x00000008
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_2  IPU_REGISTERS_OFFSET+0x0000006C,0x00000004
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_1  IPU_REGISTERS_OFFSET+0x0000006C,0x00000002
+#define IPU_IPU_INT_CTRL_13__IDMAC_TH_EN_0  IPU_REGISTERS_OFFSET+0x0000006C,0x00000001
+
+#define IPU_IPU_INT_CTRL_14__ADDR           IPU_REGISTERS_OFFSET+0x00000070
+#define IPU_IPU_INT_CTRL_14__EMPTY          IPU_REGISTERS_OFFSET+0x00000070,0x00000000
+#define IPU_IPU_INT_CTRL_14__FULL           IPU_REGISTERS_OFFSET+0x00000070,0xffffffff
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_52 IPU_REGISTERS_OFFSET+0x00000070,0x00100000
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_51 IPU_REGISTERS_OFFSET+0x00000070,0x00080000
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_50 IPU_REGISTERS_OFFSET+0x00000070,0x00040000
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_49 IPU_REGISTERS_OFFSET+0x00000070,0x00020000
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_48 IPU_REGISTERS_OFFSET+0x00000070,0x00010000
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_47 IPU_REGISTERS_OFFSET+0x00000070,0x00008000
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_46 IPU_REGISTERS_OFFSET+0x00000070,0x00004000
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_45 IPU_REGISTERS_OFFSET+0x00000070,0x00002000
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_44 IPU_REGISTERS_OFFSET+0x00000070,0x00001000
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_43 IPU_REGISTERS_OFFSET+0x00000070,0x00000800
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_42 IPU_REGISTERS_OFFSET+0x00000070,0x00000400
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_41 IPU_REGISTERS_OFFSET+0x00000070,0x00000200
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_40 IPU_REGISTERS_OFFSET+0x00000070,0x00000100
+#define IPU_IPU_INT_CTRL_14__IDMAC_TH_EN_33 IPU_REGISTERS_OFFSET+0x00000070,0x00000002
+
+#define IPU_IPU_INT_CTRL_15__ADDR                   IPU_REGISTERS_OFFSET+0x00000074
+#define IPU_IPU_INT_CTRL_15__EMPTY                  IPU_REGISTERS_OFFSET+0x00000074,0x00000000
+#define IPU_IPU_INT_CTRL_15__FULL                   IPU_REGISTERS_OFFSET+0x00000074,0xffffffff
+#define IPU_IPU_INT_CTRL_15__DI1_CNT_EN_PRE_8_EN    IPU_REGISTERS_OFFSET+0x00000074,0x80000000
+#define IPU_IPU_INT_CTRL_15__DI1_CNT_EN_PRE_3_EN    IPU_REGISTERS_OFFSET+0x00000074,0x40000000
+#define IPU_IPU_INT_CTRL_15__DI1_DISP_CLK_EN_PRE_EN IPU_REGISTERS_OFFSET+0x00000074,0x20000000
+#define IPU_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_10_EN   IPU_REGISTERS_OFFSET+0x00000074,0x10000000
+#define IPU_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_9_EN    IPU_REGISTERS_OFFSET+0x00000074,0x08000000
+#define IPU_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_8_EN    IPU_REGISTERS_OFFSET+0x00000074,0x04000000
+#define IPU_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_7_EN    IPU_REGISTERS_OFFSET+0x00000074,0x02000000
+#define IPU_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_6_EN    IPU_REGISTERS_OFFSET+0x00000074,0x01000000
+#define IPU_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_5_EN    IPU_REGISTERS_OFFSET+0x00000074,0x00800000
+#define IPU_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_4_EN    IPU_REGISTERS_OFFSET+0x00000074,0x00400000
+#define IPU_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_3_EN    IPU_REGISTERS_OFFSET+0x00000074,0x00200000
+#define IPU_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_2_EN    IPU_REGISTERS_OFFSET+0x00000074,0x00100000
+#define IPU_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_1_EN    IPU_REGISTERS_OFFSET+0x00000074,0x00080000
+#define IPU_IPU_INT_CTRL_15__DI0_DISP_CLK_EN_PRE_EN IPU_REGISTERS_OFFSET+0x00000074,0x00040000
+#define IPU_IPU_INT_CTRL_15__DC_ASYNC_STOP_EN       IPU_REGISTERS_OFFSET+0x00000074,0x00020000
+#define IPU_IPU_INT_CTRL_15__DC_DP_START_EN         IPU_REGISTERS_OFFSET+0x00000074,0x00010000
+#define IPU_IPU_INT_CTRL_15__DI_VSYNC_PRE_1_EN      IPU_REGISTERS_OFFSET+0x00000074,0x00008000
+#define IPU_IPU_INT_CTRL_15__DI_VSYNC_PRE_0_EN      IPU_REGISTERS_OFFSET+0x00000074,0x00004000
+#define IPU_IPU_INT_CTRL_15__DC_FC_6_EN             IPU_REGISTERS_OFFSET+0x00000074,0x00002000
+#define IPU_IPU_INT_CTRL_15__DC_FC_4_EN             IPU_REGISTERS_OFFSET+0x00000074,0x00001000
+#define IPU_IPU_INT_CTRL_15__DC_FC_3_EN             IPU_REGISTERS_OFFSET+0x00000074,0x00000800
+#define IPU_IPU_INT_CTRL_15__DC_FC_2_EN             IPU_REGISTERS_OFFSET+0x00000074,0x00000400
+#define IPU_IPU_INT_CTRL_15__DC_FC_1_EN             IPU_REGISTERS_OFFSET+0x00000074,0x00000200
+#define IPU_IPU_INT_CTRL_15__DC_FC_0_EN             IPU_REGISTERS_OFFSET+0x00000074,0x00000100
+#define IPU_IPU_INT_CTRL_15__DP_ASF_BRAKE_EN        IPU_REGISTERS_OFFSET+0x00000074,0x00000080
+#define IPU_IPU_INT_CTRL_15__DP_SF_BRAKE_EN         IPU_REGISTERS_OFFSET+0x00000074,0x00000040
+#define IPU_IPU_INT_CTRL_15__DP_ASF_END_EN          IPU_REGISTERS_OFFSET+0x00000074,0x00000020
+#define IPU_IPU_INT_CTRL_15__DP_ASF_START_EN        IPU_REGISTERS_OFFSET+0x00000074,0x00000010
+#define IPU_IPU_INT_CTRL_15__DP_SF_END_EN           IPU_REGISTERS_OFFSET+0x00000074,0x00000008
+#define IPU_IPU_INT_CTRL_15__DP_SF_START_EN         IPU_REGISTERS_OFFSET+0x00000074,0x00000004
+#define IPU_IPU_INT_CTRL_15__IPU_SNOOPING2_INT_EN   IPU_REGISTERS_OFFSET+0x00000074,0x00000002
+#define IPU_IPU_INT_CTRL_15__IPU_SNOOPING1_INT_EN   IPU_REGISTERS_OFFSET+0x00000074,0x00000001
+
+#define IPU_IPU_SDMA_EVENT_1__ADDR                 IPU_REGISTERS_OFFSET+0x00000078
+#define IPU_IPU_SDMA_EVENT_1__EMPTY                IPU_REGISTERS_OFFSET+0x00000078,0x00000000
+#define IPU_IPU_SDMA_EVENT_1__FULL                 IPU_REGISTERS_OFFSET+0x00000078,0xffffffff
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_31 IPU_REGISTERS_OFFSET+0x00000078,0x80000000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_29 IPU_REGISTERS_OFFSET+0x00000078,0x20000000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_28 IPU_REGISTERS_OFFSET+0x00000078,0x10000000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_27 IPU_REGISTERS_OFFSET+0x00000078,0x08000000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_26 IPU_REGISTERS_OFFSET+0x00000078,0x04000000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_25 IPU_REGISTERS_OFFSET+0x00000078,0x02000000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_24 IPU_REGISTERS_OFFSET+0x00000078,0x01000000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_23 IPU_REGISTERS_OFFSET+0x00000078,0x00800000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_22 IPU_REGISTERS_OFFSET+0x00000078,0x00400000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_21 IPU_REGISTERS_OFFSET+0x00000078,0x00200000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_20 IPU_REGISTERS_OFFSET+0x00000078,0x00100000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_19 IPU_REGISTERS_OFFSET+0x00000078,0x00080000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_18 IPU_REGISTERS_OFFSET+0x00000078,0x00040000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_17 IPU_REGISTERS_OFFSET+0x00000078,0x00020000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_15 IPU_REGISTERS_OFFSET+0x00000078,0x00008000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_14 IPU_REGISTERS_OFFSET+0x00000078,0x00004000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_13 IPU_REGISTERS_OFFSET+0x00000078,0x00002000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_12 IPU_REGISTERS_OFFSET+0x00000078,0x00001000
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_11 IPU_REGISTERS_OFFSET+0x00000078,0x00000800
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_10 IPU_REGISTERS_OFFSET+0x00000078,0x00000400
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_9  IPU_REGISTERS_OFFSET+0x00000078,0x00000200
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_8  IPU_REGISTERS_OFFSET+0x00000078,0x00000100
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_5  IPU_REGISTERS_OFFSET+0x00000078,0x00000020
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_3  IPU_REGISTERS_OFFSET+0x00000078,0x00000008
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_2  IPU_REGISTERS_OFFSET+0x00000078,0x00000004
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_1  IPU_REGISTERS_OFFSET+0x00000078,0x00000002
+#define IPU_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_0  IPU_REGISTERS_OFFSET+0x00000078,0x00000001
+
+#define IPU_IPU_SDMA_EVENT_2__ADDR                 IPU_REGISTERS_OFFSET+0x0000007C
+#define IPU_IPU_SDMA_EVENT_2__EMPTY                IPU_REGISTERS_OFFSET+0x0000007C,0x00000000
+#define IPU_IPU_SDMA_EVENT_2__FULL                 IPU_REGISTERS_OFFSET+0x0000007C,0xffffffff
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_52 IPU_REGISTERS_OFFSET+0x0000007C,0x00100000
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_51 IPU_REGISTERS_OFFSET+0x0000007C,0x00080000
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_50 IPU_REGISTERS_OFFSET+0x0000007C,0x00040000
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_49 IPU_REGISTERS_OFFSET+0x0000007C,0x00020000
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_48 IPU_REGISTERS_OFFSET+0x0000007C,0x00010000
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_47 IPU_REGISTERS_OFFSET+0x0000007C,0x00008000
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_46 IPU_REGISTERS_OFFSET+0x0000007C,0x00004000
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_45 IPU_REGISTERS_OFFSET+0x0000007C,0x00002000
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_44 IPU_REGISTERS_OFFSET+0x0000007C,0x00001000
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_43 IPU_REGISTERS_OFFSET+0x0000007C,0x00000800
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_42 IPU_REGISTERS_OFFSET+0x0000007C,0x00000400
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_41 IPU_REGISTERS_OFFSET+0x0000007C,0x00000200
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_40 IPU_REGISTERS_OFFSET+0x0000007C,0x00000100
+#define IPU_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_33 IPU_REGISTERS_OFFSET+0x0000007C,0x00000002
+
+#define IPU_IPU_SDMA_EVENT_3__ADDR                   IPU_REGISTERS_OFFSET+0x00000080
+#define IPU_IPU_SDMA_EVENT_3__EMPTY                  IPU_REGISTERS_OFFSET+0x00000080,0x00000000
+#define IPU_IPU_SDMA_EVENT_3__FULL                   IPU_REGISTERS_OFFSET+0x00000080,0xffffffff
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_31 IPU_REGISTERS_OFFSET+0x00000080,0x80000000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_29 IPU_REGISTERS_OFFSET+0x00000080,0x20000000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_28 IPU_REGISTERS_OFFSET+0x00000080,0x10000000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_27 IPU_REGISTERS_OFFSET+0x00000080,0x08000000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_26 IPU_REGISTERS_OFFSET+0x00000080,0x04000000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_25 IPU_REGISTERS_OFFSET+0x00000080,0x02000000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_24 IPU_REGISTERS_OFFSET+0x00000080,0x01000000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_23 IPU_REGISTERS_OFFSET+0x00000080,0x00800000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_22 IPU_REGISTERS_OFFSET+0x00000080,0x00400000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_21 IPU_REGISTERS_OFFSET+0x00000080,0x00200000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_20 IPU_REGISTERS_OFFSET+0x00000080,0x00100000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_19 IPU_REGISTERS_OFFSET+0x00000080,0x00080000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_18 IPU_REGISTERS_OFFSET+0x00000080,0x00040000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_17 IPU_REGISTERS_OFFSET+0x00000080,0x00020000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_15 IPU_REGISTERS_OFFSET+0x00000080,0x00008000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_14 IPU_REGISTERS_OFFSET+0x00000080,0x00004000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_13 IPU_REGISTERS_OFFSET+0x00000080,0x00002000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_12 IPU_REGISTERS_OFFSET+0x00000080,0x00001000
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_11 IPU_REGISTERS_OFFSET+0x00000080,0x00000800
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_10 IPU_REGISTERS_OFFSET+0x00000080,0x00000400
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_9  IPU_REGISTERS_OFFSET+0x00000080,0x00000200
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_8  IPU_REGISTERS_OFFSET+0x00000080,0x00000100
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_5  IPU_REGISTERS_OFFSET+0x00000080,0x00000020
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_3  IPU_REGISTERS_OFFSET+0x00000080,0x00000008
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_2  IPU_REGISTERS_OFFSET+0x00000080,0x00000004
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_1  IPU_REGISTERS_OFFSET+0x00000080,0x00000002
+#define IPU_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_0  IPU_REGISTERS_OFFSET+0x00000080,0x00000001
+
+#define IPU_IPU_SDMA_EVENT_4__ADDR                   IPU_REGISTERS_OFFSET+0x00000084
+#define IPU_IPU_SDMA_EVENT_4__EMPTY                  IPU_REGISTERS_OFFSET+0x00000084,0x00000000
+#define IPU_IPU_SDMA_EVENT_4__FULL                   IPU_REGISTERS_OFFSET+0x00000084,0xffffffff
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_52 IPU_REGISTERS_OFFSET+0x00000084,0x00100000
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_51 IPU_REGISTERS_OFFSET+0x00000084,0x00080000
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_50 IPU_REGISTERS_OFFSET+0x00000084,0x00040000
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_49 IPU_REGISTERS_OFFSET+0x00000084,0x00020000
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_48 IPU_REGISTERS_OFFSET+0x00000084,0x00010000
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_47 IPU_REGISTERS_OFFSET+0x00000084,0x00008000
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_46 IPU_REGISTERS_OFFSET+0x00000084,0x00004000
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_45 IPU_REGISTERS_OFFSET+0x00000084,0x00002000
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_44 IPU_REGISTERS_OFFSET+0x00000084,0x00001000
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_43 IPU_REGISTERS_OFFSET+0x00000084,0x00000800
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_42 IPU_REGISTERS_OFFSET+0x00000084,0x00000400
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_41 IPU_REGISTERS_OFFSET+0x00000084,0x00000200
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_40 IPU_REGISTERS_OFFSET+0x00000084,0x00000100
+#define IPU_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_33 IPU_REGISTERS_OFFSET+0x00000084,0x00000002
+
+#define IPU_IPU_SDMA_EVENT_7__ADDR                 IPU_REGISTERS_OFFSET+0x00000088
+#define IPU_IPU_SDMA_EVENT_7__EMPTY                IPU_REGISTERS_OFFSET+0x00000088,0x00000000
+#define IPU_IPU_SDMA_EVENT_7__FULL                 IPU_REGISTERS_OFFSET+0x00000088,0xffffffff
+#define IPU_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_31 IPU_REGISTERS_OFFSET+0x00000088,0x80000000
+#define IPU_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_29 IPU_REGISTERS_OFFSET+0x00000088,0x20000000
+#define IPU_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_28 IPU_REGISTERS_OFFSET+0x00000088,0x10000000
+#define IPU_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_27 IPU_REGISTERS_OFFSET+0x00000088,0x08000000
+#define IPU_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_26 IPU_REGISTERS_OFFSET+0x00000088,0x04000000
+#define IPU_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_25 IPU_REGISTERS_OFFSET+0x00000088,0x02000000
+#define IPU_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_24 IPU_REGISTERS_OFFSET+0x00000088,0x01000000
+#define IPU_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_23 IPU_REGISTERS_OFFSET+0x00000088,0x00800000
+#define IPU_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_19 IPU_REGISTERS_OFFSET+0x00000088,0x00080000
+
+#define IPU_IPU_SDMA_EVENT_8__ADDR                 IPU_REGISTERS_OFFSET+0x0000008C
+#define IPU_IPU_SDMA_EVENT_8__EMPTY                IPU_REGISTERS_OFFSET+0x0000008C,0x00000000
+#define IPU_IPU_SDMA_EVENT_8__FULL                 IPU_REGISTERS_OFFSET+0x0000008C,0xffffffff
+#define IPU_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_52 IPU_REGISTERS_OFFSET+0x0000008C,0x00100000
+#define IPU_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_51 IPU_REGISTERS_OFFSET+0x0000008C,0x00080000
+#define IPU_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_44 IPU_REGISTERS_OFFSET+0x0000008C,0x00001000
+#define IPU_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_43 IPU_REGISTERS_OFFSET+0x0000008C,0x00000800
+#define IPU_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_42 IPU_REGISTERS_OFFSET+0x0000008C,0x00000400
+#define IPU_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_41 IPU_REGISTERS_OFFSET+0x0000008C,0x00000200
+#define IPU_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_32 IPU_REGISTERS_OFFSET+0x0000008C,0x00000002
+
+#define IPU_IPU_SDMA_EVENT_11__ADDR                   IPU_REGISTERS_OFFSET+0x00000090
+#define IPU_IPU_SDMA_EVENT_11__EMPTY                  IPU_REGISTERS_OFFSET+0x00000090,0x00000000
+#define IPU_IPU_SDMA_EVENT_11__FULL                   IPU_REGISTERS_OFFSET+0x00000090,0xffffffff
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_26 IPU_REGISTERS_OFFSET+0x00000090,0x04000000
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_25 IPU_REGISTERS_OFFSET+0x00000090,0x02000000
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_22 IPU_REGISTERS_OFFSET+0x00000090,0x00400000
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_21 IPU_REGISTERS_OFFSET+0x00000090,0x00200000
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_20 IPU_REGISTERS_OFFSET+0x00000090,0x00100000
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_12 IPU_REGISTERS_OFFSET+0x00000090,0x00001000
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_11 IPU_REGISTERS_OFFSET+0x00000090,0x00000800
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_10 IPU_REGISTERS_OFFSET+0x00000090,0x00000400
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_9  IPU_REGISTERS_OFFSET+0x00000090,0x00000200
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_8  IPU_REGISTERS_OFFSET+0x00000090,0x00000100
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_5  IPU_REGISTERS_OFFSET+0x00000090,0x00000020
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_3  IPU_REGISTERS_OFFSET+0x00000090,0x00000008
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_2  IPU_REGISTERS_OFFSET+0x00000090,0x00000004
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_1  IPU_REGISTERS_OFFSET+0x00000090,0x00000002
+#define IPU_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_0  IPU_REGISTERS_OFFSET+0x00000090,0x00000001
+
+#define IPU_IPU_SDMA_EVENT_12__ADDR                   IPU_REGISTERS_OFFSET+0x00000094
+#define IPU_IPU_SDMA_EVENT_12__EMPTY                  IPU_REGISTERS_OFFSET+0x00000094,0x00000000
+#define IPU_IPU_SDMA_EVENT_12__FULL                   IPU_REGISTERS_OFFSET+0x00000094,0xffffffff
+#define IPU_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_50 IPU_REGISTERS_OFFSET+0x00000094,0x00040000
+#define IPU_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_49 IPU_REGISTERS_OFFSET+0x00000094,0x00020000
+#define IPU_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_48 IPU_REGISTERS_OFFSET+0x00000094,0x00010000
+#define IPU_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_47 IPU_REGISTERS_OFFSET+0x00000094,0x00008000
+#define IPU_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_46 IPU_REGISTERS_OFFSET+0x00000094,0x00004000
+#define IPU_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_45 IPU_REGISTERS_OFFSET+0x00000094,0x00002000
+
+#define IPU_IPU_SDMA_EVENT_13__ADDR                IPU_REGISTERS_OFFSET+0x00000098
+#define IPU_IPU_SDMA_EVENT_13__EMPTY               IPU_REGISTERS_OFFSET+0x00000098,0x00000000
+#define IPU_IPU_SDMA_EVENT_13__FULL                IPU_REGISTERS_OFFSET+0x00000098,0xffffffff
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_31 IPU_REGISTERS_OFFSET+0x00000098,0x80000000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_29 IPU_REGISTERS_OFFSET+0x00000098,0x20000000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_28 IPU_REGISTERS_OFFSET+0x00000098,0x10000000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_27 IPU_REGISTERS_OFFSET+0x00000098,0x08000000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_26 IPU_REGISTERS_OFFSET+0x00000098,0x04000000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_25 IPU_REGISTERS_OFFSET+0x00000098,0x02000000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_24 IPU_REGISTERS_OFFSET+0x00000098,0x01000000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_23 IPU_REGISTERS_OFFSET+0x00000098,0x00800000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_22 IPU_REGISTERS_OFFSET+0x00000098,0x00400000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_21 IPU_REGISTERS_OFFSET+0x00000098,0x00200000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_20 IPU_REGISTERS_OFFSET+0x00000098,0x00100000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_19 IPU_REGISTERS_OFFSET+0x00000098,0x00080000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_18 IPU_REGISTERS_OFFSET+0x00000098,0x00040000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_17 IPU_REGISTERS_OFFSET+0x00000098,0x00020000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_15 IPU_REGISTERS_OFFSET+0x00000098,0x00008000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_14 IPU_REGISTERS_OFFSET+0x00000098,0x00004000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_13 IPU_REGISTERS_OFFSET+0x00000098,0x00002000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_12 IPU_REGISTERS_OFFSET+0x00000098,0x00001000
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_11 IPU_REGISTERS_OFFSET+0x00000098,0x00000800
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_10 IPU_REGISTERS_OFFSET+0x00000098,0x00000400
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_9  IPU_REGISTERS_OFFSET+0x00000098,0x00000200
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_8  IPU_REGISTERS_OFFSET+0x00000098,0x00000100
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_5  IPU_REGISTERS_OFFSET+0x00000098,0x00000020
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_3  IPU_REGISTERS_OFFSET+0x00000098,0x00000008
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_2  IPU_REGISTERS_OFFSET+0x00000098,0x00000004
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_1  IPU_REGISTERS_OFFSET+0x00000098,0x00000002
+#define IPU_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_0  IPU_REGISTERS_OFFSET+0x00000098,0x00000001
+
+#define IPU_IPU_SDMA_EVENT_14__ADDR                IPU_REGISTERS_OFFSET+0x0000009C
+#define IPU_IPU_SDMA_EVENT_14__EMPTY               IPU_REGISTERS_OFFSET+0x0000009C,0x00000000
+#define IPU_IPU_SDMA_EVENT_14__FULL                IPU_REGISTERS_OFFSET+0x0000009C,0xffffffff
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_52 IPU_REGISTERS_OFFSET+0x0000009C,0x00100000
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_51 IPU_REGISTERS_OFFSET+0x0000009C,0x00080000
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_50 IPU_REGISTERS_OFFSET+0x0000009C,0x00040000
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_49 IPU_REGISTERS_OFFSET+0x0000009C,0x00020000
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_48 IPU_REGISTERS_OFFSET+0x0000009C,0x00010000
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_47 IPU_REGISTERS_OFFSET+0x0000009C,0x00008000
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_46 IPU_REGISTERS_OFFSET+0x0000009C,0x00004000
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_45 IPU_REGISTERS_OFFSET+0x0000009C,0x00002000
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_44 IPU_REGISTERS_OFFSET+0x0000009C,0x00001000
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_43 IPU_REGISTERS_OFFSET+0x0000009C,0x00000800
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_42 IPU_REGISTERS_OFFSET+0x0000009C,0x00000400
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_41 IPU_REGISTERS_OFFSET+0x0000009C,0x00000200
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_40 IPU_REGISTERS_OFFSET+0x0000009C,0x00000100
+#define IPU_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_33 IPU_REGISTERS_OFFSET+0x0000009C,0x00000002
+
+#define IPU_IPU_SRM_PRI1__ADDR          IPU_REGISTERS_OFFSET+0x000000A0
+#define IPU_IPU_SRM_PRI1__EMPTY         IPU_REGISTERS_OFFSET+0x000000A0,0x00000000
+#define IPU_IPU_SRM_PRI1__FULL          IPU_REGISTERS_OFFSET+0x000000A0,0xffffffff
+#define IPU_IPU_SRM_PRI1__CSI0_SRM_MODE IPU_REGISTERS_OFFSET+0x000000A0,0x00001800
+#define IPU_IPU_SRM_PRI1__CSI0_SRM_PRI  IPU_REGISTERS_OFFSET+0x000000A0,0x00000700
+#define IPU_IPU_SRM_PRI1__CSI1_SRM_MODE IPU_REGISTERS_OFFSET+0x000000A0,0x00000018
+#define IPU_IPU_SRM_PRI1__CSI1_SRM_PRI  IPU_REGISTERS_OFFSET+0x000000A0,0x00000007
+
+#define IPU_IPU_SRM_PRI2__ADDR           IPU_REGISTERS_OFFSET+0x000000A4
+#define IPU_IPU_SRM_PRI2__EMPTY          IPU_REGISTERS_OFFSET+0x000000A4,0x00000000
+#define IPU_IPU_SRM_PRI2__FULL           IPU_REGISTERS_OFFSET+0x000000A4,0xffffffff
+#define IPU_IPU_SRM_PRI2__DI1_SRM_MODE   IPU_REGISTERS_OFFSET+0x000000A4,0x18000000
+#define IPU_IPU_SRM_PRI2__DI1_SRM_PRI    IPU_REGISTERS_OFFSET+0x000000A4,0x07000000
+#define IPU_IPU_SRM_PRI2__DI0_SRM_MODE   IPU_REGISTERS_OFFSET+0x000000A4,0x00180000
+#define IPU_IPU_SRM_PRI2__DI0_SRM_PRI    IPU_REGISTERS_OFFSET+0x000000A4,0x00070000
+#define IPU_IPU_SRM_PRI2__DC_6_SRM_MODE  IPU_REGISTERS_OFFSET+0x000000A4,0x0000C000
+#define IPU_IPU_SRM_PRI2__DC_2_SRM_MODE  IPU_REGISTERS_OFFSET+0x000000A4,0x00003000
+#define IPU_IPU_SRM_PRI2__DC_SRM_PRI     IPU_REGISTERS_OFFSET+0x000000A4,0x00000E00
+#define IPU_IPU_SRM_PRI2__DP_A1_SRM_MODE IPU_REGISTERS_OFFSET+0x000000A4,0x00000180
+#define IPU_IPU_SRM_PRI2__DP_A0_SRM_MODE IPU_REGISTERS_OFFSET+0x000000A4,0x00000060
+#define IPU_IPU_SRM_PRI2__DP_S_SRM_MODE  IPU_REGISTERS_OFFSET+0x000000A4,0x00000018
+#define IPU_IPU_SRM_PRI2__DP_SRM_PRI     IPU_REGISTERS_OFFSET+0x000000A4,0x00000007
+
+#define IPU_IPU_FS_PROC_FLOW1__ADDR               IPU_REGISTERS_OFFSET+0x000000A8
+#define IPU_IPU_FS_PROC_FLOW1__EMPTY              IPU_REGISTERS_OFFSET+0x000000A8,0x00000000
+#define IPU_IPU_FS_PROC_FLOW1__FULL               IPU_REGISTERS_OFFSET+0x000000A8,0xffffffff
+#define IPU_IPU_FS_PROC_FLOW1__VF_IN_VALID        IPU_REGISTERS_OFFSET+0x000000A8,0x80000000
+#define IPU_IPU_FS_PROC_FLOW1__ENC_IN_VALID       IPU_REGISTERS_OFFSET+0x000000A8,0x40000000
+#define IPU_IPU_FS_PROC_FLOW1__VDI_SRC_SEL        IPU_REGISTERS_OFFSET+0x000000A8,0x30000000
+#define IPU_IPU_FS_PROC_FLOW1__PRP_SRC_SEL        IPU_REGISTERS_OFFSET+0x000000A8,0x0F000000
+#define IPU_IPU_FS_PROC_FLOW1__VDI3_SRC_SEL       IPU_REGISTERS_OFFSET+0x000000A8,0x00C00000
+#define IPU_IPU_FS_PROC_FLOW1__VDI1_SRC_SEL       IPU_REGISTERS_OFFSET+0x000000A8,0x00300000
+#define IPU_IPU_FS_PROC_FLOW1__PP_ROT_SRC_SEL     IPU_REGISTERS_OFFSET+0x000000A8,0x000F0000
+#define IPU_IPU_FS_PROC_FLOW1__PP_SRC_SEL         IPU_REGISTERS_OFFSET+0x000000A8,0x0000F000
+#define IPU_IPU_FS_PROC_FLOW1__PRPVF_ROT_SRC_SEL  IPU_REGISTERS_OFFSET+0x000000A8,0x00000F00
+#define IPU_IPU_FS_PROC_FLOW1__PRPENC_ROT_SRC_SEL IPU_REGISTERS_OFFSET+0x000000A8,0x0000000F
+
+#define IPU_IPU_FS_PROC_FLOW2__ADDR                IPU_REGISTERS_OFFSET+0x000000AC
+#define IPU_IPU_FS_PROC_FLOW2__EMPTY               IPU_REGISTERS_OFFSET+0x000000AC,0x00000000
+#define IPU_IPU_FS_PROC_FLOW2__FULL                IPU_REGISTERS_OFFSET+0x000000AC,0xffffffff
+#define IPU_IPU_FS_PROC_FLOW2__PRP_DEST_SEL        IPU_REGISTERS_OFFSET+0x000000AC,0x0F000000
+#define IPU_IPU_FS_PROC_FLOW2__PRPENC_ROT_DEST_SEL IPU_REGISTERS_OFFSET+0x000000AC,0x00F00000
+#define IPU_IPU_FS_PROC_FLOW2__PP_ROT_DEST_SEL     IPU_REGISTERS_OFFSET+0x000000AC,0x000F0000
+#define IPU_IPU_FS_PROC_FLOW2__PP_DEST_SEL         IPU_REGISTERS_OFFSET+0x000000AC,0x0000F000
+#define IPU_IPU_FS_PROC_FLOW2__PRPVF_ROT_DEST_SEL  IPU_REGISTERS_OFFSET+0x000000AC,0x00000F00
+#define IPU_IPU_FS_PROC_FLOW2__PRPVF_DEST_SEL      IPU_REGISTERS_OFFSET+0x000000AC,0x000000F0
+#define IPU_IPU_FS_PROC_FLOW2__PRP_ENC_DEST_SEL    IPU_REGISTERS_OFFSET+0x000000AC,0x0000000F
+
+#define IPU_IPU_FS_PROC_FLOW3__ADDR              IPU_REGISTERS_OFFSET+0x000000B0
+#define IPU_IPU_FS_PROC_FLOW3__EMPTY             IPU_REGISTERS_OFFSET+0x000000B0,0x00000000
+#define IPU_IPU_FS_PROC_FLOW3__FULL              IPU_REGISTERS_OFFSET+0x000000B0,0xffffffff
+#define IPU_IPU_FS_PROC_FLOW3__VPU_DEST_SEL      IPU_REGISTERS_OFFSET+0x000000B0,0x03000000
+#define IPU_IPU_FS_PROC_FLOW3__EXT_SRC2_DEST_SEL IPU_REGISTERS_OFFSET+0x000000B0,0x00C00000
+#define IPU_IPU_FS_PROC_FLOW3__EXT_SRC1_DEST_SEL IPU_REGISTERS_OFFSET+0x000000B0,0x00300000
+#define IPU_IPU_FS_PROC_FLOW3__VDOA_DEST_SEL     IPU_REGISTERS_OFFSET+0x000000B0,0x00030000
+#define IPU_IPU_FS_PROC_FLOW3__SMFC3_DEST_SEL    IPU_REGISTERS_OFFSET+0x000000B0,0x00003800
+#define IPU_IPU_FS_PROC_FLOW3__SMFC2_DEST_SEL    IPU_REGISTERS_OFFSET+0x000000B0,0x00000780
+#define IPU_IPU_FS_PROC_FLOW3__SMFC1_DEST_SEL    IPU_REGISTERS_OFFSET+0x000000B0,0x00000070
+#define IPU_IPU_FS_PROC_FLOW3__SMFC0_DEST_SEL    IPU_REGISTERS_OFFSET+0x000000B0,0x0000000F
+
+#define IPU_IPU_FS_DISP_FLOW1__ADDR              IPU_REGISTERS_OFFSET+0x000000B4
+#define IPU_IPU_FS_DISP_FLOW1__EMPTY             IPU_REGISTERS_OFFSET+0x000000B4,0x00000000
+#define IPU_IPU_FS_DISP_FLOW1__FULL              IPU_REGISTERS_OFFSET+0x000000B4,0xffffffff
+#define IPU_IPU_FS_DISP_FLOW1__DC1_SRC_SEL       IPU_REGISTERS_OFFSET+0x000000B4,0x00F00000
+#define IPU_IPU_FS_DISP_FLOW1__DC2_SRC_SEL       IPU_REGISTERS_OFFSET+0x000000B4,0x000F0000
+#define IPU_IPU_FS_DISP_FLOW1__DP_ASYNC1_SRC_SEL IPU_REGISTERS_OFFSET+0x000000B4,0x0000F000
+#define IPU_IPU_FS_DISP_FLOW1__DP_ASYNC0_SRC_SEL IPU_REGISTERS_OFFSET+0x000000B4,0x00000F00
+#define IPU_IPU_FS_DISP_FLOW1__DP_SYNC1_SRC_SEL  IPU_REGISTERS_OFFSET+0x000000B4,0x000000F0
+#define IPU_IPU_FS_DISP_FLOW1__DP_SYNC0_SRC_SEL  IPU_REGISTERS_OFFSET+0x000000B4,0x0000000F
+
+#define IPU_IPU_FS_DISP_FLOW2__ADDR                  IPU_REGISTERS_OFFSET+0x000000B8
+#define IPU_IPU_FS_DISP_FLOW2__EMPTY                 IPU_REGISTERS_OFFSET+0x000000B8,0x00000000
+#define IPU_IPU_FS_DISP_FLOW2__FULL                  IPU_REGISTERS_OFFSET+0x000000B8,0xffffffff
+#define IPU_IPU_FS_DISP_FLOW2__DC2_ALT_SRC_SEL       IPU_REGISTERS_OFFSET+0x000000B8,0x000F0000
+#define IPU_IPU_FS_DISP_FLOW2__DP_ASYNC1_ALT_SRC_SEL IPU_REGISTERS_OFFSET+0x000000B8,0x000000F0
+#define IPU_IPU_FS_DISP_FLOW2__DP_ASYNC0_ALT_SRC_SEL IPU_REGISTERS_OFFSET+0x000000B8,0x0000000F
+
+#define IPU_IPU_SKIP__ADDR                      IPU_REGISTERS_OFFSET+0x000000BC
+#define IPU_IPU_SKIP__EMPTY                     IPU_REGISTERS_OFFSET+0x000000BC,0x00000000
+#define IPU_IPU_SKIP__FULL                      IPU_REGISTERS_OFFSET+0x000000BC,0xffffffff
+#define IPU_IPU_SKIP__VDI_SKIP                  IPU_REGISTERS_OFFSET+0x000000BC,0xFFF00000
+#define IPU_IPU_SKIP__VDI_MAX_RATIO_SKIP        IPU_REGISTERS_OFFSET+0x000000BC,0x000F0000
+#define IPU_IPU_SKIP__CSI_SKIP_IC_VF            IPU_REGISTERS_OFFSET+0x000000BC,0x0000F800
+#define IPU_IPU_SKIP__CSI_MAX_RATIO_SKIP_IC_VF  IPU_REGISTERS_OFFSET+0x000000BC,0x00000700
+#define IPU_IPU_SKIP__CSI_SKIP_IC_ENC           IPU_REGISTERS_OFFSET+0x000000BC,0x000000F8
+#define IPU_IPU_SKIP__CSI_MAX_RATIO_SKIP_IC_ENC IPU_REGISTERS_OFFSET+0x000000BC,0x00000007
+
+#define IPU_IPU_DISP_ALT_CONF__ADDR  IPU_REGISTERS_OFFSET+0x000000C0
+#define IPU_IPU_DISP_ALT_CONF__EMPTY IPU_REGISTERS_OFFSET+0x000000C0,0x00000000
+#define IPU_IPU_DISP_ALT_CONF__FULL  IPU_REGISTERS_OFFSET+0x000000C0,0xffffffff
+
+#define IPU_IPU_DISP_GEN__ADDR                 IPU_REGISTERS_OFFSET+0x000000C4
+#define IPU_IPU_DISP_GEN__EMPTY                IPU_REGISTERS_OFFSET+0x000000C4,0x00000000
+#define IPU_IPU_DISP_GEN__FULL                 IPU_REGISTERS_OFFSET+0x000000C4,0xffffffff
+#define IPU_IPU_DISP_GEN__DI1_COUNTER_RELEASE  IPU_REGISTERS_OFFSET+0x000000C4,0x02000000
+#define IPU_IPU_DISP_GEN__DI0_COUNTER_RELEASE  IPU_REGISTERS_OFFSET+0x000000C4,0x01000000
+#define IPU_IPU_DISP_GEN__CSI_VSYNC_DEST       IPU_REGISTERS_OFFSET+0x000000C4,0x00800000
+#define IPU_IPU_DISP_GEN__MCU_MAX_BURST_STOP   IPU_REGISTERS_OFFSET+0x000000C4,0x00400000
+#define IPU_IPU_DISP_GEN__MCU_T                IPU_REGISTERS_OFFSET+0x000000C4,0x003C0000
+#define IPU_IPU_DISP_GEN__MCU_DI_ID_9          IPU_REGISTERS_OFFSET+0x000000C4,0x00020000
+#define IPU_IPU_DISP_GEN__MCU_DI_ID_8          IPU_REGISTERS_OFFSET+0x000000C4,0x00010000
+#define IPU_IPU_DISP_GEN__DP_PIPE_CLR          IPU_REGISTERS_OFFSET+0x000000C4,0x00000040
+#define IPU_IPU_DISP_GEN__DP_FG_EN_ASYNC1      IPU_REGISTERS_OFFSET+0x000000C4,0x00000020
+#define IPU_IPU_DISP_GEN__DP_FG_EN_ASYNC0      IPU_REGISTERS_OFFSET+0x000000C4,0x00000010
+#define IPU_IPU_DISP_GEN__DP_ASYNC_DOUBLE_FLOW IPU_REGISTERS_OFFSET+0x000000C4,0x00000008
+#define IPU_IPU_DISP_GEN__DC2_DOUBLE_FLOW      IPU_REGISTERS_OFFSET+0x000000C4,0x00000004
+#define IPU_IPU_DISP_GEN__DI1_DUAL_MODE        IPU_REGISTERS_OFFSET+0x000000C4,0x00000002
+#define IPU_IPU_DISP_GEN__DI0_DUAL_MODE        IPU_REGISTERS_OFFSET+0x000000C4,0x00000001
+
+#define IPU_IPU_DISP_ALT1__ADDR                  IPU_REGISTERS_OFFSET+0x000000C8
+#define IPU_IPU_DISP_ALT1__EMPTY                 IPU_REGISTERS_OFFSET+0x000000C8,0x00000000
+#define IPU_IPU_DISP_ALT1__FULL                  IPU_REGISTERS_OFFSET+0x000000C8,0xffffffff
+#define IPU_IPU_DISP_ALT1__SEL_ALT_0             IPU_REGISTERS_OFFSET+0x000000C8,0xF0000000
+#define IPU_IPU_DISP_ALT1__STEP_REPEAT_ALT_0     IPU_REGISTERS_OFFSET+0x000000C8,0x0FFF0000
+#define IPU_IPU_DISP_ALT1__CNT_AUTO_RELOAD_ALT_0 IPU_REGISTERS_OFFSET+0x000000C8,0x00008000
+#define IPU_IPU_DISP_ALT1__CNT_CLR_SEL_ALT_0     IPU_REGISTERS_OFFSET+0x000000C8,0x00007000
+#define IPU_IPU_DISP_ALT1__RUN_VALUE_M1_ALT_0    IPU_REGISTERS_OFFSET+0x000000C8,0x00000FFF
+
+#define IPU_IPU_DISP_ALT2__ADDR                    IPU_REGISTERS_OFFSET+0x000000CC
+#define IPU_IPU_DISP_ALT2__EMPTY                   IPU_REGISTERS_OFFSET+0x000000CC,0x00000000
+#define IPU_IPU_DISP_ALT2__FULL                    IPU_REGISTERS_OFFSET+0x000000CC,0xffffffff
+#define IPU_IPU_DISP_ALT2__RUN_RESOLUTION_ALT_0    IPU_REGISTERS_OFFSET+0x000000CC,0x00070000
+#define IPU_IPU_DISP_ALT2__OFFSET_RESOLUTION_ALT_0 IPU_REGISTERS_OFFSET+0x000000CC,0x00007000
+#define IPU_IPU_DISP_ALT2__OFFSET_VALUE_ALT_0      IPU_REGISTERS_OFFSET+0x000000CC,0x00000FFF
+
+#define IPU_IPU_DISP_ALT3__ADDR                  IPU_REGISTERS_OFFSET+0x000000D0
+#define IPU_IPU_DISP_ALT3__EMPTY                 IPU_REGISTERS_OFFSET+0x000000D0,0x00000000
+#define IPU_IPU_DISP_ALT3__FULL                  IPU_REGISTERS_OFFSET+0x000000D0,0xffffffff
+#define IPU_IPU_DISP_ALT3__SEL_ALT_1             IPU_REGISTERS_OFFSET+0x000000D0,0xF0000000
+#define IPU_IPU_DISP_ALT3__STEP_REPEAT_ALT_1     IPU_REGISTERS_OFFSET+0x000000D0,0x0FFF0000
+#define IPU_IPU_DISP_ALT3__CNT_AUTO_RELOAD_ALT_1 IPU_REGISTERS_OFFSET+0x000000D0,0x00008000
+#define IPU_IPU_DISP_ALT3__CNT_CLR_SEL_ALT_1     IPU_REGISTERS_OFFSET+0x000000D0,0x00007000
+#define IPU_IPU_DISP_ALT3__RUN_VALUE_M1_ALT_1    IPU_REGISTERS_OFFSET+0x000000D0,0x00000FFF
+
+#define IPU_IPU_DISP_ALT4__ADDR                    IPU_REGISTERS_OFFSET+0x000000D4
+#define IPU_IPU_DISP_ALT4__EMPTY                   IPU_REGISTERS_OFFSET+0x000000D4,0x00000000
+#define IPU_IPU_DISP_ALT4__FULL                    IPU_REGISTERS_OFFSET+0x000000D4,0xffffffff
+#define IPU_IPU_DISP_ALT4__RUN_RESOLUTION_ALT_1    IPU_REGISTERS_OFFSET+0x000000D4,0x00070000
+#define IPU_IPU_DISP_ALT4__OFFSET_RESOLUTION_ALT_1 IPU_REGISTERS_OFFSET+0x000000D4,0x00007000
+#define IPU_IPU_DISP_ALT4__OFFSET_VALUE_ALT_1      IPU_REGISTERS_OFFSET+0x000000D4,0x00000FFF
+
+#define IPU_IPU_SNOOP__ADDR            IPU_REGISTERS_OFFSET+0x000000D8
+#define IPU_IPU_SNOOP__EMPTY           IPU_REGISTERS_OFFSET+0x000000D8,0x00000000
+#define IPU_IPU_SNOOP__FULL            IPU_REGISTERS_OFFSET+0x000000D8,0xffffffff
+#define IPU_IPU_SNOOP__SNOOP2_SYNC_BYP IPU_REGISTERS_OFFSET+0x000000D8,0x00010000
+#define IPU_IPU_SNOOP__AUTOREF_PER     IPU_REGISTERS_OFFSET+0x000000D8,0x000003FF
+
+#define IPU_IPU_MEM_RST__ADDR          IPU_REGISTERS_OFFSET+0x000000DC
+#define IPU_IPU_MEM_RST__EMPTY         IPU_REGISTERS_OFFSET+0x000000DC,0x00000000
+#define IPU_IPU_MEM_RST__FULL          IPU_REGISTERS_OFFSET+0x000000DC,0xffffffff
+#define IPU_IPU_MEM_RST__RST_MEM_START IPU_REGISTERS_OFFSET+0x000000DC,0x80000000
+#define IPU_IPU_MEM_RST__RST_MEM_EN    IPU_REGISTERS_OFFSET+0x000000DC,0x007FFFFF
+
+#define IPU_IPU_PM__ADDR                      IPU_REGISTERS_OFFSET+0x000000E0
+#define IPU_IPU_PM__EMPTY                     IPU_REGISTERS_OFFSET+0x000000E0,0x00000000
+#define IPU_IPU_PM__FULL                      IPU_REGISTERS_OFFSET+0x000000E0,0xffffffff
+#define IPU_IPU_PM__LPSR_MODE                 IPU_REGISTERS_OFFSET+0x000000E0,0x80000000
+#define IPU_IPU_PM__DI1_SRM_CLOCK_CHANGE_MODE IPU_REGISTERS_OFFSET+0x000000E0,0x40000000
+#define IPU_IPU_PM__DI1_CLK_PERIOD_1          IPU_REGISTERS_OFFSET+0x000000E0,0x3F800000
+#define IPU_IPU_PM__DI1_CLK_PERIOD_0          IPU_REGISTERS_OFFSET+0x000000E0,0x007F0000
+#define IPU_IPU_PM__CLOCK_MODE_STAT           IPU_REGISTERS_OFFSET+0x000000E0,0x00008000
+#define IPU_IPU_PM__DI0_SRM_CLOCK_CHANGE_MODE IPU_REGISTERS_OFFSET+0x000000E0,0x00004000
+#define IPU_IPU_PM__DI0_CLK_PERIOD_1          IPU_REGISTERS_OFFSET+0x000000E0,0x00003F80
+#define IPU_IPU_PM__DI0_CLK_PERIOD_0          IPU_REGISTERS_OFFSET+0x000000E0,0x0000007F
+
+#define IPU_IPU_GPR__ADDR                       IPU_REGISTERS_OFFSET+0x000000E4
+#define IPU_IPU_GPR__EMPTY                      IPU_REGISTERS_OFFSET+0x000000E4,0x00000000
+#define IPU_IPU_GPR__FULL                       IPU_REGISTERS_OFFSET+0x000000E4,0xffffffff
+#define IPU_IPU_GPR__IPU_CH_BUF1_RDY1_CLR       IPU_REGISTERS_OFFSET+0x000000E4,0x80000000
+#define IPU_IPU_GPR__IPU_CH_BUF1_RDY0_CLR       IPU_REGISTERS_OFFSET+0x000000E4,0x40000000
+#define IPU_IPU_GPR__IPU_CH_BUF0_RDY1_CLR       IPU_REGISTERS_OFFSET+0x000000E4,0x20000000
+#define IPU_IPU_GPR__IPU_CH_BUF0_RDY0_CLR       IPU_REGISTERS_OFFSET+0x000000E4,0x10000000
+#define IPU_IPU_GPR__IPU_ALT_CH_BUF1_RDY1_CLR   IPU_REGISTERS_OFFSET+0x000000E4,0x08000000
+#define IPU_IPU_GPR__IPU_ALT_CH_BUF1_RDY0_CLR   IPU_REGISTERS_OFFSET+0x000000E4,0x04000000
+#define IPU_IPU_GPR__IPU_ALT_CH_BUF0_RDY1_CLR   IPU_REGISTERS_OFFSET+0x000000E4,0x02000000
+#define IPU_IPU_GPR__IPU_ALT_CH_BUF0_RDY0_CLR   IPU_REGISTERS_OFFSET+0x000000E4,0x01000000
+#define IPU_IPU_GPR__IPU_DI1_CLK_CHANGE_ACK_DIS IPU_REGISTERS_OFFSET+0x000000E4,0x00800000
+#define IPU_IPU_GPR__IPU_DI0_CLK_CHANGE_ACK_DIS IPU_REGISTERS_OFFSET+0x000000E4,0x00400000
+#define IPU_IPU_GPR__IPU_CH_BUF2_RDY1_CLR       IPU_REGISTERS_OFFSET+0x000000E4,0x00200000
+#define IPU_IPU_GPR__IPU_CH_BUF2_RDY0_CLR       IPU_REGISTERS_OFFSET+0x000000E4,0x00100000
+#define IPU_IPU_GPR__IPU_GP19                   IPU_REGISTERS_OFFSET+0x000000E4,0x00080000
+#define IPU_IPU_GPR__IPU_GP18                   IPU_REGISTERS_OFFSET+0x000000E4,0x00040000
+#define IPU_IPU_GPR__IPU_GP17                   IPU_REGISTERS_OFFSET+0x000000E4,0x00020000
+#define IPU_IPU_GPR__IPU_GP16                   IPU_REGISTERS_OFFSET+0x000000E4,0x00010000
+#define IPU_IPU_GPR__IPU_GP15                   IPU_REGISTERS_OFFSET+0x000000E4,0x00008000
+#define IPU_IPU_GPR__IPU_GP14                   IPU_REGISTERS_OFFSET+0x000000E4,0x00004000
+#define IPU_IPU_GPR__IPU_GP13                   IPU_REGISTERS_OFFSET+0x000000E4,0x00002000
+#define IPU_IPU_GPR__IPU_GP12                   IPU_REGISTERS_OFFSET+0x000000E4,0x00001000
+#define IPU_IPU_GPR__IPU_GP11                   IPU_REGISTERS_OFFSET+0x000000E4,0x00000800
+#define IPU_IPU_GPR__IPU_GP10                   IPU_REGISTERS_OFFSET+0x000000E4,0x00000400
+#define IPU_IPU_GPR__IPU_GP9                    IPU_REGISTERS_OFFSET+0x000000E4,0x00000200
+#define IPU_IPU_GPR__IPU_GP8                    IPU_REGISTERS_OFFSET+0x000000E4,0x00000100
+#define IPU_IPU_GPR__IPU_GP7                    IPU_REGISTERS_OFFSET+0x000000E4,0x00000080
+#define IPU_IPU_GPR__IPU_GP6                    IPU_REGISTERS_OFFSET+0x000000E4,0x00000040
+#define IPU_IPU_GPR__IPU_GP5                    IPU_REGISTERS_OFFSET+0x000000E4,0x00000020
+#define IPU_IPU_GPR__IPU_GP4                    IPU_REGISTERS_OFFSET+0x000000E4,0x00000010
+#define IPU_IPU_GPR__IPU_GP3                    IPU_REGISTERS_OFFSET+0x000000E4,0x00000008
+#define IPU_IPU_GPR__IPU_GP2                    IPU_REGISTERS_OFFSET+0x000000E4,0x00000004
+#define IPU_IPU_GPR__IPU_GP1                    IPU_REGISTERS_OFFSET+0x000000E4,0x00000002
+#define IPU_IPU_GPR__IPU_GP0                    IPU_REGISTERS_OFFSET+0x000000E4,0x00000001
+
+#define IPU_IPU_CH_DB_MODE_SEL_0__ADDR                  IPU_REGISTERS_OFFSET+0x00000150
+#define IPU_IPU_CH_DB_MODE_SEL_0__EMPTY                 IPU_REGISTERS_OFFSET+0x00000150,0x00000000
+#define IPU_IPU_CH_DB_MODE_SEL_0__FULL                  IPU_REGISTERS_OFFSET+0x00000150,0xffffffff
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_31 IPU_REGISTERS_OFFSET+0x00000150,0x80000000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_29 IPU_REGISTERS_OFFSET+0x00000150,0x20000000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_28 IPU_REGISTERS_OFFSET+0x00000150,0x10000000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_27 IPU_REGISTERS_OFFSET+0x00000150,0x08000000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_26 IPU_REGISTERS_OFFSET+0x00000150,0x04000000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_25 IPU_REGISTERS_OFFSET+0x00000150,0x02000000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_24 IPU_REGISTERS_OFFSET+0x00000150,0x01000000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_23 IPU_REGISTERS_OFFSET+0x00000150,0x00800000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_22 IPU_REGISTERS_OFFSET+0x00000150,0x00400000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_21 IPU_REGISTERS_OFFSET+0x00000150,0x00200000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_20 IPU_REGISTERS_OFFSET+0x00000150,0x00100000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_19 IPU_REGISTERS_OFFSET+0x00000150,0x00080000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_18 IPU_REGISTERS_OFFSET+0x00000150,0x00040000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_17 IPU_REGISTERS_OFFSET+0x00000150,0x00020000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_15 IPU_REGISTERS_OFFSET+0x00000150,0x00008000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_14 IPU_REGISTERS_OFFSET+0x00000150,0x00004000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_13 IPU_REGISTERS_OFFSET+0x00000150,0x00002000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_12 IPU_REGISTERS_OFFSET+0x00000150,0x00001000
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_11 IPU_REGISTERS_OFFSET+0x00000150,0x00000800
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_10 IPU_REGISTERS_OFFSET+0x00000150,0x00000400
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_9  IPU_REGISTERS_OFFSET+0x00000150,0x00000200
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_8  IPU_REGISTERS_OFFSET+0x00000150,0x00000100
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_5  IPU_REGISTERS_OFFSET+0x00000150,0x00000020
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_3  IPU_REGISTERS_OFFSET+0x00000150,0x00000008
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_2  IPU_REGISTERS_OFFSET+0x00000150,0x00000004
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_1  IPU_REGISTERS_OFFSET+0x00000150,0x00000002
+#define IPU_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_0  IPU_REGISTERS_OFFSET+0x00000150,0x00000001
+
+#define IPU_IPU_CH_DB_MODE_SEL_1__ADDR                  IPU_REGISTERS_OFFSET+0x00000154
+#define IPU_IPU_CH_DB_MODE_SEL_1__EMPTY                 IPU_REGISTERS_OFFSET+0x00000154,0x00000000
+#define IPU_IPU_CH_DB_MODE_SEL_1__FULL                  IPU_REGISTERS_OFFSET+0x00000154,0xffffffff
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_52 IPU_REGISTERS_OFFSET+0x00000154,0x00100000
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_51 IPU_REGISTERS_OFFSET+0x00000154,0x00080000
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_50 IPU_REGISTERS_OFFSET+0x00000154,0x00040000
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_49 IPU_REGISTERS_OFFSET+0x00000154,0x00020000
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_48 IPU_REGISTERS_OFFSET+0x00000154,0x00010000
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_47 IPU_REGISTERS_OFFSET+0x00000154,0x00008000
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_46 IPU_REGISTERS_OFFSET+0x00000154,0x00004000
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_45 IPU_REGISTERS_OFFSET+0x00000154,0x00002000
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_44 IPU_REGISTERS_OFFSET+0x00000154,0x00001000
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_43 IPU_REGISTERS_OFFSET+0x00000154,0x00000800
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_42 IPU_REGISTERS_OFFSET+0x00000154,0x00000400
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_41 IPU_REGISTERS_OFFSET+0x00000154,0x00000200
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_40 IPU_REGISTERS_OFFSET+0x00000154,0x00000100
+#define IPU_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_33 IPU_REGISTERS_OFFSET+0x00000154,0x00000002
+
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_0__ADDR                      IPU_REGISTERS_OFFSET+0x00000168
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_0__EMPTY                     IPU_REGISTERS_OFFSET+0x00000168,0x00000000
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_0__FULL                      IPU_REGISTERS_OFFSET+0x00000168,0xffffffff
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_29 IPU_REGISTERS_OFFSET+0x00000168,0x20000000
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_24 IPU_REGISTERS_OFFSET+0x00000168,0x01000000
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_7  IPU_REGISTERS_OFFSET+0x00000168,0x00000080
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_6  IPU_REGISTERS_OFFSET+0x00000168,0x00000040
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_5  IPU_REGISTERS_OFFSET+0x00000168,0x00000020
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_4  IPU_REGISTERS_OFFSET+0x00000168,0x00000010
+
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_1__ADDR                      IPU_REGISTERS_OFFSET+0x0000016C
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_1__EMPTY                     IPU_REGISTERS_OFFSET+0x0000016C,0x00000000
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_1__FULL                      IPU_REGISTERS_OFFSET+0x0000016C,0xffffffff
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_1__DMA_CH_ALT_DB_MODE_SEL_52 IPU_REGISTERS_OFFSET+0x0000016C,0x00100000
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_1__DMA_CH_ALT_DB_MODE_SEL_41 IPU_REGISTERS_OFFSET+0x0000016C,0x00000200
+#define IPU_IPU_ALT_CH_DB_MODE_SEL_1__DMA_CH_ALT_DB_MODE_SEL_33 IPU_REGISTERS_OFFSET+0x0000016C,0x00000002
+
+#define IPU_IPU_CH_TRB_MODE_SEL_0__ADDR                   IPU_REGISTERS_OFFSET+0x00000178
+#define IPU_IPU_CH_TRB_MODE_SEL_0__EMPTY                  IPU_REGISTERS_OFFSET+0x00000178,0x00000000
+#define IPU_IPU_CH_TRB_MODE_SEL_0__FULL                   IPU_REGISTERS_OFFSET+0x00000178,0xffffffff
+#define IPU_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_28 IPU_REGISTERS_OFFSET+0x00000178,0x10000000
+#define IPU_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_27 IPU_REGISTERS_OFFSET+0x00000178,0x08000000
+#define IPU_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_23 IPU_REGISTERS_OFFSET+0x00000178,0x00800000
+#define IPU_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_21 IPU_REGISTERS_OFFSET+0x00000178,0x00200000
+#define IPU_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_13 IPU_REGISTERS_OFFSET+0x00000178,0x00002000
+#define IPU_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_10 IPU_REGISTERS_OFFSET+0x00000178,0x00000400
+#define IPU_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_9  IPU_REGISTERS_OFFSET+0x00000178,0x00000200
+#define IPU_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_8  IPU_REGISTERS_OFFSET+0x00000178,0x00000100
+
+#define IPU_IPU_CH_TRB_MODE_SEL_1__ADDR  IPU_REGISTERS_OFFSET+0x0000017C
+#define IPU_IPU_CH_TRB_MODE_SEL_1__EMPTY IPU_REGISTERS_OFFSET+0x0000017C,0x00000000
+#define IPU_IPU_CH_TRB_MODE_SEL_1__FULL  IPU_REGISTERS_OFFSET+0x0000017C,0xffffffff
+
+#define IPU_IPU_INT_STAT_1__ADDR         IPU_REGISTERS_OFFSET+0x00000200
+#define IPU_IPU_INT_STAT_1__EMPTY        IPU_REGISTERS_OFFSET+0x00000200,0x00000000
+#define IPU_IPU_INT_STAT_1__FULL         IPU_REGISTERS_OFFSET+0x00000200,0xffffffff
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_31 IPU_REGISTERS_OFFSET+0x00000200,0x80000000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_29 IPU_REGISTERS_OFFSET+0x00000200,0x20000000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_28 IPU_REGISTERS_OFFSET+0x00000200,0x10000000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_27 IPU_REGISTERS_OFFSET+0x00000200,0x08000000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_26 IPU_REGISTERS_OFFSET+0x00000200,0x04000000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_25 IPU_REGISTERS_OFFSET+0x00000200,0x02000000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_24 IPU_REGISTERS_OFFSET+0x00000200,0x01000000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_23 IPU_REGISTERS_OFFSET+0x00000200,0x00800000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_22 IPU_REGISTERS_OFFSET+0x00000200,0x00400000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_21 IPU_REGISTERS_OFFSET+0x00000200,0x00200000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_20 IPU_REGISTERS_OFFSET+0x00000200,0x00100000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_19 IPU_REGISTERS_OFFSET+0x00000200,0x00080000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_18 IPU_REGISTERS_OFFSET+0x00000200,0x00040000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_17 IPU_REGISTERS_OFFSET+0x00000200,0x00020000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_15 IPU_REGISTERS_OFFSET+0x00000200,0x00008000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_14 IPU_REGISTERS_OFFSET+0x00000200,0x00004000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_13 IPU_REGISTERS_OFFSET+0x00000200,0x00002000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_12 IPU_REGISTERS_OFFSET+0x00000200,0x00001000
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_11 IPU_REGISTERS_OFFSET+0x00000200,0x00000800
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_10 IPU_REGISTERS_OFFSET+0x00000200,0x00000400
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_9  IPU_REGISTERS_OFFSET+0x00000200,0x00000200
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_8  IPU_REGISTERS_OFFSET+0x00000200,0x00000100
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_5  IPU_REGISTERS_OFFSET+0x00000200,0x00000020
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_3  IPU_REGISTERS_OFFSET+0x00000200,0x00000008
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_2  IPU_REGISTERS_OFFSET+0x00000200,0x00000004
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_1  IPU_REGISTERS_OFFSET+0x00000200,0x00000002
+#define IPU_IPU_INT_STAT_1__IDMAC_EOF_0  IPU_REGISTERS_OFFSET+0x00000200,0x00000001
+
+#define IPU_IPU_INT_STAT_2__ADDR         IPU_REGISTERS_OFFSET+0x00000204
+#define IPU_IPU_INT_STAT_2__EMPTY        IPU_REGISTERS_OFFSET+0x00000204,0x00000000
+#define IPU_IPU_INT_STAT_2__FULL         IPU_REGISTERS_OFFSET+0x00000204,0xffffffff
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_52 IPU_REGISTERS_OFFSET+0x00000204,0x00100000
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_51 IPU_REGISTERS_OFFSET+0x00000204,0x00080000
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_50 IPU_REGISTERS_OFFSET+0x00000204,0x00040000
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_49 IPU_REGISTERS_OFFSET+0x00000204,0x00020000
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_48 IPU_REGISTERS_OFFSET+0x00000204,0x00010000
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_47 IPU_REGISTERS_OFFSET+0x00000204,0x00008000
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_46 IPU_REGISTERS_OFFSET+0x00000204,0x00004000
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_45 IPU_REGISTERS_OFFSET+0x00000204,0x00002000
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_44 IPU_REGISTERS_OFFSET+0x00000204,0x00001000
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_43 IPU_REGISTERS_OFFSET+0x00000204,0x00000800
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_42 IPU_REGISTERS_OFFSET+0x00000204,0x00000400
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_41 IPU_REGISTERS_OFFSET+0x00000204,0x00000200
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_40 IPU_REGISTERS_OFFSET+0x00000204,0x00000100
+#define IPU_IPU_INT_STAT_2__IDMAC_EOF_33 IPU_REGISTERS_OFFSET+0x00000204,0x00000002
+
+#define IPU_IPU_INT_STAT_3__ADDR           IPU_REGISTERS_OFFSET+0x00000208
+#define IPU_IPU_INT_STAT_3__EMPTY          IPU_REGISTERS_OFFSET+0x00000208,0x00000000
+#define IPU_IPU_INT_STAT_3__FULL           IPU_REGISTERS_OFFSET+0x00000208,0xffffffff
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_31 IPU_REGISTERS_OFFSET+0x00000208,0x80000000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_29 IPU_REGISTERS_OFFSET+0x00000208,0x20000000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_28 IPU_REGISTERS_OFFSET+0x00000208,0x10000000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_27 IPU_REGISTERS_OFFSET+0x00000208,0x08000000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_26 IPU_REGISTERS_OFFSET+0x00000208,0x04000000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_25 IPU_REGISTERS_OFFSET+0x00000208,0x02000000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_24 IPU_REGISTERS_OFFSET+0x00000208,0x01000000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_23 IPU_REGISTERS_OFFSET+0x00000208,0x00800000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_22 IPU_REGISTERS_OFFSET+0x00000208,0x00400000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_21 IPU_REGISTERS_OFFSET+0x00000208,0x00200000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_20 IPU_REGISTERS_OFFSET+0x00000208,0x00100000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_19 IPU_REGISTERS_OFFSET+0x00000208,0x00080000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_18 IPU_REGISTERS_OFFSET+0x00000208,0x00040000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_17 IPU_REGISTERS_OFFSET+0x00000208,0x00020000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_15 IPU_REGISTERS_OFFSET+0x00000208,0x00008000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_14 IPU_REGISTERS_OFFSET+0x00000208,0x00004000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_13 IPU_REGISTERS_OFFSET+0x00000208,0x00002000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_12 IPU_REGISTERS_OFFSET+0x00000208,0x00001000
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_11 IPU_REGISTERS_OFFSET+0x00000208,0x00000800
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_10 IPU_REGISTERS_OFFSET+0x00000208,0x00000400
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_9  IPU_REGISTERS_OFFSET+0x00000208,0x00000200
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_8  IPU_REGISTERS_OFFSET+0x00000208,0x00000100
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_5  IPU_REGISTERS_OFFSET+0x00000208,0x00000020
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_3  IPU_REGISTERS_OFFSET+0x00000208,0x00000008
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_2  IPU_REGISTERS_OFFSET+0x00000208,0x00000004
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_1  IPU_REGISTERS_OFFSET+0x00000208,0x00000002
+#define IPU_IPU_INT_STAT_3__IDMAC_NFACK_0  IPU_REGISTERS_OFFSET+0x00000208,0x00000001
+
+#define IPU_IPU_INT_STAT_4__ADDR           IPU_REGISTERS_OFFSET+0x0000020C
+#define IPU_IPU_INT_STAT_4__EMPTY          IPU_REGISTERS_OFFSET+0x0000020C,0x00000000
+#define IPU_IPU_INT_STAT_4__FULL           IPU_REGISTERS_OFFSET+0x0000020C,0xffffffff
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_52 IPU_REGISTERS_OFFSET+0x0000020C,0x00100000
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_51 IPU_REGISTERS_OFFSET+0x0000020C,0x00080000
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_50 IPU_REGISTERS_OFFSET+0x0000020C,0x00040000
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_49 IPU_REGISTERS_OFFSET+0x0000020C,0x00020000
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_48 IPU_REGISTERS_OFFSET+0x0000020C,0x00010000
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_47 IPU_REGISTERS_OFFSET+0x0000020C,0x00008000
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_46 IPU_REGISTERS_OFFSET+0x0000020C,0x00004000
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_45 IPU_REGISTERS_OFFSET+0x0000020C,0x00002000
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_44 IPU_REGISTERS_OFFSET+0x0000020C,0x00001000
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_43 IPU_REGISTERS_OFFSET+0x0000020C,0x00000800
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_42 IPU_REGISTERS_OFFSET+0x0000020C,0x00000400
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_41 IPU_REGISTERS_OFFSET+0x0000020C,0x00000200
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_40 IPU_REGISTERS_OFFSET+0x0000020C,0x00000100
+#define IPU_IPU_INT_STAT_4__IDMAC_NFACK_33 IPU_REGISTERS_OFFSET+0x0000020C,0x00000002
+
+#define IPU_IPU_INT_STAT_5__ADDR                 IPU_REGISTERS_OFFSET+0x00000210
+#define IPU_IPU_INT_STAT_5__EMPTY                IPU_REGISTERS_OFFSET+0x00000210,0x00000000
+#define IPU_IPU_INT_STAT_5__FULL                 IPU_REGISTERS_OFFSET+0x00000210,0xffffffff
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_31 IPU_REGISTERS_OFFSET+0x00000210,0x80000000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_29 IPU_REGISTERS_OFFSET+0x00000210,0x20000000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_28 IPU_REGISTERS_OFFSET+0x00000210,0x10000000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_27 IPU_REGISTERS_OFFSET+0x00000210,0x08000000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_26 IPU_REGISTERS_OFFSET+0x00000210,0x04000000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_25 IPU_REGISTERS_OFFSET+0x00000210,0x02000000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_24 IPU_REGISTERS_OFFSET+0x00000210,0x01000000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_23 IPU_REGISTERS_OFFSET+0x00000210,0x00800000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_22 IPU_REGISTERS_OFFSET+0x00000210,0x00400000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_21 IPU_REGISTERS_OFFSET+0x00000210,0x00200000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_20 IPU_REGISTERS_OFFSET+0x00000210,0x00100000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_19 IPU_REGISTERS_OFFSET+0x00000210,0x00080000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_18 IPU_REGISTERS_OFFSET+0x00000210,0x00040000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_17 IPU_REGISTERS_OFFSET+0x00000210,0x00020000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_15 IPU_REGISTERS_OFFSET+0x00000210,0x00008000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_14 IPU_REGISTERS_OFFSET+0x00000210,0x00004000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_13 IPU_REGISTERS_OFFSET+0x00000210,0x00002000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_12 IPU_REGISTERS_OFFSET+0x00000210,0x00001000
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_11 IPU_REGISTERS_OFFSET+0x00000210,0x00000800
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_10 IPU_REGISTERS_OFFSET+0x00000210,0x00000400
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_9  IPU_REGISTERS_OFFSET+0x00000210,0x00000200
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_8  IPU_REGISTERS_OFFSET+0x00000210,0x00000100
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_5  IPU_REGISTERS_OFFSET+0x00000210,0x00000020
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_3  IPU_REGISTERS_OFFSET+0x00000210,0x00000008
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_2  IPU_REGISTERS_OFFSET+0x00000210,0x00000004
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_1  IPU_REGISTERS_OFFSET+0x00000210,0x00000002
+#define IPU_IPU_INT_STAT_5__IDMAC_NFB4EOF_ERR_0  IPU_REGISTERS_OFFSET+0x00000210,0x00000001
+
+#define IPU_IPU_INT_STAT_6__ADDR                 IPU_REGISTERS_OFFSET+0x00000214
+#define IPU_IPU_INT_STAT_6__EMPTY                IPU_REGISTERS_OFFSET+0x00000214,0x00000000
+#define IPU_IPU_INT_STAT_6__FULL                 IPU_REGISTERS_OFFSET+0x00000214,0xffffffff
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_52 IPU_REGISTERS_OFFSET+0x00000214,0x00100000
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_51 IPU_REGISTERS_OFFSET+0x00000214,0x00080000
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_50 IPU_REGISTERS_OFFSET+0x00000214,0x00040000
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_49 IPU_REGISTERS_OFFSET+0x00000214,0x00020000
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_48 IPU_REGISTERS_OFFSET+0x00000214,0x00010000
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_47 IPU_REGISTERS_OFFSET+0x00000214,0x00008000
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_46 IPU_REGISTERS_OFFSET+0x00000214,0x00004000
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_45 IPU_REGISTERS_OFFSET+0x00000214,0x00002000
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_44 IPU_REGISTERS_OFFSET+0x00000214,0x00001000
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_43 IPU_REGISTERS_OFFSET+0x00000214,0x00000800
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_42 IPU_REGISTERS_OFFSET+0x00000214,0x00000400
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_41 IPU_REGISTERS_OFFSET+0x00000214,0x00000200
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_40 IPU_REGISTERS_OFFSET+0x00000214,0x00000100
+#define IPU_IPU_INT_STAT_6__IDMAC_NFB4EOF_ERR_33 IPU_REGISTERS_OFFSET+0x00000214,0x00000002
+
+#define IPU_IPU_INT_STAT_7__ADDR         IPU_REGISTERS_OFFSET+0x00000218
+#define IPU_IPU_INT_STAT_7__EMPTY        IPU_REGISTERS_OFFSET+0x00000218,0x00000000
+#define IPU_IPU_INT_STAT_7__FULL         IPU_REGISTERS_OFFSET+0x00000218,0xffffffff
+#define IPU_IPU_INT_STAT_7__IDMAC_EOS_31 IPU_REGISTERS_OFFSET+0x00000218,0x80000000
+#define IPU_IPU_INT_STAT_7__IDMAC_EOS_29 IPU_REGISTERS_OFFSET+0x00000218,0x20000000
+#define IPU_IPU_INT_STAT_7__IDMAC_EOS_28 IPU_REGISTERS_OFFSET+0x00000218,0x10000000
+#define IPU_IPU_INT_STAT_7__IDMAC_EOS_27 IPU_REGISTERS_OFFSET+0x00000218,0x08000000
+#define IPU_IPU_INT_STAT_7__IDMAC_EOS_26 IPU_REGISTERS_OFFSET+0x00000218,0x04000000
+#define IPU_IPU_INT_STAT_7__IDMAC_EOS_25 IPU_REGISTERS_OFFSET+0x00000218,0x02000000
+#define IPU_IPU_INT_STAT_7__IDMAC_EOS_24 IPU_REGISTERS_OFFSET+0x00000218,0x01000000
+#define IPU_IPU_INT_STAT_7__IDMAC_EOS_23 IPU_REGISTERS_OFFSET+0x00000218,0x00800000
+#define IPU_IPU_INT_STAT_7__IDMAC_EOS_19 IPU_REGISTERS_OFFSET+0x00000218,0x00080000
+
+#define IPU_IPU_INT_STAT_8__ADDR         IPU_REGISTERS_OFFSET+0x0000021C
+#define IPU_IPU_INT_STAT_8__EMPTY        IPU_REGISTERS_OFFSET+0x0000021C,0x00000000
+#define IPU_IPU_INT_STAT_8__FULL         IPU_REGISTERS_OFFSET+0x0000021C,0xffffffff
+#define IPU_IPU_INT_STAT_8__IDMAC_EOS_52 IPU_REGISTERS_OFFSET+0x0000021C,0x00100000
+#define IPU_IPU_INT_STAT_8__IDMAC_EOS_51 IPU_REGISTERS_OFFSET+0x0000021C,0x00080000
+#define IPU_IPU_INT_STAT_8__IDMAC_EOS_44 IPU_REGISTERS_OFFSET+0x0000021C,0x00001000
+#define IPU_IPU_INT_STAT_8__IDMAC_EOS_43 IPU_REGISTERS_OFFSET+0x0000021C,0x00000800
+#define IPU_IPU_INT_STAT_8__IDMAC_EOS_42 IPU_REGISTERS_OFFSET+0x0000021C,0x00000400
+#define IPU_IPU_INT_STAT_8__IDMAC_EOS_41 IPU_REGISTERS_OFFSET+0x0000021C,0x00000200
+#define IPU_IPU_INT_STAT_8__IDMAC_EOS_33 IPU_REGISTERS_OFFSET+0x0000021C,0x00000002
+
+#define IPU_IPU_INT_STAT_9__ADDR             IPU_REGISTERS_OFFSET+0x00000220
+#define IPU_IPU_INT_STAT_9__EMPTY            IPU_REGISTERS_OFFSET+0x00000220,0x00000000
+#define IPU_IPU_INT_STAT_9__FULL             IPU_REGISTERS_OFFSET+0x00000220,0xffffffff
+#define IPU_IPU_INT_STAT_9__CSI1_PUPE        IPU_REGISTERS_OFFSET+0x00000220,0x80000000
+#define IPU_IPU_INT_STAT_9__CSI0_PUPE        IPU_REGISTERS_OFFSET+0x00000220,0x40000000
+#define IPU_IPU_INT_STAT_9__IC_VF_BUF_OVF    IPU_REGISTERS_OFFSET+0x00000220,0x10000000
+#define IPU_IPU_INT_STAT_9__IC_ENC_BUF_OVF   IPU_REGISTERS_OFFSET+0x00000220,0x08000000
+#define IPU_IPU_INT_STAT_9__IC_BAYER_BUF_OVF IPU_REGISTERS_OFFSET+0x00000220,0x04000000
+#define IPU_IPU_INT_STAT_9__VDI_FIFO1_OVF    IPU_REGISTERS_OFFSET+0x00000220,0x00000001
+
+#define IPU_IPU_INT_STAT_10__ADDR                   IPU_REGISTERS_OFFSET+0x00000224
+#define IPU_IPU_INT_STAT_10__EMPTY                  IPU_REGISTERS_OFFSET+0x00000224,0x00000000
+#define IPU_IPU_INT_STAT_10__FULL                   IPU_REGISTERS_OFFSET+0x00000224,0xffffffff
+#define IPU_IPU_INT_STAT_10__AXIR_ERR               IPU_REGISTERS_OFFSET+0x00000224,0x40000000
+#define IPU_IPU_INT_STAT_10__AXIW_ERR               IPU_REGISTERS_OFFSET+0x00000224,0x20000000
+#define IPU_IPU_INT_STAT_10__NON_PRIVILEGED_ACC_ERR IPU_REGISTERS_OFFSET+0x00000224,0x10000000
+#define IPU_IPU_INT_STAT_10__IC_BAYER_FRM_LOST_ERR  IPU_REGISTERS_OFFSET+0x00000224,0x04000000
+#define IPU_IPU_INT_STAT_10__IC_ENC_FRM_LOST_ERR    IPU_REGISTERS_OFFSET+0x00000224,0x02000000
+#define IPU_IPU_INT_STAT_10__IC_VF_FRM_LOST_ERR     IPU_REGISTERS_OFFSET+0x00000224,0x01000000
+#define IPU_IPU_INT_STAT_10__DI1_TIME_OUT_ERR       IPU_REGISTERS_OFFSET+0x00000224,0x00400000
+#define IPU_IPU_INT_STAT_10__DI0_TIME_OUT_ERR       IPU_REGISTERS_OFFSET+0x00000224,0x00200000
+#define IPU_IPU_INT_STAT_10__DI1_SYNC_DISP_ERR      IPU_REGISTERS_OFFSET+0x00000224,0x00100000
+#define IPU_IPU_INT_STAT_10__DI0_SYNC_DISP_ERR      IPU_REGISTERS_OFFSET+0x00000224,0x00080000
+#define IPU_IPU_INT_STAT_10__DC_TEARING_ERR_6       IPU_REGISTERS_OFFSET+0x00000224,0x00040000
+#define IPU_IPU_INT_STAT_10__DC_TEARING_ERR_2       IPU_REGISTERS_OFFSET+0x00000224,0x00020000
+#define IPU_IPU_INT_STAT_10__DC_TEARING_ERR_1       IPU_REGISTERS_OFFSET+0x00000224,0x00010000
+#define IPU_IPU_INT_STAT_10__SMFC3_FRM_LOST         IPU_REGISTERS_OFFSET+0x00000224,0x00000008
+#define IPU_IPU_INT_STAT_10__SMFC2_FRM_LOST         IPU_REGISTERS_OFFSET+0x00000224,0x00000004
+#define IPU_IPU_INT_STAT_10__SMFC1_FRM_LOST         IPU_REGISTERS_OFFSET+0x00000224,0x00000002
+#define IPU_IPU_INT_STAT_10__SMFC0_FRM_LOST         IPU_REGISTERS_OFFSET+0x00000224,0x00000001
+
+#define IPU_IPU_INT_STAT_11__ADDR           IPU_REGISTERS_OFFSET+0x00000228
+#define IPU_IPU_INT_STAT_11__EMPTY          IPU_REGISTERS_OFFSET+0x00000228,0x00000000
+#define IPU_IPU_INT_STAT_11__FULL           IPU_REGISTERS_OFFSET+0x00000228,0xffffffff
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_26 IPU_REGISTERS_OFFSET+0x00000228,0x04000000
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_25 IPU_REGISTERS_OFFSET+0x00000228,0x02000000
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_22 IPU_REGISTERS_OFFSET+0x00000228,0x00400000
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_21 IPU_REGISTERS_OFFSET+0x00000228,0x00200000
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_20 IPU_REGISTERS_OFFSET+0x00000228,0x00100000
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_12 IPU_REGISTERS_OFFSET+0x00000228,0x00001000
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_11 IPU_REGISTERS_OFFSET+0x00000228,0x00000800
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_10 IPU_REGISTERS_OFFSET+0x00000228,0x00000400
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_9  IPU_REGISTERS_OFFSET+0x00000228,0x00000200
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_8  IPU_REGISTERS_OFFSET+0x00000228,0x00000100
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_5  IPU_REGISTERS_OFFSET+0x00000228,0x00000020
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_3  IPU_REGISTERS_OFFSET+0x00000228,0x00000008
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_2  IPU_REGISTERS_OFFSET+0x00000228,0x00000004
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_1  IPU_REGISTERS_OFFSET+0x00000228,0x00000002
+#define IPU_IPU_INT_STAT_11__IDMAC_EOBND_0  IPU_REGISTERS_OFFSET+0x00000228,0x00000001
+
+#define IPU_IPU_INT_STAT_12__ADDR           IPU_REGISTERS_OFFSET+0x0000022C
+#define IPU_IPU_INT_STAT_12__EMPTY          IPU_REGISTERS_OFFSET+0x0000022C,0x00000000
+#define IPU_IPU_INT_STAT_12__FULL           IPU_REGISTERS_OFFSET+0x0000022C,0xffffffff
+#define IPU_IPU_INT_STAT_12__IDMAC_EOBND_50 IPU_REGISTERS_OFFSET+0x0000022C,0x00040000
+#define IPU_IPU_INT_STAT_12__IDMAC_EOBND_49 IPU_REGISTERS_OFFSET+0x0000022C,0x00020000
+#define IPU_IPU_INT_STAT_12__IDMAC_EOBND_48 IPU_REGISTERS_OFFSET+0x0000022C,0x00010000
+#define IPU_IPU_INT_STAT_12__IDMAC_EOBND_47 IPU_REGISTERS_OFFSET+0x0000022C,0x00008000
+#define IPU_IPU_INT_STAT_12__IDMAC_EOBND_46 IPU_REGISTERS_OFFSET+0x0000022C,0x00004000
+#define IPU_IPU_INT_STAT_12__IDMAC_EOBND_45 IPU_REGISTERS_OFFSET+0x0000022C,0x00002000
+
+#define IPU_IPU_INT_STAT_13__ADDR        IPU_REGISTERS_OFFSET+0x00000230
+#define IPU_IPU_INT_STAT_13__EMPTY       IPU_REGISTERS_OFFSET+0x00000230,0x00000000
+#define IPU_IPU_INT_STAT_13__FULL        IPU_REGISTERS_OFFSET+0x00000230,0xffffffff
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_31 IPU_REGISTERS_OFFSET+0x00000230,0x80000000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_29 IPU_REGISTERS_OFFSET+0x00000230,0x20000000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_28 IPU_REGISTERS_OFFSET+0x00000230,0x10000000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_27 IPU_REGISTERS_OFFSET+0x00000230,0x08000000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_26 IPU_REGISTERS_OFFSET+0x00000230,0x04000000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_25 IPU_REGISTERS_OFFSET+0x00000230,0x02000000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_24 IPU_REGISTERS_OFFSET+0x00000230,0x01000000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_23 IPU_REGISTERS_OFFSET+0x00000230,0x00800000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_22 IPU_REGISTERS_OFFSET+0x00000230,0x00400000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_21 IPU_REGISTERS_OFFSET+0x00000230,0x00200000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_20 IPU_REGISTERS_OFFSET+0x00000230,0x00100000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_19 IPU_REGISTERS_OFFSET+0x00000230,0x00080000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_18 IPU_REGISTERS_OFFSET+0x00000230,0x00040000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_17 IPU_REGISTERS_OFFSET+0x00000230,0x00020000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_15 IPU_REGISTERS_OFFSET+0x00000230,0x00008000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_14 IPU_REGISTERS_OFFSET+0x00000230,0x00004000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_13 IPU_REGISTERS_OFFSET+0x00000230,0x00002000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_12 IPU_REGISTERS_OFFSET+0x00000230,0x00001000
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_11 IPU_REGISTERS_OFFSET+0x00000230,0x00000800
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_10 IPU_REGISTERS_OFFSET+0x00000230,0x00000400
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_9  IPU_REGISTERS_OFFSET+0x00000230,0x00000200
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_8  IPU_REGISTERS_OFFSET+0x00000230,0x00000100
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_5  IPU_REGISTERS_OFFSET+0x00000230,0x00000020
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_3  IPU_REGISTERS_OFFSET+0x00000230,0x00000008
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_2  IPU_REGISTERS_OFFSET+0x00000230,0x00000004
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_1  IPU_REGISTERS_OFFSET+0x00000230,0x00000002
+#define IPU_IPU_INT_STAT_13__IDMAC_TH_0  IPU_REGISTERS_OFFSET+0x00000230,0x00000001
+
+#define IPU_IPU_INT_STAT_14__ADDR        IPU_REGISTERS_OFFSET+0x00000234
+#define IPU_IPU_INT_STAT_14__EMPTY       IPU_REGISTERS_OFFSET+0x00000234,0x00000000
+#define IPU_IPU_INT_STAT_14__FULL        IPU_REGISTERS_OFFSET+0x00000234,0xffffffff
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_52 IPU_REGISTERS_OFFSET+0x00000234,0x00100000
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_51 IPU_REGISTERS_OFFSET+0x00000234,0x00080000
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_50 IPU_REGISTERS_OFFSET+0x00000234,0x00040000
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_49 IPU_REGISTERS_OFFSET+0x00000234,0x00020000
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_48 IPU_REGISTERS_OFFSET+0x00000234,0x00010000
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_47 IPU_REGISTERS_OFFSET+0x00000234,0x00008000
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_46 IPU_REGISTERS_OFFSET+0x00000234,0x00004000
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_45 IPU_REGISTERS_OFFSET+0x00000234,0x00002000
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_44 IPU_REGISTERS_OFFSET+0x00000234,0x00001000
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_43 IPU_REGISTERS_OFFSET+0x00000234,0x00000800
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_42 IPU_REGISTERS_OFFSET+0x00000234,0x00000400
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_41 IPU_REGISTERS_OFFSET+0x00000234,0x00000200
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_40 IPU_REGISTERS_OFFSET+0x00000234,0x00000100
+#define IPU_IPU_INT_STAT_14__IDMAC_TH_33 IPU_REGISTERS_OFFSET+0x00000234,0x00000002
+
+#define IPU_IPU_INT_STAT_15__ADDR                IPU_REGISTERS_OFFSET+0x00000238
+#define IPU_IPU_INT_STAT_15__EMPTY               IPU_REGISTERS_OFFSET+0x00000238,0x00000000
+#define IPU_IPU_INT_STAT_15__FULL                IPU_REGISTERS_OFFSET+0x00000238,0xffffffff
+#define IPU_IPU_INT_STAT_15__DI1_CNT_EN_PRE_8    IPU_REGISTERS_OFFSET+0x00000238,0x80000000
+#define IPU_IPU_INT_STAT_15__DI1_CNT_EN_PRE_3    IPU_REGISTERS_OFFSET+0x00000238,0x40000000
+#define IPU_IPU_INT_STAT_15__DI1_DISP_CLK_EN_PRE IPU_REGISTERS_OFFSET+0x00000238,0x20000000
+#define IPU_IPU_INT_STAT_15__DI0_CNT_EN_PRE_10   IPU_REGISTERS_OFFSET+0x00000238,0x10000000
+#define IPU_IPU_INT_STAT_15__DI0_CNT_EN_PRE_9    IPU_REGISTERS_OFFSET+0x00000238,0x08000000
+#define IPU_IPU_INT_STAT_15__DI0_CNT_EN_PRE_8    IPU_REGISTERS_OFFSET+0x00000238,0x04000000
+#define IPU_IPU_INT_STAT_15__DI0_CNT_EN_PRE_7    IPU_REGISTERS_OFFSET+0x00000238,0x02000000
+#define IPU_IPU_INT_STAT_15__DI0_CNT_EN_PRE_6    IPU_REGISTERS_OFFSET+0x00000238,0x01000000
+#define IPU_IPU_INT_STAT_15__DI0_CNT_EN_PRE_5    IPU_REGISTERS_OFFSET+0x00000238,0x00800000
+#define IPU_IPU_INT_STAT_15__DI0_CNT_EN_PRE_4    IPU_REGISTERS_OFFSET+0x00000238,0x00400000
+#define IPU_IPU_INT_STAT_15__DI0_CNT_EN_PRE_3    IPU_REGISTERS_OFFSET+0x00000238,0x00200000
+#define IPU_IPU_INT_STAT_15__DI0_CNT_EN_PRE_2    IPU_REGISTERS_OFFSET+0x00000238,0x00100000
+#define IPU_IPU_INT_STAT_15__DI0_CNT_EN_PRE_1    IPU_REGISTERS_OFFSET+0x00000238,0x00080000
+#define IPU_IPU_INT_STAT_15__DI0_DISP_CLK_EN_PRE IPU_REGISTERS_OFFSET+0x00000238,0x00040000
+#define IPU_IPU_INT_STAT_15__DC_ASYNC_STOP       IPU_REGISTERS_OFFSET+0x00000238,0x00020000
+#define IPU_IPU_INT_STAT_15__DC_DP_START         IPU_REGISTERS_OFFSET+0x00000238,0x00010000
+#define IPU_IPU_INT_STAT_15__DI_VSYNC_PRE_1      IPU_REGISTERS_OFFSET+0x00000238,0x00008000
+#define IPU_IPU_INT_STAT_15__DI_VSYNC_PRE_0      IPU_REGISTERS_OFFSET+0x00000238,0x00004000
+#define IPU_IPU_INT_STAT_15__DC_FC_6             IPU_REGISTERS_OFFSET+0x00000238,0x00002000
+#define IPU_IPU_INT_STAT_15__DC_FC_4             IPU_REGISTERS_OFFSET+0x00000238,0x00001000
+#define IPU_IPU_INT_STAT_15__DC_FC_3             IPU_REGISTERS_OFFSET+0x00000238,0x00000800
+#define IPU_IPU_INT_STAT_15__DC_FC_2             IPU_REGISTERS_OFFSET+0x00000238,0x00000400
+#define IPU_IPU_INT_STAT_15__DC_FC_1             IPU_REGISTERS_OFFSET+0x00000238,0x00000200
+#define IPU_IPU_INT_STAT_15__DC_FC_0             IPU_REGISTERS_OFFSET+0x00000238,0x00000100
+#define IPU_IPU_INT_STAT_15__DP_ASF_BRAKE        IPU_REGISTERS_OFFSET+0x00000238,0x00000080
+#define IPU_IPU_INT_STAT_15__DP_SF_BRAKE         IPU_REGISTERS_OFFSET+0x00000238,0x00000040
+#define IPU_IPU_INT_STAT_15__DP_ASF_END          IPU_REGISTERS_OFFSET+0x00000238,0x00000020
+#define IPU_IPU_INT_STAT_15__DP_ASF_START        IPU_REGISTERS_OFFSET+0x00000238,0x00000010
+#define IPU_IPU_INT_STAT_15__DP_SF_END           IPU_REGISTERS_OFFSET+0x00000238,0x00000008
+#define IPU_IPU_INT_STAT_15__DP_SF_START         IPU_REGISTERS_OFFSET+0x00000238,0x00000004
+#define IPU_IPU_INT_STAT_15__IPU_SNOOPING2_INT   IPU_REGISTERS_OFFSET+0x00000238,0x00000002
+#define IPU_IPU_INT_STAT_15__IPU_SNOOPING1_INT   IPU_REGISTERS_OFFSET+0x00000238,0x00000001
+
+#define IPU_IPU_CUR_BUF_0__ADDR              IPU_REGISTERS_OFFSET+0x0000023C
+#define IPU_IPU_CUR_BUF_0__EMPTY             IPU_REGISTERS_OFFSET+0x0000023C,0x00000000
+#define IPU_IPU_CUR_BUF_0__FULL              IPU_REGISTERS_OFFSET+0x0000023C,0xffffffff
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_31 IPU_REGISTERS_OFFSET+0x0000023C,0x80000000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_29 IPU_REGISTERS_OFFSET+0x0000023C,0x20000000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_28 IPU_REGISTERS_OFFSET+0x0000023C,0x10000000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_27 IPU_REGISTERS_OFFSET+0x0000023C,0x08000000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_26 IPU_REGISTERS_OFFSET+0x0000023C,0x04000000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_25 IPU_REGISTERS_OFFSET+0x0000023C,0x02000000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_24 IPU_REGISTERS_OFFSET+0x0000023C,0x01000000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_23 IPU_REGISTERS_OFFSET+0x0000023C,0x00800000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_22 IPU_REGISTERS_OFFSET+0x0000023C,0x00400000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_21 IPU_REGISTERS_OFFSET+0x0000023C,0x00200000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_20 IPU_REGISTERS_OFFSET+0x0000023C,0x00100000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_19 IPU_REGISTERS_OFFSET+0x0000023C,0x00080000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_18 IPU_REGISTERS_OFFSET+0x0000023C,0x00040000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_17 IPU_REGISTERS_OFFSET+0x0000023C,0x00020000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_15 IPU_REGISTERS_OFFSET+0x0000023C,0x00008000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_14 IPU_REGISTERS_OFFSET+0x0000023C,0x00004000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_12 IPU_REGISTERS_OFFSET+0x0000023C,0x00001000
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_11 IPU_REGISTERS_OFFSET+0x0000023C,0x00000800
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_5  IPU_REGISTERS_OFFSET+0x0000023C,0x00000020
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_3  IPU_REGISTERS_OFFSET+0x0000023C,0x00000008
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_2  IPU_REGISTERS_OFFSET+0x0000023C,0x00000004
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_1  IPU_REGISTERS_OFFSET+0x0000023C,0x00000002
+#define IPU_IPU_CUR_BUF_0__DMA_CH_CUR_BUF_0  IPU_REGISTERS_OFFSET+0x0000023C,0x00000001
+
+#define IPU_IPU_CUR_BUF_1__ADDR              IPU_REGISTERS_OFFSET+0x00000240
+#define IPU_IPU_CUR_BUF_1__EMPTY             IPU_REGISTERS_OFFSET+0x00000240,0x00000000
+#define IPU_IPU_CUR_BUF_1__FULL              IPU_REGISTERS_OFFSET+0x00000240,0xffffffff
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_52 IPU_REGISTERS_OFFSET+0x00000240,0x00100000
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_51 IPU_REGISTERS_OFFSET+0x00000240,0x00080000
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_50 IPU_REGISTERS_OFFSET+0x00000240,0x00040000
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_49 IPU_REGISTERS_OFFSET+0x00000240,0x00020000
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_48 IPU_REGISTERS_OFFSET+0x00000240,0x00010000
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_47 IPU_REGISTERS_OFFSET+0x00000240,0x00008000
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_46 IPU_REGISTERS_OFFSET+0x00000240,0x00004000
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_45 IPU_REGISTERS_OFFSET+0x00000240,0x00002000
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_44 IPU_REGISTERS_OFFSET+0x00000240,0x00001000
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_43 IPU_REGISTERS_OFFSET+0x00000240,0x00000800
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_42 IPU_REGISTERS_OFFSET+0x00000240,0x00000400
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_41 IPU_REGISTERS_OFFSET+0x00000240,0x00000200
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_40 IPU_REGISTERS_OFFSET+0x00000240,0x00000100
+#define IPU_IPU_CUR_BUF_1__DMA_CH_CUR_BUF_33 IPU_REGISTERS_OFFSET+0x00000240,0x00000002
+
+#define IPU_IPU_ALT_CUR_BUF_0__ADDR                  IPU_REGISTERS_OFFSET+0x00000244
+#define IPU_IPU_ALT_CUR_BUF_0__EMPTY                 IPU_REGISTERS_OFFSET+0x00000244,0x00000000
+#define IPU_IPU_ALT_CUR_BUF_0__FULL                  IPU_REGISTERS_OFFSET+0x00000244,0xffffffff
+#define IPU_IPU_ALT_CUR_BUF_0__DMA_CH_ALT_CUR_BUF_29 IPU_REGISTERS_OFFSET+0x00000244,0x20000000
+#define IPU_IPU_ALT_CUR_BUF_0__DMA_CH_ALT_CUR_BUF_24 IPU_REGISTERS_OFFSET+0x00000244,0x01000000
+
+#define IPU_IPU_ALT_CUR_BUF_1__ADDR                  IPU_REGISTERS_OFFSET+0x00000248
+#define IPU_IPU_ALT_CUR_BUF_1__EMPTY                 IPU_REGISTERS_OFFSET+0x00000248,0x00000000
+#define IPU_IPU_ALT_CUR_BUF_1__FULL                  IPU_REGISTERS_OFFSET+0x00000248,0xffffffff
+#define IPU_IPU_ALT_CUR_BUF_1__DMA_CH_ALT_CUR_BUF_52 IPU_REGISTERS_OFFSET+0x00000248,0x00100000
+#define IPU_IPU_ALT_CUR_BUF_1__DMA_CH_ALT_CUR_BUF_41 IPU_REGISTERS_OFFSET+0x00000248,0x00000200
+#define IPU_IPU_ALT_CUR_BUF_1__DMA_CH_ALT_CUR_BUF_33 IPU_REGISTERS_OFFSET+0x00000248,0x00000002
+
+#define IPU_IPU_SRM_STAT__ADDR           IPU_REGISTERS_OFFSET+0x0000024C
+#define IPU_IPU_SRM_STAT__EMPTY          IPU_REGISTERS_OFFSET+0x0000024C,0x00000000
+#define IPU_IPU_SRM_STAT__FULL           IPU_REGISTERS_OFFSET+0x0000024C,0xffffffff
+#define IPU_IPU_SRM_STAT__DI1_SRM_STAT   IPU_REGISTERS_OFFSET+0x0000024C,0x00000200
+#define IPU_IPU_SRM_STAT__DI0_SRM_STAT   IPU_REGISTERS_OFFSET+0x0000024C,0x00000100
+#define IPU_IPU_SRM_STAT__CSI1_SRM_STAT  IPU_REGISTERS_OFFSET+0x0000024C,0x00000080
+#define IPU_IPU_SRM_STAT__CSI0_SRM_STAT  IPU_REGISTERS_OFFSET+0x0000024C,0x00000040
+#define IPU_IPU_SRM_STAT__DC_6_SRM_STAT  IPU_REGISTERS_OFFSET+0x0000024C,0x00000020
+#define IPU_IPU_SRM_STAT__DC_2_SRM_STAT  IPU_REGISTERS_OFFSET+0x0000024C,0x00000010
+#define IPU_IPU_SRM_STAT__DP_A1_SRM_STAT IPU_REGISTERS_OFFSET+0x0000024C,0x00000004
+#define IPU_IPU_SRM_STAT__DP_A0_SRM_STAT IPU_REGISTERS_OFFSET+0x0000024C,0x00000002
+#define IPU_IPU_SRM_STAT__DP_S_SRM_STAT  IPU_REGISTERS_OFFSET+0x0000024C,0x00000001
+
+#define IPU_IPU_PROC_TASKS_STAT__ADDR                IPU_REGISTERS_OFFSET+0x00000250
+#define IPU_IPU_PROC_TASKS_STAT__EMPTY               IPU_REGISTERS_OFFSET+0x00000250,0x00000000
+#define IPU_IPU_PROC_TASKS_STAT__FULL                IPU_REGISTERS_OFFSET+0x00000250,0xffffffff
+#define IPU_IPU_PROC_TASKS_STAT__CSI2MEM_SMFC3_TSTAT IPU_REGISTERS_OFFSET+0x00000250,0x00C00000
+#define IPU_IPU_PROC_TASKS_STAT__CSI2MEM_SMFC2_TSTAT IPU_REGISTERS_OFFSET+0x00000250,0x00300000
+#define IPU_IPU_PROC_TASKS_STAT__CSI2MEM_SMFC1_TSTAT IPU_REGISTERS_OFFSET+0x00000250,0x000C0000
+#define IPU_IPU_PROC_TASKS_STAT__CSI2MEM_SMFC0_TSTAT IPU_REGISTERS_OFFSET+0x00000250,0x00030000
+#define IPU_IPU_PROC_TASKS_STAT__MEM2PRP_TSTAT       IPU_REGISTERS_OFFSET+0x00000250,0x00007000
+#define IPU_IPU_PROC_TASKS_STAT__PP_ROT_TSTAT        IPU_REGISTERS_OFFSET+0x00000250,0x00000C00
+#define IPU_IPU_PROC_TASKS_STAT__VF_ROT_TSTAT        IPU_REGISTERS_OFFSET+0x00000250,0x00000300
+#define IPU_IPU_PROC_TASKS_STAT__ENC_ROT_TSTAT       IPU_REGISTERS_OFFSET+0x00000250,0x000000C0
+#define IPU_IPU_PROC_TASKS_STAT__PP_TSTAT            IPU_REGISTERS_OFFSET+0x00000250,0x00000030
+#define IPU_IPU_PROC_TASKS_STAT__VF_TSTAT            IPU_REGISTERS_OFFSET+0x00000250,0x0000000C
+#define IPU_IPU_PROC_TASKS_STAT__ENC_TSTAT           IPU_REGISTERS_OFFSET+0x00000250,0x00000003
+
+#define IPU_IPU_DISP_TASKS_STAT__ADDR               IPU_REGISTERS_OFFSET+0x00000254
+#define IPU_IPU_DISP_TASKS_STAT__EMPTY              IPU_REGISTERS_OFFSET+0x00000254,0x00000000
+#define IPU_IPU_DISP_TASKS_STAT__FULL               IPU_REGISTERS_OFFSET+0x00000254,0xffffffff
+#define IPU_IPU_DISP_TASKS_STAT__DC_ASYNC2_CUR_FLOW IPU_REGISTERS_OFFSET+0x00000254,0x00000800
+#define IPU_IPU_DISP_TASKS_STAT__DC_ASYNC2_STAT     IPU_REGISTERS_OFFSET+0x00000254,0x00000700
+#define IPU_IPU_DISP_TASKS_STAT__DC_ASYNC1_STAT     IPU_REGISTERS_OFFSET+0x00000254,0x00000030
+#define IPU_IPU_DISP_TASKS_STAT__DP_ASYNC_CUR_FLOW  IPU_REGISTERS_OFFSET+0x00000254,0x00000008
+#define IPU_IPU_DISP_TASKS_STAT__DP_ASYNC_STAT      IPU_REGISTERS_OFFSET+0x00000254,0x00000007
+
+#define IPU_IPU_TRIPLE_CUR_BUF_0__ADDR                     IPU_REGISTERS_OFFSET+0x00000258
+#define IPU_IPU_TRIPLE_CUR_BUF_0__EMPTY                    IPU_REGISTERS_OFFSET+0x00000258,0x00000000
+#define IPU_IPU_TRIPLE_CUR_BUF_0__FULL                     IPU_REGISTERS_OFFSET+0x00000258,0xffffffff
+#define IPU_IPU_TRIPLE_CUR_BUF_0__DMA_CH_TRIPLE_CUR_BUF_13 IPU_REGISTERS_OFFSET+0x00000258,0x0C000000
+#define IPU_IPU_TRIPLE_CUR_BUF_0__DMA_CH_TRIPLE_CUR_BUF_10 IPU_REGISTERS_OFFSET+0x00000258,0x00300000
+#define IPU_IPU_TRIPLE_CUR_BUF_0__DMA_CH_TRIPLE_CUR_BUF_9  IPU_REGISTERS_OFFSET+0x00000258,0x000C0000
+#define IPU_IPU_TRIPLE_CUR_BUF_0__DMA_CH_TRIPLE_CUR_BUF_8  IPU_REGISTERS_OFFSET+0x00000258,0x00030000
+
+#define IPU_IPU_TRIPLE_CUR_BUF_1__ADDR                     IPU_REGISTERS_OFFSET+0x0000025C
+#define IPU_IPU_TRIPLE_CUR_BUF_1__EMPTY                    IPU_REGISTERS_OFFSET+0x0000025C,0x00000000
+#define IPU_IPU_TRIPLE_CUR_BUF_1__FULL                     IPU_REGISTERS_OFFSET+0x0000025C,0xffffffff
+#define IPU_IPU_TRIPLE_CUR_BUF_1__DMA_CH_TRIPLE_CUR_BUF_28 IPU_REGISTERS_OFFSET+0x0000025C,0x03000000
+#define IPU_IPU_TRIPLE_CUR_BUF_1__DMA_CH_TRIPLE_CUR_BUF_27 IPU_REGISTERS_OFFSET+0x0000025C,0x00C00000
+#define IPU_IPU_TRIPLE_CUR_BUF_1__DMA_CH_TRIPLE_CUR_BUF_23 IPU_REGISTERS_OFFSET+0x0000025C,0x0000C000
+#define IPU_IPU_TRIPLE_CUR_BUF_1__DMA_CH_TRIPLE_CUR_BUF_21 IPU_REGISTERS_OFFSET+0x0000025C,0x00000C00
+
+#define IPU_IPU_TRIPLE_CUR_BUF_2__ADDR  IPU_REGISTERS_OFFSET+0x00000260
+#define IPU_IPU_TRIPLE_CUR_BUF_2__EMPTY IPU_REGISTERS_OFFSET+0x00000260,0x00000000
+#define IPU_IPU_TRIPLE_CUR_BUF_2__FULL  IPU_REGISTERS_OFFSET+0x00000260,0xffffffff
+
+#define IPU_IPU_TRIPLE_CUR_BUF_3__ADDR  IPU_REGISTERS_OFFSET+0x00000264
+#define IPU_IPU_TRIPLE_CUR_BUF_3__EMPTY IPU_REGISTERS_OFFSET+0x00000264,0x00000000
+#define IPU_IPU_TRIPLE_CUR_BUF_3__FULL  IPU_REGISTERS_OFFSET+0x00000264,0xffffffff
+
+#define IPU_IPU_CH_BUF0_RDY0__ADDR               IPU_REGISTERS_OFFSET+0x00000268
+#define IPU_IPU_CH_BUF0_RDY0__EMPTY              IPU_REGISTERS_OFFSET+0x00000268,0x00000000
+#define IPU_IPU_CH_BUF0_RDY0__FULL               IPU_REGISTERS_OFFSET+0x00000268,0xffffffff
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_31 IPU_REGISTERS_OFFSET+0x00000268,0x80000000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_29 IPU_REGISTERS_OFFSET+0x00000268,0x20000000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_28 IPU_REGISTERS_OFFSET+0x00000268,0x10000000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_27 IPU_REGISTERS_OFFSET+0x00000268,0x08000000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_26 IPU_REGISTERS_OFFSET+0x00000268,0x04000000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_25 IPU_REGISTERS_OFFSET+0x00000268,0x02000000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_24 IPU_REGISTERS_OFFSET+0x00000268,0x01000000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_23 IPU_REGISTERS_OFFSET+0x00000268,0x00800000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_22 IPU_REGISTERS_OFFSET+0x00000268,0x00400000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_21 IPU_REGISTERS_OFFSET+0x00000268,0x00200000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_20 IPU_REGISTERS_OFFSET+0x00000268,0x00100000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_19 IPU_REGISTERS_OFFSET+0x00000268,0x00080000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_18 IPU_REGISTERS_OFFSET+0x00000268,0x00040000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_17 IPU_REGISTERS_OFFSET+0x00000268,0x00020000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_15 IPU_REGISTERS_OFFSET+0x00000268,0x00008000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_14 IPU_REGISTERS_OFFSET+0x00000268,0x00004000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_13 IPU_REGISTERS_OFFSET+0x00000268,0x00002000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_12 IPU_REGISTERS_OFFSET+0x00000268,0x00001000
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_11 IPU_REGISTERS_OFFSET+0x00000268,0x00000800
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_10 IPU_REGISTERS_OFFSET+0x00000268,0x00000400
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_9  IPU_REGISTERS_OFFSET+0x00000268,0x00000200
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_8  IPU_REGISTERS_OFFSET+0x00000268,0x00000100
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_5  IPU_REGISTERS_OFFSET+0x00000268,0x00000020
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_3  IPU_REGISTERS_OFFSET+0x00000268,0x00000008
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_2  IPU_REGISTERS_OFFSET+0x00000268,0x00000004
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_1  IPU_REGISTERS_OFFSET+0x00000268,0x00000002
+#define IPU_IPU_CH_BUF0_RDY0__DMA_CH_BUF0_RDY_0  IPU_REGISTERS_OFFSET+0x00000268,0x00000001
+
+#define IPU_IPU_CH_BUF0_RDY1__ADDR               IPU_REGISTERS_OFFSET+0x0000026C
+#define IPU_IPU_CH_BUF0_RDY1__EMPTY              IPU_REGISTERS_OFFSET+0x0000026C,0x00000000
+#define IPU_IPU_CH_BUF0_RDY1__FULL               IPU_REGISTERS_OFFSET+0x0000026C,0xffffffff
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_52 IPU_REGISTERS_OFFSET+0x0000026C,0x00100000
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_51 IPU_REGISTERS_OFFSET+0x0000026C,0x00080000
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_50 IPU_REGISTERS_OFFSET+0x0000026C,0x00040000
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_49 IPU_REGISTERS_OFFSET+0x0000026C,0x00020000
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_48 IPU_REGISTERS_OFFSET+0x0000026C,0x00010000
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_47 IPU_REGISTERS_OFFSET+0x0000026C,0x00008000
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_46 IPU_REGISTERS_OFFSET+0x0000026C,0x00004000
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_45 IPU_REGISTERS_OFFSET+0x0000026C,0x00002000
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_44 IPU_REGISTERS_OFFSET+0x0000026C,0x00001000
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_43 IPU_REGISTERS_OFFSET+0x0000026C,0x00000800
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_42 IPU_REGISTERS_OFFSET+0x0000026C,0x00000400
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_41 IPU_REGISTERS_OFFSET+0x0000026C,0x00000200
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_40 IPU_REGISTERS_OFFSET+0x0000026C,0x00000100
+#define IPU_IPU_CH_BUF0_RDY1__DMA_CH_BUF0_RDY_33 IPU_REGISTERS_OFFSET+0x0000026C,0x00000002
+
+#define IPU_IPU_CH_BUF1_RDY0__ADDR               IPU_REGISTERS_OFFSET+0x00000270
+#define IPU_IPU_CH_BUF1_RDY0__EMPTY              IPU_REGISTERS_OFFSET+0x00000270,0x00000000
+#define IPU_IPU_CH_BUF1_RDY0__FULL               IPU_REGISTERS_OFFSET+0x00000270,0xffffffff
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_31 IPU_REGISTERS_OFFSET+0x00000270,0x80000000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_29 IPU_REGISTERS_OFFSET+0x00000270,0x20000000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_28 IPU_REGISTERS_OFFSET+0x00000270,0x10000000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_27 IPU_REGISTERS_OFFSET+0x00000270,0x08000000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_26 IPU_REGISTERS_OFFSET+0x00000270,0x04000000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_25 IPU_REGISTERS_OFFSET+0x00000270,0x02000000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_24 IPU_REGISTERS_OFFSET+0x00000270,0x01000000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_23 IPU_REGISTERS_OFFSET+0x00000270,0x00800000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_22 IPU_REGISTERS_OFFSET+0x00000270,0x00400000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_21 IPU_REGISTERS_OFFSET+0x00000270,0x00200000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_20 IPU_REGISTERS_OFFSET+0x00000270,0x00100000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_19 IPU_REGISTERS_OFFSET+0x00000270,0x00080000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_18 IPU_REGISTERS_OFFSET+0x00000270,0x00040000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_17 IPU_REGISTERS_OFFSET+0x00000270,0x00020000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_15 IPU_REGISTERS_OFFSET+0x00000270,0x00008000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_14 IPU_REGISTERS_OFFSET+0x00000270,0x00004000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_13 IPU_REGISTERS_OFFSET+0x00000270,0x00002000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_12 IPU_REGISTERS_OFFSET+0x00000270,0x00001000
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_11 IPU_REGISTERS_OFFSET+0x00000270,0x00000800
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_10 IPU_REGISTERS_OFFSET+0x00000270,0x00000400
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_9  IPU_REGISTERS_OFFSET+0x00000270,0x00000200
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_8  IPU_REGISTERS_OFFSET+0x00000270,0x00000100
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_5  IPU_REGISTERS_OFFSET+0x00000270,0x00000020
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_3  IPU_REGISTERS_OFFSET+0x00000270,0x00000008
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_2  IPU_REGISTERS_OFFSET+0x00000270,0x00000004
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_1  IPU_REGISTERS_OFFSET+0x00000270,0x00000002
+#define IPU_IPU_CH_BUF1_RDY0__DMA_CH_BUF1_RDY_0  IPU_REGISTERS_OFFSET+0x00000270,0x00000001
+
+#define IPU_IPU_CH_BUF1_RDY1__ADDR               IPU_REGISTERS_OFFSET+0x00000274
+#define IPU_IPU_CH_BUF1_RDY1__EMPTY              IPU_REGISTERS_OFFSET+0x00000274,0x00000000
+#define IPU_IPU_CH_BUF1_RDY1__FULL               IPU_REGISTERS_OFFSET+0x00000274,0xffffffff
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_52 IPU_REGISTERS_OFFSET+0x00000274,0x00100000
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_51 IPU_REGISTERS_OFFSET+0x00000274,0x00080000
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_50 IPU_REGISTERS_OFFSET+0x00000274,0x00040000
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_49 IPU_REGISTERS_OFFSET+0x00000274,0x00020000
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_48 IPU_REGISTERS_OFFSET+0x00000274,0x00010000
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_47 IPU_REGISTERS_OFFSET+0x00000274,0x00008000
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_46 IPU_REGISTERS_OFFSET+0x00000274,0x00004000
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_45 IPU_REGISTERS_OFFSET+0x00000274,0x00002000
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_44 IPU_REGISTERS_OFFSET+0x00000274,0x00001000
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_43 IPU_REGISTERS_OFFSET+0x00000274,0x00000800
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_42 IPU_REGISTERS_OFFSET+0x00000274,0x00000400
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_41 IPU_REGISTERS_OFFSET+0x00000274,0x00000200
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_40 IPU_REGISTERS_OFFSET+0x00000274,0x00000100
+#define IPU_IPU_CH_BUF1_RDY1__DMA_CH_BUF1_RDY_33 IPU_REGISTERS_OFFSET+0x00000274,0x00000002
+
+#define IPU_IPU_ALT_CH_BUF0_RDY0__ADDR                   IPU_REGISTERS_OFFSET+0x00000278
+#define IPU_IPU_ALT_CH_BUF0_RDY0__EMPTY                  IPU_REGISTERS_OFFSET+0x00000278,0x00000000
+#define IPU_IPU_ALT_CH_BUF0_RDY0__FULL                   IPU_REGISTERS_OFFSET+0x00000278,0xffffffff
+#define IPU_IPU_ALT_CH_BUF0_RDY0__DMA_CH_ALT_BUF0_RDY_29 IPU_REGISTERS_OFFSET+0x00000278,0x20000000
+#define IPU_IPU_ALT_CH_BUF0_RDY0__DMA_CH_ALT_BUF0_RDY_24 IPU_REGISTERS_OFFSET+0x00000278,0x01000000
+
+#define IPU_IPU_ALT_CH_BUF0_RDY1__ADDR                   IPU_REGISTERS_OFFSET+0x0000027C
+#define IPU_IPU_ALT_CH_BUF0_RDY1__EMPTY                  IPU_REGISTERS_OFFSET+0x0000027C,0x00000000
+#define IPU_IPU_ALT_CH_BUF0_RDY1__FULL                   IPU_REGISTERS_OFFSET+0x0000027C,0xffffffff
+#define IPU_IPU_ALT_CH_BUF0_RDY1__DMA_CH_ALT_BUF0_RDY_52 IPU_REGISTERS_OFFSET+0x0000027C,0x00100000
+#define IPU_IPU_ALT_CH_BUF0_RDY1__DMA_CH_ALT_BUF0_RDY_41 IPU_REGISTERS_OFFSET+0x0000027C,0x00000200
+#define IPU_IPU_ALT_CH_BUF0_RDY1__DMA_CH_ALT_BUF0_RDY_33 IPU_REGISTERS_OFFSET+0x0000027C,0x00000002
+
+#define IPU_IPU_ALT_CH_BUF1_RDY0__ADDR                   IPU_REGISTERS_OFFSET+0x00000280
+#define IPU_IPU_ALT_CH_BUF1_RDY0__EMPTY                  IPU_REGISTERS_OFFSET+0x00000280,0x00000000
+#define IPU_IPU_ALT_CH_BUF1_RDY0__FULL                   IPU_REGISTERS_OFFSET+0x00000280,0xffffffff
+#define IPU_IPU_ALT_CH_BUF1_RDY0__DMA_CH_ALT_BUF1_RDY_29 IPU_REGISTERS_OFFSET+0x00000280,0x20000000
+#define IPU_IPU_ALT_CH_BUF1_RDY0__DMA_CH_ALT_BUF1_RDY_24 IPU_REGISTERS_OFFSET+0x00000280,0x01000000
+
+#define IPU_IPU_ALT_CH_BUF1_RDY1__ADDR                   IPU_REGISTERS_OFFSET+0x00000284
+#define IPU_IPU_ALT_CH_BUF1_RDY1__EMPTY                  IPU_REGISTERS_OFFSET+0x00000284,0x00000000
+#define IPU_IPU_ALT_CH_BUF1_RDY1__FULL                   IPU_REGISTERS_OFFSET+0x00000284,0xffffffff
+#define IPU_IPU_ALT_CH_BUF1_RDY1__DMA_CH_ALT_BUF1_RDY_52 IPU_REGISTERS_OFFSET+0x00000284,0x00100000
+#define IPU_IPU_ALT_CH_BUF1_RDY1__DMA_CH_ALT_BUF1_RDY_41 IPU_REGISTERS_OFFSET+0x00000284,0x00000200
+#define IPU_IPU_ALT_CH_BUF1_RDY1__DMA_CH_ALT_BUF1_RDY_33 IPU_REGISTERS_OFFSET+0x00000284,0x00000002
+
+#define IPU_IPU_CH_BUF2_RDY0__ADDR               IPU_REGISTERS_OFFSET+0x00000288
+#define IPU_IPU_CH_BUF2_RDY0__EMPTY              IPU_REGISTERS_OFFSET+0x00000288,0x00000000
+#define IPU_IPU_CH_BUF2_RDY0__FULL               IPU_REGISTERS_OFFSET+0x00000288,0xffffffff
+#define IPU_IPU_CH_BUF2_RDY0__DMA_CH_BUF2_RDY_28 IPU_REGISTERS_OFFSET+0x00000288,0x10000000
+#define IPU_IPU_CH_BUF2_RDY0__DMA_CH_BUF2_RDY_27 IPU_REGISTERS_OFFSET+0x00000288,0x08000000
+#define IPU_IPU_CH_BUF2_RDY0__DMA_CH_BUF2_RDY_23 IPU_REGISTERS_OFFSET+0x00000288,0x00800000
+#define IPU_IPU_CH_BUF2_RDY0__DMA_CH_BUF2_RDY_21 IPU_REGISTERS_OFFSET+0x00000288,0x00200000
+#define IPU_IPU_CH_BUF2_RDY0__DMA_CH_BUF2_RDY_13 IPU_REGISTERS_OFFSET+0x00000288,0x00002000
+#define IPU_IPU_CH_BUF2_RDY0__DMA_CH_BUF2_RDY_10 IPU_REGISTERS_OFFSET+0x00000288,0x00000400
+#define IPU_IPU_CH_BUF2_RDY0__DMA_CH_BUF2_RDY_9  IPU_REGISTERS_OFFSET+0x00000288,0x00000200
+#define IPU_IPU_CH_BUF2_RDY0__DMA_CH_BUF2_RDY_8  IPU_REGISTERS_OFFSET+0x00000288,0x00000100
+
+#define IPU_IPU_CH_BUF2_RDY1__ADDR  IPU_REGISTERS_OFFSET+0x0000028C
+#define IPU_IPU_CH_BUF2_RDY1__EMPTY IPU_REGISTERS_OFFSET+0x0000028C,0x00000000
+#define IPU_IPU_CH_BUF2_RDY1__FULL  IPU_REGISTERS_OFFSET+0x0000028C,0xffffffff
+
+#define IPU_IDMAC_CONF__ADDR            IPU_REGISTERS_OFFSET+0x00008000
+#define IPU_IDMAC_CONF__EMPTY           IPU_REGISTERS_OFFSET+0x00008000,0x00000000
+#define IPU_IDMAC_CONF__FULL            IPU_REGISTERS_OFFSET+0x00008000,0xffffffff
+#define IPU_IDMAC_CONF__USED_BUFS_EN_R  IPU_REGISTERS_OFFSET+0x00008000,0x02000000
+#define IPU_IDMAC_CONF__USED_BUFS_MAX_R IPU_REGISTERS_OFFSET+0x00008000,0x01E00000
+#define IPU_IDMAC_CONF__USED_BUFS_EN_W  IPU_REGISTERS_OFFSET+0x00008000,0x00100000
+#define IPU_IDMAC_CONF__USED_BUFS_MAX_W IPU_REGISTERS_OFFSET+0x00008000,0x000E0000
+#define IPU_IDMAC_CONF__P_ENDIAN        IPU_REGISTERS_OFFSET+0x00008000,0x00010000
+#define IPU_IDMAC_CONF__RDI             IPU_REGISTERS_OFFSET+0x00008000,0x00000020
+#define IPU_IDMAC_CONF__WIDPT           IPU_REGISTERS_OFFSET+0x00008000,0x00000018
+#define IPU_IDMAC_CONF__MAX_REQ_READ    IPU_REGISTERS_OFFSET+0x00008000,0x00000007
+
+#define IPU_IDMAC_CH_EN_1__ADDR           IPU_REGISTERS_OFFSET+0x00008004
+#define IPU_IDMAC_CH_EN_1__EMPTY          IPU_REGISTERS_OFFSET+0x00008004,0x00000000
+#define IPU_IDMAC_CH_EN_1__FULL           IPU_REGISTERS_OFFSET+0x00008004,0xffffffff
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_31 IPU_REGISTERS_OFFSET+0x00008004,0x80000000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_29 IPU_REGISTERS_OFFSET+0x00008004,0x20000000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_28 IPU_REGISTERS_OFFSET+0x00008004,0x10000000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_27 IPU_REGISTERS_OFFSET+0x00008004,0x08000000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_26 IPU_REGISTERS_OFFSET+0x00008004,0x04000000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_25 IPU_REGISTERS_OFFSET+0x00008004,0x02000000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_24 IPU_REGISTERS_OFFSET+0x00008004,0x01000000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_23 IPU_REGISTERS_OFFSET+0x00008004,0x00800000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_22 IPU_REGISTERS_OFFSET+0x00008004,0x00400000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_21 IPU_REGISTERS_OFFSET+0x00008004,0x00200000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_20 IPU_REGISTERS_OFFSET+0x00008004,0x00100000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_19 IPU_REGISTERS_OFFSET+0x00008004,0x00080000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_18 IPU_REGISTERS_OFFSET+0x00008004,0x00040000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_17 IPU_REGISTERS_OFFSET+0x00008004,0x00020000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_15 IPU_REGISTERS_OFFSET+0x00008004,0x00008000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_14 IPU_REGISTERS_OFFSET+0x00008004,0x00004000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_13 IPU_REGISTERS_OFFSET+0x00008004,0x00002000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_12 IPU_REGISTERS_OFFSET+0x00008004,0x00001000
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_11 IPU_REGISTERS_OFFSET+0x00008004,0x00000800
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_10 IPU_REGISTERS_OFFSET+0x00008004,0x00000400
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_9  IPU_REGISTERS_OFFSET+0x00008004,0x00000200
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_8  IPU_REGISTERS_OFFSET+0x00008004,0x00000100
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_5  IPU_REGISTERS_OFFSET+0x00008004,0x00000020
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_3  IPU_REGISTERS_OFFSET+0x00008004,0x00000008
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_2  IPU_REGISTERS_OFFSET+0x00008004,0x00000004
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_1  IPU_REGISTERS_OFFSET+0x00008004,0x00000002
+#define IPU_IDMAC_CH_EN_1__IDMAC_CH_EN_0  IPU_REGISTERS_OFFSET+0x00008004,0x00000001
+
+#define IPU_IDMAC_CH_EN_2__ADDR           IPU_REGISTERS_OFFSET+0x00008008
+#define IPU_IDMAC_CH_EN_2__EMPTY          IPU_REGISTERS_OFFSET+0x00008008,0x00000000
+#define IPU_IDMAC_CH_EN_2__FULL           IPU_REGISTERS_OFFSET+0x00008008,0xffffffff
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_52 IPU_REGISTERS_OFFSET+0x00008008,0x00100000
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_51 IPU_REGISTERS_OFFSET+0x00008008,0x00080000
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_50 IPU_REGISTERS_OFFSET+0x00008008,0x00040000
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_49 IPU_REGISTERS_OFFSET+0x00008008,0x00020000
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_48 IPU_REGISTERS_OFFSET+0x00008008,0x00010000
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_47 IPU_REGISTERS_OFFSET+0x00008008,0x00008000
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_46 IPU_REGISTERS_OFFSET+0x00008008,0x00004000
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_45 IPU_REGISTERS_OFFSET+0x00008008,0x00002000
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_44 IPU_REGISTERS_OFFSET+0x00008008,0x00001000
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_43 IPU_REGISTERS_OFFSET+0x00008008,0x00000800
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_42 IPU_REGISTERS_OFFSET+0x00008008,0x00000400
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_41 IPU_REGISTERS_OFFSET+0x00008008,0x00000200
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_40 IPU_REGISTERS_OFFSET+0x00008008,0x00000100
+#define IPU_IDMAC_CH_EN_2__IDMAC_CH_EN_33 IPU_REGISTERS_OFFSET+0x00008008,0x00000002
+
+#define IPU_IDMAC_SEP_ALPHA__ADDR            IPU_REGISTERS_OFFSET+0x0000800C
+#define IPU_IDMAC_SEP_ALPHA__EMPTY           IPU_REGISTERS_OFFSET+0x0000800C,0x00000000
+#define IPU_IDMAC_SEP_ALPHA__FULL            IPU_REGISTERS_OFFSET+0x0000800C,0xffffffff
+#define IPU_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_29 IPU_REGISTERS_OFFSET+0x0000800C,0x20000000
+#define IPU_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_27 IPU_REGISTERS_OFFSET+0x0000800C,0x08000000
+#define IPU_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_25 IPU_REGISTERS_OFFSET+0x0000800C,0x02000000
+#define IPU_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_24 IPU_REGISTERS_OFFSET+0x0000800C,0x01000000
+#define IPU_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_23 IPU_REGISTERS_OFFSET+0x0000800C,0x00800000
+#define IPU_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_15 IPU_REGISTERS_OFFSET+0x0000800C,0x00008000
+#define IPU_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_14 IPU_REGISTERS_OFFSET+0x0000800C,0x00004000
+
+#define IPU_IDMAC_ALT_SEP_ALPHA__ADDR                IPU_REGISTERS_OFFSET+0x00008010
+#define IPU_IDMAC_ALT_SEP_ALPHA__EMPTY               IPU_REGISTERS_OFFSET+0x00008010,0x00000000
+#define IPU_IDMAC_ALT_SEP_ALPHA__FULL                IPU_REGISTERS_OFFSET+0x00008010,0xffffffff
+#define IPU_IDMAC_ALT_SEP_ALPHA__IDMAC_ALT_SEP_AL_29 IPU_REGISTERS_OFFSET+0x00008010,0x20000000
+#define IPU_IDMAC_ALT_SEP_ALPHA__IDMAC_ALT_SEP_AL_24 IPU_REGISTERS_OFFSET+0x00008010,0x01000000
+#define IPU_IDMAC_ALT_SEP_ALPHA__IDMAC_ALT_SEP_AL_23 IPU_REGISTERS_OFFSET+0x00008010,0x00800000
+
+#define IPU_IDMAC_CH_PRI_1__ADDR            IPU_REGISTERS_OFFSET+0x00008014
+#define IPU_IDMAC_CH_PRI_1__EMPTY           IPU_REGISTERS_OFFSET+0x00008014,0x00000000
+#define IPU_IDMAC_CH_PRI_1__FULL            IPU_REGISTERS_OFFSET+0x00008014,0xffffffff
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_29 IPU_REGISTERS_OFFSET+0x00008014,0x20000000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_28 IPU_REGISTERS_OFFSET+0x00008014,0x10000000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_27 IPU_REGISTERS_OFFSET+0x00008014,0x08000000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_26 IPU_REGISTERS_OFFSET+0x00008014,0x04000000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_25 IPU_REGISTERS_OFFSET+0x00008014,0x02000000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_24 IPU_REGISTERS_OFFSET+0x00008014,0x01000000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_23 IPU_REGISTERS_OFFSET+0x00008014,0x00800000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_22 IPU_REGISTERS_OFFSET+0x00008014,0x00400000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_21 IPU_REGISTERS_OFFSET+0x00008014,0x00200000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_20 IPU_REGISTERS_OFFSET+0x00008014,0x00100000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_15 IPU_REGISTERS_OFFSET+0x00008014,0x00008000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_14 IPU_REGISTERS_OFFSET+0x00008014,0x00004000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_13 IPU_REGISTERS_OFFSET+0x00008014,0x00002000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_12 IPU_REGISTERS_OFFSET+0x00008014,0x00001000
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_11 IPU_REGISTERS_OFFSET+0x00008014,0x00000800
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_10 IPU_REGISTERS_OFFSET+0x00008014,0x00000400
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_9  IPU_REGISTERS_OFFSET+0x00008014,0x00000200
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_8  IPU_REGISTERS_OFFSET+0x00008014,0x00000100
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_5  IPU_REGISTERS_OFFSET+0x00008014,0x00000020
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_3  IPU_REGISTERS_OFFSET+0x00008014,0x00000008
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_2  IPU_REGISTERS_OFFSET+0x00008014,0x00000004
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_1  IPU_REGISTERS_OFFSET+0x00008014,0x00000002
+#define IPU_IDMAC_CH_PRI_1__IDMAC_CH_PRI_0  IPU_REGISTERS_OFFSET+0x00008014,0x00000001
+
+#define IPU_IDMAC_CH_PRI_2__ADDR            IPU_REGISTERS_OFFSET+0x00008018
+#define IPU_IDMAC_CH_PRI_2__EMPTY           IPU_REGISTERS_OFFSET+0x00008018,0x00000000
+#define IPU_IDMAC_CH_PRI_2__FULL            IPU_REGISTERS_OFFSET+0x00008018,0xffffffff
+#define IPU_IDMAC_CH_PRI_2__IDMAC_CH_PRI_50 IPU_REGISTERS_OFFSET+0x00008018,0x00040000
+#define IPU_IDMAC_CH_PRI_2__IDMAC_CH_PRI_49 IPU_REGISTERS_OFFSET+0x00008018,0x00020000
+#define IPU_IDMAC_CH_PRI_2__IDMAC_CH_PRI_48 IPU_REGISTERS_OFFSET+0x00008018,0x00010000
+#define IPU_IDMAC_CH_PRI_2__IDMAC_CH_PRI_47 IPU_REGISTERS_OFFSET+0x00008018,0x00008000
+#define IPU_IDMAC_CH_PRI_2__IDMAC_CH_PRI_46 IPU_REGISTERS_OFFSET+0x00008018,0x00004000
+#define IPU_IDMAC_CH_PRI_2__IDMAC_CH_PRI_45 IPU_REGISTERS_OFFSET+0x00008018,0x00002000
+#define IPU_IDMAC_CH_PRI_2__IDMAC_CH_PRI_44 IPU_REGISTERS_OFFSET+0x00008018,0x00001000
+#define IPU_IDMAC_CH_PRI_2__IDMAC_CH_PRI_43 IPU_REGISTERS_OFFSET+0x00008018,0x00000800
+#define IPU_IDMAC_CH_PRI_2__IDMAC_CH_PRI_42 IPU_REGISTERS_OFFSET+0x00008018,0x00000400
+#define IPU_IDMAC_CH_PRI_2__IDMAC_CH_PRI_41 IPU_REGISTERS_OFFSET+0x00008018,0x00000200
+#define IPU_IDMAC_CH_PRI_2__IDMAC_CH_PRI_40 IPU_REGISTERS_OFFSET+0x00008018,0x00000100
+
+#define IPU_IDMAC_WM_EN_1__ADDR           IPU_REGISTERS_OFFSET+0x0000801C
+#define IPU_IDMAC_WM_EN_1__EMPTY          IPU_REGISTERS_OFFSET+0x0000801C,0x00000000
+#define IPU_IDMAC_WM_EN_1__FULL           IPU_REGISTERS_OFFSET+0x0000801C,0xffffffff
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_29 IPU_REGISTERS_OFFSET+0x0000801C,0x20000000
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_28 IPU_REGISTERS_OFFSET+0x0000801C,0x10000000
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_27 IPU_REGISTERS_OFFSET+0x0000801C,0x08000000
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_26 IPU_REGISTERS_OFFSET+0x0000801C,0x04000000
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_25 IPU_REGISTERS_OFFSET+0x0000801C,0x02000000
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_24 IPU_REGISTERS_OFFSET+0x0000801C,0x01000000
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_23 IPU_REGISTERS_OFFSET+0x0000801C,0x00800000
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_14 IPU_REGISTERS_OFFSET+0x0000801C,0x00004000
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_13 IPU_REGISTERS_OFFSET+0x0000801C,0x00002000
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_12 IPU_REGISTERS_OFFSET+0x0000801C,0x00001000
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_10 IPU_REGISTERS_OFFSET+0x0000801C,0x00000400
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_8  IPU_REGISTERS_OFFSET+0x0000801C,0x00000100
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_3  IPU_REGISTERS_OFFSET+0x0000801C,0x00000008
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_2  IPU_REGISTERS_OFFSET+0x0000801C,0x00000004
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_1  IPU_REGISTERS_OFFSET+0x0000801C,0x00000002
+#define IPU_IDMAC_WM_EN_1__IDMAC_WM_EN_0  IPU_REGISTERS_OFFSET+0x0000801C,0x00000001
+
+#define IPU_IDMAC_WM_EN_2__ADDR           IPU_REGISTERS_OFFSET+0x00008020
+#define IPU_IDMAC_WM_EN_2__EMPTY          IPU_REGISTERS_OFFSET+0x00008020,0x00000000
+#define IPU_IDMAC_WM_EN_2__FULL           IPU_REGISTERS_OFFSET+0x00008020,0xffffffff
+#define IPU_IDMAC_WM_EN_2__IDMAC_WM_EN_44 IPU_REGISTERS_OFFSET+0x00008020,0x00001000
+#define IPU_IDMAC_WM_EN_2__IDMAC_WM_EN_43 IPU_REGISTERS_OFFSET+0x00008020,0x00000800
+#define IPU_IDMAC_WM_EN_2__IDMAC_WM_EN_42 IPU_REGISTERS_OFFSET+0x00008020,0x00000400
+#define IPU_IDMAC_WM_EN_2__IDMAC_WM_EN_41 IPU_REGISTERS_OFFSET+0x00008020,0x00000200
+#define IPU_IDMAC_WM_EN_2__IDMAC_WM_EN_40 IPU_REGISTERS_OFFSET+0x00008020,0x00000100
+
+#define IPU_IDMAC_LOCK_EN_1__ADDR             IPU_REGISTERS_OFFSET+0x00008024
+#define IPU_IDMAC_LOCK_EN_1__EMPTY            IPU_REGISTERS_OFFSET+0x00008024,0x00000000
+#define IPU_IDMAC_LOCK_EN_1__FULL             IPU_REGISTERS_OFFSET+0x00008024,0xffffffff
+#define IPU_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_28 IPU_REGISTERS_OFFSET+0x00008024,0x00300000
+#define IPU_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_27 IPU_REGISTERS_OFFSET+0x00008024,0x000C0000
+#define IPU_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_23 IPU_REGISTERS_OFFSET+0x00008024,0x00030000
+#define IPU_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_22 IPU_REGISTERS_OFFSET+0x00008024,0x0000C000
+#define IPU_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_21 IPU_REGISTERS_OFFSET+0x00008024,0x00003000
+#define IPU_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_20 IPU_REGISTERS_OFFSET+0x00008024,0x00000C00
+#define IPU_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_15 IPU_REGISTERS_OFFSET+0x00008024,0x00000300
+#define IPU_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_14 IPU_REGISTERS_OFFSET+0x00008024,0x000000C0
+#define IPU_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_12 IPU_REGISTERS_OFFSET+0x00008024,0x00000030
+#define IPU_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_11 IPU_REGISTERS_OFFSET+0x00008024,0x0000000C
+#define IPU_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_5  IPU_REGISTERS_OFFSET+0x00008024,0x00000003
+
+#define IPU_IDMAC_LOCK_EN_2__ADDR             IPU_REGISTERS_OFFSET+0x00008028
+#define IPU_IDMAC_LOCK_EN_2__EMPTY            IPU_REGISTERS_OFFSET+0x00008028,0x00000000
+#define IPU_IDMAC_LOCK_EN_2__FULL             IPU_REGISTERS_OFFSET+0x00008028,0xffffffff
+#define IPU_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_50 IPU_REGISTERS_OFFSET+0x00008028,0x00000C00
+#define IPU_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_49 IPU_REGISTERS_OFFSET+0x00008028,0x00000300
+#define IPU_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_48 IPU_REGISTERS_OFFSET+0x00008028,0x000000C0
+#define IPU_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_47 IPU_REGISTERS_OFFSET+0x00008028,0x00000030
+#define IPU_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_46 IPU_REGISTERS_OFFSET+0x00008028,0x0000000C
+#define IPU_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_45 IPU_REGISTERS_OFFSET+0x00008028,0x00000003
+
+#define IPU_IDMAC_SUB_ADDR_0__ADDR  IPU_REGISTERS_OFFSET+0x0000802C
+#define IPU_IDMAC_SUB_ADDR_0__EMPTY IPU_REGISTERS_OFFSET+0x0000802C,0x00000000
+#define IPU_IDMAC_SUB_ADDR_0__FULL  IPU_REGISTERS_OFFSET+0x0000802C,0xffffffff
+
+#define IPU_IDMAC_SUB_ADDR_1__ADDR              IPU_REGISTERS_OFFSET+0x00008030
+#define IPU_IDMAC_SUB_ADDR_1__EMPTY             IPU_REGISTERS_OFFSET+0x00008030,0x00000000
+#define IPU_IDMAC_SUB_ADDR_1__FULL              IPU_REGISTERS_OFFSET+0x00008030,0xffffffff
+#define IPU_IDMAC_SUB_ADDR_1__IDMAC_SUB_ADDR_33 IPU_REGISTERS_OFFSET+0x00008030,0x7F000000
+#define IPU_IDMAC_SUB_ADDR_1__IDMAC_SUB_ADDR_29 IPU_REGISTERS_OFFSET+0x00008030,0x007F0000
+#define IPU_IDMAC_SUB_ADDR_1__IDMAC_SUB_ADDR_24 IPU_REGISTERS_OFFSET+0x00008030,0x00007F00
+#define IPU_IDMAC_SUB_ADDR_1__IDMAC_SUB_ADDR_23 IPU_REGISTERS_OFFSET+0x00008030,0x0000007F
+
+#define IPU_IDMAC_SUB_ADDR_2__ADDR              IPU_REGISTERS_OFFSET+0x00008034
+#define IPU_IDMAC_SUB_ADDR_2__EMPTY             IPU_REGISTERS_OFFSET+0x00008034,0x00000000
+#define IPU_IDMAC_SUB_ADDR_2__FULL              IPU_REGISTERS_OFFSET+0x00008034,0xffffffff
+#define IPU_IDMAC_SUB_ADDR_2__IDMAC_SUB_ADDR_52 IPU_REGISTERS_OFFSET+0x00008034,0x007F0000
+#define IPU_IDMAC_SUB_ADDR_2__IDMAC_SUB_ADDR_51 IPU_REGISTERS_OFFSET+0x00008034,0x00007F00
+#define IPU_IDMAC_SUB_ADDR_2__IDMAC_SUB_ADDR_41 IPU_REGISTERS_OFFSET+0x00008034,0x0000007F
+
+#define IPU_IDMAC_SUB_ADDR_3__ADDR              IPU_REGISTERS_OFFSET+0x00008038
+#define IPU_IDMAC_SUB_ADDR_3__EMPTY             IPU_REGISTERS_OFFSET+0x00008038,0x00000000
+#define IPU_IDMAC_SUB_ADDR_3__FULL              IPU_REGISTERS_OFFSET+0x00008038,0xffffffff
+#define IPU_IDMAC_SUB_ADDR_3__IDMAC_SUB_ADDR_27 IPU_REGISTERS_OFFSET+0x00008038,0x7F000000
+#define IPU_IDMAC_SUB_ADDR_3__IDMAC_SUB_ADDR_13 IPU_REGISTERS_OFFSET+0x00008038,0x007F0000
+#define IPU_IDMAC_SUB_ADDR_3__IDMAC_SUB_ADDR_10 IPU_REGISTERS_OFFSET+0x00008038,0x00007F00
+#define IPU_IDMAC_SUB_ADDR_3__IDMAC_SUB_ADDR_9  IPU_REGISTERS_OFFSET+0x00008038,0x0000007F
+
+#define IPU_IDMAC_SUB_ADDR_4__ADDR              IPU_REGISTERS_OFFSET+0x0000803C
+#define IPU_IDMAC_SUB_ADDR_4__EMPTY             IPU_REGISTERS_OFFSET+0x0000803C,0x00000000
+#define IPU_IDMAC_SUB_ADDR_4__FULL              IPU_REGISTERS_OFFSET+0x0000803C,0xffffffff
+#define IPU_IDMAC_SUB_ADDR_4__IDMAC_SUB_ADDR_21 IPU_REGISTERS_OFFSET+0x0000803C,0x007F0000
+#define IPU_IDMAC_SUB_ADDR_4__IDMAC_SUB_ADDR_8  IPU_REGISTERS_OFFSET+0x0000803C,0x00007F00
+#define IPU_IDMAC_SUB_ADDR_4__IDMAC_SUB_ADDR_28 IPU_REGISTERS_OFFSET+0x0000803C,0x0000007F
+
+#define IPU_IDMAC_BNDM_EN_1__ADDR             IPU_REGISTERS_OFFSET+0x00008040
+#define IPU_IDMAC_BNDM_EN_1__EMPTY            IPU_REGISTERS_OFFSET+0x00008040,0x00000000
+#define IPU_IDMAC_BNDM_EN_1__FULL             IPU_REGISTERS_OFFSET+0x00008040,0xffffffff
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_26 IPU_REGISTERS_OFFSET+0x00008040,0x04000000
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_25 IPU_REGISTERS_OFFSET+0x00008040,0x02000000
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_22 IPU_REGISTERS_OFFSET+0x00008040,0x00400000
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_21 IPU_REGISTERS_OFFSET+0x00008040,0x00200000
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_20 IPU_REGISTERS_OFFSET+0x00008040,0x00100000
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_12 IPU_REGISTERS_OFFSET+0x00008040,0x00001000
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_11 IPU_REGISTERS_OFFSET+0x00008040,0x00000800
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_10 IPU_REGISTERS_OFFSET+0x00008040,0x00000400
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_9  IPU_REGISTERS_OFFSET+0x00008040,0x00000200
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_8  IPU_REGISTERS_OFFSET+0x00008040,0x00000100
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_5  IPU_REGISTERS_OFFSET+0x00008040,0x00000020
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_3  IPU_REGISTERS_OFFSET+0x00008040,0x00000008
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_2  IPU_REGISTERS_OFFSET+0x00008040,0x00000004
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_1  IPU_REGISTERS_OFFSET+0x00008040,0x00000002
+#define IPU_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_0  IPU_REGISTERS_OFFSET+0x00008040,0x00000001
+
+#define IPU_IDMAC_BNDM_EN_2__ADDR             IPU_REGISTERS_OFFSET+0x00008044
+#define IPU_IDMAC_BNDM_EN_2__EMPTY            IPU_REGISTERS_OFFSET+0x00008044,0x00000000
+#define IPU_IDMAC_BNDM_EN_2__FULL             IPU_REGISTERS_OFFSET+0x00008044,0xffffffff
+#define IPU_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_50 IPU_REGISTERS_OFFSET+0x00008044,0x00040000
+#define IPU_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_49 IPU_REGISTERS_OFFSET+0x00008044,0x00020000
+#define IPU_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_48 IPU_REGISTERS_OFFSET+0x00008044,0x00010000
+#define IPU_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_47 IPU_REGISTERS_OFFSET+0x00008044,0x00008000
+#define IPU_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_46 IPU_REGISTERS_OFFSET+0x00008044,0x00004000
+#define IPU_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_45 IPU_REGISTERS_OFFSET+0x00008044,0x00002000
+
+#define IPU_IDMAC_SC_CORD__ADDR  IPU_REGISTERS_OFFSET+0x00008048
+#define IPU_IDMAC_SC_CORD__EMPTY IPU_REGISTERS_OFFSET+0x00008048,0x00000000
+#define IPU_IDMAC_SC_CORD__FULL  IPU_REGISTERS_OFFSET+0x00008048,0xffffffff
+#define IPU_IDMAC_SC_CORD__SX0   IPU_REGISTERS_OFFSET+0x00008048,0x0FFF0000
+#define IPU_IDMAC_SC_CORD__SY0   IPU_REGISTERS_OFFSET+0x00008048,0x000007FF
+
+#define IPU_IDMAC_SC_CORD1__ADDR  IPU_REGISTERS_OFFSET+0x0000804C
+#define IPU_IDMAC_SC_CORD1__EMPTY IPU_REGISTERS_OFFSET+0x0000804C,0x00000000
+#define IPU_IDMAC_SC_CORD1__FULL  IPU_REGISTERS_OFFSET+0x0000804C,0xffffffff
+#define IPU_IDMAC_SC_CORD1__SX1   IPU_REGISTERS_OFFSET+0x0000804C,0x0FFF0000
+#define IPU_IDMAC_SC_CORD1__SY1   IPU_REGISTERS_OFFSET+0x0000804C,0x000007FF
+
+#define IPU_IDMAC_CH_BUSY_1__ADDR             IPU_REGISTERS_OFFSET+0x00008100
+#define IPU_IDMAC_CH_BUSY_1__EMPTY            IPU_REGISTERS_OFFSET+0x00008100,0x00000000
+#define IPU_IDMAC_CH_BUSY_1__FULL             IPU_REGISTERS_OFFSET+0x00008100,0xffffffff
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_31 IPU_REGISTERS_OFFSET+0x00008100,0x80000000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_29 IPU_REGISTERS_OFFSET+0x00008100,0x20000000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_28 IPU_REGISTERS_OFFSET+0x00008100,0x10000000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_27 IPU_REGISTERS_OFFSET+0x00008100,0x08000000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_26 IPU_REGISTERS_OFFSET+0x00008100,0x04000000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_25 IPU_REGISTERS_OFFSET+0x00008100,0x02000000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_24 IPU_REGISTERS_OFFSET+0x00008100,0x01000000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_23 IPU_REGISTERS_OFFSET+0x00008100,0x00800000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_22 IPU_REGISTERS_OFFSET+0x00008100,0x00400000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_21 IPU_REGISTERS_OFFSET+0x00008100,0x00200000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_20 IPU_REGISTERS_OFFSET+0x00008100,0x00100000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_18 IPU_REGISTERS_OFFSET+0x00008100,0x00040000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_17 IPU_REGISTERS_OFFSET+0x00008100,0x00020000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_15 IPU_REGISTERS_OFFSET+0x00008100,0x00008000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_14 IPU_REGISTERS_OFFSET+0x00008100,0x00004000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_13 IPU_REGISTERS_OFFSET+0x00008100,0x00002000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_12 IPU_REGISTERS_OFFSET+0x00008100,0x00001000
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_11 IPU_REGISTERS_OFFSET+0x00008100,0x00000800
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_10 IPU_REGISTERS_OFFSET+0x00008100,0x00000400
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_9  IPU_REGISTERS_OFFSET+0x00008100,0x00000200
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_8  IPU_REGISTERS_OFFSET+0x00008100,0x00000100
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_5  IPU_REGISTERS_OFFSET+0x00008100,0x00000020
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_3  IPU_REGISTERS_OFFSET+0x00008100,0x00000008
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_2  IPU_REGISTERS_OFFSET+0x00008100,0x00000004
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_1  IPU_REGISTERS_OFFSET+0x00008100,0x00000002
+#define IPU_IDMAC_CH_BUSY_1__IDMAC_CH_BUSY_0  IPU_REGISTERS_OFFSET+0x00008100,0x00000001
+
+#define IPU_IDMAC_CH_BUSY_2__ADDR             IPU_REGISTERS_OFFSET+0x00008104
+#define IPU_IDMAC_CH_BUSY_2__EMPTY            IPU_REGISTERS_OFFSET+0x00008104,0x00000000
+#define IPU_IDMAC_CH_BUSY_2__FULL             IPU_REGISTERS_OFFSET+0x00008104,0xffffffff
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_52 IPU_REGISTERS_OFFSET+0x00008104,0x00100000
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_51 IPU_REGISTERS_OFFSET+0x00008104,0x00080000
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_50 IPU_REGISTERS_OFFSET+0x00008104,0x00040000
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_49 IPU_REGISTERS_OFFSET+0x00008104,0x00020000
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_48 IPU_REGISTERS_OFFSET+0x00008104,0x00010000
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_47 IPU_REGISTERS_OFFSET+0x00008104,0x00008000
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_46 IPU_REGISTERS_OFFSET+0x00008104,0x00004000
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_45 IPU_REGISTERS_OFFSET+0x00008104,0x00002000
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_44 IPU_REGISTERS_OFFSET+0x00008104,0x00001000
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_43 IPU_REGISTERS_OFFSET+0x00008104,0x00000800
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_42 IPU_REGISTERS_OFFSET+0x00008104,0x00000400
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_41 IPU_REGISTERS_OFFSET+0x00008104,0x00000200
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_40 IPU_REGISTERS_OFFSET+0x00008104,0x00000100
+#define IPU_IDMAC_CH_BUSY_2__IDMAC_CH_BUSY_33 IPU_REGISTERS_OFFSET+0x00008104,0x00000002
+
+#define IPU_DP_COM_CONF_SYNC__ADDR                     IPU_MEMORY_OFFSET+0x0040000
+#define IPU_DP_COM_CONF_SYNC__EMPTY                    IPU_MEMORY_OFFSET+0x0040000,0x00000000
+#define IPU_DP_COM_CONF_SYNC__FULL                     IPU_MEMORY_OFFSET+0x0040000,0xffffffff
+#define IPU_DP_COM_CONF_SYNC__DP_GAMMA_YUV_EN_SYNC     IPU_MEMORY_OFFSET+0x0040000,0x00002000
+#define IPU_DP_COM_CONF_SYNC__DP_GAMMA_EN_SYNC         IPU_MEMORY_OFFSET+0x0040000,0x00001000
+#define IPU_DP_COM_CONF_SYNC__DP_CSC_YUV_SAT_MODE_SYNC IPU_MEMORY_OFFSET+0x0040000,0x00000800
+#define IPU_DP_COM_CONF_SYNC__DP_CSC_GAMUT_SAT_EN_SYNC IPU_MEMORY_OFFSET+0x0040000,0x00000400
+#define IPU_DP_COM_CONF_SYNC__DP_CSC_DEF_SYNC          IPU_MEMORY_OFFSET+0x0040000,0x00000300
+#define IPU_DP_COM_CONF_SYNC__DP_COC_SYNC              IPU_MEMORY_OFFSET+0x0040000,0x00000070
+#define IPU_DP_COM_CONF_SYNC__DP_GWCKE_SYNC            IPU_MEMORY_OFFSET+0x0040000,0x00000008
+#define IPU_DP_COM_CONF_SYNC__DP_GWAM_SYNC             IPU_MEMORY_OFFSET+0x0040000,0x00000004
+#define IPU_DP_COM_CONF_SYNC__DP_GWSEL_SYNC            IPU_MEMORY_OFFSET+0x0040000,0x00000002
+#define IPU_DP_COM_CONF_SYNC__DP_FG_EN_SYNC            IPU_MEMORY_OFFSET+0x0040000,0x00000001
+
+#define IPU_DP_GRAPH_WIND_CTRL_SYNC__ADDR          IPU_MEMORY_OFFSET+0x0040004
+#define IPU_DP_GRAPH_WIND_CTRL_SYNC__EMPTY         IPU_MEMORY_OFFSET+0x0040004,0x00000000
+#define IPU_DP_GRAPH_WIND_CTRL_SYNC__FULL          IPU_MEMORY_OFFSET+0x0040004,0xffffffff
+#define IPU_DP_GRAPH_WIND_CTRL_SYNC__DP_GWAV_SYNC  IPU_MEMORY_OFFSET+0x0040004,0xFF000000
+#define IPU_DP_GRAPH_WIND_CTRL_SYNC__DP_GWCKR_SYNC IPU_MEMORY_OFFSET+0x0040004,0x00FF0000
+#define IPU_DP_GRAPH_WIND_CTRL_SYNC__DP_GWCKG_SYNC IPU_MEMORY_OFFSET+0x0040004,0x0000FF00
+#define IPU_DP_GRAPH_WIND_CTRL_SYNC__DP_GWCKB_SYNC IPU_MEMORY_OFFSET+0x0040004,0x000000FF
+
+#define IPU_DP_FG_POS_SYNC__ADDR         IPU_MEMORY_OFFSET+0x0040008
+#define IPU_DP_FG_POS_SYNC__EMPTY        IPU_MEMORY_OFFSET+0x0040008,0x00000000
+#define IPU_DP_FG_POS_SYNC__FULL         IPU_MEMORY_OFFSET+0x0040008,0xffffffff
+#define IPU_DP_FG_POS_SYNC__DP_FGXP_SYNC IPU_MEMORY_OFFSET+0x0040008,0x07FF0000
+#define IPU_DP_FG_POS_SYNC__DP_FGYP_SYNC IPU_MEMORY_OFFSET+0x0040008,0x000007FF
+
+#define IPU_DP_CUR_POS_SYNC__ADDR        IPU_MEMORY_OFFSET+0x004000C
+#define IPU_DP_CUR_POS_SYNC__EMPTY       IPU_MEMORY_OFFSET+0x004000C,0x00000000
+#define IPU_DP_CUR_POS_SYNC__FULL        IPU_MEMORY_OFFSET+0x004000C,0xffffffff
+#define IPU_DP_CUR_POS_SYNC__DP_CXW_SYNC IPU_MEMORY_OFFSET+0x004000C,0xF8000000
+#define IPU_DP_CUR_POS_SYNC__DP_CXP_SYNC IPU_MEMORY_OFFSET+0x004000C,0x07FF0000
+#define IPU_DP_CUR_POS_SYNC__DP_CYH_SYNC IPU_MEMORY_OFFSET+0x004000C,0x0000F800
+#define IPU_DP_CUR_POS_SYNC__DP_CYP_SYNC IPU_MEMORY_OFFSET+0x004000C,0x000007FF
+
+#define IPU_DP_CUR_MAP_SYNC__ADDR              IPU_MEMORY_OFFSET+0x0040010
+#define IPU_DP_CUR_MAP_SYNC__EMPTY             IPU_MEMORY_OFFSET+0x0040010,0x00000000
+#define IPU_DP_CUR_MAP_SYNC__FULL              IPU_MEMORY_OFFSET+0x0040010,0xffffffff
+#define IPU_DP_CUR_MAP_SYNC__DP_CUR_COL_R_SYNC IPU_MEMORY_OFFSET+0x0040010,0x00FF0000
+#define IPU_DP_CUR_MAP_SYNC__DP_CUR_COL_G_SYNC IPU_MEMORY_OFFSET+0x0040010,0x0000FF00
+#define IPU_DP_CUR_MAP_SYNC__DP_CUR_COL_B_SYNC IPU_MEMORY_OFFSET+0x0040010,0x000000FF
+
+#define IPU_DP_GAMMA_C_SYNC_0__ADDR              IPU_MEMORY_OFFSET+0x0040014
+#define IPU_DP_GAMMA_C_SYNC_0__EMPTY             IPU_MEMORY_OFFSET+0x0040014,0x00000000
+#define IPU_DP_GAMMA_C_SYNC_0__FULL              IPU_MEMORY_OFFSET+0x0040014,0xffffffff
+#define IPU_DP_GAMMA_C_SYNC_0__DP_GAMMA_C_SYNC_1 IPU_MEMORY_OFFSET+0x0040014,0x01FF0000
+#define IPU_DP_GAMMA_C_SYNC_0__DP_GAMMA_C_SYNC_0 IPU_MEMORY_OFFSET+0x0040014,0x000001FF
+
+#define IPU_DP_GAMMA_C_SYNC_1__ADDR              IPU_MEMORY_OFFSET+0x0040018
+#define IPU_DP_GAMMA_C_SYNC_1__EMPTY             IPU_MEMORY_OFFSET+0x0040018,0x00000000
+#define IPU_DP_GAMMA_C_SYNC_1__FULL              IPU_MEMORY_OFFSET+0x0040018,0xffffffff
+#define IPU_DP_GAMMA_C_SYNC_1__DP_GAMMA_C_SYNC_3 IPU_MEMORY_OFFSET+0x0040018,0x01FF0000
+#define IPU_DP_GAMMA_C_SYNC_1__DP_GAMMA_C_SYNC_2 IPU_MEMORY_OFFSET+0x0040018,0x000001FF
+
+#define IPU_DP_GAMMA_C_SYNC_2__ADDR              IPU_MEMORY_OFFSET+0x004001C
+#define IPU_DP_GAMMA_C_SYNC_2__EMPTY             IPU_MEMORY_OFFSET+0x004001C,0x00000000
+#define IPU_DP_GAMMA_C_SYNC_2__FULL              IPU_MEMORY_OFFSET+0x004001C,0xffffffff
+#define IPU_DP_GAMMA_C_SYNC_2__DP_GAMMA_C_SYNC_5 IPU_MEMORY_OFFSET+0x004001C,0x01FF0000
+#define IPU_DP_GAMMA_C_SYNC_2__DP_GAMMA_C_SYNC_4 IPU_MEMORY_OFFSET+0x004001C,0x000001FF
+
+#define IPU_DP_GAMMA_C_SYNC_3__ADDR              IPU_MEMORY_OFFSET+0x0040020
+#define IPU_DP_GAMMA_C_SYNC_3__EMPTY             IPU_MEMORY_OFFSET+0x0040020,0x00000000
+#define IPU_DP_GAMMA_C_SYNC_3__FULL              IPU_MEMORY_OFFSET+0x0040020,0xffffffff
+#define IPU_DP_GAMMA_C_SYNC_3__DP_GAMMA_C_SYNC_7 IPU_MEMORY_OFFSET+0x0040020,0x01FF0000
+#define IPU_DP_GAMMA_C_SYNC_3__DP_GAMMA_C_SYNC_6 IPU_MEMORY_OFFSET+0x0040020,0x000001FF
+
+#define IPU_DP_GAMMA_C_SYNC_4__ADDR              IPU_MEMORY_OFFSET+0x0040024
+#define IPU_DP_GAMMA_C_SYNC_4__EMPTY             IPU_MEMORY_OFFSET+0x0040024,0x00000000
+#define IPU_DP_GAMMA_C_SYNC_4__FULL              IPU_MEMORY_OFFSET+0x0040024,0xffffffff
+#define IPU_DP_GAMMA_C_SYNC_4__DP_GAMMA_C_SYNC_9 IPU_MEMORY_OFFSET+0x0040024,0x01FF0000
+#define IPU_DP_GAMMA_C_SYNC_4__DP_GAMMA_C_SYNC_8 IPU_MEMORY_OFFSET+0x0040024,0x000001FF
+
+#define IPU_DP_GAMMA_C_SYNC_5__ADDR               IPU_MEMORY_OFFSET+0x0040028
+#define IPU_DP_GAMMA_C_SYNC_5__EMPTY              IPU_MEMORY_OFFSET+0x0040028,0x00000000
+#define IPU_DP_GAMMA_C_SYNC_5__FULL               IPU_MEMORY_OFFSET+0x0040028,0xffffffff
+#define IPU_DP_GAMMA_C_SYNC_5__DP_GAMMA_C_SYNC_11 IPU_MEMORY_OFFSET+0x0040028,0x01FF0000
+#define IPU_DP_GAMMA_C_SYNC_5__DP_GAMMA_C_SYNC_10 IPU_MEMORY_OFFSET+0x0040028,0x000001FF
+
+#define IPU_DP_GAMMA_C_SYNC_6__ADDR               IPU_MEMORY_OFFSET+0x004002C
+#define IPU_DP_GAMMA_C_SYNC_6__EMPTY              IPU_MEMORY_OFFSET+0x004002C,0x00000000
+#define IPU_DP_GAMMA_C_SYNC_6__FULL               IPU_MEMORY_OFFSET+0x004002C,0xffffffff
+#define IPU_DP_GAMMA_C_SYNC_6__DP_GAMMA_C_SYNC_13 IPU_MEMORY_OFFSET+0x004002C,0x01FF0000
+#define IPU_DP_GAMMA_C_SYNC_6__DP_GAMMA_C_SYNC_12 IPU_MEMORY_OFFSET+0x004002C,0x000001FF
+
+#define IPU_DP_GAMMA_C_SYNC_7__ADDR               IPU_MEMORY_OFFSET+0x0040030
+#define IPU_DP_GAMMA_C_SYNC_7__EMPTY              IPU_MEMORY_OFFSET+0x0040030,0x00000000
+#define IPU_DP_GAMMA_C_SYNC_7__FULL               IPU_MEMORY_OFFSET+0x0040030,0xffffffff
+#define IPU_DP_GAMMA_C_SYNC_7__DP_GAMMA_C_SYNC_15 IPU_MEMORY_OFFSET+0x0040030,0x01FF0000
+#define IPU_DP_GAMMA_C_SYNC_7__DP_GAMMA_C_SYNC_14 IPU_MEMORY_OFFSET+0x0040030,0x000001FF
+
+#define IPU_DP_GAMMA_S_SYNC_0__ADDR              IPU_MEMORY_OFFSET+0x0040034
+#define IPU_DP_GAMMA_S_SYNC_0__EMPTY             IPU_MEMORY_OFFSET+0x0040034,0x00000000
+#define IPU_DP_GAMMA_S_SYNC_0__FULL              IPU_MEMORY_OFFSET+0x0040034,0xffffffff
+#define IPU_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_3 IPU_MEMORY_OFFSET+0x0040034,0xFF000000
+#define IPU_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_2 IPU_MEMORY_OFFSET+0x0040034,0x00FF0000
+#define IPU_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_1 IPU_MEMORY_OFFSET+0x0040034,0x0000FF00
+#define IPU_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_0 IPU_MEMORY_OFFSET+0x0040034,0x000000FF
+
+#define IPU_DP_GAMMA_S_SYNC_1__ADDR              IPU_MEMORY_OFFSET+0x0040038
+#define IPU_DP_GAMMA_S_SYNC_1__EMPTY             IPU_MEMORY_OFFSET+0x0040038,0x00000000
+#define IPU_DP_GAMMA_S_SYNC_1__FULL              IPU_MEMORY_OFFSET+0x0040038,0xffffffff
+#define IPU_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_7 IPU_MEMORY_OFFSET+0x0040038,0xFF000000
+#define IPU_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_6 IPU_MEMORY_OFFSET+0x0040038,0x00FF0000
+#define IPU_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_5 IPU_MEMORY_OFFSET+0x0040038,0x0000FF00
+#define IPU_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_4 IPU_MEMORY_OFFSET+0x0040038,0x000000FF
+
+#define IPU_DP_GAMMA_S_SYNC_2__ADDR               IPU_MEMORY_OFFSET+0x004003C
+#define IPU_DP_GAMMA_S_SYNC_2__EMPTY              IPU_MEMORY_OFFSET+0x004003C,0x00000000
+#define IPU_DP_GAMMA_S_SYNC_2__FULL               IPU_MEMORY_OFFSET+0x004003C,0xffffffff
+#define IPU_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_11 IPU_MEMORY_OFFSET+0x004003C,0xFF000000
+#define IPU_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_10 IPU_MEMORY_OFFSET+0x004003C,0x00FF0000
+#define IPU_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_9  IPU_MEMORY_OFFSET+0x004003C,0x0000FF00
+#define IPU_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_8  IPU_MEMORY_OFFSET+0x004003C,0x000000FF
+
+#define IPU_DP_GAMMA_S_SYNC_3__ADDR               IPU_MEMORY_OFFSET+0x0040040
+#define IPU_DP_GAMMA_S_SYNC_3__EMPTY              IPU_MEMORY_OFFSET+0x0040040,0x00000000
+#define IPU_DP_GAMMA_S_SYNC_3__FULL               IPU_MEMORY_OFFSET+0x0040040,0xffffffff
+#define IPU_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_15 IPU_MEMORY_OFFSET+0x0040040,0xFF000000
+#define IPU_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_14 IPU_MEMORY_OFFSET+0x0040040,0x00FF0000
+#define IPU_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_13 IPU_MEMORY_OFFSET+0x0040040,0x0000FF00
+#define IPU_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_12 IPU_MEMORY_OFFSET+0x0040040,0x000000FF
+
+#define IPU_DP_CSCA_SYNC_0__ADDR            IPU_MEMORY_OFFSET+0x0040044
+#define IPU_DP_CSCA_SYNC_0__EMPTY           IPU_MEMORY_OFFSET+0x0040044,0x00000000
+#define IPU_DP_CSCA_SYNC_0__FULL            IPU_MEMORY_OFFSET+0x0040044,0xffffffff
+#define IPU_DP_CSCA_SYNC_0__DP_CSC_A_SYNC_1 IPU_MEMORY_OFFSET+0x0040044,0x03FF0000
+#define IPU_DP_CSCA_SYNC_0__DP_CSC_A_SYNC_0 IPU_MEMORY_OFFSET+0x0040044,0x000003FF
+
+#define IPU_DP_CSCA_SYNC_1__ADDR            IPU_MEMORY_OFFSET+0x0040048
+#define IPU_DP_CSCA_SYNC_1__EMPTY           IPU_MEMORY_OFFSET+0x0040048,0x00000000
+#define IPU_DP_CSCA_SYNC_1__FULL            IPU_MEMORY_OFFSET+0x0040048,0xffffffff
+#define IPU_DP_CSCA_SYNC_1__DP_CSC_A_SYNC_3 IPU_MEMORY_OFFSET+0x0040048,0x03FF0000
+#define IPU_DP_CSCA_SYNC_1__DP_CSC_A_SYNC_2 IPU_MEMORY_OFFSET+0x0040048,0x000003FF
+
+#define IPU_DP_CSCA_SYNC_2__ADDR            IPU_MEMORY_OFFSET+0x004004C
+#define IPU_DP_CSCA_SYNC_2__EMPTY           IPU_MEMORY_OFFSET+0x004004C,0x00000000
+#define IPU_DP_CSCA_SYNC_2__FULL            IPU_MEMORY_OFFSET+0x004004C,0xffffffff
+#define IPU_DP_CSCA_SYNC_2__DP_CSC_A_SYNC_5 IPU_MEMORY_OFFSET+0x004004C,0x03FF0000
+#define IPU_DP_CSCA_SYNC_2__DP_CSC_A_SYNC_4 IPU_MEMORY_OFFSET+0x004004C,0x000003FF
+
+#define IPU_DP_CSCA_SYNC_3__ADDR            IPU_MEMORY_OFFSET+0x0040050
+#define IPU_DP_CSCA_SYNC_3__EMPTY           IPU_MEMORY_OFFSET+0x0040050,0x00000000
+#define IPU_DP_CSCA_SYNC_3__FULL            IPU_MEMORY_OFFSET+0x0040050,0xffffffff
+#define IPU_DP_CSCA_SYNC_3__DP_CSC_A_SYNC_7 IPU_MEMORY_OFFSET+0x0040050,0x03FF0000
+#define IPU_DP_CSCA_SYNC_3__DP_CSC_A_SYNC_6 IPU_MEMORY_OFFSET+0x0040050,0x000003FF
+
+#define IPU_DP_CSC_SYNC_0__ADDR           IPU_MEMORY_OFFSET+0x0040054
+#define IPU_DP_CSC_SYNC_0__EMPTY          IPU_MEMORY_OFFSET+0x0040054,0x00000000
+#define IPU_DP_CSC_SYNC_0__FULL           IPU_MEMORY_OFFSET+0x0040054,0xffffffff
+#define IPU_DP_CSC_SYNC_0__DP_CSC_S0_SYNC IPU_MEMORY_OFFSET+0x0040054,0xC0000000
+#define IPU_DP_CSC_SYNC_0__DP_CSC_B0_SYNC IPU_MEMORY_OFFSET+0x0040054,0x3FFF0000
+#define IPU_DP_CSC_SYNC_0__DP_CSC_A8_SYNC IPU_MEMORY_OFFSET+0x0040054,0x000003FF
+
+#define IPU_DP_CSC_SYNC_1__ADDR           IPU_MEMORY_OFFSET+0x0040058
+#define IPU_DP_CSC_SYNC_1__EMPTY          IPU_MEMORY_OFFSET+0x0040058,0x00000000
+#define IPU_DP_CSC_SYNC_1__FULL           IPU_MEMORY_OFFSET+0x0040058,0xffffffff
+#define IPU_DP_CSC_SYNC_1__DP_CSC_S2_SYNC IPU_MEMORY_OFFSET+0x0040058,0xC0000000
+#define IPU_DP_CSC_SYNC_1__DP_CSC_B2_SYNC IPU_MEMORY_OFFSET+0x0040058,0x3FFF0000
+#define IPU_DP_CSC_SYNC_1__DP_CSC_S1_SYNC IPU_MEMORY_OFFSET+0x0040058,0x0000C000
+#define IPU_DP_CSC_SYNC_1__DP_CSC_B1_SYNC IPU_MEMORY_OFFSET+0x0040058,0x00003FFF
+
+#define IPU_DP_CUR_POS_ALT__ADDR            IPU_MEMORY_OFFSET+0x004005C
+#define IPU_DP_CUR_POS_ALT__EMPTY           IPU_MEMORY_OFFSET+0x004005C,0x00000000
+#define IPU_DP_CUR_POS_ALT__FULL            IPU_MEMORY_OFFSET+0x004005C,0xffffffff
+#define IPU_DP_CUR_POS_ALT__DP_CXW_SYNC_ALT IPU_MEMORY_OFFSET+0x004005C,0xF8000000
+#define IPU_DP_CUR_POS_ALT__DP_CXP_SYNC_ALT IPU_MEMORY_OFFSET+0x004005C,0x07FF0000
+#define IPU_DP_CUR_POS_ALT__DP_CYH_SYNC_ALT IPU_MEMORY_OFFSET+0x004005C,0x0000F800
+#define IPU_DP_CUR_POS_ALT__DP_CYP_SYNC_ALT IPU_MEMORY_OFFSET+0x004005C,0x000007FF
+
+#define IPU_DP_COM_CONF_ASYNC0__ADDR                       IPU_MEMORY_OFFSET+0x0040060
+#define IPU_DP_COM_CONF_ASYNC0__EMPTY                      IPU_MEMORY_OFFSET+0x0040060,0x00000000
+#define IPU_DP_COM_CONF_ASYNC0__FULL                       IPU_MEMORY_OFFSET+0x0040060,0xffffffff
+#define IPU_DP_COM_CONF_ASYNC0__DP_GAMMA_YUV_EN_ASYNC0     IPU_MEMORY_OFFSET+0x0040060,0x00002000
+#define IPU_DP_COM_CONF_ASYNC0__DP_GAMMA_EN_ASYNC0         IPU_MEMORY_OFFSET+0x0040060,0x00001000
+#define IPU_DP_COM_CONF_ASYNC0__DP_CSC_YUV_SAT_MODE_ASYNC0 IPU_MEMORY_OFFSET+0x0040060,0x00000800
+#define IPU_DP_COM_CONF_ASYNC0__DP_CSC_GAMUT_SAT_EN_ASYNC0 IPU_MEMORY_OFFSET+0x0040060,0x00000400
+#define IPU_DP_COM_CONF_ASYNC0__DP_CSC_DEF_ASYNC0          IPU_MEMORY_OFFSET+0x0040060,0x00000300
+#define IPU_DP_COM_CONF_ASYNC0__DP_COC_ASYNC0              IPU_MEMORY_OFFSET+0x0040060,0x00000070
+#define IPU_DP_COM_CONF_ASYNC0__DP_GWCKE_ASYNC0            IPU_MEMORY_OFFSET+0x0040060,0x00000008
+#define IPU_DP_COM_CONF_ASYNC0__DP_GWAM_ASYNC0             IPU_MEMORY_OFFSET+0x0040060,0x00000004
+#define IPU_DP_COM_CONF_ASYNC0__DP_GWSEL_ASYNC0            IPU_MEMORY_OFFSET+0x0040060,0x00000002
+
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC0__ADDR            IPU_MEMORY_OFFSET+0x0040064
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC0__EMPTY           IPU_MEMORY_OFFSET+0x0040064,0x00000000
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC0__FULL            IPU_MEMORY_OFFSET+0x0040064,0xffffffff
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWAV_ASYNC0  IPU_MEMORY_OFFSET+0x0040064,0xFF000000
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWCKR_ASYNC0 IPU_MEMORY_OFFSET+0x0040064,0x00FF0000
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWCKG_ASYNC0 IPU_MEMORY_OFFSET+0x0040064,0x0000FF00
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWCKB_ASYNC0 IPU_MEMORY_OFFSET+0x0040064,0x000000FF
+
+#define IPU_DP_FG_POS_ASYNC0__ADDR           IPU_MEMORY_OFFSET+0x0040068
+#define IPU_DP_FG_POS_ASYNC0__EMPTY          IPU_MEMORY_OFFSET+0x0040068,0x00000000
+#define IPU_DP_FG_POS_ASYNC0__FULL           IPU_MEMORY_OFFSET+0x0040068,0xffffffff
+#define IPU_DP_FG_POS_ASYNC0__DP_FGXP_ASYNC0 IPU_MEMORY_OFFSET+0x0040068,0x07FF0000
+#define IPU_DP_FG_POS_ASYNC0__DP_FGYP_ASYNC0 IPU_MEMORY_OFFSET+0x0040068,0x000007FF
+
+#define IPU_DP_CUR_POS_ASYNC0__ADDR          IPU_MEMORY_OFFSET+0x004006C
+#define IPU_DP_CUR_POS_ASYNC0__EMPTY         IPU_MEMORY_OFFSET+0x004006C,0x00000000
+#define IPU_DP_CUR_POS_ASYNC0__FULL          IPU_MEMORY_OFFSET+0x004006C,0xffffffff
+#define IPU_DP_CUR_POS_ASYNC0__DP_CXW_ASYNC0 IPU_MEMORY_OFFSET+0x004006C,0xF8000000
+#define IPU_DP_CUR_POS_ASYNC0__DP_CXP_ASYNC0 IPU_MEMORY_OFFSET+0x004006C,0x07FF0000
+#define IPU_DP_CUR_POS_ASYNC0__DP_CYH_ASYNC0 IPU_MEMORY_OFFSET+0x004006C,0x0000F800
+#define IPU_DP_CUR_POS_ASYNC0__DP_CYP_ASYNC0 IPU_MEMORY_OFFSET+0x004006C,0x000007FF
+
+#define IPU_DP_CUR_MAP_ASYNC0__ADDR             IPU_MEMORY_OFFSET+0x0040070
+#define IPU_DP_CUR_MAP_ASYNC0__EMPTY            IPU_MEMORY_OFFSET+0x0040070,0x00000000
+#define IPU_DP_CUR_MAP_ASYNC0__FULL             IPU_MEMORY_OFFSET+0x0040070,0xffffffff
+#define IPU_DP_CUR_MAP_ASYNC0__CUR_COL_R_ASYNC0 IPU_MEMORY_OFFSET+0x0040070,0x00FF0000
+#define IPU_DP_CUR_MAP_ASYNC0__CUR_COL_G_ASYNC0 IPU_MEMORY_OFFSET+0x0040070,0x0000FF00
+#define IPU_DP_CUR_MAP_ASYNC0__CUR_COL_B_ASYNC0 IPU_MEMORY_OFFSET+0x0040070,0x000000FF
+
+#define IPU_DP_GAMMA_C_ASYNC0_0__ADDR                IPU_MEMORY_OFFSET+0x0040074
+#define IPU_DP_GAMMA_C_ASYNC0_0__EMPTY               IPU_MEMORY_OFFSET+0x0040074,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC0_0__FULL                IPU_MEMORY_OFFSET+0x0040074,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC0_0__DP_GAMMA_C_ASYNC0_1 IPU_MEMORY_OFFSET+0x0040074,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC0_0__DP_GAMMA_C_ASYNC0_0 IPU_MEMORY_OFFSET+0x0040074,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC0_1__ADDR                IPU_MEMORY_OFFSET+0x0040078
+#define IPU_DP_GAMMA_C_ASYNC0_1__EMPTY               IPU_MEMORY_OFFSET+0x0040078,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC0_1__FULL                IPU_MEMORY_OFFSET+0x0040078,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC0_1__DP_GAMMA_C_ASYNC0_3 IPU_MEMORY_OFFSET+0x0040078,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC0_1__DP_GAMMA_C_ASYNC0_2 IPU_MEMORY_OFFSET+0x0040078,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC0_2__ADDR                IPU_MEMORY_OFFSET+0x004007C
+#define IPU_DP_GAMMA_C_ASYNC0_2__EMPTY               IPU_MEMORY_OFFSET+0x004007C,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC0_2__FULL                IPU_MEMORY_OFFSET+0x004007C,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC0_2__DP_GAMMA_C_ASYNC0_5 IPU_MEMORY_OFFSET+0x004007C,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC0_2__DP_GAMMA_C_ASYNC0_4 IPU_MEMORY_OFFSET+0x004007C,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC0_3__ADDR                IPU_MEMORY_OFFSET+0x0040080
+#define IPU_DP_GAMMA_C_ASYNC0_3__EMPTY               IPU_MEMORY_OFFSET+0x0040080,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC0_3__FULL                IPU_MEMORY_OFFSET+0x0040080,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC0_3__DP_GAMMA_C_ASYNC0_7 IPU_MEMORY_OFFSET+0x0040080,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC0_3__DP_GAMMA_C_ASYNC0_6 IPU_MEMORY_OFFSET+0x0040080,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC0_4__ADDR                IPU_MEMORY_OFFSET+0x0040084
+#define IPU_DP_GAMMA_C_ASYNC0_4__EMPTY               IPU_MEMORY_OFFSET+0x0040084,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC0_4__FULL                IPU_MEMORY_OFFSET+0x0040084,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC0_4__DP_GAMMA_C_ASYNC0_9 IPU_MEMORY_OFFSET+0x0040084,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC0_4__DP_GAMMA_C_ASYNC0_8 IPU_MEMORY_OFFSET+0x0040084,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC0_5__ADDR                 IPU_MEMORY_OFFSET+0x0040088
+#define IPU_DP_GAMMA_C_ASYNC0_5__EMPTY                IPU_MEMORY_OFFSET+0x0040088,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC0_5__FULL                 IPU_MEMORY_OFFSET+0x0040088,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC0_5__DP_GAMMA_C_ASYNC0_11 IPU_MEMORY_OFFSET+0x0040088,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC0_5__DP_GAMMA_C_ASYNC0_10 IPU_MEMORY_OFFSET+0x0040088,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC0_6__ADDR                 IPU_MEMORY_OFFSET+0x004008C
+#define IPU_DP_GAMMA_C_ASYNC0_6__EMPTY                IPU_MEMORY_OFFSET+0x004008C,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC0_6__FULL                 IPU_MEMORY_OFFSET+0x004008C,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC0_6__DP_GAMMA_C_ASYNC0_13 IPU_MEMORY_OFFSET+0x004008C,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC0_6__DP_GAMMA_C_ASYNC0_12 IPU_MEMORY_OFFSET+0x004008C,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC0_7__ADDR                 IPU_MEMORY_OFFSET+0x0040090
+#define IPU_DP_GAMMA_C_ASYNC0_7__EMPTY                IPU_MEMORY_OFFSET+0x0040090,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC0_7__FULL                 IPU_MEMORY_OFFSET+0x0040090,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC0_7__DP_GAMMA_C_ASYNC0_15 IPU_MEMORY_OFFSET+0x0040090,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC0_7__DP_GAMMA_C_ASYNC0_14 IPU_MEMORY_OFFSET+0x0040090,0x000001FF
+
+#define IPU_DP_GAMMA_S_ASYNC0_0__ADDR                IPU_MEMORY_OFFSET+0x0040094
+#define IPU_DP_GAMMA_S_ASYNC0_0__EMPTY               IPU_MEMORY_OFFSET+0x0040094,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC0_0__FULL                IPU_MEMORY_OFFSET+0x0040094,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_3 IPU_MEMORY_OFFSET+0x0040094,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_2 IPU_MEMORY_OFFSET+0x0040094,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_1 IPU_MEMORY_OFFSET+0x0040094,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_0 IPU_MEMORY_OFFSET+0x0040094,0x000000FF
+
+#define IPU_DP_GAMMA_S_ASYNC0_1__ADDR                IPU_MEMORY_OFFSET+0x0040098
+#define IPU_DP_GAMMA_S_ASYNC0_1__EMPTY               IPU_MEMORY_OFFSET+0x0040098,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC0_1__FULL                IPU_MEMORY_OFFSET+0x0040098,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_7 IPU_MEMORY_OFFSET+0x0040098,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_6 IPU_MEMORY_OFFSET+0x0040098,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_5 IPU_MEMORY_OFFSET+0x0040098,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_4 IPU_MEMORY_OFFSET+0x0040098,0x000000FF
+
+#define IPU_DP_GAMMA_S_ASYNC0_2__ADDR                 IPU_MEMORY_OFFSET+0x004009C
+#define IPU_DP_GAMMA_S_ASYNC0_2__EMPTY                IPU_MEMORY_OFFSET+0x004009C,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC0_2__FULL                 IPU_MEMORY_OFFSET+0x004009C,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_11 IPU_MEMORY_OFFSET+0x004009C,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_10 IPU_MEMORY_OFFSET+0x004009C,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_9  IPU_MEMORY_OFFSET+0x004009C,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_8  IPU_MEMORY_OFFSET+0x004009C,0x000000FF
+
+#define IPU_DP_GAMMA_S_ASYNC0_3__ADDR                 IPU_MEMORY_OFFSET+0x00400A0
+#define IPU_DP_GAMMA_S_ASYNC0_3__EMPTY                IPU_MEMORY_OFFSET+0x00400A0,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC0_3__FULL                 IPU_MEMORY_OFFSET+0x00400A0,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_15 IPU_MEMORY_OFFSET+0x00400A0,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_14 IPU_MEMORY_OFFSET+0x00400A0,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_13 IPU_MEMORY_OFFSET+0x00400A0,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_12 IPU_MEMORY_OFFSET+0x00400A0,0x000000FF
+
+#define IPU_DP_CSCA_ASYNC0_0__ADDR              IPU_MEMORY_OFFSET+0x00400A4
+#define IPU_DP_CSCA_ASYNC0_0__EMPTY             IPU_MEMORY_OFFSET+0x00400A4,0x00000000
+#define IPU_DP_CSCA_ASYNC0_0__FULL              IPU_MEMORY_OFFSET+0x00400A4,0xffffffff
+#define IPU_DP_CSCA_ASYNC0_0__DP_CSC_A_ASYNC0_1 IPU_MEMORY_OFFSET+0x00400A4,0x03FF0000
+#define IPU_DP_CSCA_ASYNC0_0__DP_CSC_A_ASYNC0_0 IPU_MEMORY_OFFSET+0x00400A4,0x000003FF
+
+#define IPU_DP_CSCA_ASYNC0_1__ADDR              IPU_MEMORY_OFFSET+0x00400A8
+#define IPU_DP_CSCA_ASYNC0_1__EMPTY             IPU_MEMORY_OFFSET+0x00400A8,0x00000000
+#define IPU_DP_CSCA_ASYNC0_1__FULL              IPU_MEMORY_OFFSET+0x00400A8,0xffffffff
+#define IPU_DP_CSCA_ASYNC0_1__DP_CSC_A_ASYNC0_3 IPU_MEMORY_OFFSET+0x00400A8,0x03FF0000
+#define IPU_DP_CSCA_ASYNC0_1__DP_CSC_A_ASYNC0_2 IPU_MEMORY_OFFSET+0x00400A8,0x000003FF
+
+#define IPU_DP_CSCA_ASYNC0_2__ADDR              IPU_MEMORY_OFFSET+0x00400AC
+#define IPU_DP_CSCA_ASYNC0_2__EMPTY             IPU_MEMORY_OFFSET+0x00400AC,0x00000000
+#define IPU_DP_CSCA_ASYNC0_2__FULL              IPU_MEMORY_OFFSET+0x00400AC,0xffffffff
+#define IPU_DP_CSCA_ASYNC0_2__DP_CSC_A_ASYNC0_5 IPU_MEMORY_OFFSET+0x00400AC,0x03FF0000
+#define IPU_DP_CSCA_ASYNC0_2__DP_CSC_A_ASYNC0_4 IPU_MEMORY_OFFSET+0x00400AC,0x000003FF
+
+#define IPU_DP_CSCA_ASYNC0_3__ADDR              IPU_MEMORY_OFFSET+0x00400B0
+#define IPU_DP_CSCA_ASYNC0_3__EMPTY             IPU_MEMORY_OFFSET+0x00400B0,0x00000000
+#define IPU_DP_CSCA_ASYNC0_3__FULL              IPU_MEMORY_OFFSET+0x00400B0,0xffffffff
+#define IPU_DP_CSCA_ASYNC0_3__DP_CSC_A_ASYNC0_7 IPU_MEMORY_OFFSET+0x00400B0,0x03FF0000
+#define IPU_DP_CSCA_ASYNC0_3__DP_CSC_A_ASYNC0_6 IPU_MEMORY_OFFSET+0x00400B0,0x000003FF
+
+#define IPU_DP_CSC_ASYNC0_0__ADDR             IPU_MEMORY_OFFSET+0x00400B4
+#define IPU_DP_CSC_ASYNC0_0__EMPTY            IPU_MEMORY_OFFSET+0x00400B4,0x00000000
+#define IPU_DP_CSC_ASYNC0_0__FULL             IPU_MEMORY_OFFSET+0x00400B4,0xffffffff
+#define IPU_DP_CSC_ASYNC0_0__DP_CSC_S0_ASYNC0 IPU_MEMORY_OFFSET+0x00400B4,0xC0000000
+#define IPU_DP_CSC_ASYNC0_0__DP_CSC_B0_ASYNC0 IPU_MEMORY_OFFSET+0x00400B4,0x3FFF0000
+#define IPU_DP_CSC_ASYNC0_0__DP_CSC_A8_ASYNC0 IPU_MEMORY_OFFSET+0x00400B4,0x000003FF
+
+#define IPU_DP_CSC_ASYNC0_1__ADDR             IPU_MEMORY_OFFSET+0x00400B8
+#define IPU_DP_CSC_ASYNC0_1__EMPTY            IPU_MEMORY_OFFSET+0x00400B8,0x00000000
+#define IPU_DP_CSC_ASYNC0_1__FULL             IPU_MEMORY_OFFSET+0x00400B8,0xffffffff
+#define IPU_DP_CSC_ASYNC0_1__DP_CSC_S2_ASYNC0 IPU_MEMORY_OFFSET+0x00400B8,0xC0000000
+#define IPU_DP_CSC_ASYNC0_1__DP_CSC_B2_ASYNC0 IPU_MEMORY_OFFSET+0x00400B8,0x3FFF0000
+#define IPU_DP_CSC_ASYNC0_1__DP_CSC_S1_ASYNC0 IPU_MEMORY_OFFSET+0x00400B8,0x0000C000
+#define IPU_DP_CSC_ASYNC0_1__DP_CSC_B1_ASYNC0 IPU_MEMORY_OFFSET+0x00400B8,0x00003FFF
+
+#define IPU_DP_COM_CONF_ASYNC1__ADDR                       IPU_MEMORY_OFFSET+0x00400BC
+#define IPU_DP_COM_CONF_ASYNC1__EMPTY                      IPU_MEMORY_OFFSET+0x00400BC,0x00000000
+#define IPU_DP_COM_CONF_ASYNC1__FULL                       IPU_MEMORY_OFFSET+0x00400BC,0xffffffff
+#define IPU_DP_COM_CONF_ASYNC1__DP_GAMMA_YUV_EN_ASYNC1     IPU_MEMORY_OFFSET+0x00400BC,0x00002000
+#define IPU_DP_COM_CONF_ASYNC1__DP_GAMMA_EN_ASYNC1         IPU_MEMORY_OFFSET+0x00400BC,0x00001000
+#define IPU_DP_COM_CONF_ASYNC1__DP_CSC_YUV_SAT_MODE_ASYNC1 IPU_MEMORY_OFFSET+0x00400BC,0x00000800
+#define IPU_DP_COM_CONF_ASYNC1__DP_CSC_GAMUT_SAT_EN_ASYNC1 IPU_MEMORY_OFFSET+0x00400BC,0x00000400
+#define IPU_DP_COM_CONF_ASYNC1__DP_CSC_DEF_ASYNC1          IPU_MEMORY_OFFSET+0x00400BC,0x00000300
+#define IPU_DP_COM_CONF_ASYNC1__DP_COC_ASYNC1              IPU_MEMORY_OFFSET+0x00400BC,0x00000070
+#define IPU_DP_COM_CONF_ASYNC1__DP_GWCKE_ASYNC1            IPU_MEMORY_OFFSET+0x00400BC,0x00000008
+#define IPU_DP_COM_CONF_ASYNC1__DP_GWAM_ASYNC1             IPU_MEMORY_OFFSET+0x00400BC,0x00000004
+#define IPU_DP_COM_CONF_ASYNC1__DP_GWSEL_ASYNC1            IPU_MEMORY_OFFSET+0x00400BC,0x00000002
+
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC1__ADDR            IPU_MEMORY_OFFSET+0x00400C0
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC1__EMPTY           IPU_MEMORY_OFFSET+0x00400C0,0x00000000
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC1__FULL            IPU_MEMORY_OFFSET+0x00400C0,0xffffffff
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWAV_ASYNC1  IPU_MEMORY_OFFSET+0x00400C0,0xFF000000
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWCKR_ASYNC1 IPU_MEMORY_OFFSET+0x00400C0,0x00FF0000
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWCKG_ASYNC1 IPU_MEMORY_OFFSET+0x00400C0,0x0000FF00
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWCKB_ASYNC1 IPU_MEMORY_OFFSET+0x00400C0,0x000000FF
+
+#define IPU_DP_FG_POS_ASYNC1__ADDR           IPU_MEMORY_OFFSET+0x00400C4
+#define IPU_DP_FG_POS_ASYNC1__EMPTY          IPU_MEMORY_OFFSET+0x00400C4,0x00000000
+#define IPU_DP_FG_POS_ASYNC1__FULL           IPU_MEMORY_OFFSET+0x00400C4,0xffffffff
+#define IPU_DP_FG_POS_ASYNC1__DP_FGXP_ASYNC1 IPU_MEMORY_OFFSET+0x00400C4,0x07FF0000
+#define IPU_DP_FG_POS_ASYNC1__DP_FGYP_ASYNC1 IPU_MEMORY_OFFSET+0x00400C4,0x000007FF
+
+#define IPU_DP_CUR_POS_ASYNC1__ADDR          IPU_MEMORY_OFFSET+0x00400C8
+#define IPU_DP_CUR_POS_ASYNC1__EMPTY         IPU_MEMORY_OFFSET+0x00400C8,0x00000000
+#define IPU_DP_CUR_POS_ASYNC1__FULL          IPU_MEMORY_OFFSET+0x00400C8,0xffffffff
+#define IPU_DP_CUR_POS_ASYNC1__DP_CXW_ASYNC1 IPU_MEMORY_OFFSET+0x00400C8,0xF8000000
+#define IPU_DP_CUR_POS_ASYNC1__DP_CXP_ASYNC1 IPU_MEMORY_OFFSET+0x00400C8,0x07FF0000
+#define IPU_DP_CUR_POS_ASYNC1__DP_CYH_ASYNC1 IPU_MEMORY_OFFSET+0x00400C8,0x0000F800
+#define IPU_DP_CUR_POS_ASYNC1__DP_CYP_ASYNC1 IPU_MEMORY_OFFSET+0x00400C8,0x000007FF
+
+#define IPU_DP_CUR_MAP_ASYNC1__ADDR             IPU_MEMORY_OFFSET+0x00400CC
+#define IPU_DP_CUR_MAP_ASYNC1__EMPTY            IPU_MEMORY_OFFSET+0x00400CC,0x00000000
+#define IPU_DP_CUR_MAP_ASYNC1__FULL             IPU_MEMORY_OFFSET+0x00400CC,0xffffffff
+#define IPU_DP_CUR_MAP_ASYNC1__CUR_COL_R_ASYNC1 IPU_MEMORY_OFFSET+0x00400CC,0x00FF0000
+#define IPU_DP_CUR_MAP_ASYNC1__CUR_COL_G_ASYNC1 IPU_MEMORY_OFFSET+0x00400CC,0x0000FF00
+#define IPU_DP_CUR_MAP_ASYNC1__CUR_COL_B_ASYNC1 IPU_MEMORY_OFFSET+0x00400CC,0x000000FF
+
+#define IPU_DP_GAMMA_C_ASYNC1_0__ADDR                IPU_MEMORY_OFFSET+0x00400D0
+#define IPU_DP_GAMMA_C_ASYNC1_0__EMPTY               IPU_MEMORY_OFFSET+0x00400D0,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC1_0__FULL                IPU_MEMORY_OFFSET+0x00400D0,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC1_0__DP_GAMMA_C_ASYNC1_1 IPU_MEMORY_OFFSET+0x00400D0,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC1_0__DP_GAMMA_C_ASYNC1_0 IPU_MEMORY_OFFSET+0x00400D0,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC1_1__ADDR                IPU_MEMORY_OFFSET+0x00400D4
+#define IPU_DP_GAMMA_C_ASYNC1_1__EMPTY               IPU_MEMORY_OFFSET+0x00400D4,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC1_1__FULL                IPU_MEMORY_OFFSET+0x00400D4,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC1_1__DP_GAMMA_C_ASYNC1_3 IPU_MEMORY_OFFSET+0x00400D4,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC1_1__DP_GAMMA_C_ASYNC1_2 IPU_MEMORY_OFFSET+0x00400D4,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC1_2__ADDR                IPU_MEMORY_OFFSET+0x00400D8
+#define IPU_DP_GAMMA_C_ASYNC1_2__EMPTY               IPU_MEMORY_OFFSET+0x00400D8,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC1_2__FULL                IPU_MEMORY_OFFSET+0x00400D8,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC1_2__DP_GAMMA_C_ASYNC1_5 IPU_MEMORY_OFFSET+0x00400D8,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC1_2__DP_GAMMA_C_ASYNC1_4 IPU_MEMORY_OFFSET+0x00400D8,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC1_3__ADDR                IPU_MEMORY_OFFSET+0x00400DC
+#define IPU_DP_GAMMA_C_ASYNC1_3__EMPTY               IPU_MEMORY_OFFSET+0x00400DC,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC1_3__FULL                IPU_MEMORY_OFFSET+0x00400DC,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC1_3__DP_GAMMA_C_ASYNC1_7 IPU_MEMORY_OFFSET+0x00400DC,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC1_3__DP_GAMMA_C_ASYNC1_6 IPU_MEMORY_OFFSET+0x00400DC,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC1_4__ADDR                IPU_MEMORY_OFFSET+0x00400E0
+#define IPU_DP_GAMMA_C_ASYNC1_4__EMPTY               IPU_MEMORY_OFFSET+0x00400E0,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC1_4__FULL                IPU_MEMORY_OFFSET+0x00400E0,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC1_4__DP_GAMMA_C_ASYNC1_9 IPU_MEMORY_OFFSET+0x00400E0,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC1_4__DP_GAMMA_C_ASYNC1_8 IPU_MEMORY_OFFSET+0x00400E0,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC1_5__ADDR                 IPU_MEMORY_OFFSET+0x00400E4
+#define IPU_DP_GAMMA_C_ASYNC1_5__EMPTY                IPU_MEMORY_OFFSET+0x00400E4,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC1_5__FULL                 IPU_MEMORY_OFFSET+0x00400E4,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC1_5__DP_GAMMA_C_ASYNC1_11 IPU_MEMORY_OFFSET+0x00400E4,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC1_5__DP_GAMMA_C_ASYNC1_10 IPU_MEMORY_OFFSET+0x00400E4,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC1_6__ADDR                 IPU_MEMORY_OFFSET+0x00400E8
+#define IPU_DP_GAMMA_C_ASYNC1_6__EMPTY                IPU_MEMORY_OFFSET+0x00400E8,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC1_6__FULL                 IPU_MEMORY_OFFSET+0x00400E8,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC1_6__DP_GAMMA_C_ASYNC1_13 IPU_MEMORY_OFFSET+0x00400E8,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC1_6__DP_GAMMA_C_ASYNC1_12 IPU_MEMORY_OFFSET+0x00400E8,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC1_7__ADDR                 IPU_MEMORY_OFFSET+0x00400EC
+#define IPU_DP_GAMMA_C_ASYNC1_7__EMPTY                IPU_MEMORY_OFFSET+0x00400EC,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC1_7__FULL                 IPU_MEMORY_OFFSET+0x00400EC,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC1_7__DP_GAMMA_C_ASYNC1_15 IPU_MEMORY_OFFSET+0x00400EC,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC1_7__DP_GAMMA_C_ASYNC1_14 IPU_MEMORY_OFFSET+0x00400EC,0x000001FF
+
+#define IPU_DP_GAMMA_S_ASYNC1_0__ADDR                IPU_MEMORY_OFFSET+0x00400F0
+#define IPU_DP_GAMMA_S_ASYNC1_0__EMPTY               IPU_MEMORY_OFFSET+0x00400F0,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC1_0__FULL                IPU_MEMORY_OFFSET+0x00400F0,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_3 IPU_MEMORY_OFFSET+0x00400F0,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_2 IPU_MEMORY_OFFSET+0x00400F0,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_1 IPU_MEMORY_OFFSET+0x00400F0,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_0 IPU_MEMORY_OFFSET+0x00400F0,0x000000FF
+
+#define IPU_DP_GAMMA_S_ASYNC1_1__ADDR                IPU_MEMORY_OFFSET+0x00400F4
+#define IPU_DP_GAMMA_S_ASYNC1_1__EMPTY               IPU_MEMORY_OFFSET+0x00400F4,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC1_1__FULL                IPU_MEMORY_OFFSET+0x00400F4,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_7 IPU_MEMORY_OFFSET+0x00400F4,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_6 IPU_MEMORY_OFFSET+0x00400F4,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_5 IPU_MEMORY_OFFSET+0x00400F4,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_4 IPU_MEMORY_OFFSET+0x00400F4,0x000000FF
+
+#define IPU_DP_GAMMA_S_ASYNC1_2__ADDR                 IPU_MEMORY_OFFSET+0x00400F8
+#define IPU_DP_GAMMA_S_ASYNC1_2__EMPTY                IPU_MEMORY_OFFSET+0x00400F8,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC1_2__FULL                 IPU_MEMORY_OFFSET+0x00400F8,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_11 IPU_MEMORY_OFFSET+0x00400F8,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_10 IPU_MEMORY_OFFSET+0x00400F8,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_9  IPU_MEMORY_OFFSET+0x00400F8,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_8  IPU_MEMORY_OFFSET+0x00400F8,0x000000FF
+
+#define IPU_DP_GAMMA_S_ASYNC1_3__ADDR                 IPU_MEMORY_OFFSET+0x00400FC
+#define IPU_DP_GAMMA_S_ASYNC1_3__EMPTY                IPU_MEMORY_OFFSET+0x00400FC,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC1_3__FULL                 IPU_MEMORY_OFFSET+0x00400FC,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_15 IPU_MEMORY_OFFSET+0x00400FC,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_14 IPU_MEMORY_OFFSET+0x00400FC,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_13 IPU_MEMORY_OFFSET+0x00400FC,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_12 IPU_MEMORY_OFFSET+0x00400FC,0x000000FF
+
+#define IPU_DP_CSCA_ASYNC1_0__ADDR              IPU_MEMORY_OFFSET+0x0040100
+#define IPU_DP_CSCA_ASYNC1_0__EMPTY             IPU_MEMORY_OFFSET+0x0040100,0x00000000
+#define IPU_DP_CSCA_ASYNC1_0__FULL              IPU_MEMORY_OFFSET+0x0040100,0xffffffff
+#define IPU_DP_CSCA_ASYNC1_0__DP_CSC_A_ASYNC1_1 IPU_MEMORY_OFFSET+0x0040100,0x03FF0000
+#define IPU_DP_CSCA_ASYNC1_0__DP_CSC_A_ASYNC1_0 IPU_MEMORY_OFFSET+0x0040100,0x000003FF
+
+#define IPU_DP_CSCA_ASYNC1_1__ADDR              IPU_MEMORY_OFFSET+0x0040104
+#define IPU_DP_CSCA_ASYNC1_1__EMPTY             IPU_MEMORY_OFFSET+0x0040104,0x00000000
+#define IPU_DP_CSCA_ASYNC1_1__FULL              IPU_MEMORY_OFFSET+0x0040104,0xffffffff
+#define IPU_DP_CSCA_ASYNC1_1__DP_CSC_A_ASYNC1_3 IPU_MEMORY_OFFSET+0x0040104,0x03FF0000
+#define IPU_DP_CSCA_ASYNC1_1__DP_CSC_A_ASYNC1_2 IPU_MEMORY_OFFSET+0x0040104,0x000003FF
+
+#define IPU_DP_CSCA_ASYNC1_2__ADDR              IPU_MEMORY_OFFSET+0x0040108
+#define IPU_DP_CSCA_ASYNC1_2__EMPTY             IPU_MEMORY_OFFSET+0x0040108,0x00000000
+#define IPU_DP_CSCA_ASYNC1_2__FULL              IPU_MEMORY_OFFSET+0x0040108,0xffffffff
+#define IPU_DP_CSCA_ASYNC1_2__DP_CSC_A_ASYNC1_5 IPU_MEMORY_OFFSET+0x0040108,0x03FF0000
+#define IPU_DP_CSCA_ASYNC1_2__DP_CSC_A_ASYNC1_4 IPU_MEMORY_OFFSET+0x0040108,0x000003FF
+
+#define IPU_DP_CSCA_ASYNC1_3__ADDR              IPU_MEMORY_OFFSET+0x004010C
+#define IPU_DP_CSCA_ASYNC1_3__EMPTY             IPU_MEMORY_OFFSET+0x004010C,0x00000000
+#define IPU_DP_CSCA_ASYNC1_3__FULL              IPU_MEMORY_OFFSET+0x004010C,0xffffffff
+#define IPU_DP_CSCA_ASYNC1_3__DP_CSC_A_ASYNC1_7 IPU_MEMORY_OFFSET+0x004010C,0x03FF0000
+#define IPU_DP_CSCA_ASYNC1_3__DP_CSC_A_ASYNC1_6 IPU_MEMORY_OFFSET+0x004010C,0x000003FF
+
+#define IPU_DP_CSC_ASYNC1_0__ADDR             IPU_MEMORY_OFFSET+0x0040110
+#define IPU_DP_CSC_ASYNC1_0__EMPTY            IPU_MEMORY_OFFSET+0x0040110,0x00000000
+#define IPU_DP_CSC_ASYNC1_0__FULL             IPU_MEMORY_OFFSET+0x0040110,0xffffffff
+#define IPU_DP_CSC_ASYNC1_0__DP_CSC_S0_ASYNC1 IPU_MEMORY_OFFSET+0x0040110,0xC0000000
+#define IPU_DP_CSC_ASYNC1_0__DP_CSC_B0_ASYNC1 IPU_MEMORY_OFFSET+0x0040110,0x3FFF0000
+#define IPU_DP_CSC_ASYNC1_0__DP_CSC_A8_ASYNC1 IPU_MEMORY_OFFSET+0x0040110,0x000003FF
+
+#define IPU_DP_CSC_ASYNC1_1__ADDR             IPU_MEMORY_OFFSET+0x0040114
+#define IPU_DP_CSC_ASYNC1_1__EMPTY            IPU_MEMORY_OFFSET+0x0040114,0x00000000
+#define IPU_DP_CSC_ASYNC1_1__FULL             IPU_MEMORY_OFFSET+0x0040114,0xffffffff
+#define IPU_DP_CSC_ASYNC1_1__DP_CSC_S2_ASYNC1 IPU_MEMORY_OFFSET+0x0040114,0xC0000000
+#define IPU_DP_CSC_ASYNC1_1__DP_CSC_B2_ASYNC1 IPU_MEMORY_OFFSET+0x0040114,0x3FFF0000
+#define IPU_DP_CSC_ASYNC1_1__DP_CSC_S1_ASYNC1 IPU_MEMORY_OFFSET+0x0040114,0x0000C000
+#define IPU_DP_CSC_ASYNC1_1__DP_CSC_B1_ASYNC1 IPU_MEMORY_OFFSET+0x0040114,0x00003FFF
+
+#define IPU_DP_DEBUG_CNT__ADDR              IPU_REGISTERS_OFFSET+0x000180BC
+#define IPU_DP_DEBUG_CNT__EMPTY             IPU_REGISTERS_OFFSET+0x000180BC,0x00000000
+#define IPU_DP_DEBUG_CNT__FULL              IPU_REGISTERS_OFFSET+0x000180BC,0xffffffff
+#define IPU_DP_DEBUG_CNT__BRAKE_CNT_1       IPU_REGISTERS_OFFSET+0x000180BC,0x000000E0
+#define IPU_DP_DEBUG_CNT__BRAKE_STATUS_EN_1 IPU_REGISTERS_OFFSET+0x000180BC,0x00000010
+#define IPU_DP_DEBUG_CNT__BRAKE_CNT_0       IPU_REGISTERS_OFFSET+0x000180BC,0x0000000E
+#define IPU_DP_DEBUG_CNT__BRAKE_STATUS_EN_0 IPU_REGISTERS_OFFSET+0x000180BC,0x00000001
+
+#define IPU_DP_DEBUG_STAT__ADDR            IPU_REGISTERS_OFFSET+0x000180C0
+#define IPU_DP_DEBUG_STAT__EMPTY           IPU_REGISTERS_OFFSET+0x000180C0,0x00000000
+#define IPU_DP_DEBUG_STAT__FULL            IPU_REGISTERS_OFFSET+0x000180C0,0xffffffff
+#define IPU_DP_DEBUG_STAT__CYP_EN_OLD_1    IPU_REGISTERS_OFFSET+0x000180C0,0x20000000
+#define IPU_DP_DEBUG_STAT__COMBYP_EN_OLD_1 IPU_REGISTERS_OFFSET+0x000180C0,0x10000000
+#define IPU_DP_DEBUG_STAT__FG_ACTIVE_1     IPU_REGISTERS_OFFSET+0x000180C0,0x08000000
+#define IPU_DP_DEBUG_STAT__V_CNT_OLD_1     IPU_REGISTERS_OFFSET+0x000180C0,0x07FF0000
+#define IPU_DP_DEBUG_STAT__CYP_EN_OLD_0    IPU_REGISTERS_OFFSET+0x000180C0,0x00002000
+#define IPU_DP_DEBUG_STAT__COMBYP_EN_OLD_0 IPU_REGISTERS_OFFSET+0x000180C0,0x00001000
+#define IPU_DP_DEBUG_STAT__FG_ACTIVE_0     IPU_REGISTERS_OFFSET+0x000180C0,0x00000800
+#define IPU_DP_DEBUG_STAT__V_CNT_OLD_0     IPU_REGISTERS_OFFSET+0x000180C0,0x000007FF
+
+#define IPU_IC_CONF__ADDR            IPU_REGISTERS_OFFSET+0x00020000
+#define IPU_IC_CONF__EMPTY           IPU_REGISTERS_OFFSET+0x00020000,0x00000000
+#define IPU_IC_CONF__FULL            IPU_REGISTERS_OFFSET+0x00020000,0xffffffff
+#define IPU_IC_CONF__CSI_MEM_WR_EN   IPU_REGISTERS_OFFSET+0x00020000,0x80000000
+#define IPU_IC_CONF__RWS_EN          IPU_REGISTERS_OFFSET+0x00020000,0x40000000
+#define IPU_IC_CONF__IC_KEY_COLOR_EN IPU_REGISTERS_OFFSET+0x00020000,0x20000000
+#define IPU_IC_CONF__IC_GLB_LOC_A    IPU_REGISTERS_OFFSET+0x00020000,0x10000000
+#define IPU_IC_CONF__PP_ROT_EN       IPU_REGISTERS_OFFSET+0x00020000,0x00100000
+#define IPU_IC_CONF__PP_CMB          IPU_REGISTERS_OFFSET+0x00020000,0x00080000
+#define IPU_IC_CONF__PP_CSC2         IPU_REGISTERS_OFFSET+0x00020000,0x00040000
+#define IPU_IC_CONF__PP_CSC1         IPU_REGISTERS_OFFSET+0x00020000,0x00020000
+#define IPU_IC_CONF__PP_EN           IPU_REGISTERS_OFFSET+0x00020000,0x00010000
+#define IPU_IC_CONF__PRPVF_ROT_EN    IPU_REGISTERS_OFFSET+0x00020000,0x00001000
+#define IPU_IC_CONF__PRPVF_CMB       IPU_REGISTERS_OFFSET+0x00020000,0x00000800
+#define IPU_IC_CONF__PRPVF_CSC2      IPU_REGISTERS_OFFSET+0x00020000,0x00000400
+#define IPU_IC_CONF__PRPVF_CSC1      IPU_REGISTERS_OFFSET+0x00020000,0x00000200
+#define IPU_IC_CONF__PRPVF_EN        IPU_REGISTERS_OFFSET+0x00020000,0x00000100
+#define IPU_IC_CONF__PRPENC_ROT_EN   IPU_REGISTERS_OFFSET+0x00020000,0x00000004
+#define IPU_IC_CONF__PRPENC_CSC1     IPU_REGISTERS_OFFSET+0x00020000,0x00000002
+#define IPU_IC_CONF__PRPENC_EN       IPU_REGISTERS_OFFSET+0x00020000,0x00000001
+
+#define IPU_IC_PRP_ENC_RSC__ADDR          IPU_REGISTERS_OFFSET+0x00020004
+#define IPU_IC_PRP_ENC_RSC__EMPTY         IPU_REGISTERS_OFFSET+0x00020004,0x00000000
+#define IPU_IC_PRP_ENC_RSC__FULL          IPU_REGISTERS_OFFSET+0x00020004,0xffffffff
+#define IPU_IC_PRP_ENC_RSC__PRPENC_DS_R_V IPU_REGISTERS_OFFSET+0x00020004,0xC0000000
+#define IPU_IC_PRP_ENC_RSC__PRPENC_RS_R_V IPU_REGISTERS_OFFSET+0x00020004,0x3FFF0000
+#define IPU_IC_PRP_ENC_RSC__PRPENC_DS_R_H IPU_REGISTERS_OFFSET+0x00020004,0x0000C000
+#define IPU_IC_PRP_ENC_RSC__PRPENC_RS_R_H IPU_REGISTERS_OFFSET+0x00020004,0x00003FFF
+
+#define IPU_IC_PRP_VF_RSC__ADDR         IPU_REGISTERS_OFFSET+0x00020008
+#define IPU_IC_PRP_VF_RSC__EMPTY        IPU_REGISTERS_OFFSET+0x00020008,0x00000000
+#define IPU_IC_PRP_VF_RSC__FULL         IPU_REGISTERS_OFFSET+0x00020008,0xffffffff
+#define IPU_IC_PRP_VF_RSC__PRPVF_DS_R_V IPU_REGISTERS_OFFSET+0x00020008,0xC0000000
+#define IPU_IC_PRP_VF_RSC__PRPVF_RS_R_V IPU_REGISTERS_OFFSET+0x00020008,0x3FFF0000
+#define IPU_IC_PRP_VF_RSC__PRPVF_DS_R_H IPU_REGISTERS_OFFSET+0x00020008,0x0000C000
+#define IPU_IC_PRP_VF_RSC__PRPVF_RS_R_H IPU_REGISTERS_OFFSET+0x00020008,0x00003FFF
+
+#define IPU_IC_PP_RSC__ADDR      IPU_REGISTERS_OFFSET+0x0002000C
+#define IPU_IC_PP_RSC__EMPTY     IPU_REGISTERS_OFFSET+0x0002000C,0x00000000
+#define IPU_IC_PP_RSC__FULL      IPU_REGISTERS_OFFSET+0x0002000C,0xffffffff
+#define IPU_IC_PP_RSC__PP_DS_R_V IPU_REGISTERS_OFFSET+0x0002000C,0xC0000000
+#define IPU_IC_PP_RSC__PP_RS_R_V IPU_REGISTERS_OFFSET+0x0002000C,0x3FFF0000
+#define IPU_IC_PP_RSC__PP_DS_R_H IPU_REGISTERS_OFFSET+0x0002000C,0x0000C000
+#define IPU_IC_PP_RSC__PP_RS_R_H IPU_REGISTERS_OFFSET+0x0002000C,0x00003FFF
+
+#define IPU_IC_CMBP_1__ADDR             IPU_REGISTERS_OFFSET+0x00020010
+#define IPU_IC_CMBP_1__EMPTY            IPU_REGISTERS_OFFSET+0x00020010,0x00000000
+#define IPU_IC_CMBP_1__FULL             IPU_REGISTERS_OFFSET+0x00020010,0xffffffff
+#define IPU_IC_CMBP_1__IC_PP_ALPHA_V    IPU_REGISTERS_OFFSET+0x00020010,0x0000FF00
+#define IPU_IC_CMBP_1__IC_PRPVF_ALPHA_V IPU_REGISTERS_OFFSET+0x00020010,0x000000FF
+
+#define IPU_IC_CMBP_2__ADDR           IPU_REGISTERS_OFFSET+0x00020014
+#define IPU_IC_CMBP_2__EMPTY          IPU_REGISTERS_OFFSET+0x00020014,0x00000000
+#define IPU_IC_CMBP_2__FULL           IPU_REGISTERS_OFFSET+0x00020014,0xffffffff
+#define IPU_IC_CMBP_2__IC_KEY_COLOR_R IPU_REGISTERS_OFFSET+0x00020014,0x00FF0000
+#define IPU_IC_CMBP_2__IC_KEY_COLOR_G IPU_REGISTERS_OFFSET+0x00020014,0x0000FF00
+#define IPU_IC_CMBP_2__IC_KEY_COLOR_B IPU_REGISTERS_OFFSET+0x00020014,0x000000FF
+
+#define IPU_IC_IDMAC_1__ADDR             IPU_REGISTERS_OFFSET+0x00020018
+#define IPU_IC_IDMAC_1__EMPTY            IPU_REGISTERS_OFFSET+0x00020018,0x00000000
+#define IPU_IC_IDMAC_1__FULL             IPU_REGISTERS_OFFSET+0x00020018,0xffffffff
+#define IPU_IC_IDMAC_1__ALT_CB7_BURST_16 IPU_REGISTERS_OFFSET+0x00020018,0x02000000
+#define IPU_IC_IDMAC_1__ALT_CB6_BURST_16 IPU_REGISTERS_OFFSET+0x00020018,0x01000000
+#define IPU_IC_IDMAC_1__T3_FLIP_RS       IPU_REGISTERS_OFFSET+0x00020018,0x00400000
+#define IPU_IC_IDMAC_1__T2_FLIP_RS       IPU_REGISTERS_OFFSET+0x00020018,0x00200000
+#define IPU_IC_IDMAC_1__T1_FLIP_RS       IPU_REGISTERS_OFFSET+0x00020018,0x00100000
+#define IPU_IC_IDMAC_1__T3_FLIP_UD       IPU_REGISTERS_OFFSET+0x00020018,0x00080000
+#define IPU_IC_IDMAC_1__T3_FLIP_LR       IPU_REGISTERS_OFFSET+0x00020018,0x00040000
+#define IPU_IC_IDMAC_1__T3_ROT           IPU_REGISTERS_OFFSET+0x00020018,0x00020000
+#define IPU_IC_IDMAC_1__T2_FLIP_UD       IPU_REGISTERS_OFFSET+0x00020018,0x00010000
+#define IPU_IC_IDMAC_1__T2_FLIP_LR       IPU_REGISTERS_OFFSET+0x00020018,0x00008000
+#define IPU_IC_IDMAC_1__T2_ROT           IPU_REGISTERS_OFFSET+0x00020018,0x00004000
+#define IPU_IC_IDMAC_1__T1_FLIP_UD       IPU_REGISTERS_OFFSET+0x00020018,0x00002000
+#define IPU_IC_IDMAC_1__T1_FLIP_LR       IPU_REGISTERS_OFFSET+0x00020018,0x00001000
+#define IPU_IC_IDMAC_1__T1_ROT           IPU_REGISTERS_OFFSET+0x00020018,0x00000800
+#define IPU_IC_IDMAC_1__CB7_BURST_16     IPU_REGISTERS_OFFSET+0x00020018,0x00000080
+#define IPU_IC_IDMAC_1__CB6_BURST_16     IPU_REGISTERS_OFFSET+0x00020018,0x00000040
+#define IPU_IC_IDMAC_1__CB5_BURST_16     IPU_REGISTERS_OFFSET+0x00020018,0x00000020
+#define IPU_IC_IDMAC_1__CB4_BURST_16     IPU_REGISTERS_OFFSET+0x00020018,0x00000010
+#define IPU_IC_IDMAC_1__CB3_BURST_16     IPU_REGISTERS_OFFSET+0x00020018,0x00000008
+#define IPU_IC_IDMAC_1__CB2_BURST_16     IPU_REGISTERS_OFFSET+0x00020018,0x00000004
+#define IPU_IC_IDMAC_1__CB1_BURST_16     IPU_REGISTERS_OFFSET+0x00020018,0x00000002
+#define IPU_IC_IDMAC_1__CB0_BURST_16     IPU_REGISTERS_OFFSET+0x00020018,0x00000001
+
+#define IPU_IC_IDMAC_2__ADDR         IPU_REGISTERS_OFFSET+0x0002001C
+#define IPU_IC_IDMAC_2__EMPTY        IPU_REGISTERS_OFFSET+0x0002001C,0x00000000
+#define IPU_IC_IDMAC_2__FULL         IPU_REGISTERS_OFFSET+0x0002001C,0xffffffff
+#define IPU_IC_IDMAC_2__T3_FR_HEIGHT IPU_REGISTERS_OFFSET+0x0002001C,0x3FF00000
+#define IPU_IC_IDMAC_2__T2_FR_HEIGHT IPU_REGISTERS_OFFSET+0x0002001C,0x000FFC00
+#define IPU_IC_IDMAC_2__T1_FR_HEIGHT IPU_REGISTERS_OFFSET+0x0002001C,0x000003FF
+
+#define IPU_IC_IDMAC_3__ADDR        IPU_REGISTERS_OFFSET+0x00020020
+#define IPU_IC_IDMAC_3__EMPTY       IPU_REGISTERS_OFFSET+0x00020020,0x00000000
+#define IPU_IC_IDMAC_3__FULL        IPU_REGISTERS_OFFSET+0x00020020,0xffffffff
+#define IPU_IC_IDMAC_3__T3_FR_WIDTH IPU_REGISTERS_OFFSET+0x00020020,0x3FF00000
+#define IPU_IC_IDMAC_3__T2_FR_WIDTH IPU_REGISTERS_OFFSET+0x00020020,0x000FFC00
+#define IPU_IC_IDMAC_3__T1_FR_WIDTH IPU_REGISTERS_OFFSET+0x00020020,0x000003FF
+
+#define IPU_IC_IDMAC_4__ADDR                 IPU_REGISTERS_OFFSET+0x00020024
+#define IPU_IC_IDMAC_4__EMPTY                IPU_REGISTERS_OFFSET+0x00020024,0x00000000
+#define IPU_IC_IDMAC_4__FULL                 IPU_REGISTERS_OFFSET+0x00020024,0xffffffff
+#define IPU_IC_IDMAC_4__RM_BRDG_MAX_RQ       IPU_REGISTERS_OFFSET+0x00020024,0x0000F000
+#define IPU_IC_IDMAC_4__IBM_BRDG_MAX_RQ      IPU_REGISTERS_OFFSET+0x00020024,0x00000F00
+#define IPU_IC_IDMAC_4__MPM_DMFC_BRDG_MAX_RQ IPU_REGISTERS_OFFSET+0x00020024,0x000000F0
+#define IPU_IC_IDMAC_4__MPM_RW_BRDG_MAX_RQ   IPU_REGISTERS_OFFSET+0x00020024,0x0000000F
+
+#define IPU_CSI0_SENS_CONF__ADDR                  IPU_REGISTERS_OFFSET+0x00030000
+#define IPU_CSI0_SENS_CONF__EMPTY                 IPU_REGISTERS_OFFSET+0x00030000,0x00000000
+#define IPU_CSI0_SENS_CONF__FULL                  IPU_REGISTERS_OFFSET+0x00030000,0xffffffff
+#define IPU_CSI0_SENS_CONF__CSI0_DATA_EN_POL      IPU_REGISTERS_OFFSET+0x00030000,0x80000000
+#define IPU_CSI0_SENS_CONF__CSI0_FORCE_EOF        IPU_REGISTERS_OFFSET+0x00030000,0x20000000
+#define IPU_CSI0_SENS_CONF__CSI0_JPEG_MODE        IPU_REGISTERS_OFFSET+0x00030000,0x10000000
+#define IPU_CSI0_SENS_CONF__CSI0_JPEG8_EN         IPU_REGISTERS_OFFSET+0x00030000,0x08000000
+#define IPU_CSI0_SENS_CONF__CSI0_DATA_DEST        IPU_REGISTERS_OFFSET+0x00030000,0x07000000
+#define IPU_CSI0_SENS_CONF__CSI0_DIV_RATIO        IPU_REGISTERS_OFFSET+0x00030000,0x00FF0000
+#define IPU_CSI0_SENS_CONF__CSI0_EXT_VSYNC        IPU_REGISTERS_OFFSET+0x00030000,0x00008000
+#define IPU_CSI0_SENS_CONF__CSI0_DATA_WIDTH       IPU_REGISTERS_OFFSET+0x00030000,0x00007800
+#define IPU_CSI0_SENS_CONF__CSI0_SENS_DATA_FORMAT IPU_REGISTERS_OFFSET+0x00030000,0x00000700
+#define IPU_CSI0_SENS_CONF__CSI0_PACK_TIGHT       IPU_REGISTERS_OFFSET+0x00030000,0x00000080
+#define IPU_CSI0_SENS_CONF__CSI0_SENS_PRTCL       IPU_REGISTERS_OFFSET+0x00030000,0x00000070
+#define IPU_CSI0_SENS_CONF__CSI0_SENS_PIX_CLK_POL IPU_REGISTERS_OFFSET+0x00030000,0x00000008
+#define IPU_CSI0_SENS_CONF__CSI0_DATA_POL         IPU_REGISTERS_OFFSET+0x00030000,0x00000004
+#define IPU_CSI0_SENS_CONF__CSI0_HSYNC_POL        IPU_REGISTERS_OFFSET+0x00030000,0x00000002
+#define IPU_CSI0_SENS_CONF__CSI0_VSYNC_POL        IPU_REGISTERS_OFFSET+0x00030000,0x00000001
+
+#define IPU_CSI0_SENS_FRM_SIZE__ADDR                 IPU_REGISTERS_OFFSET+0x00030004
+#define IPU_CSI0_SENS_FRM_SIZE__EMPTY                IPU_REGISTERS_OFFSET+0x00030004,0x00000000
+#define IPU_CSI0_SENS_FRM_SIZE__FULL                 IPU_REGISTERS_OFFSET+0x00030004,0xffffffff
+#define IPU_CSI0_SENS_FRM_SIZE__CSI0_SENS_FRM_HEIGHT IPU_REGISTERS_OFFSET+0x00030004,0x0FFF0000
+#define IPU_CSI0_SENS_FRM_SIZE__CSI0_SENS_FRM_WIDTH  IPU_REGISTERS_OFFSET+0x00030004,0x00001FFF
+
+#define IPU_CSI0_ACT_FRM_SIZE__ADDR                IPU_REGISTERS_OFFSET+0x00030008
+#define IPU_CSI0_ACT_FRM_SIZE__EMPTY               IPU_REGISTERS_OFFSET+0x00030008,0x00000000
+#define IPU_CSI0_ACT_FRM_SIZE__FULL                IPU_REGISTERS_OFFSET+0x00030008,0xffffffff
+#define IPU_CSI0_ACT_FRM_SIZE__CSI0_ACT_FRM_HEIGHT IPU_REGISTERS_OFFSET+0x00030008,0x0FFF0000
+#define IPU_CSI0_ACT_FRM_SIZE__CSI0_ACT_FRM_WIDTH  IPU_REGISTERS_OFFSET+0x00030008,0x00001FFF
+
+#define IPU_CSI0_OUT_FRM_CTRL__ADDR           IPU_REGISTERS_OFFSET+0x0003000C
+#define IPU_CSI0_OUT_FRM_CTRL__EMPTY          IPU_REGISTERS_OFFSET+0x0003000C,0x00000000
+#define IPU_CSI0_OUT_FRM_CTRL__FULL           IPU_REGISTERS_OFFSET+0x0003000C,0xffffffff
+#define IPU_CSI0_OUT_FRM_CTRL__CSI0_HORZ_DWNS IPU_REGISTERS_OFFSET+0x0003000C,0x80000000
+#define IPU_CSI0_OUT_FRM_CTRL__CSI0_VERT_DWNS IPU_REGISTERS_OFFSET+0x0003000C,0x40000000
+#define IPU_CSI0_OUT_FRM_CTRL__CSI0_HSC       IPU_REGISTERS_OFFSET+0x0003000C,0x1FFF0000
+#define IPU_CSI0_OUT_FRM_CTRL__CSI0_VSC       IPU_REGISTERS_OFFSET+0x0003000C,0x00000FFF
+
+#define IPU_CSI0_TST_CTRL__ADDR               IPU_REGISTERS_OFFSET+0x00030010
+#define IPU_CSI0_TST_CTRL__EMPTY              IPU_REGISTERS_OFFSET+0x00030010,0x00000000
+#define IPU_CSI0_TST_CTRL__FULL               IPU_REGISTERS_OFFSET+0x00030010,0xffffffff
+#define IPU_CSI0_TST_CTRL__CSI0_TEST_GEN_MODE IPU_REGISTERS_OFFSET+0x00030010,0x01000000
+#define IPU_CSI0_TST_CTRL__CSI0_PG_B_VALUE    IPU_REGISTERS_OFFSET+0x00030010,0x00FF0000
+#define IPU_CSI0_TST_CTRL__CSI0_PG_G_VALUE    IPU_REGISTERS_OFFSET+0x00030010,0x0000FF00
+#define IPU_CSI0_TST_CTRL__CSI0_PG_R_VALUE    IPU_REGISTERS_OFFSET+0x00030010,0x000000FF
+
+#define IPU_CSI0_CCIR_CODE_1__ADDR                    IPU_REGISTERS_OFFSET+0x00030014
+#define IPU_CSI0_CCIR_CODE_1__EMPTY                   IPU_REGISTERS_OFFSET+0x00030014,0x00000000
+#define IPU_CSI0_CCIR_CODE_1__FULL                    IPU_REGISTERS_OFFSET+0x00030014,0xffffffff
+#define IPU_CSI0_CCIR_CODE_1__CSI0_CCIR_ERR_DET_EN    IPU_REGISTERS_OFFSET+0x00030014,0x01000000
+#define IPU_CSI0_CCIR_CODE_1__CSI0_STRT_FLD0_ACTV     IPU_REGISTERS_OFFSET+0x00030014,0x00380000
+#define IPU_CSI0_CCIR_CODE_1__CSI0_END_FLD0_ACTV      IPU_REGISTERS_OFFSET+0x00030014,0x00070000
+#define IPU_CSI0_CCIR_CODE_1__CSI0_STRT_FLD0_BLNK_2ND IPU_REGISTERS_OFFSET+0x00030014,0x00000E00
+#define IPU_CSI0_CCIR_CODE_1__CSI0_END_FLD0_BLNK_2ND  IPU_REGISTERS_OFFSET+0x00030014,0x000001C0
+#define IPU_CSI0_CCIR_CODE_1__CSI0_STRT_FLD0_BLNK_1ST IPU_REGISTERS_OFFSET+0x00030014,0x00000038
+#define IPU_CSI0_CCIR_CODE_1__CSI0_END_FLD0_BLNK_1ST  IPU_REGISTERS_OFFSET+0x00030014,0x00000007
+
+#define IPU_CSI0_CCIR_CODE_2__ADDR                    IPU_REGISTERS_OFFSET+0x00030018
+#define IPU_CSI0_CCIR_CODE_2__EMPTY                   IPU_REGISTERS_OFFSET+0x00030018,0x00000000
+#define IPU_CSI0_CCIR_CODE_2__FULL                    IPU_REGISTERS_OFFSET+0x00030018,0xffffffff
+#define IPU_CSI0_CCIR_CODE_2__CSI0_STRT_FLD1_ACTV     IPU_REGISTERS_OFFSET+0x00030018,0x00380000
+#define IPU_CSI0_CCIR_CODE_2__CSI0_END_FLD1_ACTV      IPU_REGISTERS_OFFSET+0x00030018,0x00070000
+#define IPU_CSI0_CCIR_CODE_2__CSI0_STRT_FLD1_BLNK_2ND IPU_REGISTERS_OFFSET+0x00030018,0x00000E00
+#define IPU_CSI0_CCIR_CODE_2__CSI0_END_FLD1_BLNK_2ND  IPU_REGISTERS_OFFSET+0x00030018,0x000001C0
+#define IPU_CSI0_CCIR_CODE_2__CSI0_STRT_FLD1_BLNK_1ST IPU_REGISTERS_OFFSET+0x00030018,0x00000038
+#define IPU_CSI0_CCIR_CODE_2__CSI0_END_FLD1_BLNK_1ST  IPU_REGISTERS_OFFSET+0x00030018,0x00000007
+
+#define IPU_CSI0_CCIR_CODE_3__ADDR             IPU_REGISTERS_OFFSET+0x0003001C
+#define IPU_CSI0_CCIR_CODE_3__EMPTY            IPU_REGISTERS_OFFSET+0x0003001C,0x00000000
+#define IPU_CSI0_CCIR_CODE_3__FULL             IPU_REGISTERS_OFFSET+0x0003001C,0xffffffff
+#define IPU_CSI0_CCIR_CODE_3__CSI0_CCIR_PRECOM IPU_REGISTERS_OFFSET+0x0003001C,0x3FFFFFFF
+
+#define IPU_CSI0_DI__ADDR          IPU_REGISTERS_OFFSET+0x00030020
+#define IPU_CSI0_DI__EMPTY         IPU_REGISTERS_OFFSET+0x00030020,0x00000000
+#define IPU_CSI0_DI__FULL          IPU_REGISTERS_OFFSET+0x00030020,0xffffffff
+#define IPU_CSI0_DI__CSI0_MIPI_DI3 IPU_REGISTERS_OFFSET+0x00030020,0xFF000000
+#define IPU_CSI0_DI__CSI0_MIPI_DI2 IPU_REGISTERS_OFFSET+0x00030020,0x00FF0000
+#define IPU_CSI0_DI__CSI0_MIPI_DI1 IPU_REGISTERS_OFFSET+0x00030020,0x0000FF00
+#define IPU_CSI0_DI__CSI0_MIPI_DI0 IPU_REGISTERS_OFFSET+0x00030020,0x000000FF
+
+#define IPU_CSI0_SKIP__ADDR                     IPU_REGISTERS_OFFSET+0x00030024
+#define IPU_CSI0_SKIP__EMPTY                    IPU_REGISTERS_OFFSET+0x00030024,0x00000000
+#define IPU_CSI0_SKIP__FULL                     IPU_REGISTERS_OFFSET+0x00030024,0xffffffff
+#define IPU_CSI0_SKIP__CSI0_SKIP_ISP            IPU_REGISTERS_OFFSET+0x00030024,0x00F80000
+#define IPU_CSI0_SKIP__CSI0_MAX_RATIO_SKIP_ISP  IPU_REGISTERS_OFFSET+0x00030024,0x00070000
+#define IPU_CSI0_SKIP__CSI0_ID_2_SKIP           IPU_REGISTERS_OFFSET+0x00030024,0x00000300
+#define IPU_CSI0_SKIP__CSI0_SKIP_SMFC           IPU_REGISTERS_OFFSET+0x00030024,0x000000F8
+#define IPU_CSI0_SKIP__CSI0_MAX_RATIO_SKIP_SMFC IPU_REGISTERS_OFFSET+0x00030024,0x00000007
+
+#define IPU_CSI0_CPD_CTRL__ADDR               IPU_REGISTERS_OFFSET+0x00030028
+#define IPU_CSI0_CPD_CTRL__EMPTY              IPU_REGISTERS_OFFSET+0x00030028,0x00000000
+#define IPU_CSI0_CPD_CTRL__FULL               IPU_REGISTERS_OFFSET+0x00030028,0xffffffff
+#define IPU_CSI0_CPD_CTRL__CSI0_CPD           IPU_REGISTERS_OFFSET+0x00030028,0x0000001C
+#define IPU_CSI0_CPD_CTRL__CSI0_RED_ROW_BEGIN IPU_REGISTERS_OFFSET+0x00030028,0x00000002
+#define IPU_CSI0_CPD_CTRL__CSI0_GREEN_P_BEGIN IPU_REGISTERS_OFFSET+0x00030028,0x00000001
+
+#define IPU_CSI0_CPD_RC_0__ADDR          IPU_REGISTERS_OFFSET+0x0003002C
+#define IPU_CSI0_CPD_RC_0__EMPTY         IPU_REGISTERS_OFFSET+0x0003002C,0x00000000
+#define IPU_CSI0_CPD_RC_0__FULL          IPU_REGISTERS_OFFSET+0x0003002C,0xffffffff
+#define IPU_CSI0_CPD_RC_0__CSI0_CPD_RC_1 IPU_REGISTERS_OFFSET+0x0003002C,0x01FF0000
+#define IPU_CSI0_CPD_RC_0__CSI0_CPD_RC_0 IPU_REGISTERS_OFFSET+0x0003002C,0x000001FF
+
+#define IPU_CSI0_CPD_RC_1__ADDR          IPU_REGISTERS_OFFSET+0x00030030
+#define IPU_CSI0_CPD_RC_1__EMPTY         IPU_REGISTERS_OFFSET+0x00030030,0x00000000
+#define IPU_CSI0_CPD_RC_1__FULL          IPU_REGISTERS_OFFSET+0x00030030,0xffffffff
+#define IPU_CSI0_CPD_RC_1__CSI0_CPD_RC_3 IPU_REGISTERS_OFFSET+0x00030030,0x01FF0000
+#define IPU_CSI0_CPD_RC_1__CSI0_CPD_RC_2 IPU_REGISTERS_OFFSET+0x00030030,0x000001FF
+
+#define IPU_CSI0_CPD_RC_2__ADDR          IPU_REGISTERS_OFFSET+0x00030034
+#define IPU_CSI0_CPD_RC_2__EMPTY         IPU_REGISTERS_OFFSET+0x00030034,0x00000000
+#define IPU_CSI0_CPD_RC_2__FULL          IPU_REGISTERS_OFFSET+0x00030034,0xffffffff
+#define IPU_CSI0_CPD_RC_2__CSI0_CPD_RC_5 IPU_REGISTERS_OFFSET+0x00030034,0x01FF0000
+#define IPU_CSI0_CPD_RC_2__CSI0_CPD_RC_4 IPU_REGISTERS_OFFSET+0x00030034,0x000001FF
+
+#define IPU_CSI0_CPD_RC_3__ADDR          IPU_REGISTERS_OFFSET+0x00030038
+#define IPU_CSI0_CPD_RC_3__EMPTY         IPU_REGISTERS_OFFSET+0x00030038,0x00000000
+#define IPU_CSI0_CPD_RC_3__FULL          IPU_REGISTERS_OFFSET+0x00030038,0xffffffff
+#define IPU_CSI0_CPD_RC_3__CSI0_CPD_RC_7 IPU_REGISTERS_OFFSET+0x00030038,0x01FF0000
+#define IPU_CSI0_CPD_RC_3__CSI0_CPD_RC_6 IPU_REGISTERS_OFFSET+0x00030038,0x000001FF
+
+#define IPU_CSI0_CPD_RC_4__ADDR          IPU_REGISTERS_OFFSET+0x0003003C
+#define IPU_CSI0_CPD_RC_4__EMPTY         IPU_REGISTERS_OFFSET+0x0003003C,0x00000000
+#define IPU_CSI0_CPD_RC_4__FULL          IPU_REGISTERS_OFFSET+0x0003003C,0xffffffff
+#define IPU_CSI0_CPD_RC_4__CSI0_CPD_RC_9 IPU_REGISTERS_OFFSET+0x0003003C,0x01FF0000
+#define IPU_CSI0_CPD_RC_4__CSI0_CPD_RC_8 IPU_REGISTERS_OFFSET+0x0003003C,0x000001FF
+
+#define IPU_CSI0_CPD_RC_5__ADDR           IPU_REGISTERS_OFFSET+0x00030040
+#define IPU_CSI0_CPD_RC_5__EMPTY          IPU_REGISTERS_OFFSET+0x00030040,0x00000000
+#define IPU_CSI0_CPD_RC_5__FULL           IPU_REGISTERS_OFFSET+0x00030040,0xffffffff
+#define IPU_CSI0_CPD_RC_5__CSI0_CPD_RC_11 IPU_REGISTERS_OFFSET+0x00030040,0x01FF0000
+#define IPU_CSI0_CPD_RC_5__CSI0_CPD_RC_10 IPU_REGISTERS_OFFSET+0x00030040,0x000001FF
+
+#define IPU_CSI0_CPD_RC_6__ADDR           IPU_REGISTERS_OFFSET+0x00030044
+#define IPU_CSI0_CPD_RC_6__EMPTY          IPU_REGISTERS_OFFSET+0x00030044,0x00000000
+#define IPU_CSI0_CPD_RC_6__FULL           IPU_REGISTERS_OFFSET+0x00030044,0xffffffff
+#define IPU_CSI0_CPD_RC_6__CSI0_CPD_RC_13 IPU_REGISTERS_OFFSET+0x00030044,0x01FF0000
+#define IPU_CSI0_CPD_RC_6__CSI0_CPD_RC_12 IPU_REGISTERS_OFFSET+0x00030044,0x000001FF
+
+#define IPU_CSI0_CPD_RC_7__ADDR           IPU_REGISTERS_OFFSET+0x00030048
+#define IPU_CSI0_CPD_RC_7__EMPTY          IPU_REGISTERS_OFFSET+0x00030048,0x00000000
+#define IPU_CSI0_CPD_RC_7__FULL           IPU_REGISTERS_OFFSET+0x00030048,0xffffffff
+#define IPU_CSI0_CPD_RC_7__CSI0_CPD_RC_15 IPU_REGISTERS_OFFSET+0x00030048,0x01FF0000
+#define IPU_CSI0_CPD_RC_7__CSI0_CPD_RC_14 IPU_REGISTERS_OFFSET+0x00030048,0x000001FF
+
+#define IPU_CSI0_CPD_RS_0__ADDR         IPU_REGISTERS_OFFSET+0x0003004C
+#define IPU_CSI0_CPD_RS_0__EMPTY        IPU_REGISTERS_OFFSET+0x0003004C,0x00000000
+#define IPU_CSI0_CPD_RS_0__FULL         IPU_REGISTERS_OFFSET+0x0003004C,0xffffffff
+#define IPU_CSI0_CPD_RS_0__CSI0_CPD_RS3 IPU_REGISTERS_OFFSET+0x0003004C,0xFF000000
+#define IPU_CSI0_CPD_RS_0__CSI0_CPD_RS2 IPU_REGISTERS_OFFSET+0x0003004C,0x00FF0000
+#define IPU_CSI0_CPD_RS_0__CSI0_CPD_RS1 IPU_REGISTERS_OFFSET+0x0003004C,0x0000FF00
+#define IPU_CSI0_CPD_RS_0__CSI0_CPD_RS0 IPU_REGISTERS_OFFSET+0x0003004C,0x000000FF
+
+#define IPU_CSI0_CPD_RS_1__ADDR         IPU_REGISTERS_OFFSET+0x00030050
+#define IPU_CSI0_CPD_RS_1__EMPTY        IPU_REGISTERS_OFFSET+0x00030050,0x00000000
+#define IPU_CSI0_CPD_RS_1__FULL         IPU_REGISTERS_OFFSET+0x00030050,0xffffffff
+#define IPU_CSI0_CPD_RS_1__CSI0_CPD_RS7 IPU_REGISTERS_OFFSET+0x00030050,0xFF000000
+#define IPU_CSI0_CPD_RS_1__CSI0_CPD_RS6 IPU_REGISTERS_OFFSET+0x00030050,0x00FF0000
+#define IPU_CSI0_CPD_RS_1__CSI0_CPD_RS5 IPU_REGISTERS_OFFSET+0x00030050,0x0000FF00
+#define IPU_CSI0_CPD_RS_1__CSI0_CPD_RS4 IPU_REGISTERS_OFFSET+0x00030050,0x000000FF
+
+#define IPU_CSI0_CPD_RS_2__ADDR          IPU_REGISTERS_OFFSET+0x00030054
+#define IPU_CSI0_CPD_RS_2__EMPTY         IPU_REGISTERS_OFFSET+0x00030054,0x00000000
+#define IPU_CSI0_CPD_RS_2__FULL          IPU_REGISTERS_OFFSET+0x00030054,0xffffffff
+#define IPU_CSI0_CPD_RS_2__CSI0_CPD_RS11 IPU_REGISTERS_OFFSET+0x00030054,0xFF000000
+#define IPU_CSI0_CPD_RS_2__CSI0_CPD_RS10 IPU_REGISTERS_OFFSET+0x00030054,0x00FF0000
+#define IPU_CSI0_CPD_RS_2__CSI0_CPD_RS9  IPU_REGISTERS_OFFSET+0x00030054,0x0000FF00
+#define IPU_CSI0_CPD_RS_2__CSI0_CPD_RS8  IPU_REGISTERS_OFFSET+0x00030054,0x000000FF
+
+#define IPU_CSI0_CPD_RS_3__ADDR          IPU_REGISTERS_OFFSET+0x00030058
+#define IPU_CSI0_CPD_RS_3__EMPTY         IPU_REGISTERS_OFFSET+0x00030058,0x00000000
+#define IPU_CSI0_CPD_RS_3__FULL          IPU_REGISTERS_OFFSET+0x00030058,0xffffffff
+#define IPU_CSI0_CPD_RS_3__CSI0_CPD_RS15 IPU_REGISTERS_OFFSET+0x00030058,0xFF000000
+#define IPU_CSI0_CPD_RS_3__CSI0_CPD_RS14 IPU_REGISTERS_OFFSET+0x00030058,0x00FF0000
+#define IPU_CSI0_CPD_RS_3__CSI0_CPD_RS13 IPU_REGISTERS_OFFSET+0x00030058,0x0000FF00
+#define IPU_CSI0_CPD_RS_3__CSI0_CPD_RS12 IPU_REGISTERS_OFFSET+0x00030058,0x000000FF
+
+#define IPU_CSI0_CPD_GRC_0__ADDR          IPU_REGISTERS_OFFSET+0x0003005C
+#define IPU_CSI0_CPD_GRC_0__EMPTY         IPU_REGISTERS_OFFSET+0x0003005C,0x00000000
+#define IPU_CSI0_CPD_GRC_0__FULL          IPU_REGISTERS_OFFSET+0x0003005C,0xffffffff
+#define IPU_CSI0_CPD_GRC_0__CSI0_CPD_GRC1 IPU_REGISTERS_OFFSET+0x0003005C,0x01FF0000
+#define IPU_CSI0_CPD_GRC_0__CSI0_CPD_GRC0 IPU_REGISTERS_OFFSET+0x0003005C,0x000001FF
+
+#define IPU_CSI0_CPD_GRC_1__ADDR          IPU_REGISTERS_OFFSET+0x00030060
+#define IPU_CSI0_CPD_GRC_1__EMPTY         IPU_REGISTERS_OFFSET+0x00030060,0x00000000
+#define IPU_CSI0_CPD_GRC_1__FULL          IPU_REGISTERS_OFFSET+0x00030060,0xffffffff
+#define IPU_CSI0_CPD_GRC_1__CSI0_CPD_GRC3 IPU_REGISTERS_OFFSET+0x00030060,0x01FF0000
+#define IPU_CSI0_CPD_GRC_1__CSI0_CPD_GRC2 IPU_REGISTERS_OFFSET+0x00030060,0x000001FF
+
+#define IPU_CSI0_CPD_GRC_2__ADDR          IPU_REGISTERS_OFFSET+0x00030064
+#define IPU_CSI0_CPD_GRC_2__EMPTY         IPU_REGISTERS_OFFSET+0x00030064,0x00000000
+#define IPU_CSI0_CPD_GRC_2__FULL          IPU_REGISTERS_OFFSET+0x00030064,0xffffffff
+#define IPU_CSI0_CPD_GRC_2__CSI0_CPD_GRC5 IPU_REGISTERS_OFFSET+0x00030064,0x01FF0000
+#define IPU_CSI0_CPD_GRC_2__CSI0_CPD_GRC4 IPU_REGISTERS_OFFSET+0x00030064,0x000001FF
+
+#define IPU_CSI0_CPD_GRC_3__ADDR          IPU_REGISTERS_OFFSET+0x00030068
+#define IPU_CSI0_CPD_GRC_3__EMPTY         IPU_REGISTERS_OFFSET+0x00030068,0x00000000
+#define IPU_CSI0_CPD_GRC_3__FULL          IPU_REGISTERS_OFFSET+0x00030068,0xffffffff
+#define IPU_CSI0_CPD_GRC_3__CSI0_CPD_GRC7 IPU_REGISTERS_OFFSET+0x00030068,0x01FF0000
+#define IPU_CSI0_CPD_GRC_3__CSI0_CPD_GRC6 IPU_REGISTERS_OFFSET+0x00030068,0x000001FF
+
+#define IPU_CSI0_CPD_GRC_4__ADDR          IPU_REGISTERS_OFFSET+0x0003006C
+#define IPU_CSI0_CPD_GRC_4__EMPTY         IPU_REGISTERS_OFFSET+0x0003006C,0x00000000
+#define IPU_CSI0_CPD_GRC_4__FULL          IPU_REGISTERS_OFFSET+0x0003006C,0xffffffff
+#define IPU_CSI0_CPD_GRC_4__CSI0_CPD_GRC9 IPU_REGISTERS_OFFSET+0x0003006C,0x01FF0000
+#define IPU_CSI0_CPD_GRC_4__CSI0_CPD_GRC8 IPU_REGISTERS_OFFSET+0x0003006C,0x000001FF
+
+#define IPU_CSI0_CPD_GRC_5__ADDR           IPU_REGISTERS_OFFSET+0x00030070
+#define IPU_CSI0_CPD_GRC_5__EMPTY          IPU_REGISTERS_OFFSET+0x00030070,0x00000000
+#define IPU_CSI0_CPD_GRC_5__FULL           IPU_REGISTERS_OFFSET+0x00030070,0xffffffff
+#define IPU_CSI0_CPD_GRC_5__CSI0_CPD_GRC11 IPU_REGISTERS_OFFSET+0x00030070,0x01FF0000
+#define IPU_CSI0_CPD_GRC_5__CSI0_CPD_GRC10 IPU_REGISTERS_OFFSET+0x00030070,0x000001FF
+
+#define IPU_CSI0_CPD_GRC_6__ADDR           IPU_REGISTERS_OFFSET+0x00030074
+#define IPU_CSI0_CPD_GRC_6__EMPTY          IPU_REGISTERS_OFFSET+0x00030074,0x00000000
+#define IPU_CSI0_CPD_GRC_6__FULL           IPU_REGISTERS_OFFSET+0x00030074,0xffffffff
+#define IPU_CSI0_CPD_GRC_6__CSI0_CPD_GRC13 IPU_REGISTERS_OFFSET+0x00030074,0x01FF0000
+#define IPU_CSI0_CPD_GRC_6__CSI0_CPD_GRC12 IPU_REGISTERS_OFFSET+0x00030074,0x000001FF
+
+#define IPU_CSI0_CPD_GRC_7__ADDR           IPU_REGISTERS_OFFSET+0x00030078
+#define IPU_CSI0_CPD_GRC_7__EMPTY          IPU_REGISTERS_OFFSET+0x00030078,0x00000000
+#define IPU_CSI0_CPD_GRC_7__FULL           IPU_REGISTERS_OFFSET+0x00030078,0xffffffff
+#define IPU_CSI0_CPD_GRC_7__CSI0_CPD_GRC15 IPU_REGISTERS_OFFSET+0x00030078,0x01FF0000
+#define IPU_CSI0_CPD_GRC_7__CSI0_CPD_GRC14 IPU_REGISTERS_OFFSET+0x00030078,0x000001FF
+
+#define IPU_CSI0_CPD_GRS_0__ADDR          IPU_REGISTERS_OFFSET+0x0003007C
+#define IPU_CSI0_CPD_GRS_0__EMPTY         IPU_REGISTERS_OFFSET+0x0003007C,0x00000000
+#define IPU_CSI0_CPD_GRS_0__FULL          IPU_REGISTERS_OFFSET+0x0003007C,0xffffffff
+#define IPU_CSI0_CPD_GRS_0__CSI0_CPD_GRS3 IPU_REGISTERS_OFFSET+0x0003007C,0xFF000000
+#define IPU_CSI0_CPD_GRS_0__CSI0_CPD_GRS2 IPU_REGISTERS_OFFSET+0x0003007C,0x00FF0000
+#define IPU_CSI0_CPD_GRS_0__CSI0_CPD_GRS1 IPU_REGISTERS_OFFSET+0x0003007C,0x0000FF00
+#define IPU_CSI0_CPD_GRS_0__CSI0_CPD_GRS0 IPU_REGISTERS_OFFSET+0x0003007C,0x000000FF
+
+#define IPU_CSI0_CPD_GRS_1__ADDR          IPU_REGISTERS_OFFSET+0x00030080
+#define IPU_CSI0_CPD_GRS_1__EMPTY         IPU_REGISTERS_OFFSET+0x00030080,0x00000000
+#define IPU_CSI0_CPD_GRS_1__FULL          IPU_REGISTERS_OFFSET+0x00030080,0xffffffff
+#define IPU_CSI0_CPD_GRS_1__CSI0_CPD_GRS7 IPU_REGISTERS_OFFSET+0x00030080,0xFF000000
+#define IPU_CSI0_CPD_GRS_1__CSI0_CPD_GRS6 IPU_REGISTERS_OFFSET+0x00030080,0x00FF0000
+#define IPU_CSI0_CPD_GRS_1__CSI0_CPD_GRS5 IPU_REGISTERS_OFFSET+0x00030080,0x0000FF00
+#define IPU_CSI0_CPD_GRS_1__CSI0_CPD_GRS4 IPU_REGISTERS_OFFSET+0x00030080,0x000000FF
+
+#define IPU_CSI0_CPD_GRS_2__ADDR           IPU_REGISTERS_OFFSET+0x00030084
+#define IPU_CSI0_CPD_GRS_2__EMPTY          IPU_REGISTERS_OFFSET+0x00030084,0x00000000
+#define IPU_CSI0_CPD_GRS_2__FULL           IPU_REGISTERS_OFFSET+0x00030084,0xffffffff
+#define IPU_CSI0_CPD_GRS_2__CSI0_CPD_GRS11 IPU_REGISTERS_OFFSET+0x00030084,0xFF000000
+#define IPU_CSI0_CPD_GRS_2__CSI0_CPD_GRS10 IPU_REGISTERS_OFFSET+0x00030084,0x00FF0000
+#define IPU_CSI0_CPD_GRS_2__CSI0_CPD_GRS9  IPU_REGISTERS_OFFSET+0x00030084,0x0000FF00
+#define IPU_CSI0_CPD_GRS_2__CSI0_CPD_GRS8  IPU_REGISTERS_OFFSET+0x00030084,0x000000FF
+
+#define IPU_CSI0_CPD_GRS_3__ADDR           IPU_REGISTERS_OFFSET+0x00030088
+#define IPU_CSI0_CPD_GRS_3__EMPTY          IPU_REGISTERS_OFFSET+0x00030088,0x00000000
+#define IPU_CSI0_CPD_GRS_3__FULL           IPU_REGISTERS_OFFSET+0x00030088,0xffffffff
+#define IPU_CSI0_CPD_GRS_3__CSI0_CPD_GRS15 IPU_REGISTERS_OFFSET+0x00030088,0xFF000000
+#define IPU_CSI0_CPD_GRS_3__CSI0_CPD_GRS14 IPU_REGISTERS_OFFSET+0x00030088,0x00FF0000
+#define IPU_CSI0_CPD_GRS_3__CSI0_CPD_GRS13 IPU_REGISTERS_OFFSET+0x00030088,0x0000FF00
+#define IPU_CSI0_CPD_GRS_3__CSI0_CPD_GRS12 IPU_REGISTERS_OFFSET+0x00030088,0x000000FF
+
+#define IPU_CSI0_CPD_GBC_0__ADDR          IPU_REGISTERS_OFFSET+0x0003008C
+#define IPU_CSI0_CPD_GBC_0__EMPTY         IPU_REGISTERS_OFFSET+0x0003008C,0x00000000
+#define IPU_CSI0_CPD_GBC_0__FULL          IPU_REGISTERS_OFFSET+0x0003008C,0xffffffff
+#define IPU_CSI0_CPD_GBC_0__CSI0_CPD_GBC1 IPU_REGISTERS_OFFSET+0x0003008C,0x01FF0000
+#define IPU_CSI0_CPD_GBC_0__CSI0_CPD_GBC0 IPU_REGISTERS_OFFSET+0x0003008C,0x000001FF
+
+#define IPU_CSI0_CPD_GBC_1__ADDR          IPU_REGISTERS_OFFSET+0x00030090
+#define IPU_CSI0_CPD_GBC_1__EMPTY         IPU_REGISTERS_OFFSET+0x00030090,0x00000000
+#define IPU_CSI0_CPD_GBC_1__FULL          IPU_REGISTERS_OFFSET+0x00030090,0xffffffff
+#define IPU_CSI0_CPD_GBC_1__CSI0_CPD_GBC3 IPU_REGISTERS_OFFSET+0x00030090,0x01FF0000
+#define IPU_CSI0_CPD_GBC_1__CSI0_CPD_GBC2 IPU_REGISTERS_OFFSET+0x00030090,0x000001FF
+
+#define IPU_CSI0_CPD_GBC_2__ADDR          IPU_REGISTERS_OFFSET+0x00030094
+#define IPU_CSI0_CPD_GBC_2__EMPTY         IPU_REGISTERS_OFFSET+0x00030094,0x00000000
+#define IPU_CSI0_CPD_GBC_2__FULL          IPU_REGISTERS_OFFSET+0x00030094,0xffffffff
+#define IPU_CSI0_CPD_GBC_2__CSI0_CPD_GBC5 IPU_REGISTERS_OFFSET+0x00030094,0x01FF0000
+#define IPU_CSI0_CPD_GBC_2__CSI0_CPD_GBC4 IPU_REGISTERS_OFFSET+0x00030094,0x000001FF
+
+#define IPU_CSI0_CPD_GBC_3__ADDR          IPU_REGISTERS_OFFSET+0x00030098
+#define IPU_CSI0_CPD_GBC_3__EMPTY         IPU_REGISTERS_OFFSET+0x00030098,0x00000000
+#define IPU_CSI0_CPD_GBC_3__FULL          IPU_REGISTERS_OFFSET+0x00030098,0xffffffff
+#define IPU_CSI0_CPD_GBC_3__CSI0_CPD_GBC7 IPU_REGISTERS_OFFSET+0x00030098,0x01FF0000
+#define IPU_CSI0_CPD_GBC_3__CSI0_CPD_GBC6 IPU_REGISTERS_OFFSET+0x00030098,0x000001FF
+
+#define IPU_CSI0_CPD_GBC_4__ADDR          IPU_REGISTERS_OFFSET+0x0003009C
+#define IPU_CSI0_CPD_GBC_4__EMPTY         IPU_REGISTERS_OFFSET+0x0003009C,0x00000000
+#define IPU_CSI0_CPD_GBC_4__FULL          IPU_REGISTERS_OFFSET+0x0003009C,0xffffffff
+#define IPU_CSI0_CPD_GBC_4__CSI0_CPD_GBC9 IPU_REGISTERS_OFFSET+0x0003009C,0x01FF0000
+#define IPU_CSI0_CPD_GBC_4__CSI0_CPD_GBC8 IPU_REGISTERS_OFFSET+0x0003009C,0x000001FF
+
+#define IPU_CSI0_CPD_GBC_5__ADDR           IPU_REGISTERS_OFFSET+0x000300A0
+#define IPU_CSI0_CPD_GBC_5__EMPTY          IPU_REGISTERS_OFFSET+0x000300A0,0x00000000
+#define IPU_CSI0_CPD_GBC_5__FULL           IPU_REGISTERS_OFFSET+0x000300A0,0xffffffff
+#define IPU_CSI0_CPD_GBC_5__CSI0_CPD_GBC11 IPU_REGISTERS_OFFSET+0x000300A0,0x01FF0000
+#define IPU_CSI0_CPD_GBC_5__CSI0_CPD_GBC10 IPU_REGISTERS_OFFSET+0x000300A0,0x000001FF
+
+#define IPU_CSI0_CPD_GBC_6__ADDR           IPU_REGISTERS_OFFSET+0x000300A4
+#define IPU_CSI0_CPD_GBC_6__EMPTY          IPU_REGISTERS_OFFSET+0x000300A4,0x00000000
+#define IPU_CSI0_CPD_GBC_6__FULL           IPU_REGISTERS_OFFSET+0x000300A4,0xffffffff
+#define IPU_CSI0_CPD_GBC_6__CSI0_CPD_GBC13 IPU_REGISTERS_OFFSET+0x000300A4,0x01FF0000
+#define IPU_CSI0_CPD_GBC_6__CSI0_CPD_GBC12 IPU_REGISTERS_OFFSET+0x000300A4,0x000001FF
+
+#define IPU_CSI0_CPD_GBC_7__ADDR           IPU_REGISTERS_OFFSET+0x000300A8
+#define IPU_CSI0_CPD_GBC_7__EMPTY          IPU_REGISTERS_OFFSET+0x000300A8,0x00000000
+#define IPU_CSI0_CPD_GBC_7__FULL           IPU_REGISTERS_OFFSET+0x000300A8,0xffffffff
+#define IPU_CSI0_CPD_GBC_7__CSI0_CPD_GBC15 IPU_REGISTERS_OFFSET+0x000300A8,0x01FF0000
+#define IPU_CSI0_CPD_GBC_7__CSI0_CPD_GBC14 IPU_REGISTERS_OFFSET+0x000300A8,0x000001FF
+
+#define IPU_CSI0_CPD_GBS_0__ADDR          IPU_REGISTERS_OFFSET+0x000300AC
+#define IPU_CSI0_CPD_GBS_0__EMPTY         IPU_REGISTERS_OFFSET+0x000300AC,0x00000000
+#define IPU_CSI0_CPD_GBS_0__FULL          IPU_REGISTERS_OFFSET+0x000300AC,0xffffffff
+#define IPU_CSI0_CPD_GBS_0__CSI0_CPD_GBS3 IPU_REGISTERS_OFFSET+0x000300AC,0xFF000000
+#define IPU_CSI0_CPD_GBS_0__CSI0_CPD_GBS2 IPU_REGISTERS_OFFSET+0x000300AC,0x00FF0000
+#define IPU_CSI0_CPD_GBS_0__CSI0_CPD_GBS1 IPU_REGISTERS_OFFSET+0x000300AC,0x0000FF00
+#define IPU_CSI0_CPD_GBS_0__CSI0_CPD_GBS0 IPU_REGISTERS_OFFSET+0x000300AC,0x000000FF
+
+#define IPU_CSI0_CPD_GBS_1__ADDR          IPU_REGISTERS_OFFSET+0x000300B0
+#define IPU_CSI0_CPD_GBS_1__EMPTY         IPU_REGISTERS_OFFSET+0x000300B0,0x00000000
+#define IPU_CSI0_CPD_GBS_1__FULL          IPU_REGISTERS_OFFSET+0x000300B0,0xffffffff
+#define IPU_CSI0_CPD_GBS_1__CSI0_CPD_GBS7 IPU_REGISTERS_OFFSET+0x000300B0,0xFF000000
+#define IPU_CSI0_CPD_GBS_1__CSI0_CPD_GBS6 IPU_REGISTERS_OFFSET+0x000300B0,0x00FF0000
+#define IPU_CSI0_CPD_GBS_1__CSI0_CPD_GBS5 IPU_REGISTERS_OFFSET+0x000300B0,0x0000FF00
+#define IPU_CSI0_CPD_GBS_1__CSI0_CPD_GBS4 IPU_REGISTERS_OFFSET+0x000300B0,0x000000FF
+
+#define IPU_CSI0_CPD_GBS_2__ADDR           IPU_REGISTERS_OFFSET+0x000300B4
+#define IPU_CSI0_CPD_GBS_2__EMPTY          IPU_REGISTERS_OFFSET+0x000300B4,0x00000000
+#define IPU_CSI0_CPD_GBS_2__FULL           IPU_REGISTERS_OFFSET+0x000300B4,0xffffffff
+#define IPU_CSI0_CPD_GBS_2__CSI0_CPD_GBS11 IPU_REGISTERS_OFFSET+0x000300B4,0xFF000000
+#define IPU_CSI0_CPD_GBS_2__CSI0_CPD_GBS10 IPU_REGISTERS_OFFSET+0x000300B4,0x00FF0000
+#define IPU_CSI0_CPD_GBS_2__CSI0_CPD_GBS9  IPU_REGISTERS_OFFSET+0x000300B4,0x0000FF00
+#define IPU_CSI0_CPD_GBS_2__CSI0_CPD_GBS8  IPU_REGISTERS_OFFSET+0x000300B4,0x000000FF
+
+#define IPU_CSI0_CPD_GBS_3__ADDR           IPU_REGISTERS_OFFSET+0x000300B8
+#define IPU_CSI0_CPD_GBS_3__EMPTY          IPU_REGISTERS_OFFSET+0x000300B8,0x00000000
+#define IPU_CSI0_CPD_GBS_3__FULL           IPU_REGISTERS_OFFSET+0x000300B8,0xffffffff
+#define IPU_CSI0_CPD_GBS_3__CSI0_CPD_GBS15 IPU_REGISTERS_OFFSET+0x000300B8,0xFF000000
+#define IPU_CSI0_CPD_GBS_3__CSI0_CPD_GBS14 IPU_REGISTERS_OFFSET+0x000300B8,0x00FF0000
+#define IPU_CSI0_CPD_GBS_3__CSI0_CPD_GBS13 IPU_REGISTERS_OFFSET+0x000300B8,0x0000FF00
+#define IPU_CSI0_CPD_GBS_3__CSI0_CPD_GBS12 IPU_REGISTERS_OFFSET+0x000300B8,0x000000FF
+
+#define IPU_CSI0_CPD_BC_0__ADDR         IPU_REGISTERS_OFFSET+0x000300BC
+#define IPU_CSI0_CPD_BC_0__EMPTY        IPU_REGISTERS_OFFSET+0x000300BC,0x00000000
+#define IPU_CSI0_CPD_BC_0__FULL         IPU_REGISTERS_OFFSET+0x000300BC,0xffffffff
+#define IPU_CSI0_CPD_BC_0__CSI0_CPD_BC1 IPU_REGISTERS_OFFSET+0x000300BC,0x01FF0000
+#define IPU_CSI0_CPD_BC_0__CSI0_CPD_BC0 IPU_REGISTERS_OFFSET+0x000300BC,0x000001FF
+
+#define IPU_CSI0_CPD_BC_1__ADDR         IPU_REGISTERS_OFFSET+0x000300C0
+#define IPU_CSI0_CPD_BC_1__EMPTY        IPU_REGISTERS_OFFSET+0x000300C0,0x00000000
+#define IPU_CSI0_CPD_BC_1__FULL         IPU_REGISTERS_OFFSET+0x000300C0,0xffffffff
+#define IPU_CSI0_CPD_BC_1__CSI0_CPD_BC3 IPU_REGISTERS_OFFSET+0x000300C0,0x01FF0000
+#define IPU_CSI0_CPD_BC_1__CSI0_CPD_BC2 IPU_REGISTERS_OFFSET+0x000300C0,0x000001FF
+
+#define IPU_CSI0_CPD_BC_2__ADDR         IPU_REGISTERS_OFFSET+0x000300C4
+#define IPU_CSI0_CPD_BC_2__EMPTY        IPU_REGISTERS_OFFSET+0x000300C4,0x00000000
+#define IPU_CSI0_CPD_BC_2__FULL         IPU_REGISTERS_OFFSET+0x000300C4,0xffffffff
+#define IPU_CSI0_CPD_BC_2__CSI0_CPD_BC5 IPU_REGISTERS_OFFSET+0x000300C4,0x01FF0000
+#define IPU_CSI0_CPD_BC_2__CSI0_CPD_BC4 IPU_REGISTERS_OFFSET+0x000300C4,0x000001FF
+
+#define IPU_CSI0_CPD_BC_3__ADDR         IPU_REGISTERS_OFFSET+0x000300C8
+#define IPU_CSI0_CPD_BC_3__EMPTY        IPU_REGISTERS_OFFSET+0x000300C8,0x00000000
+#define IPU_CSI0_CPD_BC_3__FULL         IPU_REGISTERS_OFFSET+0x000300C8,0xffffffff
+#define IPU_CSI0_CPD_BC_3__CSI0_CPD_BC7 IPU_REGISTERS_OFFSET+0x000300C8,0x01FF0000
+#define IPU_CSI0_CPD_BC_3__CSI0_CPD_BC6 IPU_REGISTERS_OFFSET+0x000300C8,0x000001FF
+
+#define IPU_CSI0_CPD_BC_4__ADDR         IPU_REGISTERS_OFFSET+0x000300CC
+#define IPU_CSI0_CPD_BC_4__EMPTY        IPU_REGISTERS_OFFSET+0x000300CC,0x00000000
+#define IPU_CSI0_CPD_BC_4__FULL         IPU_REGISTERS_OFFSET+0x000300CC,0xffffffff
+#define IPU_CSI0_CPD_BC_4__CSI0_CPD_BC9 IPU_REGISTERS_OFFSET+0x000300CC,0x01FF0000
+#define IPU_CSI0_CPD_BC_4__CSI0_CPD_BC8 IPU_REGISTERS_OFFSET+0x000300CC,0x000001FF
+
+#define IPU_CSI0_CPD_BC_5__ADDR          IPU_REGISTERS_OFFSET+0x000300D0
+#define IPU_CSI0_CPD_BC_5__EMPTY         IPU_REGISTERS_OFFSET+0x000300D0,0x00000000
+#define IPU_CSI0_CPD_BC_5__FULL          IPU_REGISTERS_OFFSET+0x000300D0,0xffffffff
+#define IPU_CSI0_CPD_BC_5__CSI0_CPD_BC11 IPU_REGISTERS_OFFSET+0x000300D0,0x01FF0000
+#define IPU_CSI0_CPD_BC_5__CSI0_CPD_BC10 IPU_REGISTERS_OFFSET+0x000300D0,0x000001FF
+
+#define IPU_CSI0_CPD_BC_6__ADDR          IPU_REGISTERS_OFFSET+0x000300D4
+#define IPU_CSI0_CPD_BC_6__EMPTY         IPU_REGISTERS_OFFSET+0x000300D4,0x00000000
+#define IPU_CSI0_CPD_BC_6__FULL          IPU_REGISTERS_OFFSET+0x000300D4,0xffffffff
+#define IPU_CSI0_CPD_BC_6__CSI0_CPD_BC13 IPU_REGISTERS_OFFSET+0x000300D4,0x01FF0000
+#define IPU_CSI0_CPD_BC_6__CSI0_CPD_BC12 IPU_REGISTERS_OFFSET+0x000300D4,0x000001FF
+
+#define IPU_CSI0_CPD_BC_7__ADDR          IPU_REGISTERS_OFFSET+0x000300D8
+#define IPU_CSI0_CPD_BC_7__EMPTY         IPU_REGISTERS_OFFSET+0x000300D8,0x00000000
+#define IPU_CSI0_CPD_BC_7__FULL          IPU_REGISTERS_OFFSET+0x000300D8,0xffffffff
+#define IPU_CSI0_CPD_BC_7__CSI0_CPD_BC15 IPU_REGISTERS_OFFSET+0x000300D8,0x01FF0000
+#define IPU_CSI0_CPD_BC_7__CSI0_CPD_BC14 IPU_REGISTERS_OFFSET+0x000300D8,0x000001FF
+
+#define IPU_CSI0_CPD_BS_0__ADDR         IPU_REGISTERS_OFFSET+0x000300DC
+#define IPU_CSI0_CPD_BS_0__EMPTY        IPU_REGISTERS_OFFSET+0x000300DC,0x00000000
+#define IPU_CSI0_CPD_BS_0__FULL         IPU_REGISTERS_OFFSET+0x000300DC,0xffffffff
+#define IPU_CSI0_CPD_BS_0__CSI0_CPD_BS3 IPU_REGISTERS_OFFSET+0x000300DC,0xFF000000
+#define IPU_CSI0_CPD_BS_0__CSI0_CPD_BS2 IPU_REGISTERS_OFFSET+0x000300DC,0x00FF0000
+#define IPU_CSI0_CPD_BS_0__CSI0_CPD_BS1 IPU_REGISTERS_OFFSET+0x000300DC,0x0000FF00
+#define IPU_CSI0_CPD_BS_0__CSI0_CPD_BS0 IPU_REGISTERS_OFFSET+0x000300DC,0x000000FF
+
+#define IPU_CSI0_CPD_BS_1__ADDR         IPU_REGISTERS_OFFSET+0x000300E0
+#define IPU_CSI0_CPD_BS_1__EMPTY        IPU_REGISTERS_OFFSET+0x000300E0,0x00000000
+#define IPU_CSI0_CPD_BS_1__FULL         IPU_REGISTERS_OFFSET+0x000300E0,0xffffffff
+#define IPU_CSI0_CPD_BS_1__CSI0_CPD_BS7 IPU_REGISTERS_OFFSET+0x000300E0,0xFF000000
+#define IPU_CSI0_CPD_BS_1__CSI0_CPD_BS6 IPU_REGISTERS_OFFSET+0x000300E0,0x00FF0000
+#define IPU_CSI0_CPD_BS_1__CSI0_CPD_BS5 IPU_REGISTERS_OFFSET+0x000300E0,0x0000FF00
+#define IPU_CSI0_CPD_BS_1__CSI0_CPD_BS4 IPU_REGISTERS_OFFSET+0x000300E0,0x000000FF
+
+#define IPU_CSI0_CPD_BS_2__ADDR          IPU_REGISTERS_OFFSET+0x000300E4
+#define IPU_CSI0_CPD_BS_2__EMPTY         IPU_REGISTERS_OFFSET+0x000300E4,0x00000000
+#define IPU_CSI0_CPD_BS_2__FULL          IPU_REGISTERS_OFFSET+0x000300E4,0xffffffff
+#define IPU_CSI0_CPD_BS_2__CSI0_CPD_BS11 IPU_REGISTERS_OFFSET+0x000300E4,0xFF000000
+#define IPU_CSI0_CPD_BS_2__CSI0_CPD_BS10 IPU_REGISTERS_OFFSET+0x000300E4,0x00FF0000
+#define IPU_CSI0_CPD_BS_2__CSI0_CPD_BS9  IPU_REGISTERS_OFFSET+0x000300E4,0x0000FF00
+#define IPU_CSI0_CPD_BS_2__CSI0_CPD_BS8  IPU_REGISTERS_OFFSET+0x000300E4,0x000000FF
+
+#define IPU_CSI0_CPD_BS_3__ADDR          IPU_REGISTERS_OFFSET+0x000300E8
+#define IPU_CSI0_CPD_BS_3__EMPTY         IPU_REGISTERS_OFFSET+0x000300E8,0x00000000
+#define IPU_CSI0_CPD_BS_3__FULL          IPU_REGISTERS_OFFSET+0x000300E8,0xffffffff
+#define IPU_CSI0_CPD_BS_3__CSI0_CPD_BS15 IPU_REGISTERS_OFFSET+0x000300E8,0xFF000000
+#define IPU_CSI0_CPD_BS_3__CSI0_CPD_BS14 IPU_REGISTERS_OFFSET+0x000300E8,0x00FF0000
+#define IPU_CSI0_CPD_BS_3__CSI0_CPD_BS13 IPU_REGISTERS_OFFSET+0x000300E8,0x0000FF00
+#define IPU_CSI0_CPD_BS_3__CSI0_CPD_BS12 IPU_REGISTERS_OFFSET+0x000300E8,0x000000FF
+
+#define IPU_CSI0_CPD_OFFSET1__ADDR               IPU_REGISTERS_OFFSET+0x000300EC
+#define IPU_CSI0_CPD_OFFSET1__EMPTY              IPU_REGISTERS_OFFSET+0x000300EC,0x00000000
+#define IPU_CSI0_CPD_OFFSET1__FULL               IPU_REGISTERS_OFFSET+0x000300EC,0xffffffff
+#define IPU_CSI0_CPD_OFFSET1__CSI0_CPD_B_OFFSET  IPU_REGISTERS_OFFSET+0x000300EC,0x3FF00000
+#define IPU_CSI0_CPD_OFFSET1__CSI0_CPD_GB_OFFSET IPU_REGISTERS_OFFSET+0x000300EC,0x000FFC00
+#define IPU_CSI0_CPD_OFFSET1__CSI0_CPD_GR_OFFSET IPU_REGISTERS_OFFSET+0x000300EC,0x000003FF
+
+#define IPU_CSI0_CPD_OFFSET2__ADDR              IPU_REGISTERS_OFFSET+0x000300F0
+#define IPU_CSI0_CPD_OFFSET2__EMPTY             IPU_REGISTERS_OFFSET+0x000300F0,0x00000000
+#define IPU_CSI0_CPD_OFFSET2__FULL              IPU_REGISTERS_OFFSET+0x000300F0,0xffffffff
+#define IPU_CSI0_CPD_OFFSET2__CSI0_CPD_R_OFFSET IPU_REGISTERS_OFFSET+0x000300F0,0x000003FF
+
+#define IPU_CSI1_SENS_CONF__ADDR                  IPU_REGISTERS_OFFSET+0x00038000
+#define IPU_CSI1_SENS_CONF__EMPTY                 IPU_REGISTERS_OFFSET+0x00038000,0x00000000
+#define IPU_CSI1_SENS_CONF__FULL                  IPU_REGISTERS_OFFSET+0x00038000,0xffffffff
+#define IPU_CSI1_SENS_CONF__CSI1_DATA_EN_POL      IPU_REGISTERS_OFFSET+0x00038000,0x80000000
+#define IPU_CSI1_SENS_CONF__CSI1_FORCE_EOF        IPU_REGISTERS_OFFSET+0x00038000,0x20000000
+#define IPU_CSI1_SENS_CONF__CSI1_JPEG_MODE        IPU_REGISTERS_OFFSET+0x00038000,0x10000000
+#define IPU_CSI1_SENS_CONF__CSI1_JPEG8_EN         IPU_REGISTERS_OFFSET+0x00038000,0x08000000
+#define IPU_CSI1_SENS_CONF__CSI1_DATA_DEST        IPU_REGISTERS_OFFSET+0x00038000,0x07000000
+#define IPU_CSI1_SENS_CONF__CSI1_DIV_RATIO        IPU_REGISTERS_OFFSET+0x00038000,0x00FF0000
+#define IPU_CSI1_SENS_CONF__CSI1_EXT_VSYNC        IPU_REGISTERS_OFFSET+0x00038000,0x00008000
+#define IPU_CSI1_SENS_CONF__CSI1_DATA_WIDTH       IPU_REGISTERS_OFFSET+0x00038000,0x00007800
+#define IPU_CSI1_SENS_CONF__CSI1_SENS_DATA_FORMAT IPU_REGISTERS_OFFSET+0x00038000,0x00000700
+#define IPU_CSI1_SENS_CONF__CSI1_PACK_TIGHT       IPU_REGISTERS_OFFSET+0x00038000,0x00000080
+#define IPU_CSI1_SENS_CONF__CSI1_SENS_PRTCL       IPU_REGISTERS_OFFSET+0x00038000,0x00000070
+#define IPU_CSI1_SENS_CONF__CSI1_SENS_PIX_CLK_POL IPU_REGISTERS_OFFSET+0x00038000,0x00000008
+#define IPU_CSI1_SENS_CONF__CSI1_DATA_POL         IPU_REGISTERS_OFFSET+0x00038000,0x00000004
+#define IPU_CSI1_SENS_CONF__CSI1_HSYNC_POL        IPU_REGISTERS_OFFSET+0x00038000,0x00000002
+#define IPU_CSI1_SENS_CONF__CSI1_VSYNC_POL        IPU_REGISTERS_OFFSET+0x00038000,0x00000001
+
+#define IPU_CSI1_SENS_FRM_SIZE__ADDR                 IPU_REGISTERS_OFFSET+0x00038004
+#define IPU_CSI1_SENS_FRM_SIZE__EMPTY                IPU_REGISTERS_OFFSET+0x00038004,0x00000000
+#define IPU_CSI1_SENS_FRM_SIZE__FULL                 IPU_REGISTERS_OFFSET+0x00038004,0xffffffff
+#define IPU_CSI1_SENS_FRM_SIZE__CSI1_SENS_FRM_HEIGHT IPU_REGISTERS_OFFSET+0x00038004,0x0FFF0000
+#define IPU_CSI1_SENS_FRM_SIZE__CSI1_SENS_FRM_WIDTH  IPU_REGISTERS_OFFSET+0x00038004,0x00001FFF
+
+#define IPU_CSI1_ACT_FRM_SIZE__ADDR                IPU_REGISTERS_OFFSET+0x00038008
+#define IPU_CSI1_ACT_FRM_SIZE__EMPTY               IPU_REGISTERS_OFFSET+0x00038008,0x00000000
+#define IPU_CSI1_ACT_FRM_SIZE__FULL                IPU_REGISTERS_OFFSET+0x00038008,0xffffffff
+#define IPU_CSI1_ACT_FRM_SIZE__CSI1_ACT_FRM_HEIGHT IPU_REGISTERS_OFFSET+0x00038008,0x0FFF0000
+#define IPU_CSI1_ACT_FRM_SIZE__CSI1_ACT_FRM_WIDTH  IPU_REGISTERS_OFFSET+0x00038008,0x00001FFF
+
+#define IPU_CSI1_OUT_FRM_CTRL__ADDR           IPU_REGISTERS_OFFSET+0x0003800C
+#define IPU_CSI1_OUT_FRM_CTRL__EMPTY          IPU_REGISTERS_OFFSET+0x0003800C,0x00000000
+#define IPU_CSI1_OUT_FRM_CTRL__FULL           IPU_REGISTERS_OFFSET+0x0003800C,0xffffffff
+#define IPU_CSI1_OUT_FRM_CTRL__CSI1_HORZ_DWNS IPU_REGISTERS_OFFSET+0x0003800C,0x80000000
+#define IPU_CSI1_OUT_FRM_CTRL__CSI1_VERT_DWNS IPU_REGISTERS_OFFSET+0x0003800C,0x40000000
+#define IPU_CSI1_OUT_FRM_CTRL__CSI1_HSC       IPU_REGISTERS_OFFSET+0x0003800C,0x1FFF0000
+#define IPU_CSI1_OUT_FRM_CTRL__CSI1_VSC       IPU_REGISTERS_OFFSET+0x0003800C,0x00000FFF
+
+#define IPU_CSI1_TST_CTRL__ADDR               IPU_REGISTERS_OFFSET+0x00038010
+#define IPU_CSI1_TST_CTRL__EMPTY              IPU_REGISTERS_OFFSET+0x00038010,0x00000000
+#define IPU_CSI1_TST_CTRL__FULL               IPU_REGISTERS_OFFSET+0x00038010,0xffffffff
+#define IPU_CSI1_TST_CTRL__CSI1_TEST_GEN_MODE IPU_REGISTERS_OFFSET+0x00038010,0x01000000
+#define IPU_CSI1_TST_CTRL__CSI1_PG_B_VALUE    IPU_REGISTERS_OFFSET+0x00038010,0x00FF0000
+#define IPU_CSI1_TST_CTRL__CSI1_PG_G_VALUE    IPU_REGISTERS_OFFSET+0x00038010,0x0000FF00
+#define IPU_CSI1_TST_CTRL__CSI1_PG_R_VALUE    IPU_REGISTERS_OFFSET+0x00038010,0x000000FF
+
+#define IPU_CSI1_CCIR_CODE_1__ADDR                    IPU_REGISTERS_OFFSET+0x00038014
+#define IPU_CSI1_CCIR_CODE_1__EMPTY                   IPU_REGISTERS_OFFSET+0x00038014,0x00000000
+#define IPU_CSI1_CCIR_CODE_1__FULL                    IPU_REGISTERS_OFFSET+0x00038014,0xffffffff
+#define IPU_CSI1_CCIR_CODE_1__CSI1_CCIR_ERR_DET_EN    IPU_REGISTERS_OFFSET+0x00038014,0x01000000
+#define IPU_CSI1_CCIR_CODE_1__CSI1_STRT_FLD0_ACTV     IPU_REGISTERS_OFFSET+0x00038014,0x00380000
+#define IPU_CSI1_CCIR_CODE_1__CSI1_END_FLD0_ACTV      IPU_REGISTERS_OFFSET+0x00038014,0x00070000
+#define IPU_CSI1_CCIR_CODE_1__CSI1_STRT_FLD0_BLNK_2ND IPU_REGISTERS_OFFSET+0x00038014,0x00000E00
+#define IPU_CSI1_CCIR_CODE_1__CSI1_END_FLD0_BLNK_2ND  IPU_REGISTERS_OFFSET+0x00038014,0x000001C0
+#define IPU_CSI1_CCIR_CODE_1__CSI1_STRT_FLD0_BLNK_1ST IPU_REGISTERS_OFFSET+0x00038014,0x00000038
+#define IPU_CSI1_CCIR_CODE_1__CSI1_END_FLD0_BLNK_1ST  IPU_REGISTERS_OFFSET+0x00038014,0x00000007
+
+#define IPU_CSI1_CCIR_CODE_2__ADDR                    IPU_REGISTERS_OFFSET+0x00038018
+#define IPU_CSI1_CCIR_CODE_2__EMPTY                   IPU_REGISTERS_OFFSET+0x00038018,0x00000000
+#define IPU_CSI1_CCIR_CODE_2__FULL                    IPU_REGISTERS_OFFSET+0x00038018,0xffffffff
+#define IPU_CSI1_CCIR_CODE_2__CSI1_STRT_FLD1_ACTV     IPU_REGISTERS_OFFSET+0x00038018,0x00380000
+#define IPU_CSI1_CCIR_CODE_2__CSI1_END_FLD1_ACTV      IPU_REGISTERS_OFFSET+0x00038018,0x00070000
+#define IPU_CSI1_CCIR_CODE_2__CSI1_STRT_FLD1_BLNK_2ND IPU_REGISTERS_OFFSET+0x00038018,0x00000E00
+#define IPU_CSI1_CCIR_CODE_2__CSI1_END_FLD1_BLNK_2ND  IPU_REGISTERS_OFFSET+0x00038018,0x000001C0
+#define IPU_CSI1_CCIR_CODE_2__CSI1_STRT_FLD1_BLNK_1ST IPU_REGISTERS_OFFSET+0x00038018,0x00000038
+#define IPU_CSI1_CCIR_CODE_2__CSI1_END_FLD1_BLNK_1ST  IPU_REGISTERS_OFFSET+0x00038018,0x00000007
+
+#define IPU_CSI1_CCIR_CODE_3__ADDR             IPU_REGISTERS_OFFSET+0x0003801C
+#define IPU_CSI1_CCIR_CODE_3__EMPTY            IPU_REGISTERS_OFFSET+0x0003801C,0x00000000
+#define IPU_CSI1_CCIR_CODE_3__FULL             IPU_REGISTERS_OFFSET+0x0003801C,0xffffffff
+#define IPU_CSI1_CCIR_CODE_3__CSI1_CCIR_PRECOM IPU_REGISTERS_OFFSET+0x0003801C,0x3FFFFFFF
+
+#define IPU_CSI1_DI__ADDR          IPU_REGISTERS_OFFSET+0x00038020
+#define IPU_CSI1_DI__EMPTY         IPU_REGISTERS_OFFSET+0x00038020,0x00000000
+#define IPU_CSI1_DI__FULL          IPU_REGISTERS_OFFSET+0x00038020,0xffffffff
+#define IPU_CSI1_DI__CSI1_MIPI_DI3 IPU_REGISTERS_OFFSET+0x00038020,0xFF000000
+#define IPU_CSI1_DI__CSI1_MIPI_DI2 IPU_REGISTERS_OFFSET+0x00038020,0x00FF0000
+#define IPU_CSI1_DI__CSI1_MIPI_DI1 IPU_REGISTERS_OFFSET+0x00038020,0x0000FF00
+#define IPU_CSI1_DI__CSI1_MIPI_DI0 IPU_REGISTERS_OFFSET+0x00038020,0x000000FF
+
+#define IPU_CSI1_SKIP__ADDR                     IPU_REGISTERS_OFFSET+0x00038024
+#define IPU_CSI1_SKIP__EMPTY                    IPU_REGISTERS_OFFSET+0x00038024,0x00000000
+#define IPU_CSI1_SKIP__FULL                     IPU_REGISTERS_OFFSET+0x00038024,0xffffffff
+#define IPU_CSI1_SKIP__CSI1_SKIP_ISP            IPU_REGISTERS_OFFSET+0x00038024,0x00F80000
+#define IPU_CSI1_SKIP__CSI1_MAX_RATIO_SKIP_ISP  IPU_REGISTERS_OFFSET+0x00038024,0x00070000
+#define IPU_CSI1_SKIP__CSI1_ID_2_SKIP           IPU_REGISTERS_OFFSET+0x00038024,0x00000300
+#define IPU_CSI1_SKIP__CSI1_SKIP_SMFC           IPU_REGISTERS_OFFSET+0x00038024,0x000000F8
+#define IPU_CSI1_SKIP__CSI1_MAX_RATIO_SKIP_SMFC IPU_REGISTERS_OFFSET+0x00038024,0x00000007
+
+#define IPU_CSI1_CPD_CTRL__ADDR               IPU_REGISTERS_OFFSET+0x00038028
+#define IPU_CSI1_CPD_CTRL__EMPTY              IPU_REGISTERS_OFFSET+0x00038028,0x00000000
+#define IPU_CSI1_CPD_CTRL__FULL               IPU_REGISTERS_OFFSET+0x00038028,0xffffffff
+#define IPU_CSI1_CPD_CTRL__CSI1_CPD           IPU_REGISTERS_OFFSET+0x00038028,0x0000001C
+#define IPU_CSI1_CPD_CTRL__CSI1_RED_ROW_BEGIN IPU_REGISTERS_OFFSET+0x00038028,0x00000002
+#define IPU_CSI1_CPD_CTRL__CSI1_GREEN_P_BEGIN IPU_REGISTERS_OFFSET+0x00038028,0x00000001
+
+#define IPU_CSI1_CPD_RC_0__ADDR          IPU_REGISTERS_OFFSET+0x0003802C
+#define IPU_CSI1_CPD_RC_0__EMPTY         IPU_REGISTERS_OFFSET+0x0003802C,0x00000000
+#define IPU_CSI1_CPD_RC_0__FULL          IPU_REGISTERS_OFFSET+0x0003802C,0xffffffff
+#define IPU_CSI1_CPD_RC_0__CSI1_CPD_RC_1 IPU_REGISTERS_OFFSET+0x0003802C,0x01FF0000
+#define IPU_CSI1_CPD_RC_0__CSI1_CPD_RC_0 IPU_REGISTERS_OFFSET+0x0003802C,0x000001FF
+
+#define IPU_CSI1_CPD_RC_1__ADDR          IPU_REGISTERS_OFFSET+0x00038030
+#define IPU_CSI1_CPD_RC_1__EMPTY         IPU_REGISTERS_OFFSET+0x00038030,0x00000000
+#define IPU_CSI1_CPD_RC_1__FULL          IPU_REGISTERS_OFFSET+0x00038030,0xffffffff
+#define IPU_CSI1_CPD_RC_1__CSI1_CPD_RC_3 IPU_REGISTERS_OFFSET+0x00038030,0x01FF0000
+#define IPU_CSI1_CPD_RC_1__CSI1_CPD_RC_2 IPU_REGISTERS_OFFSET+0x00038030,0x000001FF
+
+#define IPU_CSI1_CPD_RC_2__ADDR          IPU_REGISTERS_OFFSET+0x00038034
+#define IPU_CSI1_CPD_RC_2__EMPTY         IPU_REGISTERS_OFFSET+0x00038034,0x00000000
+#define IPU_CSI1_CPD_RC_2__FULL          IPU_REGISTERS_OFFSET+0x00038034,0xffffffff
+#define IPU_CSI1_CPD_RC_2__CSI1_CPD_RC_5 IPU_REGISTERS_OFFSET+0x00038034,0x01FF0000
+#define IPU_CSI1_CPD_RC_2__CSI1_CPD_RC_4 IPU_REGISTERS_OFFSET+0x00038034,0x000001FF
+
+#define IPU_CSI1_CPD_RC_3__ADDR          IPU_REGISTERS_OFFSET+0x00038038
+#define IPU_CSI1_CPD_RC_3__EMPTY         IPU_REGISTERS_OFFSET+0x00038038,0x00000000
+#define IPU_CSI1_CPD_RC_3__FULL          IPU_REGISTERS_OFFSET+0x00038038,0xffffffff
+#define IPU_CSI1_CPD_RC_3__CSI1_CPD_RC_7 IPU_REGISTERS_OFFSET+0x00038038,0x01FF0000
+#define IPU_CSI1_CPD_RC_3__CSI1_CPD_RC_6 IPU_REGISTERS_OFFSET+0x00038038,0x000001FF
+
+#define IPU_CSI1_CPD_RC_4__ADDR          IPU_REGISTERS_OFFSET+0x0003803C
+#define IPU_CSI1_CPD_RC_4__EMPTY         IPU_REGISTERS_OFFSET+0x0003803C,0x00000000
+#define IPU_CSI1_CPD_RC_4__FULL          IPU_REGISTERS_OFFSET+0x0003803C,0xffffffff
+#define IPU_CSI1_CPD_RC_4__CSI1_CPD_RC_9 IPU_REGISTERS_OFFSET+0x0003803C,0x01FF0000
+#define IPU_CSI1_CPD_RC_4__CSI1_CPD_RC_8 IPU_REGISTERS_OFFSET+0x0003803C,0x000001FF
+
+#define IPU_CSI1_CPD_RC_5__ADDR           IPU_REGISTERS_OFFSET+0x00038040
+#define IPU_CSI1_CPD_RC_5__EMPTY          IPU_REGISTERS_OFFSET+0x00038040,0x00000000
+#define IPU_CSI1_CPD_RC_5__FULL           IPU_REGISTERS_OFFSET+0x00038040,0xffffffff
+#define IPU_CSI1_CPD_RC_5__CSI1_CPD_RC_11 IPU_REGISTERS_OFFSET+0x00038040,0x01FF0000
+#define IPU_CSI1_CPD_RC_5__CSI1_CPD_RC_10 IPU_REGISTERS_OFFSET+0x00038040,0x000001FF
+
+#define IPU_CSI1_CPD_RC_6__ADDR           IPU_REGISTERS_OFFSET+0x00038044
+#define IPU_CSI1_CPD_RC_6__EMPTY          IPU_REGISTERS_OFFSET+0x00038044,0x00000000
+#define IPU_CSI1_CPD_RC_6__FULL           IPU_REGISTERS_OFFSET+0x00038044,0xffffffff
+#define IPU_CSI1_CPD_RC_6__CSI1_CPD_RC_13 IPU_REGISTERS_OFFSET+0x00038044,0x01FF0000
+#define IPU_CSI1_CPD_RC_6__CSI1_CPD_RC_12 IPU_REGISTERS_OFFSET+0x00038044,0x000001FF
+
+#define IPU_CSI1_CPD_RC_7__ADDR           IPU_REGISTERS_OFFSET+0x00038048
+#define IPU_CSI1_CPD_RC_7__EMPTY          IPU_REGISTERS_OFFSET+0x00038048,0x00000000
+#define IPU_CSI1_CPD_RC_7__FULL           IPU_REGISTERS_OFFSET+0x00038048,0xffffffff
+#define IPU_CSI1_CPD_RC_7__CSI1_CPD_RC_15 IPU_REGISTERS_OFFSET+0x00038048,0x01FF0000
+#define IPU_CSI1_CPD_RC_7__CSI1_CPD_RC_14 IPU_REGISTERS_OFFSET+0x00038048,0x000001FF
+
+#define IPU_CSI1_CPD_RS_0__ADDR         IPU_REGISTERS_OFFSET+0x0003804C
+#define IPU_CSI1_CPD_RS_0__EMPTY        IPU_REGISTERS_OFFSET+0x0003804C,0x00000000
+#define IPU_CSI1_CPD_RS_0__FULL         IPU_REGISTERS_OFFSET+0x0003804C,0xffffffff
+#define IPU_CSI1_CPD_RS_0__CSI1_CPD_RS3 IPU_REGISTERS_OFFSET+0x0003804C,0xFF000000
+#define IPU_CSI1_CPD_RS_0__CSI1_CPD_RS2 IPU_REGISTERS_OFFSET+0x0003804C,0x00FF0000
+#define IPU_CSI1_CPD_RS_0__CSI1_CPD_RS1 IPU_REGISTERS_OFFSET+0x0003804C,0x0000FF00
+#define IPU_CSI1_CPD_RS_0__CSI1_CPD_RS0 IPU_REGISTERS_OFFSET+0x0003804C,0x000000FF
+
+#define IPU_CSI1_CPD_RS_1__ADDR         IPU_REGISTERS_OFFSET+0x00038050
+#define IPU_CSI1_CPD_RS_1__EMPTY        IPU_REGISTERS_OFFSET+0x00038050,0x00000000
+#define IPU_CSI1_CPD_RS_1__FULL         IPU_REGISTERS_OFFSET+0x00038050,0xffffffff
+#define IPU_CSI1_CPD_RS_1__CSI1_CPD_RS7 IPU_REGISTERS_OFFSET+0x00038050,0xFF000000
+#define IPU_CSI1_CPD_RS_1__CSI1_CPD_RS6 IPU_REGISTERS_OFFSET+0x00038050,0x00FF0000
+#define IPU_CSI1_CPD_RS_1__CSI1_CPD_RS5 IPU_REGISTERS_OFFSET+0x00038050,0x0000FF00
+#define IPU_CSI1_CPD_RS_1__CSI1_CPD_RS4 IPU_REGISTERS_OFFSET+0x00038050,0x000000FF
+
+#define IPU_CSI1_CPD_RS_2__ADDR          IPU_REGISTERS_OFFSET+0x00038054
+#define IPU_CSI1_CPD_RS_2__EMPTY         IPU_REGISTERS_OFFSET+0x00038054,0x00000000
+#define IPU_CSI1_CPD_RS_2__FULL          IPU_REGISTERS_OFFSET+0x00038054,0xffffffff
+#define IPU_CSI1_CPD_RS_2__CSI1_CPD_RS11 IPU_REGISTERS_OFFSET+0x00038054,0xFF000000
+#define IPU_CSI1_CPD_RS_2__CSI1_CPD_RS10 IPU_REGISTERS_OFFSET+0x00038054,0x00FF0000
+#define IPU_CSI1_CPD_RS_2__CSI1_CPD_RS9  IPU_REGISTERS_OFFSET+0x00038054,0x0000FF00
+#define IPU_CSI1_CPD_RS_2__CSI1_CPD_RS8  IPU_REGISTERS_OFFSET+0x00038054,0x000000FF
+
+#define IPU_CSI1_CPD_RS_3__ADDR          IPU_REGISTERS_OFFSET+0x00038058
+#define IPU_CSI1_CPD_RS_3__EMPTY         IPU_REGISTERS_OFFSET+0x00038058,0x00000000
+#define IPU_CSI1_CPD_RS_3__FULL          IPU_REGISTERS_OFFSET+0x00038058,0xffffffff
+#define IPU_CSI1_CPD_RS_3__CSI1_CPD_RS15 IPU_REGISTERS_OFFSET+0x00038058,0xFF000000
+#define IPU_CSI1_CPD_RS_3__CSI1_CPD_RS14 IPU_REGISTERS_OFFSET+0x00038058,0x00FF0000
+#define IPU_CSI1_CPD_RS_3__CSI1_CPD_RS13 IPU_REGISTERS_OFFSET+0x00038058,0x0000FF00
+#define IPU_CSI1_CPD_RS_3__CSI1_CPD_RS12 IPU_REGISTERS_OFFSET+0x00038058,0x000000FF
+
+#define IPU_CSI1_CPD_GRC_0__ADDR          IPU_REGISTERS_OFFSET+0x0003805C
+#define IPU_CSI1_CPD_GRC_0__EMPTY         IPU_REGISTERS_OFFSET+0x0003805C,0x00000000
+#define IPU_CSI1_CPD_GRC_0__FULL          IPU_REGISTERS_OFFSET+0x0003805C,0xffffffff
+#define IPU_CSI1_CPD_GRC_0__CSI1_CPD_GRC1 IPU_REGISTERS_OFFSET+0x0003805C,0x01FF0000
+#define IPU_CSI1_CPD_GRC_0__CSI1_CPD_GRC0 IPU_REGISTERS_OFFSET+0x0003805C,0x000001FF
+
+#define IPU_CSI1_CPD_GRC_1__ADDR          IPU_REGISTERS_OFFSET+0x00038060
+#define IPU_CSI1_CPD_GRC_1__EMPTY         IPU_REGISTERS_OFFSET+0x00038060,0x00000000
+#define IPU_CSI1_CPD_GRC_1__FULL          IPU_REGISTERS_OFFSET+0x00038060,0xffffffff
+#define IPU_CSI1_CPD_GRC_1__CSI1_CPD_GRC3 IPU_REGISTERS_OFFSET+0x00038060,0x01FF0000
+#define IPU_CSI1_CPD_GRC_1__CSI1_CPD_GRC2 IPU_REGISTERS_OFFSET+0x00038060,0x000001FF
+
+#define IPU_CSI1_CPD_GRC_2__ADDR          IPU_REGISTERS_OFFSET+0x00038064
+#define IPU_CSI1_CPD_GRC_2__EMPTY         IPU_REGISTERS_OFFSET+0x00038064,0x00000000
+#define IPU_CSI1_CPD_GRC_2__FULL          IPU_REGISTERS_OFFSET+0x00038064,0xffffffff
+#define IPU_CSI1_CPD_GRC_2__CSI1_CPD_GRC5 IPU_REGISTERS_OFFSET+0x00038064,0x01FF0000
+#define IPU_CSI1_CPD_GRC_2__CSI1_CPD_GRC4 IPU_REGISTERS_OFFSET+0x00038064,0x000001FF
+
+#define IPU_CSI1_CPD_GRC_3__ADDR          IPU_REGISTERS_OFFSET+0x00038068
+#define IPU_CSI1_CPD_GRC_3__EMPTY         IPU_REGISTERS_OFFSET+0x00038068,0x00000000
+#define IPU_CSI1_CPD_GRC_3__FULL          IPU_REGISTERS_OFFSET+0x00038068,0xffffffff
+#define IPU_CSI1_CPD_GRC_3__CSI1_CPD_GRC7 IPU_REGISTERS_OFFSET+0x00038068,0x01FF0000
+#define IPU_CSI1_CPD_GRC_3__CSI1_CPD_GRC6 IPU_REGISTERS_OFFSET+0x00038068,0x000001FF
+
+#define IPU_CSI1_CPD_GRC_4__ADDR          IPU_REGISTERS_OFFSET+0x0003806C
+#define IPU_CSI1_CPD_GRC_4__EMPTY         IPU_REGISTERS_OFFSET+0x0003806C,0x00000000
+#define IPU_CSI1_CPD_GRC_4__FULL          IPU_REGISTERS_OFFSET+0x0003806C,0xffffffff
+#define IPU_CSI1_CPD_GRC_4__CSI1_CPD_GRC9 IPU_REGISTERS_OFFSET+0x0003806C,0x01FF0000
+#define IPU_CSI1_CPD_GRC_4__CSI1_CPD_GRC8 IPU_REGISTERS_OFFSET+0x0003806C,0x000001FF
+
+#define IPU_CSI1_CPD_GRC_5__ADDR           IPU_REGISTERS_OFFSET+0x00038070
+#define IPU_CSI1_CPD_GRC_5__EMPTY          IPU_REGISTERS_OFFSET+0x00038070,0x00000000
+#define IPU_CSI1_CPD_GRC_5__FULL           IPU_REGISTERS_OFFSET+0x00038070,0xffffffff
+#define IPU_CSI1_CPD_GRC_5__CSI1_CPD_GRC11 IPU_REGISTERS_OFFSET+0x00038070,0x01FF0000
+#define IPU_CSI1_CPD_GRC_5__CSI1_CPD_GRC10 IPU_REGISTERS_OFFSET+0x00038070,0x000001FF
+
+#define IPU_CSI1_CPD_GRC_6__ADDR           IPU_REGISTERS_OFFSET+0x00038074
+#define IPU_CSI1_CPD_GRC_6__EMPTY          IPU_REGISTERS_OFFSET+0x00038074,0x00000000
+#define IPU_CSI1_CPD_GRC_6__FULL           IPU_REGISTERS_OFFSET+0x00038074,0xffffffff
+#define IPU_CSI1_CPD_GRC_6__CSI1_CPD_GRC13 IPU_REGISTERS_OFFSET+0x00038074,0x01FF0000
+#define IPU_CSI1_CPD_GRC_6__CSI1_CPD_GRC12 IPU_REGISTERS_OFFSET+0x00038074,0x000001FF
+
+#define IPU_CSI1_CPD_GRC_7__ADDR           IPU_REGISTERS_OFFSET+0x00038078
+#define IPU_CSI1_CPD_GRC_7__EMPTY          IPU_REGISTERS_OFFSET+0x00038078,0x00000000
+#define IPU_CSI1_CPD_GRC_7__FULL           IPU_REGISTERS_OFFSET+0x00038078,0xffffffff
+#define IPU_CSI1_CPD_GRC_7__CSI1_CPD_GRC15 IPU_REGISTERS_OFFSET+0x00038078,0x01FF0000
+#define IPU_CSI1_CPD_GRC_7__CSI1_CPD_GRC14 IPU_REGISTERS_OFFSET+0x00038078,0x000001FF
+
+#define IPU_CSI1_CPD_GRS_0__ADDR          IPU_REGISTERS_OFFSET+0x0003807C
+#define IPU_CSI1_CPD_GRS_0__EMPTY         IPU_REGISTERS_OFFSET+0x0003807C,0x00000000
+#define IPU_CSI1_CPD_GRS_0__FULL          IPU_REGISTERS_OFFSET+0x0003807C,0xffffffff
+#define IPU_CSI1_CPD_GRS_0__CSI1_CPD_GRS3 IPU_REGISTERS_OFFSET+0x0003807C,0xFF000000
+#define IPU_CSI1_CPD_GRS_0__CSI1_CPD_GRS2 IPU_REGISTERS_OFFSET+0x0003807C,0x00FF0000
+#define IPU_CSI1_CPD_GRS_0__CSI1_CPD_GRS1 IPU_REGISTERS_OFFSET+0x0003807C,0x0000FF00
+#define IPU_CSI1_CPD_GRS_0__CSI1_CPD_GRS0 IPU_REGISTERS_OFFSET+0x0003807C,0x000000FF
+
+#define IPU_CSI1_CPD_GRS_1__ADDR          IPU_REGISTERS_OFFSET+0x00038080
+#define IPU_CSI1_CPD_GRS_1__EMPTY         IPU_REGISTERS_OFFSET+0x00038080,0x00000000
+#define IPU_CSI1_CPD_GRS_1__FULL          IPU_REGISTERS_OFFSET+0x00038080,0xffffffff
+#define IPU_CSI1_CPD_GRS_1__CSI1_CPD_GRS7 IPU_REGISTERS_OFFSET+0x00038080,0xFF000000
+#define IPU_CSI1_CPD_GRS_1__CSI1_CPD_GRS6 IPU_REGISTERS_OFFSET+0x00038080,0x00FF0000
+#define IPU_CSI1_CPD_GRS_1__CSI1_CPD_GRS5 IPU_REGISTERS_OFFSET+0x00038080,0x0000FF00
+#define IPU_CSI1_CPD_GRS_1__CSI1_CPD_GRS4 IPU_REGISTERS_OFFSET+0x00038080,0x000000FF
+
+#define IPU_CSI1_CPD_GRS_2__ADDR           IPU_REGISTERS_OFFSET+0x00038084
+#define IPU_CSI1_CPD_GRS_2__EMPTY          IPU_REGISTERS_OFFSET+0x00038084,0x00000000
+#define IPU_CSI1_CPD_GRS_2__FULL           IPU_REGISTERS_OFFSET+0x00038084,0xffffffff
+#define IPU_CSI1_CPD_GRS_2__CSI1_CPD_GRS11 IPU_REGISTERS_OFFSET+0x00038084,0xFF000000
+#define IPU_CSI1_CPD_GRS_2__CSI1_CPD_GRS10 IPU_REGISTERS_OFFSET+0x00038084,0x00FF0000
+#define IPU_CSI1_CPD_GRS_2__CSI1_CPD_GRS9  IPU_REGISTERS_OFFSET+0x00038084,0x0000FF00
+#define IPU_CSI1_CPD_GRS_2__CSI1_CPD_GRS8  IPU_REGISTERS_OFFSET+0x00038084,0x000000FF
+
+#define IPU_CSI1_CPD_GRS_3__ADDR           IPU_REGISTERS_OFFSET+0x00038088
+#define IPU_CSI1_CPD_GRS_3__EMPTY          IPU_REGISTERS_OFFSET+0x00038088,0x00000000
+#define IPU_CSI1_CPD_GRS_3__FULL           IPU_REGISTERS_OFFSET+0x00038088,0xffffffff
+#define IPU_CSI1_CPD_GRS_3__CSI1_CPD_GRS15 IPU_REGISTERS_OFFSET+0x00038088,0xFF000000
+#define IPU_CSI1_CPD_GRS_3__CSI1_CPD_GRS14 IPU_REGISTERS_OFFSET+0x00038088,0x00FF0000
+#define IPU_CSI1_CPD_GRS_3__CSI1_CPD_GRS13 IPU_REGISTERS_OFFSET+0x00038088,0x0000FF00
+#define IPU_CSI1_CPD_GRS_3__CSI1_CPD_GRS12 IPU_REGISTERS_OFFSET+0x00038088,0x000000FF
+
+#define IPU_CSI1_CPD_GBC_0__ADDR          IPU_REGISTERS_OFFSET+0x0003808C
+#define IPU_CSI1_CPD_GBC_0__EMPTY         IPU_REGISTERS_OFFSET+0x0003808C,0x00000000
+#define IPU_CSI1_CPD_GBC_0__FULL          IPU_REGISTERS_OFFSET+0x0003808C,0xffffffff
+#define IPU_CSI1_CPD_GBC_0__CSI1_CPD_GBC1 IPU_REGISTERS_OFFSET+0x0003808C,0x01FF0000
+#define IPU_CSI1_CPD_GBC_0__CSI1_CPD_GBC0 IPU_REGISTERS_OFFSET+0x0003808C,0x000001FF
+
+#define IPU_CSI1_CPD_GBC_1__ADDR          IPU_REGISTERS_OFFSET+0x00038090
+#define IPU_CSI1_CPD_GBC_1__EMPTY         IPU_REGISTERS_OFFSET+0x00038090,0x00000000
+#define IPU_CSI1_CPD_GBC_1__FULL          IPU_REGISTERS_OFFSET+0x00038090,0xffffffff
+#define IPU_CSI1_CPD_GBC_1__CSI1_CPD_GBC3 IPU_REGISTERS_OFFSET+0x00038090,0x01FF0000
+#define IPU_CSI1_CPD_GBC_1__CSI1_CPD_GBC2 IPU_REGISTERS_OFFSET+0x00038090,0x000001FF
+
+#define IPU_CSI1_CPD_GBC_2__ADDR          IPU_REGISTERS_OFFSET+0x00038094
+#define IPU_CSI1_CPD_GBC_2__EMPTY         IPU_REGISTERS_OFFSET+0x00038094,0x00000000
+#define IPU_CSI1_CPD_GBC_2__FULL          IPU_REGISTERS_OFFSET+0x00038094,0xffffffff
+#define IPU_CSI1_CPD_GBC_2__CSI1_CPD_GBC5 IPU_REGISTERS_OFFSET+0x00038094,0x01FF0000
+#define IPU_CSI1_CPD_GBC_2__CSI1_CPD_GBC4 IPU_REGISTERS_OFFSET+0x00038094,0x000001FF
+
+#define IPU_CSI1_CPD_GBC_3__ADDR          IPU_REGISTERS_OFFSET+0x00038098
+#define IPU_CSI1_CPD_GBC_3__EMPTY         IPU_REGISTERS_OFFSET+0x00038098,0x00000000
+#define IPU_CSI1_CPD_GBC_3__FULL          IPU_REGISTERS_OFFSET+0x00038098,0xffffffff
+#define IPU_CSI1_CPD_GBC_3__CSI1_CPD_GBC7 IPU_REGISTERS_OFFSET+0x00038098,0x01FF0000
+#define IPU_CSI1_CPD_GBC_3__CSI1_CPD_GBC6 IPU_REGISTERS_OFFSET+0x00038098,0x000001FF
+
+#define IPU_CSI1_CPD_GBC_4__ADDR          IPU_REGISTERS_OFFSET+0x0003809C
+#define IPU_CSI1_CPD_GBC_4__EMPTY         IPU_REGISTERS_OFFSET+0x0003809C,0x00000000
+#define IPU_CSI1_CPD_GBC_4__FULL          IPU_REGISTERS_OFFSET+0x0003809C,0xffffffff
+#define IPU_CSI1_CPD_GBC_4__CSI1_CPD_GBC9 IPU_REGISTERS_OFFSET+0x0003809C,0x01FF0000
+#define IPU_CSI1_CPD_GBC_4__CSI1_CPD_GBC8 IPU_REGISTERS_OFFSET+0x0003809C,0x000001FF
+
+#define IPU_CSI1_CPD_GBC_5__ADDR           IPU_REGISTERS_OFFSET+0x000380A0
+#define IPU_CSI1_CPD_GBC_5__EMPTY          IPU_REGISTERS_OFFSET+0x000380A0,0x00000000
+#define IPU_CSI1_CPD_GBC_5__FULL           IPU_REGISTERS_OFFSET+0x000380A0,0xffffffff
+#define IPU_CSI1_CPD_GBC_5__CSI1_CPD_GBC11 IPU_REGISTERS_OFFSET+0x000380A0,0x01FF0000
+#define IPU_CSI1_CPD_GBC_5__CSI1_CPD_GBC10 IPU_REGISTERS_OFFSET+0x000380A0,0x000001FF
+
+#define IPU_CSI1_CPD_GBC_6__ADDR           IPU_REGISTERS_OFFSET+0x000380A4
+#define IPU_CSI1_CPD_GBC_6__EMPTY          IPU_REGISTERS_OFFSET+0x000380A4,0x00000000
+#define IPU_CSI1_CPD_GBC_6__FULL           IPU_REGISTERS_OFFSET+0x000380A4,0xffffffff
+#define IPU_CSI1_CPD_GBC_6__CSI1_CPD_GBC13 IPU_REGISTERS_OFFSET+0x000380A4,0x01FF0000
+#define IPU_CSI1_CPD_GBC_6__CSI1_CPD_GBC12 IPU_REGISTERS_OFFSET+0x000380A4,0x000001FF
+
+#define IPU_CSI1_CPD_GBC_7__ADDR           IPU_REGISTERS_OFFSET+0x000380A8
+#define IPU_CSI1_CPD_GBC_7__EMPTY          IPU_REGISTERS_OFFSET+0x000380A8,0x00000000
+#define IPU_CSI1_CPD_GBC_7__FULL           IPU_REGISTERS_OFFSET+0x000380A8,0xffffffff
+#define IPU_CSI1_CPD_GBC_7__CSI1_CPD_GBC15 IPU_REGISTERS_OFFSET+0x000380A8,0x01FF0000
+#define IPU_CSI1_CPD_GBC_7__CSI1_CPD_GBC14 IPU_REGISTERS_OFFSET+0x000380A8,0x000001FF
+
+#define IPU_CSI1_CPD_GBS_0__ADDR          IPU_REGISTERS_OFFSET+0x000380AC
+#define IPU_CSI1_CPD_GBS_0__EMPTY         IPU_REGISTERS_OFFSET+0x000380AC,0x00000000
+#define IPU_CSI1_CPD_GBS_0__FULL          IPU_REGISTERS_OFFSET+0x000380AC,0xffffffff
+#define IPU_CSI1_CPD_GBS_0__CSI1_CPD_GBS3 IPU_REGISTERS_OFFSET+0x000380AC,0xFF000000
+#define IPU_CSI1_CPD_GBS_0__CSI1_CPD_GBS2 IPU_REGISTERS_OFFSET+0x000380AC,0x00FF0000
+#define IPU_CSI1_CPD_GBS_0__CSI1_CPD_GBS1 IPU_REGISTERS_OFFSET+0x000380AC,0x0000FF00
+#define IPU_CSI1_CPD_GBS_0__CSI1_CPD_GBS0 IPU_REGISTERS_OFFSET+0x000380AC,0x000000FF
+
+#define IPU_CSI1_CPD_GBS_1__ADDR          IPU_REGISTERS_OFFSET+0x000380B0
+#define IPU_CSI1_CPD_GBS_1__EMPTY         IPU_REGISTERS_OFFSET+0x000380B0,0x00000000
+#define IPU_CSI1_CPD_GBS_1__FULL          IPU_REGISTERS_OFFSET+0x000380B0,0xffffffff
+#define IPU_CSI1_CPD_GBS_1__CSI1_CPD_GBS7 IPU_REGISTERS_OFFSET+0x000380B0,0xFF000000
+#define IPU_CSI1_CPD_GBS_1__CSI1_CPD_GBS6 IPU_REGISTERS_OFFSET+0x000380B0,0x00FF0000
+#define IPU_CSI1_CPD_GBS_1__CSI1_CPD_GBS5 IPU_REGISTERS_OFFSET+0x000380B0,0x0000FF00
+#define IPU_CSI1_CPD_GBS_1__CSI1_CPD_GBS4 IPU_REGISTERS_OFFSET+0x000380B0,0x000000FF
+
+#define IPU_CSI1_CPD_GBS_2__ADDR           IPU_REGISTERS_OFFSET+0x000380B4
+#define IPU_CSI1_CPD_GBS_2__EMPTY          IPU_REGISTERS_OFFSET+0x000380B4,0x00000000
+#define IPU_CSI1_CPD_GBS_2__FULL           IPU_REGISTERS_OFFSET+0x000380B4,0xffffffff
+#define IPU_CSI1_CPD_GBS_2__CSI1_CPD_GBS11 IPU_REGISTERS_OFFSET+0x000380B4,0xFF000000
+#define IPU_CSI1_CPD_GBS_2__CSI1_CPD_GBS10 IPU_REGISTERS_OFFSET+0x000380B4,0x00FF0000
+#define IPU_CSI1_CPD_GBS_2__CSI1_CPD_GBS9  IPU_REGISTERS_OFFSET+0x000380B4,0x0000FF00
+#define IPU_CSI1_CPD_GBS_2__CSI1_CPD_GBS8  IPU_REGISTERS_OFFSET+0x000380B4,0x000000FF
+
+#define IPU_CSI1_CPD_GBS_3__ADDR           IPU_REGISTERS_OFFSET+0x000380B8
+#define IPU_CSI1_CPD_GBS_3__EMPTY          IPU_REGISTERS_OFFSET+0x000380B8,0x00000000
+#define IPU_CSI1_CPD_GBS_3__FULL           IPU_REGISTERS_OFFSET+0x000380B8,0xffffffff
+#define IPU_CSI1_CPD_GBS_3__CSI1_CPD_GBS15 IPU_REGISTERS_OFFSET+0x000380B8,0xFF000000
+#define IPU_CSI1_CPD_GBS_3__CSI1_CPD_GBS14 IPU_REGISTERS_OFFSET+0x000380B8,0x00FF0000
+#define IPU_CSI1_CPD_GBS_3__CSI1_CPD_GBS13 IPU_REGISTERS_OFFSET+0x000380B8,0x0000FF00
+#define IPU_CSI1_CPD_GBS_3__CSI1_CPD_GBS12 IPU_REGISTERS_OFFSET+0x000380B8,0x000000FF
+
+#define IPU_CSI1_CPD_BC_0__ADDR         IPU_REGISTERS_OFFSET+0x000380BC
+#define IPU_CSI1_CPD_BC_0__EMPTY        IPU_REGISTERS_OFFSET+0x000380BC,0x00000000
+#define IPU_CSI1_CPD_BC_0__FULL         IPU_REGISTERS_OFFSET+0x000380BC,0xffffffff
+#define IPU_CSI1_CPD_BC_0__CSI1_CPD_BC1 IPU_REGISTERS_OFFSET+0x000380BC,0x01FF0000
+#define IPU_CSI1_CPD_BC_0__CSI1_CPD_BC0 IPU_REGISTERS_OFFSET+0x000380BC,0x000001FF
+
+#define IPU_CSI1_CPD_BC_1__ADDR         IPU_REGISTERS_OFFSET+0x000380C0
+#define IPU_CSI1_CPD_BC_1__EMPTY        IPU_REGISTERS_OFFSET+0x000380C0,0x00000000
+#define IPU_CSI1_CPD_BC_1__FULL         IPU_REGISTERS_OFFSET+0x000380C0,0xffffffff
+#define IPU_CSI1_CPD_BC_1__CSI1_CPD_BC3 IPU_REGISTERS_OFFSET+0x000380C0,0x01FF0000
+#define IPU_CSI1_CPD_BC_1__CSI1_CPD_BC2 IPU_REGISTERS_OFFSET+0x000380C0,0x000001FF
+
+#define IPU_CSI1_CPD_BC_2__ADDR         IPU_REGISTERS_OFFSET+0x000380C4
+#define IPU_CSI1_CPD_BC_2__EMPTY        IPU_REGISTERS_OFFSET+0x000380C4,0x00000000
+#define IPU_CSI1_CPD_BC_2__FULL         IPU_REGISTERS_OFFSET+0x000380C4,0xffffffff
+#define IPU_CSI1_CPD_BC_2__CSI1_CPD_BC5 IPU_REGISTERS_OFFSET+0x000380C4,0x01FF0000
+#define IPU_CSI1_CPD_BC_2__CSI1_CPD_BC4 IPU_REGISTERS_OFFSET+0x000380C4,0x000001FF
+
+#define IPU_CSI1_CPD_BC_3__ADDR         IPU_REGISTERS_OFFSET+0x000380C8
+#define IPU_CSI1_CPD_BC_3__EMPTY        IPU_REGISTERS_OFFSET+0x000380C8,0x00000000
+#define IPU_CSI1_CPD_BC_3__FULL         IPU_REGISTERS_OFFSET+0x000380C8,0xffffffff
+#define IPU_CSI1_CPD_BC_3__CSI1_CPD_BC7 IPU_REGISTERS_OFFSET+0x000380C8,0x01FF0000
+#define IPU_CSI1_CPD_BC_3__CSI1_CPD_BC6 IPU_REGISTERS_OFFSET+0x000380C8,0x000001FF
+
+#define IPU_CSI1_CPD_BC_4__ADDR         IPU_REGISTERS_OFFSET+0x000380CC
+#define IPU_CSI1_CPD_BC_4__EMPTY        IPU_REGISTERS_OFFSET+0x000380CC,0x00000000
+#define IPU_CSI1_CPD_BC_4__FULL         IPU_REGISTERS_OFFSET+0x000380CC,0xffffffff
+#define IPU_CSI1_CPD_BC_4__CSI1_CPD_BC9 IPU_REGISTERS_OFFSET+0x000380CC,0x01FF0000
+#define IPU_CSI1_CPD_BC_4__CSI1_CPD_BC8 IPU_REGISTERS_OFFSET+0x000380CC,0x000001FF
+
+#define IPU_CSI1_CPD_BC_5__ADDR          IPU_REGISTERS_OFFSET+0x000380D0
+#define IPU_CSI1_CPD_BC_5__EMPTY         IPU_REGISTERS_OFFSET+0x000380D0,0x00000000
+#define IPU_CSI1_CPD_BC_5__FULL          IPU_REGISTERS_OFFSET+0x000380D0,0xffffffff
+#define IPU_CSI1_CPD_BC_5__CSI1_CPD_BC11 IPU_REGISTERS_OFFSET+0x000380D0,0x01FF0000
+#define IPU_CSI1_CPD_BC_5__CSI1_CPD_BC10 IPU_REGISTERS_OFFSET+0x000380D0,0x000001FF
+
+#define IPU_CSI1_CPD_BC_6__ADDR          IPU_REGISTERS_OFFSET+0x000380D4
+#define IPU_CSI1_CPD_BC_6__EMPTY         IPU_REGISTERS_OFFSET+0x000380D4,0x00000000
+#define IPU_CSI1_CPD_BC_6__FULL          IPU_REGISTERS_OFFSET+0x000380D4,0xffffffff
+#define IPU_CSI1_CPD_BC_6__CSI1_CPD_BC13 IPU_REGISTERS_OFFSET+0x000380D4,0x01FF0000
+#define IPU_CSI1_CPD_BC_6__CSI1_CPD_BC12 IPU_REGISTERS_OFFSET+0x000380D4,0x000001FF
+
+#define IPU_CSI1_CPD_BC_7__ADDR          IPU_REGISTERS_OFFSET+0x000380D8
+#define IPU_CSI1_CPD_BC_7__EMPTY         IPU_REGISTERS_OFFSET+0x000380D8,0x00000000
+#define IPU_CSI1_CPD_BC_7__FULL          IPU_REGISTERS_OFFSET+0x000380D8,0xffffffff
+#define IPU_CSI1_CPD_BC_7__CSI1_CPD_BC15 IPU_REGISTERS_OFFSET+0x000380D8,0x01FF0000
+#define IPU_CSI1_CPD_BC_7__CSI1_CPD_BC14 IPU_REGISTERS_OFFSET+0x000380D8,0x000001FF
+
+#define IPU_CSI1_CPD_BS_0__ADDR         IPU_REGISTERS_OFFSET+0x000380DC
+#define IPU_CSI1_CPD_BS_0__EMPTY        IPU_REGISTERS_OFFSET+0x000380DC,0x00000000
+#define IPU_CSI1_CPD_BS_0__FULL         IPU_REGISTERS_OFFSET+0x000380DC,0xffffffff
+#define IPU_CSI1_CPD_BS_0__CSI1_CPD_BS3 IPU_REGISTERS_OFFSET+0x000380DC,0xFF000000
+#define IPU_CSI1_CPD_BS_0__CSI1_CPD_BS2 IPU_REGISTERS_OFFSET+0x000380DC,0x00FF0000
+#define IPU_CSI1_CPD_BS_0__CSI1_CPD_BS1 IPU_REGISTERS_OFFSET+0x000380DC,0x0000FF00
+#define IPU_CSI1_CPD_BS_0__CSI1_CPD_BS0 IPU_REGISTERS_OFFSET+0x000380DC,0x000000FF
+
+#define IPU_CSI1_CPD_BS_1__ADDR         IPU_REGISTERS_OFFSET+0x000380E0
+#define IPU_CSI1_CPD_BS_1__EMPTY        IPU_REGISTERS_OFFSET+0x000380E0,0x00000000
+#define IPU_CSI1_CPD_BS_1__FULL         IPU_REGISTERS_OFFSET+0x000380E0,0xffffffff
+#define IPU_CSI1_CPD_BS_1__CSI1_CPD_BS7 IPU_REGISTERS_OFFSET+0x000380E0,0xFF000000
+#define IPU_CSI1_CPD_BS_1__CSI1_CPD_BS6 IPU_REGISTERS_OFFSET+0x000380E0,0x00FF0000
+#define IPU_CSI1_CPD_BS_1__CSI1_CPD_BS5 IPU_REGISTERS_OFFSET+0x000380E0,0x0000FF00
+#define IPU_CSI1_CPD_BS_1__CSI1_CPD_BS4 IPU_REGISTERS_OFFSET+0x000380E0,0x000000FF
+
+#define IPU_CSI1_CPD_BS_2__ADDR          IPU_REGISTERS_OFFSET+0x000380E4
+#define IPU_CSI1_CPD_BS_2__EMPTY         IPU_REGISTERS_OFFSET+0x000380E4,0x00000000
+#define IPU_CSI1_CPD_BS_2__FULL          IPU_REGISTERS_OFFSET+0x000380E4,0xffffffff
+#define IPU_CSI1_CPD_BS_2__CSI1_CPD_BS11 IPU_REGISTERS_OFFSET+0x000380E4,0xFF000000
+#define IPU_CSI1_CPD_BS_2__CSI1_CPD_BS10 IPU_REGISTERS_OFFSET+0x000380E4,0x00FF0000
+#define IPU_CSI1_CPD_BS_2__CSI1_CPD_BS9  IPU_REGISTERS_OFFSET+0x000380E4,0x0000FF00
+#define IPU_CSI1_CPD_BS_2__CSI1_CPD_BS8  IPU_REGISTERS_OFFSET+0x000380E4,0x000000FF
+
+#define IPU_CSI1_CPD_BS_3__ADDR          IPU_REGISTERS_OFFSET+0x000380E8
+#define IPU_CSI1_CPD_BS_3__EMPTY         IPU_REGISTERS_OFFSET+0x000380E8,0x00000000
+#define IPU_CSI1_CPD_BS_3__FULL          IPU_REGISTERS_OFFSET+0x000380E8,0xffffffff
+#define IPU_CSI1_CPD_BS_3__CSI1_CPD_BS15 IPU_REGISTERS_OFFSET+0x000380E8,0xFF000000
+#define IPU_CSI1_CPD_BS_3__CSI1_CPD_BS14 IPU_REGISTERS_OFFSET+0x000380E8,0x00FF0000
+#define IPU_CSI1_CPD_BS_3__CSI1_CPD_BS13 IPU_REGISTERS_OFFSET+0x000380E8,0x0000FF00
+#define IPU_CSI1_CPD_BS_3__CSI1_CPD_BS12 IPU_REGISTERS_OFFSET+0x000380E8,0x000000FF
+
+#define IPU_CSI1_CPD_OFFSET1__ADDR               IPU_REGISTERS_OFFSET+0x000380EC
+#define IPU_CSI1_CPD_OFFSET1__EMPTY              IPU_REGISTERS_OFFSET+0x000380EC,0x00000000
+#define IPU_CSI1_CPD_OFFSET1__FULL               IPU_REGISTERS_OFFSET+0x000380EC,0xffffffff
+#define IPU_CSI1_CPD_OFFSET1__CSI1_CPD_B_OFFSET  IPU_REGISTERS_OFFSET+0x000380EC,0x3FF00000
+#define IPU_CSI1_CPD_OFFSET1__CSI1_CPD_GB_OFFSET IPU_REGISTERS_OFFSET+0x000380EC,0x000FFC00
+#define IPU_CSI1_CPD_OFFSET1__CSI1_CPD_GR_OFFSET IPU_REGISTERS_OFFSET+0x000380EC,0x000003FF
+
+#define IPU_CSI1_CPD_OFFSET2__ADDR              IPU_REGISTERS_OFFSET+0x000380F0
+#define IPU_CSI1_CPD_OFFSET2__EMPTY             IPU_REGISTERS_OFFSET+0x000380F0,0x00000000
+#define IPU_CSI1_CPD_OFFSET2__FULL              IPU_REGISTERS_OFFSET+0x000380F0,0xffffffff
+#define IPU_CSI1_CPD_OFFSET2__CSI1_CPD_R_OFFSET IPU_REGISTERS_OFFSET+0x000380F0,0x000003FF
+
+#define IPU_DI0_GENERAL__ADDR                  IPU_REGISTERS_OFFSET+0x00040000
+#define IPU_DI0_GENERAL__EMPTY                 IPU_REGISTERS_OFFSET+0x00040000,0x00000000
+#define IPU_DI0_GENERAL__FULL                  IPU_REGISTERS_OFFSET+0x00040000,0xffffffff
+#define IPU_DI0_GENERAL__DI0_PIN8_PIN15_SEL    IPU_REGISTERS_OFFSET+0x00040000,0x80000000
+#define IPU_DI0_GENERAL__DI0_DISP_Y_SEL        IPU_REGISTERS_OFFSET+0x00040000,0x70000000
+#define IPU_DI0_GENERAL__DI0_CLOCK_STOP_MODE   IPU_REGISTERS_OFFSET+0x00040000,0x0F000000
+#define IPU_DI0_GENERAL__DI0_DISP_CLOCK_INIT   IPU_REGISTERS_OFFSET+0x00040000,0x00800000
+#define IPU_DI0_GENERAL__DI0_MASK_SEL          IPU_REGISTERS_OFFSET+0x00040000,0x00400000
+#define IPU_DI0_GENERAL__DI0_VSYNC_EXT         IPU_REGISTERS_OFFSET+0x00040000,0x00200000
+#define IPU_DI0_GENERAL__DI0_CLK_EXT           IPU_REGISTERS_OFFSET+0x00040000,0x00100000
+#define IPU_DI0_GENERAL__DI0_WATCHDOG_MODE     IPU_REGISTERS_OFFSET+0x00040000,0x000C0000
+#define IPU_DI0_GENERAL__DI0_POLARITY_DISP_CLK IPU_REGISTERS_OFFSET+0x00040000,0x00020000
+#define IPU_DI0_GENERAL__DI0_SYNC_COUNT_SEL    IPU_REGISTERS_OFFSET+0x00040000,0x0000F000
+#define IPU_DI0_GENERAL__DI0_ERR_TREATMENT     IPU_REGISTERS_OFFSET+0x00040000,0x00000800
+#define IPU_DI0_GENERAL__DI0_ERM_VSYNC_SEL     IPU_REGISTERS_OFFSET+0x00040000,0x00000400
+#define IPU_DI0_GENERAL__DI0_POLARITY_CS1      IPU_REGISTERS_OFFSET+0x00040000,0x00000200
+#define IPU_DI0_GENERAL__DI0_POLARITY_CS0      IPU_REGISTERS_OFFSET+0x00040000,0x00000100
+#define IPU_DI0_GENERAL__DI0_POLARITY_8        IPU_REGISTERS_OFFSET+0x00040000,0x00000080
+#define IPU_DI0_GENERAL__DI0_POLARITY_7        IPU_REGISTERS_OFFSET+0x00040000,0x00000040
+#define IPU_DI0_GENERAL__DI0_POLARITY_6        IPU_REGISTERS_OFFSET+0x00040000,0x00000020
+#define IPU_DI0_GENERAL__DI0_POLARITY_5        IPU_REGISTERS_OFFSET+0x00040000,0x00000010
+#define IPU_DI0_GENERAL__DI0_POLARITY_4        IPU_REGISTERS_OFFSET+0x00040000,0x00000008
+#define IPU_DI0_GENERAL__DI0_POLARITY_3        IPU_REGISTERS_OFFSET+0x00040000,0x00000004
+#define IPU_DI0_GENERAL__DI0_POLARITY_2        IPU_REGISTERS_OFFSET+0x00040000,0x00000002
+#define IPU_DI0_GENERAL__DI0_POLARITY_1        IPU_REGISTERS_OFFSET+0x00040000,0x00000001
+
+#define IPU_DI0_BS_CLKGEN0__ADDR                IPU_REGISTERS_OFFSET+0x00040004
+#define IPU_DI0_BS_CLKGEN0__EMPTY               IPU_REGISTERS_OFFSET+0x00040004,0x00000000
+#define IPU_DI0_BS_CLKGEN0__FULL                IPU_REGISTERS_OFFSET+0x00040004,0xffffffff
+#define IPU_DI0_BS_CLKGEN0__DI0_DISP_CLK_OFFSET IPU_REGISTERS_OFFSET+0x00040004,0x01FF0000
+#define IPU_DI0_BS_CLKGEN0__DI0_DISP_CLK_PERIOD IPU_REGISTERS_OFFSET+0x00040004,0x00000FFF
+
+#define IPU_DI0_BS_CLKGEN1__ADDR              IPU_REGISTERS_OFFSET+0x00040008
+#define IPU_DI0_BS_CLKGEN1__EMPTY             IPU_REGISTERS_OFFSET+0x00040008,0x00000000
+#define IPU_DI0_BS_CLKGEN1__FULL              IPU_REGISTERS_OFFSET+0x00040008,0xffffffff
+#define IPU_DI0_BS_CLKGEN1__DI0_DISP_CLK_DOWN IPU_REGISTERS_OFFSET+0x00040008,0x01FF0000
+#define IPU_DI0_BS_CLKGEN1__DI0_DISP_CLK_UP   IPU_REGISTERS_OFFSET+0x00040008,0x000001FF
+
+#define IPU_DI0_SW_GEN0_1__ADDR                    IPU_REGISTERS_OFFSET+0x0004000C
+#define IPU_DI0_SW_GEN0_1__EMPTY                   IPU_REGISTERS_OFFSET+0x0004000C,0x00000000
+#define IPU_DI0_SW_GEN0_1__FULL                    IPU_REGISTERS_OFFSET+0x0004000C,0xffffffff
+#define IPU_DI0_SW_GEN0_1__DI0_RUN_VALUE_M1_1      IPU_REGISTERS_OFFSET+0x0004000C,0x7FF80000
+#define IPU_DI0_SW_GEN0_1__DI0_RUN_RESOLUTION_1    IPU_REGISTERS_OFFSET+0x0004000C,0x00070000
+#define IPU_DI0_SW_GEN0_1__DI0_OFFSET_VALUE_1      IPU_REGISTERS_OFFSET+0x0004000C,0x00007FF8
+#define IPU_DI0_SW_GEN0_1__DI0_OFFSET_RESOLUTION_1 IPU_REGISTERS_OFFSET+0x0004000C,0x00000007
+
+#define IPU_DI0_SW_GEN0_2__ADDR                    IPU_REGISTERS_OFFSET+0x00040010
+#define IPU_DI0_SW_GEN0_2__EMPTY                   IPU_REGISTERS_OFFSET+0x00040010,0x00000000
+#define IPU_DI0_SW_GEN0_2__FULL                    IPU_REGISTERS_OFFSET+0x00040010,0xffffffff
+#define IPU_DI0_SW_GEN0_2__DI0_RUN_VALUE_M1_2      IPU_REGISTERS_OFFSET+0x00040010,0x7FF80000
+#define IPU_DI0_SW_GEN0_2__DI0_RUN_RESOLUTION_2    IPU_REGISTERS_OFFSET+0x00040010,0x00070000
+#define IPU_DI0_SW_GEN0_2__DI0_OFFSET_VALUE_2      IPU_REGISTERS_OFFSET+0x00040010,0x00007FF8
+#define IPU_DI0_SW_GEN0_2__DI0_OFFSET_RESOLUTION_2 IPU_REGISTERS_OFFSET+0x00040010,0x00000007
+
+#define IPU_DI0_SW_GEN0_3__ADDR                    IPU_REGISTERS_OFFSET+0x00040014
+#define IPU_DI0_SW_GEN0_3__EMPTY                   IPU_REGISTERS_OFFSET+0x00040014,0x00000000
+#define IPU_DI0_SW_GEN0_3__FULL                    IPU_REGISTERS_OFFSET+0x00040014,0xffffffff
+#define IPU_DI0_SW_GEN0_3__DI0_RUN_VALUE_M1_3      IPU_REGISTERS_OFFSET+0x00040014,0x7FF80000
+#define IPU_DI0_SW_GEN0_3__DI0_RUN_RESOLUTION_3    IPU_REGISTERS_OFFSET+0x00040014,0x00070000
+#define IPU_DI0_SW_GEN0_3__DI0_OFFSET_VALUE_3      IPU_REGISTERS_OFFSET+0x00040014,0x00007FF8
+#define IPU_DI0_SW_GEN0_3__DI0_OFFSET_RESOLUTION_3 IPU_REGISTERS_OFFSET+0x00040014,0x00000007
+
+#define IPU_DI0_SW_GEN0_4__ADDR                    IPU_REGISTERS_OFFSET+0x00040018
+#define IPU_DI0_SW_GEN0_4__EMPTY                   IPU_REGISTERS_OFFSET+0x00040018,0x00000000
+#define IPU_DI0_SW_GEN0_4__FULL                    IPU_REGISTERS_OFFSET+0x00040018,0xffffffff
+#define IPU_DI0_SW_GEN0_4__DI0_RUN_VALUE_M1_4      IPU_REGISTERS_OFFSET+0x00040018,0x7FF80000
+#define IPU_DI0_SW_GEN0_4__DI0_RUN_RESOLUTION_4    IPU_REGISTERS_OFFSET+0x00040018,0x00070000
+#define IPU_DI0_SW_GEN0_4__DI0_OFFSET_VALUE_4      IPU_REGISTERS_OFFSET+0x00040018,0x00007FF8
+#define IPU_DI0_SW_GEN0_4__DI0_OFFSET_RESOLUTION_4 IPU_REGISTERS_OFFSET+0x00040018,0x00000007
+
+#define IPU_DI0_SW_GEN0_5__ADDR                    IPU_REGISTERS_OFFSET+0x0004001C
+#define IPU_DI0_SW_GEN0_5__EMPTY                   IPU_REGISTERS_OFFSET+0x0004001C,0x00000000
+#define IPU_DI0_SW_GEN0_5__FULL                    IPU_REGISTERS_OFFSET+0x0004001C,0xffffffff
+#define IPU_DI0_SW_GEN0_5__DI0_RUN_VALUE_M1_5      IPU_REGISTERS_OFFSET+0x0004001C,0x7FF80000
+#define IPU_DI0_SW_GEN0_5__DI0_RUN_RESOLUTION_5    IPU_REGISTERS_OFFSET+0x0004001C,0x00070000
+#define IPU_DI0_SW_GEN0_5__DI0_OFFSET_VALUE_5      IPU_REGISTERS_OFFSET+0x0004001C,0x00007FF8
+#define IPU_DI0_SW_GEN0_5__DI0_OFFSET_RESOLUTION_5 IPU_REGISTERS_OFFSET+0x0004001C,0x00000007
+
+#define IPU_DI0_SW_GEN0_6__ADDR                    IPU_REGISTERS_OFFSET+0x00040020
+#define IPU_DI0_SW_GEN0_6__EMPTY                   IPU_REGISTERS_OFFSET+0x00040020,0x00000000
+#define IPU_DI0_SW_GEN0_6__FULL                    IPU_REGISTERS_OFFSET+0x00040020,0xffffffff
+#define IPU_DI0_SW_GEN0_6__DI0_RUN_VALUE_M1_6      IPU_REGISTERS_OFFSET+0x00040020,0x7FF80000
+#define IPU_DI0_SW_GEN0_6__DI0_RUN_RESOLUTION_6    IPU_REGISTERS_OFFSET+0x00040020,0x00070000
+#define IPU_DI0_SW_GEN0_6__DI0_OFFSET_VALUE_6      IPU_REGISTERS_OFFSET+0x00040020,0x00007FF8
+#define IPU_DI0_SW_GEN0_6__DI0_OFFSET_RESOLUTION_6 IPU_REGISTERS_OFFSET+0x00040020,0x00000007
+
+#define IPU_DI0_SW_GEN0_7__ADDR                    IPU_REGISTERS_OFFSET+0x00040024
+#define IPU_DI0_SW_GEN0_7__EMPTY                   IPU_REGISTERS_OFFSET+0x00040024,0x00000000
+#define IPU_DI0_SW_GEN0_7__FULL                    IPU_REGISTERS_OFFSET+0x00040024,0xffffffff
+#define IPU_DI0_SW_GEN0_7__DI0_RUN_VALUE_M1_7      IPU_REGISTERS_OFFSET+0x00040024,0x7FF80000
+#define IPU_DI0_SW_GEN0_7__DI0_RUN_RESOLUTION_7    IPU_REGISTERS_OFFSET+0x00040024,0x00070000
+#define IPU_DI0_SW_GEN0_7__DI0_OFFSET_VALUE_7      IPU_REGISTERS_OFFSET+0x00040024,0x00007FF8
+#define IPU_DI0_SW_GEN0_7__DI0_OFFSET_RESOLUTION_7 IPU_REGISTERS_OFFSET+0x00040024,0x00000007
+
+#define IPU_DI0_SW_GEN0_8__ADDR                    IPU_REGISTERS_OFFSET+0x00040028
+#define IPU_DI0_SW_GEN0_8__EMPTY                   IPU_REGISTERS_OFFSET+0x00040028,0x00000000
+#define IPU_DI0_SW_GEN0_8__FULL                    IPU_REGISTERS_OFFSET+0x00040028,0xffffffff
+#define IPU_DI0_SW_GEN0_8__DI0_RUN_VALUE_M1_8      IPU_REGISTERS_OFFSET+0x00040028,0x7FF80000
+#define IPU_DI0_SW_GEN0_8__DI0_RUN_RESOLUTION_8    IPU_REGISTERS_OFFSET+0x00040028,0x00070000
+#define IPU_DI0_SW_GEN0_8__DI0_OFFSET_VALUE_8      IPU_REGISTERS_OFFSET+0x00040028,0x00007FF8
+#define IPU_DI0_SW_GEN0_8__DI0_OFFSET_RESOLUTION_8 IPU_REGISTERS_OFFSET+0x00040028,0x00000007
+
+#define IPU_DI0_SW_GEN0_9__ADDR                    IPU_REGISTERS_OFFSET+0x0004002C
+#define IPU_DI0_SW_GEN0_9__EMPTY                   IPU_REGISTERS_OFFSET+0x0004002C,0x00000000
+#define IPU_DI0_SW_GEN0_9__FULL                    IPU_REGISTERS_OFFSET+0x0004002C,0xffffffff
+#define IPU_DI0_SW_GEN0_9__DI0_RUN_VALUE_M1_9      IPU_REGISTERS_OFFSET+0x0004002C,0x7FF80000
+#define IPU_DI0_SW_GEN0_9__DI0_RUN_RESOLUTION_9    IPU_REGISTERS_OFFSET+0x0004002C,0x00070000
+#define IPU_DI0_SW_GEN0_9__DI0_OFFSET_VALUE_9      IPU_REGISTERS_OFFSET+0x0004002C,0x00007FF8
+#define IPU_DI0_SW_GEN0_9__DI0_OFFSET_RESOLUTION_9 IPU_REGISTERS_OFFSET+0x0004002C,0x00000007
+
+#define IPU_DI0_SW_GEN1_1__ADDR                           IPU_REGISTERS_OFFSET+0x00040030
+#define IPU_DI0_SW_GEN1_1__EMPTY                          IPU_REGISTERS_OFFSET+0x00040030,0x00000000
+#define IPU_DI0_SW_GEN1_1__FULL                           IPU_REGISTERS_OFFSET+0x00040030,0xffffffff
+#define IPU_DI0_SW_GEN1_1__DI0_CNT_POLARITY_GEN_EN_1      IPU_REGISTERS_OFFSET+0x00040030,0x60000000
+#define IPU_DI0_SW_GEN1_1__DI0_CNT_AUTO_RELOAD_1          IPU_REGISTERS_OFFSET+0x00040030,0x10000000
+#define IPU_DI0_SW_GEN1_1__DI0_CNT_CLR_SEL_1              IPU_REGISTERS_OFFSET+0x00040030,0x0E000000
+#define IPU_DI0_SW_GEN1_1__DI0_CNT_DOWN_1                 IPU_REGISTERS_OFFSET+0x00040030,0x01FF0000
+#define IPU_DI0_SW_GEN1_1__DI0_CNT_POLARITY_TRIGGER_SEL_1 IPU_REGISTERS_OFFSET+0x00040030,0x00007000
+#define IPU_DI0_SW_GEN1_1__DI0_CNT_POLARITY_CLR_SEL_1     IPU_REGISTERS_OFFSET+0x00040030,0x00000E00
+#define IPU_DI0_SW_GEN1_1__DI0_CNT_UP_1                   IPU_REGISTERS_OFFSET+0x00040030,0x000001FF
+
+#define IPU_DI0_SW_GEN1_2__ADDR                           IPU_REGISTERS_OFFSET+0x00040034
+#define IPU_DI0_SW_GEN1_2__EMPTY                          IPU_REGISTERS_OFFSET+0x00040034,0x00000000
+#define IPU_DI0_SW_GEN1_2__FULL                           IPU_REGISTERS_OFFSET+0x00040034,0xffffffff
+#define IPU_DI0_SW_GEN1_2__DI0_CNT_POLARITY_GEN_EN_2      IPU_REGISTERS_OFFSET+0x00040034,0x60000000
+#define IPU_DI0_SW_GEN1_2__DI0_CNT_AUTO_RELOAD_2          IPU_REGISTERS_OFFSET+0x00040034,0x10000000
+#define IPU_DI0_SW_GEN1_2__DI0_CNT_CLR_SEL_2              IPU_REGISTERS_OFFSET+0x00040034,0x0E000000
+#define IPU_DI0_SW_GEN1_2__DI0_CNT_DOWN_2                 IPU_REGISTERS_OFFSET+0x00040034,0x01FF0000
+#define IPU_DI0_SW_GEN1_2__DI0_CNT_POLARITY_TRIGGER_SEL_2 IPU_REGISTERS_OFFSET+0x00040034,0x00007000
+#define IPU_DI0_SW_GEN1_2__DI0_CNT_POLARITY_CLR_SEL_2     IPU_REGISTERS_OFFSET+0x00040034,0x00000E00
+#define IPU_DI0_SW_GEN1_2__DI0_CNT_UP_2                   IPU_REGISTERS_OFFSET+0x00040034,0x000001FF
+
+#define IPU_DI0_SW_GEN1_3__ADDR                           IPU_REGISTERS_OFFSET+0x00040038
+#define IPU_DI0_SW_GEN1_3__EMPTY                          IPU_REGISTERS_OFFSET+0x00040038,0x00000000
+#define IPU_DI0_SW_GEN1_3__FULL                           IPU_REGISTERS_OFFSET+0x00040038,0xffffffff
+#define IPU_DI0_SW_GEN1_3__DI0_CNT_POLARITY_GEN_EN_3      IPU_REGISTERS_OFFSET+0x00040038,0x60000000
+#define IPU_DI0_SW_GEN1_3__DI0_CNT_AUTO_RELOAD_3          IPU_REGISTERS_OFFSET+0x00040038,0x10000000
+#define IPU_DI0_SW_GEN1_3__DI0_CNT_CLR_SEL_3              IPU_REGISTERS_OFFSET+0x00040038,0x0E000000
+#define IPU_DI0_SW_GEN1_3__DI0_CNT_DOWN_3                 IPU_REGISTERS_OFFSET+0x00040038,0x01FF0000
+#define IPU_DI0_SW_GEN1_3__DI0_CNT_POLARITY_TRIGGER_SEL_3 IPU_REGISTERS_OFFSET+0x00040038,0x00007000
+#define IPU_DI0_SW_GEN1_3__DI0_CNT_POLARITY_CLR_SEL_3     IPU_REGISTERS_OFFSET+0x00040038,0x00000E00
+#define IPU_DI0_SW_GEN1_3__DI0_CNT_UP_3                   IPU_REGISTERS_OFFSET+0x00040038,0x000001FF
+
+#define IPU_DI0_SW_GEN1_4__ADDR                           IPU_REGISTERS_OFFSET+0x0004003C
+#define IPU_DI0_SW_GEN1_4__EMPTY                          IPU_REGISTERS_OFFSET+0x0004003C,0x00000000
+#define IPU_DI0_SW_GEN1_4__FULL                           IPU_REGISTERS_OFFSET+0x0004003C,0xffffffff
+#define IPU_DI0_SW_GEN1_4__DI0_CNT_POLARITY_GEN_EN_4      IPU_REGISTERS_OFFSET+0x0004003C,0x60000000
+#define IPU_DI0_SW_GEN1_4__DI0_CNT_AUTO_RELOAD_4          IPU_REGISTERS_OFFSET+0x0004003C,0x10000000
+#define IPU_DI0_SW_GEN1_4__DI0_CNT_CLR_SEL_4              IPU_REGISTERS_OFFSET+0x0004003C,0x0E000000
+#define IPU_DI0_SW_GEN1_4__DI0_CNT_DOWN_4                 IPU_REGISTERS_OFFSET+0x0004003C,0x01FF0000
+#define IPU_DI0_SW_GEN1_4__DI0_CNT_POLARITY_TRIGGER_SEL_4 IPU_REGISTERS_OFFSET+0x0004003C,0x00007000
+#define IPU_DI0_SW_GEN1_4__DI0_CNT_POLARITY_CLR_SEL_4     IPU_REGISTERS_OFFSET+0x0004003C,0x00000E00
+#define IPU_DI0_SW_GEN1_4__DI0_CNT_UP_4                   IPU_REGISTERS_OFFSET+0x0004003C,0x000001FF
+
+#define IPU_DI0_SW_GEN1_5__ADDR                           IPU_REGISTERS_OFFSET+0x00040040
+#define IPU_DI0_SW_GEN1_5__EMPTY                          IPU_REGISTERS_OFFSET+0x00040040,0x00000000
+#define IPU_DI0_SW_GEN1_5__FULL                           IPU_REGISTERS_OFFSET+0x00040040,0xffffffff
+#define IPU_DI0_SW_GEN1_5__DI0_CNT_POLARITY_GEN_EN_5      IPU_REGISTERS_OFFSET+0x00040040,0x60000000
+#define IPU_DI0_SW_GEN1_5__DI0_CNT_AUTO_RELOAD_5          IPU_REGISTERS_OFFSET+0x00040040,0x10000000
+#define IPU_DI0_SW_GEN1_5__DI0_CNT_CLR_SEL_5              IPU_REGISTERS_OFFSET+0x00040040,0x0E000000
+#define IPU_DI0_SW_GEN1_5__DI0_CNT_DOWN_5                 IPU_REGISTERS_OFFSET+0x00040040,0x01FF0000
+#define IPU_DI0_SW_GEN1_5__DI0_CNT_POLARITY_TRIGGER_SEL_5 IPU_REGISTERS_OFFSET+0x00040040,0x00007000
+#define IPU_DI0_SW_GEN1_5__DI0_CNT_POLARITY_CLR_SEL_5     IPU_REGISTERS_OFFSET+0x00040040,0x00000E00
+#define IPU_DI0_SW_GEN1_5__DI0_CNT_UP_5                   IPU_REGISTERS_OFFSET+0x00040040,0x000001FF
+
+#define IPU_DI0_SW_GEN1_6__ADDR                           IPU_REGISTERS_OFFSET+0x00040044
+#define IPU_DI0_SW_GEN1_6__EMPTY                          IPU_REGISTERS_OFFSET+0x00040044,0x00000000
+#define IPU_DI0_SW_GEN1_6__FULL                           IPU_REGISTERS_OFFSET+0x00040044,0xffffffff
+#define IPU_DI0_SW_GEN1_6__DI0_CNT_POLARITY_GEN_EN_6      IPU_REGISTERS_OFFSET+0x00040044,0x60000000
+#define IPU_DI0_SW_GEN1_6__DI0_CNT_AUTO_RELOAD_6          IPU_REGISTERS_OFFSET+0x00040044,0x10000000
+#define IPU_DI0_SW_GEN1_6__DI0_CNT_CLR_SEL_6              IPU_REGISTERS_OFFSET+0x00040044,0x0E000000
+#define IPU_DI0_SW_GEN1_6__DI0_CNT_DOWN_6                 IPU_REGISTERS_OFFSET+0x00040044,0x01FF0000
+#define IPU_DI0_SW_GEN1_6__DI0_CNT_POLARITY_TRIGGER_SEL_6 IPU_REGISTERS_OFFSET+0x00040044,0x00007000
+#define IPU_DI0_SW_GEN1_6__DI0_CNT_POLARITY_CLR_SEL_6     IPU_REGISTERS_OFFSET+0x00040044,0x00000E00
+#define IPU_DI0_SW_GEN1_6__DI0_CNT_UP_6                   IPU_REGISTERS_OFFSET+0x00040044,0x000001FF
+
+#define IPU_DI0_SW_GEN1_7__ADDR                           IPU_REGISTERS_OFFSET+0x00040048
+#define IPU_DI0_SW_GEN1_7__EMPTY                          IPU_REGISTERS_OFFSET+0x00040048,0x00000000
+#define IPU_DI0_SW_GEN1_7__FULL                           IPU_REGISTERS_OFFSET+0x00040048,0xffffffff
+#define IPU_DI0_SW_GEN1_7__DI0_CNT_POLARITY_GEN_EN_7      IPU_REGISTERS_OFFSET+0x00040048,0x60000000
+#define IPU_DI0_SW_GEN1_7__DI0_CNT_AUTO_RELOAD_7          IPU_REGISTERS_OFFSET+0x00040048,0x10000000
+#define IPU_DI0_SW_GEN1_7__DI0_CNT_CLR_SEL_7              IPU_REGISTERS_OFFSET+0x00040048,0x0E000000
+#define IPU_DI0_SW_GEN1_7__DI0_CNT_DOWN_7                 IPU_REGISTERS_OFFSET+0x00040048,0x01FF0000
+#define IPU_DI0_SW_GEN1_7__DI0_CNT_POLARITY_TRIGGER_SEL_7 IPU_REGISTERS_OFFSET+0x00040048,0x00007000
+#define IPU_DI0_SW_GEN1_7__DI0_CNT_POLARITY_CLR_SEL_7     IPU_REGISTERS_OFFSET+0x00040048,0x00000E00
+#define IPU_DI0_SW_GEN1_7__DI0_CNT_UP_7                   IPU_REGISTERS_OFFSET+0x00040048,0x000001FF
+
+#define IPU_DI0_SW_GEN1_8__ADDR                           IPU_REGISTERS_OFFSET+0x0004004C
+#define IPU_DI0_SW_GEN1_8__EMPTY                          IPU_REGISTERS_OFFSET+0x0004004C,0x00000000
+#define IPU_DI0_SW_GEN1_8__FULL                           IPU_REGISTERS_OFFSET+0x0004004C,0xffffffff
+#define IPU_DI0_SW_GEN1_8__DI0_CNT_POLARITY_GEN_EN_8      IPU_REGISTERS_OFFSET+0x0004004C,0x60000000
+#define IPU_DI0_SW_GEN1_8__DI0_CNT_AUTO_RELOAD_8          IPU_REGISTERS_OFFSET+0x0004004C,0x10000000
+#define IPU_DI0_SW_GEN1_8__DI0_CNT_CLR_SEL_8              IPU_REGISTERS_OFFSET+0x0004004C,0x0E000000
+#define IPU_DI0_SW_GEN1_8__DI0_CNT_DOWN_8                 IPU_REGISTERS_OFFSET+0x0004004C,0x01FF0000
+#define IPU_DI0_SW_GEN1_8__DI0_CNT_POLARITY_TRIGGER_SEL_8 IPU_REGISTERS_OFFSET+0x0004004C,0x00007000
+#define IPU_DI0_SW_GEN1_8__DI0_CNT_POLARITY_CLR_SEL_8     IPU_REGISTERS_OFFSET+0x0004004C,0x00000E00
+#define IPU_DI0_SW_GEN1_8__DI0_CNT_UP_8                   IPU_REGISTERS_OFFSET+0x0004004C,0x000001FF
+
+#define IPU_DI0_SW_GEN1_9__ADDR                  IPU_REGISTERS_OFFSET+0x00040050
+#define IPU_DI0_SW_GEN1_9__EMPTY                 IPU_REGISTERS_OFFSET+0x00040050,0x00000000
+#define IPU_DI0_SW_GEN1_9__FULL                  IPU_REGISTERS_OFFSET+0x00040050,0xffffffff
+#define IPU_DI0_SW_GEN1_9__DI0_GENTIME_SEL_9     IPU_REGISTERS_OFFSET+0x00040050,0xE0000000
+#define IPU_DI0_SW_GEN1_9__DI0_CNT_AUTO_RELOAD_9 IPU_REGISTERS_OFFSET+0x00040050,0x10000000
+#define IPU_DI0_SW_GEN1_9__DI0_CNT_CLR_SEL_9     IPU_REGISTERS_OFFSET+0x00040050,0x0E000000
+#define IPU_DI0_SW_GEN1_9__DI0_CNT_DOWN_9        IPU_REGISTERS_OFFSET+0x00040050,0x01FF0000
+#define IPU_DI0_SW_GEN1_9__DI0_TAG_SEL_9         IPU_REGISTERS_OFFSET+0x00040050,0x00008000
+#define IPU_DI0_SW_GEN1_9__DI0_CNT_UP_9          IPU_REGISTERS_OFFSET+0x00040050,0x000001FF
+
+#define IPU_DI0_SYNC_AS_GEN__ADDR              IPU_REGISTERS_OFFSET+0x00040054
+#define IPU_DI0_SYNC_AS_GEN__EMPTY             IPU_REGISTERS_OFFSET+0x00040054,0x00000000
+#define IPU_DI0_SYNC_AS_GEN__FULL              IPU_REGISTERS_OFFSET+0x00040054,0xffffffff
+#define IPU_DI0_SYNC_AS_GEN__DI0_SYNC_START_EN IPU_REGISTERS_OFFSET+0x00040054,0x10000000
+#define IPU_DI0_SYNC_AS_GEN__DI0_VSYNC_SEL     IPU_REGISTERS_OFFSET+0x00040054,0x0000E000
+#define IPU_DI0_SYNC_AS_GEN__DI0_SYNC_START    IPU_REGISTERS_OFFSET+0x00040054,0x00000FFF
+
+#define IPU_DI0_DW_GEN_0__ADDR                  IPU_REGISTERS_OFFSET+0x00040058
+#define IPU_DI0_DW_GEN_0__EMPTY                 IPU_REGISTERS_OFFSET+0x00040058,0x00000000
+#define IPU_DI0_DW_GEN_0__FULL                  IPU_REGISTERS_OFFSET+0x00040058,0xffffffff
+#define IPU_DI0_DW_GEN_0__DI0_ACCESS_SIZE_0     IPU_REGISTERS_OFFSET+0x00040058,0xFF000000
+#define IPU_DI0_DW_GEN_0__DI0_COMPONNENT_SIZE_0 IPU_REGISTERS_OFFSET+0x00040058,0x00FF0000
+#define IPU_DI0_DW_GEN_0__DI0_CST_0             IPU_REGISTERS_OFFSET+0x00040058,0x0000C000
+#define IPU_DI0_DW_GEN_0__DI0_PT_6_0            IPU_REGISTERS_OFFSET+0x00040058,0x00003000
+#define IPU_DI0_DW_GEN_0__DI0_PT_5_0            IPU_REGISTERS_OFFSET+0x00040058,0x00000C00
+#define IPU_DI0_DW_GEN_0__DI0_PT_4_0            IPU_REGISTERS_OFFSET+0x00040058,0x00000300
+#define IPU_DI0_DW_GEN_0__DI0_PT_3_0            IPU_REGISTERS_OFFSET+0x00040058,0x000000C0
+#define IPU_DI0_DW_GEN_0__DI0_PT_2_0            IPU_REGISTERS_OFFSET+0x00040058,0x00000030
+#define IPU_DI0_DW_GEN_0__DI0_PT_1_0            IPU_REGISTERS_OFFSET+0x00040058,0x0000000C
+#define IPU_DI0_DW_GEN_0__DI0_PT_0_0            IPU_REGISTERS_OFFSET+0x00040058,0x00000003
+
+#define IPU_DI0_DW_GEN_1__ADDR                  IPU_REGISTERS_OFFSET+0x0004005C
+#define IPU_DI0_DW_GEN_1__EMPTY                 IPU_REGISTERS_OFFSET+0x0004005C,0x00000000
+#define IPU_DI0_DW_GEN_1__FULL                  IPU_REGISTERS_OFFSET+0x0004005C,0xffffffff
+#define IPU_DI0_DW_GEN_1__DI0_ACCESS_SIZE_1     IPU_REGISTERS_OFFSET+0x0004005C,0xFF000000
+#define IPU_DI0_DW_GEN_1__DI0_COMPONNENT_SIZE_1 IPU_REGISTERS_OFFSET+0x0004005C,0x00FF0000
+#define IPU_DI0_DW_GEN_1__DI0_CST_1             IPU_REGISTERS_OFFSET+0x0004005C,0x0000C000
+#define IPU_DI0_DW_GEN_1__DI0_PT_6_1            IPU_REGISTERS_OFFSET+0x0004005C,0x00003000
+#define IPU_DI0_DW_GEN_1__DI0_PT_5_1            IPU_REGISTERS_OFFSET+0x0004005C,0x00000C00
+#define IPU_DI0_DW_GEN_1__DI0_PT_4_1            IPU_REGISTERS_OFFSET+0x0004005C,0x00000300
+#define IPU_DI0_DW_GEN_1__DI0_PT_3_1            IPU_REGISTERS_OFFSET+0x0004005C,0x000000C0
+#define IPU_DI0_DW_GEN_1__DI0_PT_2_1            IPU_REGISTERS_OFFSET+0x0004005C,0x00000030
+#define IPU_DI0_DW_GEN_1__DI0_PT_1_1            IPU_REGISTERS_OFFSET+0x0004005C,0x0000000C
+#define IPU_DI0_DW_GEN_1__DI0_PT_0_1            IPU_REGISTERS_OFFSET+0x0004005C,0x00000003
+
+#define IPU_DI0_DW_GEN_2__ADDR                  IPU_REGISTERS_OFFSET+0x00040060
+#define IPU_DI0_DW_GEN_2__EMPTY                 IPU_REGISTERS_OFFSET+0x00040060,0x00000000
+#define IPU_DI0_DW_GEN_2__FULL                  IPU_REGISTERS_OFFSET+0x00040060,0xffffffff
+#define IPU_DI0_DW_GEN_2__DI0_ACCESS_SIZE_2     IPU_REGISTERS_OFFSET+0x00040060,0xFF000000
+#define IPU_DI0_DW_GEN_2__DI0_COMPONNENT_SIZE_2 IPU_REGISTERS_OFFSET+0x00040060,0x00FF0000
+#define IPU_DI0_DW_GEN_2__DI0_CST_2             IPU_REGISTERS_OFFSET+0x00040060,0x0000C000
+#define IPU_DI0_DW_GEN_2__DI0_PT_6_2            IPU_REGISTERS_OFFSET+0x00040060,0x00003000
+#define IPU_DI0_DW_GEN_2__DI0_PT_5_2            IPU_REGISTERS_OFFSET+0x00040060,0x00000C00
+#define IPU_DI0_DW_GEN_2__DI0_PT_4_2            IPU_REGISTERS_OFFSET+0x00040060,0x00000300
+#define IPU_DI0_DW_GEN_2__DI0_PT_3_2            IPU_REGISTERS_OFFSET+0x00040060,0x000000C0
+#define IPU_DI0_DW_GEN_2__DI0_PT_2_2            IPU_REGISTERS_OFFSET+0x00040060,0x00000030
+#define IPU_DI0_DW_GEN_2__DI0_PT_1_2            IPU_REGISTERS_OFFSET+0x00040060,0x0000000C
+#define IPU_DI0_DW_GEN_2__DI0_PT_0_2            IPU_REGISTERS_OFFSET+0x00040060,0x00000003
+
+#define IPU_DI0_DW_GEN_3__ADDR                  IPU_REGISTERS_OFFSET+0x00040064
+#define IPU_DI0_DW_GEN_3__EMPTY                 IPU_REGISTERS_OFFSET+0x00040064,0x00000000
+#define IPU_DI0_DW_GEN_3__FULL                  IPU_REGISTERS_OFFSET+0x00040064,0xffffffff
+#define IPU_DI0_DW_GEN_3__DI0_ACCESS_SIZE_3     IPU_REGISTERS_OFFSET+0x00040064,0xFF000000
+#define IPU_DI0_DW_GEN_3__DI0_COMPONNENT_SIZE_3 IPU_REGISTERS_OFFSET+0x00040064,0x00FF0000
+#define IPU_DI0_DW_GEN_3__DI0_CST_3             IPU_REGISTERS_OFFSET+0x00040064,0x0000C000
+#define IPU_DI0_DW_GEN_3__DI0_PT_6_3            IPU_REGISTERS_OFFSET+0x00040064,0x00003000
+#define IPU_DI0_DW_GEN_3__DI0_PT_5_3            IPU_REGISTERS_OFFSET+0x00040064,0x00000C00
+#define IPU_DI0_DW_GEN_3__DI0_PT_4_3            IPU_REGISTERS_OFFSET+0x00040064,0x00000300
+#define IPU_DI0_DW_GEN_3__DI0_PT_3_3            IPU_REGISTERS_OFFSET+0x00040064,0x000000C0
+#define IPU_DI0_DW_GEN_3__DI0_PT_2_3            IPU_REGISTERS_OFFSET+0x00040064,0x00000030
+#define IPU_DI0_DW_GEN_3__DI0_PT_1_3            IPU_REGISTERS_OFFSET+0x00040064,0x0000000C
+#define IPU_DI0_DW_GEN_3__DI0_PT_0_3            IPU_REGISTERS_OFFSET+0x00040064,0x00000003
+
+#define IPU_DI0_DW_GEN_4__ADDR                  IPU_REGISTERS_OFFSET+0x00040068
+#define IPU_DI0_DW_GEN_4__EMPTY                 IPU_REGISTERS_OFFSET+0x00040068,0x00000000
+#define IPU_DI0_DW_GEN_4__FULL                  IPU_REGISTERS_OFFSET+0x00040068,0xffffffff
+#define IPU_DI0_DW_GEN_4__DI0_ACCESS_SIZE_4     IPU_REGISTERS_OFFSET+0x00040068,0xFF000000
+#define IPU_DI0_DW_GEN_4__DI0_COMPONNENT_SIZE_4 IPU_REGISTERS_OFFSET+0x00040068,0x00FF0000
+#define IPU_DI0_DW_GEN_4__DI0_CST_4             IPU_REGISTERS_OFFSET+0x00040068,0x0000C000
+#define IPU_DI0_DW_GEN_4__DI0_PT_6_4            IPU_REGISTERS_OFFSET+0x00040068,0x00003000
+#define IPU_DI0_DW_GEN_4__DI0_PT_5_4            IPU_REGISTERS_OFFSET+0x00040068,0x00000C00
+#define IPU_DI0_DW_GEN_4__DI0_PT_4_4            IPU_REGISTERS_OFFSET+0x00040068,0x00000300
+#define IPU_DI0_DW_GEN_4__DI0_PT_3_4            IPU_REGISTERS_OFFSET+0x00040068,0x000000C0
+#define IPU_DI0_DW_GEN_4__DI0_PT_2_4            IPU_REGISTERS_OFFSET+0x00040068,0x00000030
+#define IPU_DI0_DW_GEN_4__DI0_PT_1_4            IPU_REGISTERS_OFFSET+0x00040068,0x0000000C
+#define IPU_DI0_DW_GEN_4__DI0_PT_0_4            IPU_REGISTERS_OFFSET+0x00040068,0x00000003
+
+#define IPU_DI0_DW_GEN_5__ADDR                  IPU_REGISTERS_OFFSET+0x0004006C
+#define IPU_DI0_DW_GEN_5__EMPTY                 IPU_REGISTERS_OFFSET+0x0004006C,0x00000000
+#define IPU_DI0_DW_GEN_5__FULL                  IPU_REGISTERS_OFFSET+0x0004006C,0xffffffff
+#define IPU_DI0_DW_GEN_5__DI0_ACCESS_SIZE_5     IPU_REGISTERS_OFFSET+0x0004006C,0xFF000000
+#define IPU_DI0_DW_GEN_5__DI0_COMPONNENT_SIZE_5 IPU_REGISTERS_OFFSET+0x0004006C,0x00FF0000
+#define IPU_DI0_DW_GEN_5__DI0_CST_5             IPU_REGISTERS_OFFSET+0x0004006C,0x0000C000
+#define IPU_DI0_DW_GEN_5__DI0_PT_6_5            IPU_REGISTERS_OFFSET+0x0004006C,0x00003000
+#define IPU_DI0_DW_GEN_5__DI0_PT_5_5            IPU_REGISTERS_OFFSET+0x0004006C,0x00000C00
+#define IPU_DI0_DW_GEN_5__DI0_PT_4_5            IPU_REGISTERS_OFFSET+0x0004006C,0x00000300
+#define IPU_DI0_DW_GEN_5__DI0_PT_3_5            IPU_REGISTERS_OFFSET+0x0004006C,0x000000C0
+#define IPU_DI0_DW_GEN_5__DI0_PT_2_5            IPU_REGISTERS_OFFSET+0x0004006C,0x00000030
+#define IPU_DI0_DW_GEN_5__DI0_PT_1_5            IPU_REGISTERS_OFFSET+0x0004006C,0x0000000C
+#define IPU_DI0_DW_GEN_5__DI0_PT_0_5            IPU_REGISTERS_OFFSET+0x0004006C,0x00000003
+
+#define IPU_DI0_DW_GEN_6__ADDR                  IPU_REGISTERS_OFFSET+0x00040070
+#define IPU_DI0_DW_GEN_6__EMPTY                 IPU_REGISTERS_OFFSET+0x00040070,0x00000000
+#define IPU_DI0_DW_GEN_6__FULL                  IPU_REGISTERS_OFFSET+0x00040070,0xffffffff
+#define IPU_DI0_DW_GEN_6__DI0_ACCESS_SIZE_6     IPU_REGISTERS_OFFSET+0x00040070,0xFF000000
+#define IPU_DI0_DW_GEN_6__DI0_COMPONNENT_SIZE_6 IPU_REGISTERS_OFFSET+0x00040070,0x00FF0000
+#define IPU_DI0_DW_GEN_6__DI0_CST_6             IPU_REGISTERS_OFFSET+0x00040070,0x0000C000
+#define IPU_DI0_DW_GEN_6__DI0_PT_6_6            IPU_REGISTERS_OFFSET+0x00040070,0x00003000
+#define IPU_DI0_DW_GEN_6__DI0_PT_5_6            IPU_REGISTERS_OFFSET+0x00040070,0x00000C00
+#define IPU_DI0_DW_GEN_6__DI0_PT_4_6            IPU_REGISTERS_OFFSET+0x00040070,0x00000300
+#define IPU_DI0_DW_GEN_6__DI0_PT_3_6            IPU_REGISTERS_OFFSET+0x00040070,0x000000C0
+#define IPU_DI0_DW_GEN_6__DI0_PT_2_6            IPU_REGISTERS_OFFSET+0x00040070,0x00000030
+#define IPU_DI0_DW_GEN_6__DI0_PT_1_6            IPU_REGISTERS_OFFSET+0x00040070,0x0000000C
+#define IPU_DI0_DW_GEN_6__DI0_PT_0_6            IPU_REGISTERS_OFFSET+0x00040070,0x00000003
+
+#define IPU_DI0_DW_GEN_7__ADDR                  IPU_REGISTERS_OFFSET+0x00040074
+#define IPU_DI0_DW_GEN_7__EMPTY                 IPU_REGISTERS_OFFSET+0x00040074,0x00000000
+#define IPU_DI0_DW_GEN_7__FULL                  IPU_REGISTERS_OFFSET+0x00040074,0xffffffff
+#define IPU_DI0_DW_GEN_7__DI0_ACCESS_SIZE_7     IPU_REGISTERS_OFFSET+0x00040074,0xFF000000
+#define IPU_DI0_DW_GEN_7__DI0_COMPONNENT_SIZE_7 IPU_REGISTERS_OFFSET+0x00040074,0x00FF0000
+#define IPU_DI0_DW_GEN_7__DI0_CST_7             IPU_REGISTERS_OFFSET+0x00040074,0x0000C000
+#define IPU_DI0_DW_GEN_7__DI0_PT_6_7            IPU_REGISTERS_OFFSET+0x00040074,0x00003000
+#define IPU_DI0_DW_GEN_7__DI0_PT_5_7            IPU_REGISTERS_OFFSET+0x00040074,0x00000C00
+#define IPU_DI0_DW_GEN_7__DI0_PT_4_7            IPU_REGISTERS_OFFSET+0x00040074,0x00000300
+#define IPU_DI0_DW_GEN_7__DI0_PT_3_7            IPU_REGISTERS_OFFSET+0x00040074,0x000000C0
+#define IPU_DI0_DW_GEN_7__DI0_PT_2_7            IPU_REGISTERS_OFFSET+0x00040074,0x00000030
+#define IPU_DI0_DW_GEN_7__DI0_PT_1_7            IPU_REGISTERS_OFFSET+0x00040074,0x0000000C
+#define IPU_DI0_DW_GEN_7__DI0_PT_0_7            IPU_REGISTERS_OFFSET+0x00040074,0x00000003
+
+#define IPU_DI0_DW_GEN_8__ADDR                  IPU_REGISTERS_OFFSET+0x00040078
+#define IPU_DI0_DW_GEN_8__EMPTY                 IPU_REGISTERS_OFFSET+0x00040078,0x00000000
+#define IPU_DI0_DW_GEN_8__FULL                  IPU_REGISTERS_OFFSET+0x00040078,0xffffffff
+#define IPU_DI0_DW_GEN_8__DI0_ACCESS_SIZE_8     IPU_REGISTERS_OFFSET+0x00040078,0xFF000000
+#define IPU_DI0_DW_GEN_8__DI0_COMPONNENT_SIZE_8 IPU_REGISTERS_OFFSET+0x00040078,0x00FF0000
+#define IPU_DI0_DW_GEN_8__DI0_CST_8             IPU_REGISTERS_OFFSET+0x00040078,0x0000C000
+#define IPU_DI0_DW_GEN_8__DI0_PT_6_8            IPU_REGISTERS_OFFSET+0x00040078,0x00003000
+#define IPU_DI0_DW_GEN_8__DI0_PT_5_8            IPU_REGISTERS_OFFSET+0x00040078,0x00000C00
+#define IPU_DI0_DW_GEN_8__DI0_PT_4_8            IPU_REGISTERS_OFFSET+0x00040078,0x00000300
+#define IPU_DI0_DW_GEN_8__DI0_PT_3_8            IPU_REGISTERS_OFFSET+0x00040078,0x000000C0
+#define IPU_DI0_DW_GEN_8__DI0_PT_2_8            IPU_REGISTERS_OFFSET+0x00040078,0x00000030
+#define IPU_DI0_DW_GEN_8__DI0_PT_1_8            IPU_REGISTERS_OFFSET+0x00040078,0x0000000C
+#define IPU_DI0_DW_GEN_8__DI0_PT_0_8            IPU_REGISTERS_OFFSET+0x00040078,0x00000003
+
+#define IPU_DI0_DW_GEN_9__ADDR                  IPU_REGISTERS_OFFSET+0x0004007C
+#define IPU_DI0_DW_GEN_9__EMPTY                 IPU_REGISTERS_OFFSET+0x0004007C,0x00000000
+#define IPU_DI0_DW_GEN_9__FULL                  IPU_REGISTERS_OFFSET+0x0004007C,0xffffffff
+#define IPU_DI0_DW_GEN_9__DI0_ACCESS_SIZE_9     IPU_REGISTERS_OFFSET+0x0004007C,0xFF000000
+#define IPU_DI0_DW_GEN_9__DI0_COMPONNENT_SIZE_9 IPU_REGISTERS_OFFSET+0x0004007C,0x00FF0000
+#define IPU_DI0_DW_GEN_9__DI0_CST_9             IPU_REGISTERS_OFFSET+0x0004007C,0x0000C000
+#define IPU_DI0_DW_GEN_9__DI0_PT_6_9            IPU_REGISTERS_OFFSET+0x0004007C,0x00003000
+#define IPU_DI0_DW_GEN_9__DI0_PT_5_9            IPU_REGISTERS_OFFSET+0x0004007C,0x00000C00
+#define IPU_DI0_DW_GEN_9__DI0_PT_4_9            IPU_REGISTERS_OFFSET+0x0004007C,0x00000300
+#define IPU_DI0_DW_GEN_9__DI0_PT_3_9            IPU_REGISTERS_OFFSET+0x0004007C,0x000000C0
+#define IPU_DI0_DW_GEN_9__DI0_PT_2_9            IPU_REGISTERS_OFFSET+0x0004007C,0x00000030
+#define IPU_DI0_DW_GEN_9__DI0_PT_1_9            IPU_REGISTERS_OFFSET+0x0004007C,0x0000000C
+#define IPU_DI0_DW_GEN_9__DI0_PT_0_9            IPU_REGISTERS_OFFSET+0x0004007C,0x00000003
+
+#define IPU_DI0_DW_GEN_10__ADDR                   IPU_REGISTERS_OFFSET+0x00040080
+#define IPU_DI0_DW_GEN_10__EMPTY                  IPU_REGISTERS_OFFSET+0x00040080,0x00000000
+#define IPU_DI0_DW_GEN_10__FULL                   IPU_REGISTERS_OFFSET+0x00040080,0xffffffff
+#define IPU_DI0_DW_GEN_10__DI0_ACCESS_SIZE_10     IPU_REGISTERS_OFFSET+0x00040080,0xFF000000
+#define IPU_DI0_DW_GEN_10__DI0_COMPONNENT_SIZE_10 IPU_REGISTERS_OFFSET+0x00040080,0x00FF0000
+#define IPU_DI0_DW_GEN_10__DI0_CST_10             IPU_REGISTERS_OFFSET+0x00040080,0x0000C000
+#define IPU_DI0_DW_GEN_10__DI0_PT_6_10            IPU_REGISTERS_OFFSET+0x00040080,0x00003000
+#define IPU_DI0_DW_GEN_10__DI0_PT_5_10            IPU_REGISTERS_OFFSET+0x00040080,0x00000C00
+#define IPU_DI0_DW_GEN_10__DI0_PT_4_10            IPU_REGISTERS_OFFSET+0x00040080,0x00000300
+#define IPU_DI0_DW_GEN_10__DI0_PT_3_10            IPU_REGISTERS_OFFSET+0x00040080,0x000000C0
+#define IPU_DI0_DW_GEN_10__DI0_PT_2_10            IPU_REGISTERS_OFFSET+0x00040080,0x00000030
+#define IPU_DI0_DW_GEN_10__DI0_PT_1_10            IPU_REGISTERS_OFFSET+0x00040080,0x0000000C
+#define IPU_DI0_DW_GEN_10__DI0_PT_0_10            IPU_REGISTERS_OFFSET+0x00040080,0x00000003
+
+#define IPU_DI0_DW_GEN_11__ADDR                   IPU_REGISTERS_OFFSET+0x00040084
+#define IPU_DI0_DW_GEN_11__EMPTY                  IPU_REGISTERS_OFFSET+0x00040084,0x00000000
+#define IPU_DI0_DW_GEN_11__FULL                   IPU_REGISTERS_OFFSET+0x00040084,0xffffffff
+#define IPU_DI0_DW_GEN_11__DI0_ACCESS_SIZE_11     IPU_REGISTERS_OFFSET+0x00040084,0xFF000000
+#define IPU_DI0_DW_GEN_11__DI0_COMPONNENT_SIZE_11 IPU_REGISTERS_OFFSET+0x00040084,0x00FF0000
+#define IPU_DI0_DW_GEN_11__DI0_CST_11             IPU_REGISTERS_OFFSET+0x00040084,0x0000C000
+#define IPU_DI0_DW_GEN_11__DI0_PT_6_11            IPU_REGISTERS_OFFSET+0x00040084,0x00003000
+#define IPU_DI0_DW_GEN_11__DI0_PT_5_11            IPU_REGISTERS_OFFSET+0x00040084,0x00000C00
+#define IPU_DI0_DW_GEN_11__DI0_PT_4_11            IPU_REGISTERS_OFFSET+0x00040084,0x00000300
+#define IPU_DI0_DW_GEN_11__DI0_PT_3_11            IPU_REGISTERS_OFFSET+0x00040084,0x000000C0
+#define IPU_DI0_DW_GEN_11__DI0_PT_2_11            IPU_REGISTERS_OFFSET+0x00040084,0x00000030
+#define IPU_DI0_DW_GEN_11__DI0_PT_1_11            IPU_REGISTERS_OFFSET+0x00040084,0x0000000C
+#define IPU_DI0_DW_GEN_11__DI0_PT_0_11            IPU_REGISTERS_OFFSET+0x00040084,0x00000003
+
+#define IPU_DI0_DW_SET0_0__ADDR                 IPU_REGISTERS_OFFSET+0x00040088
+#define IPU_DI0_DW_SET0_0__EMPTY                IPU_REGISTERS_OFFSET+0x00040088,0x00000000
+#define IPU_DI0_DW_SET0_0__FULL                 IPU_REGISTERS_OFFSET+0x00040088,0xffffffff
+#define IPU_DI0_DW_SET0_0__DI0_DATA_CNT_DOWN0_0 IPU_REGISTERS_OFFSET+0x00040088,0x01FF0000
+#define IPU_DI0_DW_SET0_0__DI0_DATA_CNT_UP0_0   IPU_REGISTERS_OFFSET+0x00040088,0x000001FF
+
+#define IPU_DI0_DW_SET0_1__ADDR                 IPU_REGISTERS_OFFSET+0x0004008C
+#define IPU_DI0_DW_SET0_1__EMPTY                IPU_REGISTERS_OFFSET+0x0004008C,0x00000000
+#define IPU_DI0_DW_SET0_1__FULL                 IPU_REGISTERS_OFFSET+0x0004008C,0xffffffff
+#define IPU_DI0_DW_SET0_1__DI0_DATA_CNT_DOWN0_1 IPU_REGISTERS_OFFSET+0x0004008C,0x01FF0000
+#define IPU_DI0_DW_SET0_1__DI0_DATA_CNT_UP0_1   IPU_REGISTERS_OFFSET+0x0004008C,0x000001FF
+
+#define IPU_DI0_DW_SET0_2__ADDR                 IPU_REGISTERS_OFFSET+0x00040090
+#define IPU_DI0_DW_SET0_2__EMPTY                IPU_REGISTERS_OFFSET+0x00040090,0x00000000
+#define IPU_DI0_DW_SET0_2__FULL                 IPU_REGISTERS_OFFSET+0x00040090,0xffffffff
+#define IPU_DI0_DW_SET0_2__DI0_DATA_CNT_DOWN0_2 IPU_REGISTERS_OFFSET+0x00040090,0x01FF0000
+#define IPU_DI0_DW_SET0_2__DI0_DATA_CNT_UP0_2   IPU_REGISTERS_OFFSET+0x00040090,0x000001FF
+
+#define IPU_DI0_DW_SET0_3__ADDR                 IPU_REGISTERS_OFFSET+0x00040094
+#define IPU_DI0_DW_SET0_3__EMPTY                IPU_REGISTERS_OFFSET+0x00040094,0x00000000
+#define IPU_DI0_DW_SET0_3__FULL                 IPU_REGISTERS_OFFSET+0x00040094,0xffffffff
+#define IPU_DI0_DW_SET0_3__DI0_DATA_CNT_DOWN0_3 IPU_REGISTERS_OFFSET+0x00040094,0x01FF0000
+#define IPU_DI0_DW_SET0_3__DI0_DATA_CNT_UP0_3   IPU_REGISTERS_OFFSET+0x00040094,0x000001FF
+
+#define IPU_DI0_DW_SET0_4__ADDR                 IPU_REGISTERS_OFFSET+0x00040098
+#define IPU_DI0_DW_SET0_4__EMPTY                IPU_REGISTERS_OFFSET+0x00040098,0x00000000
+#define IPU_DI0_DW_SET0_4__FULL                 IPU_REGISTERS_OFFSET+0x00040098,0xffffffff
+#define IPU_DI0_DW_SET0_4__DI0_DATA_CNT_DOWN0_4 IPU_REGISTERS_OFFSET+0x00040098,0x01FF0000
+#define IPU_DI0_DW_SET0_4__DI0_DATA_CNT_UP0_4   IPU_REGISTERS_OFFSET+0x00040098,0x000001FF
+
+#define IPU_DI0_DW_SET0_5__ADDR                 IPU_REGISTERS_OFFSET+0x0004009C
+#define IPU_DI0_DW_SET0_5__EMPTY                IPU_REGISTERS_OFFSET+0x0004009C,0x00000000
+#define IPU_DI0_DW_SET0_5__FULL                 IPU_REGISTERS_OFFSET+0x0004009C,0xffffffff
+#define IPU_DI0_DW_SET0_5__DI0_DATA_CNT_DOWN0_5 IPU_REGISTERS_OFFSET+0x0004009C,0x01FF0000
+#define IPU_DI0_DW_SET0_5__DI0_DATA_CNT_UP0_5   IPU_REGISTERS_OFFSET+0x0004009C,0x000001FF
+
+#define IPU_DI0_DW_SET0_6__ADDR                 IPU_REGISTERS_OFFSET+0x000400A0
+#define IPU_DI0_DW_SET0_6__EMPTY                IPU_REGISTERS_OFFSET+0x000400A0,0x00000000
+#define IPU_DI0_DW_SET0_6__FULL                 IPU_REGISTERS_OFFSET+0x000400A0,0xffffffff
+#define IPU_DI0_DW_SET0_6__DI0_DATA_CNT_DOWN0_6 IPU_REGISTERS_OFFSET+0x000400A0,0x01FF0000
+#define IPU_DI0_DW_SET0_6__DI0_DATA_CNT_UP0_6   IPU_REGISTERS_OFFSET+0x000400A0,0x000001FF
+
+#define IPU_DI0_DW_SET0_7__ADDR                 IPU_REGISTERS_OFFSET+0x000400A4
+#define IPU_DI0_DW_SET0_7__EMPTY                IPU_REGISTERS_OFFSET+0x000400A4,0x00000000
+#define IPU_DI0_DW_SET0_7__FULL                 IPU_REGISTERS_OFFSET+0x000400A4,0xffffffff
+#define IPU_DI0_DW_SET0_7__DI0_DATA_CNT_DOWN0_7 IPU_REGISTERS_OFFSET+0x000400A4,0x01FF0000
+#define IPU_DI0_DW_SET0_7__DI0_DATA_CNT_UP0_7   IPU_REGISTERS_OFFSET+0x000400A4,0x000001FF
+
+#define IPU_DI0_DW_SET0_8__ADDR                 IPU_REGISTERS_OFFSET+0x000400A8
+#define IPU_DI0_DW_SET0_8__EMPTY                IPU_REGISTERS_OFFSET+0x000400A8,0x00000000
+#define IPU_DI0_DW_SET0_8__FULL                 IPU_REGISTERS_OFFSET+0x000400A8,0xffffffff
+#define IPU_DI0_DW_SET0_8__DI0_DATA_CNT_DOWN0_8 IPU_REGISTERS_OFFSET+0x000400A8,0x01FF0000
+#define IPU_DI0_DW_SET0_8__DI0_DATA_CNT_UP0_8   IPU_REGISTERS_OFFSET+0x000400A8,0x000001FF
+
+#define IPU_DI0_DW_SET0_9__ADDR                 IPU_REGISTERS_OFFSET+0x000400AC
+#define IPU_DI0_DW_SET0_9__EMPTY                IPU_REGISTERS_OFFSET+0x000400AC,0x00000000
+#define IPU_DI0_DW_SET0_9__FULL                 IPU_REGISTERS_OFFSET+0x000400AC,0xffffffff
+#define IPU_DI0_DW_SET0_9__DI0_DATA_CNT_DOWN0_9 IPU_REGISTERS_OFFSET+0x000400AC,0x01FF0000
+#define IPU_DI0_DW_SET0_9__DI0_DATA_CNT_UP0_9   IPU_REGISTERS_OFFSET+0x000400AC,0x000001FF
+
+#define IPU_DI0_DW_SET0_10__ADDR                  IPU_REGISTERS_OFFSET+0x000400B0
+#define IPU_DI0_DW_SET0_10__EMPTY                 IPU_REGISTERS_OFFSET+0x000400B0,0x00000000
+#define IPU_DI0_DW_SET0_10__FULL                  IPU_REGISTERS_OFFSET+0x000400B0,0xffffffff
+#define IPU_DI0_DW_SET0_10__DI0_DATA_CNT_DOWN0_10 IPU_REGISTERS_OFFSET+0x000400B0,0x01FF0000
+#define IPU_DI0_DW_SET0_10__DI0_DATA_CNT_UP0_10   IPU_REGISTERS_OFFSET+0x000400B0,0x000001FF
+
+#define IPU_DI0_DW_SET0_11__ADDR                  IPU_REGISTERS_OFFSET+0x000400B4
+#define IPU_DI0_DW_SET0_11__EMPTY                 IPU_REGISTERS_OFFSET+0x000400B4,0x00000000
+#define IPU_DI0_DW_SET0_11__FULL                  IPU_REGISTERS_OFFSET+0x000400B4,0xffffffff
+#define IPU_DI0_DW_SET0_11__DI0_DATA_CNT_DOWN0_11 IPU_REGISTERS_OFFSET+0x000400B4,0x01FF0000
+#define IPU_DI0_DW_SET0_11__DI0_DATA_CNT_UP0_11   IPU_REGISTERS_OFFSET+0x000400B4,0x000001FF
+
+#define IPU_DI0_DW_SET1_0__ADDR                 IPU_REGISTERS_OFFSET+0x000400B8
+#define IPU_DI0_DW_SET1_0__EMPTY                IPU_REGISTERS_OFFSET+0x000400B8,0x00000000
+#define IPU_DI0_DW_SET1_0__FULL                 IPU_REGISTERS_OFFSET+0x000400B8,0xffffffff
+#define IPU_DI0_DW_SET1_0__DI0_DATA_CNT_DOWN1_0 IPU_REGISTERS_OFFSET+0x000400B8,0x01FF0000
+#define IPU_DI0_DW_SET1_0__DI0_DATA_CNT_UP1_0   IPU_REGISTERS_OFFSET+0x000400B8,0x000001FF
+
+#define IPU_DI0_DW_SET1_1__ADDR                 IPU_REGISTERS_OFFSET+0x000400BC
+#define IPU_DI0_DW_SET1_1__EMPTY                IPU_REGISTERS_OFFSET+0x000400BC,0x00000000
+#define IPU_DI0_DW_SET1_1__FULL                 IPU_REGISTERS_OFFSET+0x000400BC,0xffffffff
+#define IPU_DI0_DW_SET1_1__DI0_DATA_CNT_DOWN1_1 IPU_REGISTERS_OFFSET+0x000400BC,0x01FF0000
+#define IPU_DI0_DW_SET1_1__DI0_DATA_CNT_UP1_1   IPU_REGISTERS_OFFSET+0x000400BC,0x000001FF
+
+#define IPU_DI0_DW_SET1_2__ADDR                 IPU_REGISTERS_OFFSET+0x000400C0
+#define IPU_DI0_DW_SET1_2__EMPTY                IPU_REGISTERS_OFFSET+0x000400C0,0x00000000
+#define IPU_DI0_DW_SET1_2__FULL                 IPU_REGISTERS_OFFSET+0x000400C0,0xffffffff
+#define IPU_DI0_DW_SET1_2__DI0_DATA_CNT_DOWN1_2 IPU_REGISTERS_OFFSET+0x000400C0,0x01FF0000
+#define IPU_DI0_DW_SET1_2__DI0_DATA_CNT_UP1_2   IPU_REGISTERS_OFFSET+0x000400C0,0x000001FF
+
+#define IPU_DI0_DW_SET1_3__ADDR                 IPU_REGISTERS_OFFSET+0x000400C4
+#define IPU_DI0_DW_SET1_3__EMPTY                IPU_REGISTERS_OFFSET+0x000400C4,0x00000000
+#define IPU_DI0_DW_SET1_3__FULL                 IPU_REGISTERS_OFFSET+0x000400C4,0xffffffff
+#define IPU_DI0_DW_SET1_3__DI0_DATA_CNT_DOWN1_3 IPU_REGISTERS_OFFSET+0x000400C4,0x01FF0000
+#define IPU_DI0_DW_SET1_3__DI0_DATA_CNT_UP1_3   IPU_REGISTERS_OFFSET+0x000400C4,0x000001FF
+
+#define IPU_DI0_DW_SET1_4__ADDR                 IPU_REGISTERS_OFFSET+0x000400C8
+#define IPU_DI0_DW_SET1_4__EMPTY                IPU_REGISTERS_OFFSET+0x000400C8,0x00000000
+#define IPU_DI0_DW_SET1_4__FULL                 IPU_REGISTERS_OFFSET+0x000400C8,0xffffffff
+#define IPU_DI0_DW_SET1_4__DI0_DATA_CNT_DOWN1_4 IPU_REGISTERS_OFFSET+0x000400C8,0x01FF0000
+#define IPU_DI0_DW_SET1_4__DI0_DATA_CNT_UP1_4   IPU_REGISTERS_OFFSET+0x000400C8,0x000001FF
+
+#define IPU_DI0_DW_SET1_5__ADDR                 IPU_REGISTERS_OFFSET+0x000400CC
+#define IPU_DI0_DW_SET1_5__EMPTY                IPU_REGISTERS_OFFSET+0x000400CC,0x00000000
+#define IPU_DI0_DW_SET1_5__FULL                 IPU_REGISTERS_OFFSET+0x000400CC,0xffffffff
+#define IPU_DI0_DW_SET1_5__DI0_DATA_CNT_DOWN1_5 IPU_REGISTERS_OFFSET+0x000400CC,0x01FF0000
+#define IPU_DI0_DW_SET1_5__DI0_DATA_CNT_UP1_5   IPU_REGISTERS_OFFSET+0x000400CC,0x000001FF
+
+#define IPU_DI0_DW_SET1_6__ADDR                 IPU_REGISTERS_OFFSET+0x000400D0
+#define IPU_DI0_DW_SET1_6__EMPTY                IPU_REGISTERS_OFFSET+0x000400D0,0x00000000
+#define IPU_DI0_DW_SET1_6__FULL                 IPU_REGISTERS_OFFSET+0x000400D0,0xffffffff
+#define IPU_DI0_DW_SET1_6__DI0_DATA_CNT_DOWN1_6 IPU_REGISTERS_OFFSET+0x000400D0,0x01FF0000
+#define IPU_DI0_DW_SET1_6__DI0_DATA_CNT_UP1_6   IPU_REGISTERS_OFFSET+0x000400D0,0x000001FF
+
+#define IPU_DI0_DW_SET1_7__ADDR                 IPU_REGISTERS_OFFSET+0x000400D4
+#define IPU_DI0_DW_SET1_7__EMPTY                IPU_REGISTERS_OFFSET+0x000400D4,0x00000000
+#define IPU_DI0_DW_SET1_7__FULL                 IPU_REGISTERS_OFFSET+0x000400D4,0xffffffff
+#define IPU_DI0_DW_SET1_7__DI0_DATA_CNT_DOWN1_7 IPU_REGISTERS_OFFSET+0x000400D4,0x01FF0000
+#define IPU_DI0_DW_SET1_7__DI0_DATA_CNT_UP1_7   IPU_REGISTERS_OFFSET+0x000400D4,0x000001FF
+
+#define IPU_DI0_DW_SET1_8__ADDR                 IPU_REGISTERS_OFFSET+0x000400D8
+#define IPU_DI0_DW_SET1_8__EMPTY                IPU_REGISTERS_OFFSET+0x000400D8,0x00000000
+#define IPU_DI0_DW_SET1_8__FULL                 IPU_REGISTERS_OFFSET+0x000400D8,0xffffffff
+#define IPU_DI0_DW_SET1_8__DI0_DATA_CNT_DOWN1_8 IPU_REGISTERS_OFFSET+0x000400D8,0x01FF0000
+#define IPU_DI0_DW_SET1_8__DI0_DATA_CNT_UP1_8   IPU_REGISTERS_OFFSET+0x000400D8,0x000001FF
+
+#define IPU_DI0_DW_SET1_9__ADDR                 IPU_REGISTERS_OFFSET+0x000400DC
+#define IPU_DI0_DW_SET1_9__EMPTY                IPU_REGISTERS_OFFSET+0x000400DC,0x00000000
+#define IPU_DI0_DW_SET1_9__FULL                 IPU_REGISTERS_OFFSET+0x000400DC,0xffffffff
+#define IPU_DI0_DW_SET1_9__DI0_DATA_CNT_DOWN1_9 IPU_REGISTERS_OFFSET+0x000400DC,0x01FF0000
+#define IPU_DI0_DW_SET1_9__DI0_DATA_CNT_UP1_9   IPU_REGISTERS_OFFSET+0x000400DC,0x000001FF
+
+#define IPU_DI0_DW_SET1_10__ADDR                  IPU_REGISTERS_OFFSET+0x000400E0
+#define IPU_DI0_DW_SET1_10__EMPTY                 IPU_REGISTERS_OFFSET+0x000400E0,0x00000000
+#define IPU_DI0_DW_SET1_10__FULL                  IPU_REGISTERS_OFFSET+0x000400E0,0xffffffff
+#define IPU_DI0_DW_SET1_10__DI0_DATA_CNT_DOWN1_10 IPU_REGISTERS_OFFSET+0x000400E0,0x01FF0000
+#define IPU_DI0_DW_SET1_10__DI0_DATA_CNT_UP1_10   IPU_REGISTERS_OFFSET+0x000400E0,0x000001FF
+
+#define IPU_DI0_DW_SET1_11__ADDR                  IPU_REGISTERS_OFFSET+0x000400E4
+#define IPU_DI0_DW_SET1_11__EMPTY                 IPU_REGISTERS_OFFSET+0x000400E4,0x00000000
+#define IPU_DI0_DW_SET1_11__FULL                  IPU_REGISTERS_OFFSET+0x000400E4,0xffffffff
+#define IPU_DI0_DW_SET1_11__DI0_DATA_CNT_DOWN1_11 IPU_REGISTERS_OFFSET+0x000400E4,0x01FF0000
+#define IPU_DI0_DW_SET1_11__DI0_DATA_CNT_UP1_11   IPU_REGISTERS_OFFSET+0x000400E4,0x000001FF
+
+#define IPU_DI0_DW_SET2_0__ADDR                 IPU_REGISTERS_OFFSET+0x000400E8
+#define IPU_DI0_DW_SET2_0__EMPTY                IPU_REGISTERS_OFFSET+0x000400E8,0x00000000
+#define IPU_DI0_DW_SET2_0__FULL                 IPU_REGISTERS_OFFSET+0x000400E8,0xffffffff
+#define IPU_DI0_DW_SET2_0__DI0_DATA_CNT_DOWN2_0 IPU_REGISTERS_OFFSET+0x000400E8,0x01FF0000
+#define IPU_DI0_DW_SET2_0__DI0_DATA_CNT_UP2_0   IPU_REGISTERS_OFFSET+0x000400E8,0x000001FF
+
+#define IPU_DI0_DW_SET2_1__ADDR                 IPU_REGISTERS_OFFSET+0x000400EC
+#define IPU_DI0_DW_SET2_1__EMPTY                IPU_REGISTERS_OFFSET+0x000400EC,0x00000000
+#define IPU_DI0_DW_SET2_1__FULL                 IPU_REGISTERS_OFFSET+0x000400EC,0xffffffff
+#define IPU_DI0_DW_SET2_1__DI0_DATA_CNT_DOWN2_1 IPU_REGISTERS_OFFSET+0x000400EC,0x01FF0000
+#define IPU_DI0_DW_SET2_1__DI0_DATA_CNT_UP2_1   IPU_REGISTERS_OFFSET+0x000400EC,0x000001FF
+
+#define IPU_DI0_DW_SET2_2__ADDR                 IPU_REGISTERS_OFFSET+0x000400F0
+#define IPU_DI0_DW_SET2_2__EMPTY                IPU_REGISTERS_OFFSET+0x000400F0,0x00000000
+#define IPU_DI0_DW_SET2_2__FULL                 IPU_REGISTERS_OFFSET+0x000400F0,0xffffffff
+#define IPU_DI0_DW_SET2_2__DI0_DATA_CNT_DOWN2_2 IPU_REGISTERS_OFFSET+0x000400F0,0x01FF0000
+#define IPU_DI0_DW_SET2_2__DI0_DATA_CNT_UP2_2   IPU_REGISTERS_OFFSET+0x000400F0,0x000001FF
+
+#define IPU_DI0_DW_SET2_3__ADDR                 IPU_REGISTERS_OFFSET+0x000400F4
+#define IPU_DI0_DW_SET2_3__EMPTY                IPU_REGISTERS_OFFSET+0x000400F4,0x00000000
+#define IPU_DI0_DW_SET2_3__FULL                 IPU_REGISTERS_OFFSET+0x000400F4,0xffffffff
+#define IPU_DI0_DW_SET2_3__DI0_DATA_CNT_DOWN2_3 IPU_REGISTERS_OFFSET+0x000400F4,0x01FF0000
+#define IPU_DI0_DW_SET2_3__DI0_DATA_CNT_UP2_3   IPU_REGISTERS_OFFSET+0x000400F4,0x000001FF
+
+#define IPU_DI0_DW_SET2_4__ADDR                 IPU_REGISTERS_OFFSET+0x000400F8
+#define IPU_DI0_DW_SET2_4__EMPTY                IPU_REGISTERS_OFFSET+0x000400F8,0x00000000
+#define IPU_DI0_DW_SET2_4__FULL                 IPU_REGISTERS_OFFSET+0x000400F8,0xffffffff
+#define IPU_DI0_DW_SET2_4__DI0_DATA_CNT_DOWN2_4 IPU_REGISTERS_OFFSET+0x000400F8,0x01FF0000
+#define IPU_DI0_DW_SET2_4__DI0_DATA_CNT_UP2_4   IPU_REGISTERS_OFFSET+0x000400F8,0x000001FF
+
+#define IPU_DI0_DW_SET2_5__ADDR                 IPU_REGISTERS_OFFSET+0x000400FC
+#define IPU_DI0_DW_SET2_5__EMPTY                IPU_REGISTERS_OFFSET+0x000400FC,0x00000000
+#define IPU_DI0_DW_SET2_5__FULL                 IPU_REGISTERS_OFFSET+0x000400FC,0xffffffff
+#define IPU_DI0_DW_SET2_5__DI0_DATA_CNT_DOWN2_5 IPU_REGISTERS_OFFSET+0x000400FC,0x01FF0000
+#define IPU_DI0_DW_SET2_5__DI0_DATA_CNT_UP2_5   IPU_REGISTERS_OFFSET+0x000400FC,0x000001FF
+
+#define IPU_DI0_DW_SET2_6__ADDR                 IPU_REGISTERS_OFFSET+0x00040100
+#define IPU_DI0_DW_SET2_6__EMPTY                IPU_REGISTERS_OFFSET+0x00040100,0x00000000
+#define IPU_DI0_DW_SET2_6__FULL                 IPU_REGISTERS_OFFSET+0x00040100,0xffffffff
+#define IPU_DI0_DW_SET2_6__DI0_DATA_CNT_DOWN2_6 IPU_REGISTERS_OFFSET+0x00040100,0x01FF0000
+#define IPU_DI0_DW_SET2_6__DI0_DATA_CNT_UP2_6   IPU_REGISTERS_OFFSET+0x00040100,0x000001FF
+
+#define IPU_DI0_DW_SET2_7__ADDR                 IPU_REGISTERS_OFFSET+0x00040104
+#define IPU_DI0_DW_SET2_7__EMPTY                IPU_REGISTERS_OFFSET+0x00040104,0x00000000
+#define IPU_DI0_DW_SET2_7__FULL                 IPU_REGISTERS_OFFSET+0x00040104,0xffffffff
+#define IPU_DI0_DW_SET2_7__DI0_DATA_CNT_DOWN2_7 IPU_REGISTERS_OFFSET+0x00040104,0x01FF0000
+#define IPU_DI0_DW_SET2_7__DI0_DATA_CNT_UP2_7   IPU_REGISTERS_OFFSET+0x00040104,0x000001FF
+
+#define IPU_DI0_DW_SET2_8__ADDR                 IPU_REGISTERS_OFFSET+0x00040108
+#define IPU_DI0_DW_SET2_8__EMPTY                IPU_REGISTERS_OFFSET+0x00040108,0x00000000
+#define IPU_DI0_DW_SET2_8__FULL                 IPU_REGISTERS_OFFSET+0x00040108,0xffffffff
+#define IPU_DI0_DW_SET2_8__DI0_DATA_CNT_DOWN2_8 IPU_REGISTERS_OFFSET+0x00040108,0x01FF0000
+#define IPU_DI0_DW_SET2_8__DI0_DATA_CNT_UP2_8   IPU_REGISTERS_OFFSET+0x00040108,0x000001FF
+
+#define IPU_DI0_DW_SET2_9__ADDR                 IPU_REGISTERS_OFFSET+0x0004010C
+#define IPU_DI0_DW_SET2_9__EMPTY                IPU_REGISTERS_OFFSET+0x0004010C,0x00000000
+#define IPU_DI0_DW_SET2_9__FULL                 IPU_REGISTERS_OFFSET+0x0004010C,0xffffffff
+#define IPU_DI0_DW_SET2_9__DI0_DATA_CNT_DOWN2_9 IPU_REGISTERS_OFFSET+0x0004010C,0x01FF0000
+#define IPU_DI0_DW_SET2_9__DI0_DATA_CNT_UP2_9   IPU_REGISTERS_OFFSET+0x0004010C,0x000001FF
+
+#define IPU_DI0_DW_SET2_10__ADDR                  IPU_REGISTERS_OFFSET+0x00040110
+#define IPU_DI0_DW_SET2_10__EMPTY                 IPU_REGISTERS_OFFSET+0x00040110,0x00000000
+#define IPU_DI0_DW_SET2_10__FULL                  IPU_REGISTERS_OFFSET+0x00040110,0xffffffff
+#define IPU_DI0_DW_SET2_10__DI0_DATA_CNT_DOWN2_10 IPU_REGISTERS_OFFSET+0x00040110,0x01FF0000
+#define IPU_DI0_DW_SET2_10__DI0_DATA_CNT_UP2_10   IPU_REGISTERS_OFFSET+0x00040110,0x000001FF
+
+#define IPU_DI0_DW_SET2_11__ADDR                  IPU_REGISTERS_OFFSET+0x00040114
+#define IPU_DI0_DW_SET2_11__EMPTY                 IPU_REGISTERS_OFFSET+0x00040114,0x00000000
+#define IPU_DI0_DW_SET2_11__FULL                  IPU_REGISTERS_OFFSET+0x00040114,0xffffffff
+#define IPU_DI0_DW_SET2_11__DI0_DATA_CNT_DOWN2_11 IPU_REGISTERS_OFFSET+0x00040114,0x01FF0000
+#define IPU_DI0_DW_SET2_11__DI0_DATA_CNT_UP2_11   IPU_REGISTERS_OFFSET+0x00040114,0x000001FF
+
+#define IPU_DI0_DW_SET3_0__ADDR                 IPU_REGISTERS_OFFSET+0x00040118
+#define IPU_DI0_DW_SET3_0__EMPTY                IPU_REGISTERS_OFFSET+0x00040118,0x00000000
+#define IPU_DI0_DW_SET3_0__FULL                 IPU_REGISTERS_OFFSET+0x00040118,0xffffffff
+#define IPU_DI0_DW_SET3_0__DI0_DATA_CNT_DOWN3_0 IPU_REGISTERS_OFFSET+0x00040118,0x01FF0000
+#define IPU_DI0_DW_SET3_0__DI0_DATA_CNT_UP3_0   IPU_REGISTERS_OFFSET+0x00040118,0x000001FF
+
+#define IPU_DI0_DW_SET3_1__ADDR                 IPU_REGISTERS_OFFSET+0x0004011C
+#define IPU_DI0_DW_SET3_1__EMPTY                IPU_REGISTERS_OFFSET+0x0004011C,0x00000000
+#define IPU_DI0_DW_SET3_1__FULL                 IPU_REGISTERS_OFFSET+0x0004011C,0xffffffff
+#define IPU_DI0_DW_SET3_1__DI0_DATA_CNT_DOWN3_1 IPU_REGISTERS_OFFSET+0x0004011C,0x01FF0000
+#define IPU_DI0_DW_SET3_1__DI0_DATA_CNT_UP3_1   IPU_REGISTERS_OFFSET+0x0004011C,0x000001FF
+
+#define IPU_DI0_DW_SET3_2__ADDR                 IPU_REGISTERS_OFFSET+0x00040120
+#define IPU_DI0_DW_SET3_2__EMPTY                IPU_REGISTERS_OFFSET+0x00040120,0x00000000
+#define IPU_DI0_DW_SET3_2__FULL                 IPU_REGISTERS_OFFSET+0x00040120,0xffffffff
+#define IPU_DI0_DW_SET3_2__DI0_DATA_CNT_DOWN3_2 IPU_REGISTERS_OFFSET+0x00040120,0x01FF0000
+#define IPU_DI0_DW_SET3_2__DI0_DATA_CNT_UP3_2   IPU_REGISTERS_OFFSET+0x00040120,0x000001FF
+
+#define IPU_DI0_DW_SET3_3__ADDR                 IPU_REGISTERS_OFFSET+0x00040124
+#define IPU_DI0_DW_SET3_3__EMPTY                IPU_REGISTERS_OFFSET+0x00040124,0x00000000
+#define IPU_DI0_DW_SET3_3__FULL                 IPU_REGISTERS_OFFSET+0x00040124,0xffffffff
+#define IPU_DI0_DW_SET3_3__DI0_DATA_CNT_DOWN3_3 IPU_REGISTERS_OFFSET+0x00040124,0x01FF0000
+#define IPU_DI0_DW_SET3_3__DI0_DATA_CNT_UP3_3   IPU_REGISTERS_OFFSET+0x00040124,0x000001FF
+
+#define IPU_DI0_DW_SET3_4__ADDR                 IPU_REGISTERS_OFFSET+0x00040128
+#define IPU_DI0_DW_SET3_4__EMPTY                IPU_REGISTERS_OFFSET+0x00040128,0x00000000
+#define IPU_DI0_DW_SET3_4__FULL                 IPU_REGISTERS_OFFSET+0x00040128,0xffffffff
+#define IPU_DI0_DW_SET3_4__DI0_DATA_CNT_DOWN3_4 IPU_REGISTERS_OFFSET+0x00040128,0x01FF0000
+#define IPU_DI0_DW_SET3_4__DI0_DATA_CNT_UP3_4   IPU_REGISTERS_OFFSET+0x00040128,0x000001FF
+
+#define IPU_DI0_DW_SET3_5__ADDR                 IPU_REGISTERS_OFFSET+0x0004012C
+#define IPU_DI0_DW_SET3_5__EMPTY                IPU_REGISTERS_OFFSET+0x0004012C,0x00000000
+#define IPU_DI0_DW_SET3_5__FULL                 IPU_REGISTERS_OFFSET+0x0004012C,0xffffffff
+#define IPU_DI0_DW_SET3_5__DI0_DATA_CNT_DOWN3_5 IPU_REGISTERS_OFFSET+0x0004012C,0x01FF0000
+#define IPU_DI0_DW_SET3_5__DI0_DATA_CNT_UP3_5   IPU_REGISTERS_OFFSET+0x0004012C,0x000001FF
+
+#define IPU_DI0_DW_SET3_6__ADDR                 IPU_REGISTERS_OFFSET+0x00040130
+#define IPU_DI0_DW_SET3_6__EMPTY                IPU_REGISTERS_OFFSET+0x00040130,0x00000000
+#define IPU_DI0_DW_SET3_6__FULL                 IPU_REGISTERS_OFFSET+0x00040130,0xffffffff
+#define IPU_DI0_DW_SET3_6__DI0_DATA_CNT_DOWN3_6 IPU_REGISTERS_OFFSET+0x00040130,0x01FF0000
+#define IPU_DI0_DW_SET3_6__DI0_DATA_CNT_UP3_6   IPU_REGISTERS_OFFSET+0x00040130,0x000001FF
+
+#define IPU_DI0_DW_SET3_7__ADDR                 IPU_REGISTERS_OFFSET+0x00040134
+#define IPU_DI0_DW_SET3_7__EMPTY                IPU_REGISTERS_OFFSET+0x00040134,0x00000000
+#define IPU_DI0_DW_SET3_7__FULL                 IPU_REGISTERS_OFFSET+0x00040134,0xffffffff
+#define IPU_DI0_DW_SET3_7__DI0_DATA_CNT_DOWN3_7 IPU_REGISTERS_OFFSET+0x00040134,0x01FF0000
+#define IPU_DI0_DW_SET3_7__DI0_DATA_CNT_UP3_7   IPU_REGISTERS_OFFSET+0x00040134,0x000001FF
+
+#define IPU_DI0_DW_SET3_8__ADDR                 IPU_REGISTERS_OFFSET+0x00040138
+#define IPU_DI0_DW_SET3_8__EMPTY                IPU_REGISTERS_OFFSET+0x00040138,0x00000000
+#define IPU_DI0_DW_SET3_8__FULL                 IPU_REGISTERS_OFFSET+0x00040138,0xffffffff
+#define IPU_DI0_DW_SET3_8__DI0_DATA_CNT_DOWN3_8 IPU_REGISTERS_OFFSET+0x00040138,0x01FF0000
+#define IPU_DI0_DW_SET3_8__DI0_DATA_CNT_UP3_8   IPU_REGISTERS_OFFSET+0x00040138,0x000001FF
+
+#define IPU_DI0_DW_SET3_9__ADDR                 IPU_REGISTERS_OFFSET+0x0004013C
+#define IPU_DI0_DW_SET3_9__EMPTY                IPU_REGISTERS_OFFSET+0x0004013C,0x00000000
+#define IPU_DI0_DW_SET3_9__FULL                 IPU_REGISTERS_OFFSET+0x0004013C,0xffffffff
+#define IPU_DI0_DW_SET3_9__DI0_DATA_CNT_DOWN3_9 IPU_REGISTERS_OFFSET+0x0004013C,0x01FF0000
+#define IPU_DI0_DW_SET3_9__DI0_DATA_CNT_UP3_9   IPU_REGISTERS_OFFSET+0x0004013C,0x000001FF
+
+#define IPU_DI0_DW_SET3_10__ADDR                  IPU_REGISTERS_OFFSET+0x00040140
+#define IPU_DI0_DW_SET3_10__EMPTY                 IPU_REGISTERS_OFFSET+0x00040140,0x00000000
+#define IPU_DI0_DW_SET3_10__FULL                  IPU_REGISTERS_OFFSET+0x00040140,0xffffffff
+#define IPU_DI0_DW_SET3_10__DI0_DATA_CNT_DOWN3_10 IPU_REGISTERS_OFFSET+0x00040140,0x01FF0000
+#define IPU_DI0_DW_SET3_10__DI0_DATA_CNT_UP3_10   IPU_REGISTERS_OFFSET+0x00040140,0x000001FF
+
+#define IPU_DI0_DW_SET3_11__ADDR                  IPU_REGISTERS_OFFSET+0x00040144
+#define IPU_DI0_DW_SET3_11__EMPTY                 IPU_REGISTERS_OFFSET+0x00040144,0x00000000
+#define IPU_DI0_DW_SET3_11__FULL                  IPU_REGISTERS_OFFSET+0x00040144,0xffffffff
+#define IPU_DI0_DW_SET3_11__DI0_DATA_CNT_DOWN3_11 IPU_REGISTERS_OFFSET+0x00040144,0x01FF0000
+#define IPU_DI0_DW_SET3_11__DI0_DATA_CNT_UP3_11   IPU_REGISTERS_OFFSET+0x00040144,0x000001FF
+
+#define IPU_DI0_STP_REP_1__ADDR              IPU_REGISTERS_OFFSET+0x00040148
+#define IPU_DI0_STP_REP_1__EMPTY             IPU_REGISTERS_OFFSET+0x00040148,0x00000000
+#define IPU_DI0_STP_REP_1__FULL              IPU_REGISTERS_OFFSET+0x00040148,0xffffffff
+#define IPU_DI0_STP_REP_1__DI0_STEP_REPEAT_2 IPU_REGISTERS_OFFSET+0x00040148,0x0FFF0000
+#define IPU_DI0_STP_REP_1__DI0_STEP_REPEAT_1 IPU_REGISTERS_OFFSET+0x00040148,0x00000FFF
+
+#define IPU_DI0_STP_REP_2__ADDR              IPU_REGISTERS_OFFSET+0x0004014C
+#define IPU_DI0_STP_REP_2__EMPTY             IPU_REGISTERS_OFFSET+0x0004014C,0x00000000
+#define IPU_DI0_STP_REP_2__FULL              IPU_REGISTERS_OFFSET+0x0004014C,0xffffffff
+#define IPU_DI0_STP_REP_2__DI0_STEP_REPEAT_4 IPU_REGISTERS_OFFSET+0x0004014C,0x0FFF0000
+#define IPU_DI0_STP_REP_2__DI0_STEP_REPEAT_3 IPU_REGISTERS_OFFSET+0x0004014C,0x00000FFF
+
+#define IPU_DI0_STP_REP_3__ADDR              IPU_REGISTERS_OFFSET+0x00040150
+#define IPU_DI0_STP_REP_3__EMPTY             IPU_REGISTERS_OFFSET+0x00040150,0x00000000
+#define IPU_DI0_STP_REP_3__FULL              IPU_REGISTERS_OFFSET+0x00040150,0xffffffff
+#define IPU_DI0_STP_REP_3__DI0_STEP_REPEAT_6 IPU_REGISTERS_OFFSET+0x00040150,0x0FFF0000
+#define IPU_DI0_STP_REP_3__DI0_STEP_REPEAT_5 IPU_REGISTERS_OFFSET+0x00040150,0x00000FFF
+
+#define IPU_DI0_STP_REP_4__ADDR              IPU_REGISTERS_OFFSET+0x00040154
+#define IPU_DI0_STP_REP_4__EMPTY             IPU_REGISTERS_OFFSET+0x00040154,0x00000000
+#define IPU_DI0_STP_REP_4__FULL              IPU_REGISTERS_OFFSET+0x00040154,0xffffffff
+#define IPU_DI0_STP_REP_4__DI0_STEP_REPEAT_8 IPU_REGISTERS_OFFSET+0x00040154,0x0FFF0000
+#define IPU_DI0_STP_REP_4__DI0_STEP_REPEAT_7 IPU_REGISTERS_OFFSET+0x00040154,0x00000FFF
+
+#define IPU_DI0_STP_REP_9__ADDR              IPU_REGISTERS_OFFSET+0x00040158
+#define IPU_DI0_STP_REP_9__EMPTY             IPU_REGISTERS_OFFSET+0x00040158,0x00000000
+#define IPU_DI0_STP_REP_9__FULL              IPU_REGISTERS_OFFSET+0x00040158,0xffffffff
+#define IPU_DI0_STP_REP_9__DI0_STEP_REPEAT_9 IPU_REGISTERS_OFFSET+0x00040158,0x00000FFF
+
+#define IPU_DI0_SER_CONF__ADDR                       IPU_REGISTERS_OFFSET+0x0004015C
+#define IPU_DI0_SER_CONF__EMPTY                      IPU_REGISTERS_OFFSET+0x0004015C,0x00000000
+#define IPU_DI0_SER_CONF__FULL                       IPU_REGISTERS_OFFSET+0x0004015C,0xffffffff
+#define IPU_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_R_1 IPU_REGISTERS_OFFSET+0x0004015C,0xF0000000
+#define IPU_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_R_0 IPU_REGISTERS_OFFSET+0x0004015C,0x0F000000
+#define IPU_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_W_1 IPU_REGISTERS_OFFSET+0x0004015C,0x00F00000
+#define IPU_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_W_0 IPU_REGISTERS_OFFSET+0x0004015C,0x000F0000
+#define IPU_DI0_SER_CONF__DI0_SERIAL_LATCH           IPU_REGISTERS_OFFSET+0x0004015C,0x0000FF00
+#define IPU_DI0_SER_CONF__DI0_LLA_SER_ACCESS         IPU_REGISTERS_OFFSET+0x0004015C,0x00000020
+#define IPU_DI0_SER_CONF__DI0_SER_CLK_POLARITY       IPU_REGISTERS_OFFSET+0x0004015C,0x00000010
+#define IPU_DI0_SER_CONF__DI0_SERIAL_DATA_POLARITY   IPU_REGISTERS_OFFSET+0x0004015C,0x00000008
+#define IPU_DI0_SER_CONF__DI0_SERIAL_RS_POLARITY     IPU_REGISTERS_OFFSET+0x0004015C,0x00000004
+#define IPU_DI0_SER_CONF__DI0_SERIAL_CS_POLARITY     IPU_REGISTERS_OFFSET+0x0004015C,0x00000002
+#define IPU_DI0_SER_CONF__DI0_WAIT4SERIAL            IPU_REGISTERS_OFFSET+0x0004015C,0x00000001
+
+#define IPU_DI0_SSC__ADDR              IPU_REGISTERS_OFFSET+0x00040160
+#define IPU_DI0_SSC__EMPTY             IPU_REGISTERS_OFFSET+0x00040160,0x00000000
+#define IPU_DI0_SSC__FULL              IPU_REGISTERS_OFFSET+0x00040160,0xffffffff
+#define IPU_DI0_SSC__DI0_PIN17_ERM     IPU_REGISTERS_OFFSET+0x00040160,0x00800000
+#define IPU_DI0_SSC__DI0_PIN16_ERM     IPU_REGISTERS_OFFSET+0x00040160,0x00400000
+#define IPU_DI0_SSC__DI0_PIN15_ERM     IPU_REGISTERS_OFFSET+0x00040160,0x00200000
+#define IPU_DI0_SSC__DI0_PIN14_ERM     IPU_REGISTERS_OFFSET+0x00040160,0x00100000
+#define IPU_DI0_SSC__DI0_PIN13_ERM     IPU_REGISTERS_OFFSET+0x00040160,0x00080000
+#define IPU_DI0_SSC__DI0_PIN12_ERM     IPU_REGISTERS_OFFSET+0x00040160,0x00040000
+#define IPU_DI0_SSC__DI0_PIN11_ERM     IPU_REGISTERS_OFFSET+0x00040160,0x00020000
+#define IPU_DI0_SSC__DI0_CS_ERM        IPU_REGISTERS_OFFSET+0x00040160,0x00010000
+#define IPU_DI0_SSC__DI0_WAIT_ON       IPU_REGISTERS_OFFSET+0x00040160,0x00000020
+#define IPU_DI0_SSC__DI0_BYTE_EN_RD_IN IPU_REGISTERS_OFFSET+0x00040160,0x00000008
+#define IPU_DI0_SSC__DI0_BYTE_EN_PNTR  IPU_REGISTERS_OFFSET+0x00040160,0x00000007
+
+#define IPU_DI0_POL__ADDR                     IPU_REGISTERS_OFFSET+0x00040164
+#define IPU_DI0_POL__EMPTY                    IPU_REGISTERS_OFFSET+0x00040164,0x00000000
+#define IPU_DI0_POL__FULL                     IPU_REGISTERS_OFFSET+0x00040164,0xffffffff
+#define IPU_DI0_POL__DI0_WAIT_POLARITY        IPU_REGISTERS_OFFSET+0x00040164,0x04000000
+#define IPU_DI0_POL__DI0_CS1_BYTE_EN_POLARITY IPU_REGISTERS_OFFSET+0x00040164,0x02000000
+#define IPU_DI0_POL__DI0_CS0_BYTE_EN_POLARITY IPU_REGISTERS_OFFSET+0x00040164,0x01000000
+#define IPU_DI0_POL__DI0_CS1_DATA_POLARITY    IPU_REGISTERS_OFFSET+0x00040164,0x00800000
+#define IPU_DI0_POL__DI0_CS1_POLARITY_17      IPU_REGISTERS_OFFSET+0x00040164,0x00400000
+#define IPU_DI0_POL__DI0_CS1_POLARITY_16      IPU_REGISTERS_OFFSET+0x00040164,0x00200000
+#define IPU_DI0_POL__DI0_CS1_POLARITY_15      IPU_REGISTERS_OFFSET+0x00040164,0x00100000
+#define IPU_DI0_POL__DI0_CS1_POLARITY_14      IPU_REGISTERS_OFFSET+0x00040164,0x00080000
+#define IPU_DI0_POL__DI0_CS1_POLARITY_13      IPU_REGISTERS_OFFSET+0x00040164,0x00040000
+#define IPU_DI0_POL__DI0_CS1_POLARITY_12      IPU_REGISTERS_OFFSET+0x00040164,0x00020000
+#define IPU_DI0_POL__DI0_CS1_POLARITY_11      IPU_REGISTERS_OFFSET+0x00040164,0x00010000
+#define IPU_DI0_POL__DI0_CS0_DATA_POLARITY    IPU_REGISTERS_OFFSET+0x00040164,0x00008000
+#define IPU_DI0_POL__DI0_CS0_POLARITY_17      IPU_REGISTERS_OFFSET+0x00040164,0x00004000
+#define IPU_DI0_POL__DI0_CS0_POLARITY_16      IPU_REGISTERS_OFFSET+0x00040164,0x00002000
+#define IPU_DI0_POL__DI0_CS0_POLARITY_15      IPU_REGISTERS_OFFSET+0x00040164,0x00001000
+#define IPU_DI0_POL__DI0_CS0_POLARITY_14      IPU_REGISTERS_OFFSET+0x00040164,0x00000800
+#define IPU_DI0_POL__DI0_CS0_POLARITY_13      IPU_REGISTERS_OFFSET+0x00040164,0x00000400
+#define IPU_DI0_POL__DI0_CS0_POLARITY_12      IPU_REGISTERS_OFFSET+0x00040164,0x00000200
+#define IPU_DI0_POL__DI0_CS0_POLARITY_11      IPU_REGISTERS_OFFSET+0x00040164,0x00000100
+#define IPU_DI0_POL__DI0_DRDY_DATA_POLARITY   IPU_REGISTERS_OFFSET+0x00040164,0x00000080
+#define IPU_DI0_POL__DI0_DRDY_POLARITY_17     IPU_REGISTERS_OFFSET+0x00040164,0x00000040
+#define IPU_DI0_POL__DI0_DRDY_POLARITY_16     IPU_REGISTERS_OFFSET+0x00040164,0x00000020
+#define IPU_DI0_POL__DI0_DRDY_POLARITY_15     IPU_REGISTERS_OFFSET+0x00040164,0x00000010
+#define IPU_DI0_POL__DI0_DRDY_POLARITY_14     IPU_REGISTERS_OFFSET+0x00040164,0x00000008
+#define IPU_DI0_POL__DI0_DRDY_POLARITY_13     IPU_REGISTERS_OFFSET+0x00040164,0x00000004
+#define IPU_DI0_POL__DI0_DRDY_POLARITY_12     IPU_REGISTERS_OFFSET+0x00040164,0x00000002
+#define IPU_DI0_POL__DI0_DRDY_POLARITY_11     IPU_REGISTERS_OFFSET+0x00040164,0x00000001
+
+#define IPU_DI0_AW0__ADDR              IPU_REGISTERS_OFFSET+0x00040168
+#define IPU_DI0_AW0__EMPTY             IPU_REGISTERS_OFFSET+0x00040168,0x00000000
+#define IPU_DI0_AW0__FULL              IPU_REGISTERS_OFFSET+0x00040168,0xffffffff
+#define IPU_DI0_AW0__DI0_AW_TRIG_SEL   IPU_REGISTERS_OFFSET+0x00040168,0xF0000000
+#define IPU_DI0_AW0__DI0_AW_HEND       IPU_REGISTERS_OFFSET+0x00040168,0x0FFF0000
+#define IPU_DI0_AW0__DI0_AW_HCOUNT_SEL IPU_REGISTERS_OFFSET+0x00040168,0x0000F000
+#define IPU_DI0_AW0__DI0_AW_HSTART     IPU_REGISTERS_OFFSET+0x00040168,0x00000FFF
+
+#define IPU_DI0_AW1__ADDR              IPU_REGISTERS_OFFSET+0x0004016C
+#define IPU_DI0_AW1__EMPTY             IPU_REGISTERS_OFFSET+0x0004016C,0x00000000
+#define IPU_DI0_AW1__FULL              IPU_REGISTERS_OFFSET+0x0004016C,0xffffffff
+#define IPU_DI0_AW1__DI0_AW_VEND       IPU_REGISTERS_OFFSET+0x0004016C,0x0FFF0000
+#define IPU_DI0_AW1__DI0_AW_VCOUNT_SEL IPU_REGISTERS_OFFSET+0x0004016C,0x0000F000
+#define IPU_DI0_AW1__DI0_AW_VSTART     IPU_REGISTERS_OFFSET+0x0004016C,0x00000FFF
+
+#define IPU_DI0_SCR_CONF__ADDR              IPU_REGISTERS_OFFSET+0x00040170
+#define IPU_DI0_SCR_CONF__EMPTY             IPU_REGISTERS_OFFSET+0x00040170,0x00000000
+#define IPU_DI0_SCR_CONF__FULL              IPU_REGISTERS_OFFSET+0x00040170,0xffffffff
+#define IPU_DI0_SCR_CONF__DI0_SCREEN_HEIGHT IPU_REGISTERS_OFFSET+0x00040170,0x00000FFF
+
+#define IPU_DI0_STAT__ADDR                IPU_REGISTERS_OFFSET+0x00040174
+#define IPU_DI0_STAT__EMPTY               IPU_REGISTERS_OFFSET+0x00040174,0x00000000
+#define IPU_DI0_STAT__FULL                IPU_REGISTERS_OFFSET+0x00040174,0xffffffff
+#define IPU_DI0_STAT__DI0_CNTR_FIFO_FULL  IPU_REGISTERS_OFFSET+0x00040174,0x00000008
+#define IPU_DI0_STAT__DI0_CNTR_FIFO_EMPTY IPU_REGISTERS_OFFSET+0x00040174,0x00000004
+#define IPU_DI0_STAT__DI0_READ_FIFO_FULL  IPU_REGISTERS_OFFSET+0x00040174,0x00000002
+#define IPU_DI0_STAT__DI0_READ_FIFO_EMPTY IPU_REGISTERS_OFFSET+0x00040174,0x00000001
+
+#define IPU_DI1_GENERAL__ADDR                  IPU_REGISTERS_OFFSET+0x00048000
+#define IPU_DI1_GENERAL__EMPTY                 IPU_REGISTERS_OFFSET+0x00048000,0x00000000
+#define IPU_DI1_GENERAL__FULL                  IPU_REGISTERS_OFFSET+0x00048000,0xffffffff
+#define IPU_DI1_GENERAL__DI1_PIN8_PIN15_SEL    IPU_REGISTERS_OFFSET+0x00048000,0x80000000
+#define IPU_DI1_GENERAL__DI1_DISP_Y_SEL        IPU_REGISTERS_OFFSET+0x00048000,0x70000000
+#define IPU_DI1_GENERAL__DI1_CLOCK_STOP_MODE   IPU_REGISTERS_OFFSET+0x00048000,0x0F000000
+#define IPU_DI1_GENERAL__DI1_DISP_CLOCK_INIT   IPU_REGISTERS_OFFSET+0x00048000,0x00800000
+#define IPU_DI1_GENERAL__DI1_MASK_SEL          IPU_REGISTERS_OFFSET+0x00048000,0x00400000
+#define IPU_DI1_GENERAL__DI1_VSYNC_EXT         IPU_REGISTERS_OFFSET+0x00048000,0x00200000
+#define IPU_DI1_GENERAL__DI1_CLK_EXT           IPU_REGISTERS_OFFSET+0x00048000,0x00100000
+#define IPU_DI1_GENERAL__DI1_WATCHDOG_MODE     IPU_REGISTERS_OFFSET+0x00048000,0x000C0000
+#define IPU_DI1_GENERAL__DI1_POLARITY_DISP_CLK IPU_REGISTERS_OFFSET+0x00048000,0x00020000
+#define IPU_DI1_GENERAL__DI1_SYNC_COUNT_SEL    IPU_REGISTERS_OFFSET+0x00048000,0x0000F000
+#define IPU_DI1_GENERAL__DI1_ERR_TREATMENT     IPU_REGISTERS_OFFSET+0x00048000,0x00000800
+#define IPU_DI1_GENERAL__DI1_ERM_VSYNC_SEL     IPU_REGISTERS_OFFSET+0x00048000,0x00000400
+#define IPU_DI1_GENERAL__DI1_POLARITY_CS1      IPU_REGISTERS_OFFSET+0x00048000,0x00000200
+#define IPU_DI1_GENERAL__DI1_POLARITY_CS0      IPU_REGISTERS_OFFSET+0x00048000,0x00000100
+#define IPU_DI1_GENERAL__DI1_POLARITY_8        IPU_REGISTERS_OFFSET+0x00048000,0x00000080
+#define IPU_DI1_GENERAL__DI1_POLARITY_7        IPU_REGISTERS_OFFSET+0x00048000,0x00000040
+#define IPU_DI1_GENERAL__DI1_POLARITY_6        IPU_REGISTERS_OFFSET+0x00048000,0x00000020
+#define IPU_DI1_GENERAL__DI1_POLARITY_5        IPU_REGISTERS_OFFSET+0x00048000,0x00000010
+#define IPU_DI1_GENERAL__DI1_POLARITY_4        IPU_REGISTERS_OFFSET+0x00048000,0x00000008
+#define IPU_DI1_GENERAL__DI1_POLARITY_3        IPU_REGISTERS_OFFSET+0x00048000,0x00000004
+#define IPU_DI1_GENERAL__DI1_POLARITY_2        IPU_REGISTERS_OFFSET+0x00048000,0x00000002
+#define IPU_DI1_GENERAL__DI1_POLARITY_1        IPU_REGISTERS_OFFSET+0x00048000,0x00000001
+
+#define IPU_DI1_BS_CLKGEN0__ADDR                IPU_REGISTERS_OFFSET+0x00048004
+#define IPU_DI1_BS_CLKGEN0__EMPTY               IPU_REGISTERS_OFFSET+0x00048004,0x00000000
+#define IPU_DI1_BS_CLKGEN0__FULL                IPU_REGISTERS_OFFSET+0x00048004,0xffffffff
+#define IPU_DI1_BS_CLKGEN0__DI1_DISP_CLK_OFFSET IPU_REGISTERS_OFFSET+0x00048004,0x01FF0000
+#define IPU_DI1_BS_CLKGEN0__DI1_DISP_CLK_PERIOD IPU_REGISTERS_OFFSET+0x00048004,0x00000FFF
+
+#define IPU_DI1_BS_CLKGEN1__ADDR              IPU_REGISTERS_OFFSET+0x00048008
+#define IPU_DI1_BS_CLKGEN1__EMPTY             IPU_REGISTERS_OFFSET+0x00048008,0x00000000
+#define IPU_DI1_BS_CLKGEN1__FULL              IPU_REGISTERS_OFFSET+0x00048008,0xffffffff
+#define IPU_DI1_BS_CLKGEN1__DI1_DISP_CLK_DOWN IPU_REGISTERS_OFFSET+0x00048008,0x01FF0000
+#define IPU_DI1_BS_CLKGEN1__DI1_DISP_CLK_UP   IPU_REGISTERS_OFFSET+0x00048008,0x000001FF
+
+#define IPU_DI1_SW_GEN0_1__ADDR                    IPU_REGISTERS_OFFSET+0x0004800C
+#define IPU_DI1_SW_GEN0_1__EMPTY                   IPU_REGISTERS_OFFSET+0x0004800C,0x00000000
+#define IPU_DI1_SW_GEN0_1__FULL                    IPU_REGISTERS_OFFSET+0x0004800C,0xffffffff
+#define IPU_DI1_SW_GEN0_1__DI1_RUN_VALUE_M1_1      IPU_REGISTERS_OFFSET+0x0004800C,0x7FF80000
+#define IPU_DI1_SW_GEN0_1__DI1_RUN_RESOLUTION_1    IPU_REGISTERS_OFFSET+0x0004800C,0x00070000
+#define IPU_DI1_SW_GEN0_1__DI1_OFFSET_VALUE_1      IPU_REGISTERS_OFFSET+0x0004800C,0x00007FF8
+#define IPU_DI1_SW_GEN0_1__DI1_OFFSET_RESOLUTION_1 IPU_REGISTERS_OFFSET+0x0004800C,0x00000007
+
+#define IPU_DI1_SW_GEN0_2__ADDR                    IPU_REGISTERS_OFFSET+0x00048010
+#define IPU_DI1_SW_GEN0_2__EMPTY                   IPU_REGISTERS_OFFSET+0x00048010,0x00000000
+#define IPU_DI1_SW_GEN0_2__FULL                    IPU_REGISTERS_OFFSET+0x00048010,0xffffffff
+#define IPU_DI1_SW_GEN0_2__DI1_RUN_VALUE_M1_2      IPU_REGISTERS_OFFSET+0x00048010,0x7FF80000
+#define IPU_DI1_SW_GEN0_2__DI1_RUN_RESOLUTION_2    IPU_REGISTERS_OFFSET+0x00048010,0x00070000
+#define IPU_DI1_SW_GEN0_2__DI1_OFFSET_VALUE_2      IPU_REGISTERS_OFFSET+0x00048010,0x00007FF8
+#define IPU_DI1_SW_GEN0_2__DI1_OFFSET_RESOLUTION_2 IPU_REGISTERS_OFFSET+0x00048010,0x00000007
+
+#define IPU_DI1_SW_GEN0_3__ADDR                    IPU_REGISTERS_OFFSET+0x00048014
+#define IPU_DI1_SW_GEN0_3__EMPTY                   IPU_REGISTERS_OFFSET+0x00048014,0x00000000
+#define IPU_DI1_SW_GEN0_3__FULL                    IPU_REGISTERS_OFFSET+0x00048014,0xffffffff
+#define IPU_DI1_SW_GEN0_3__DI1_RUN_VALUE_M1_3      IPU_REGISTERS_OFFSET+0x00048014,0x7FF80000
+#define IPU_DI1_SW_GEN0_3__DI1_RUN_RESOLUTION_3    IPU_REGISTERS_OFFSET+0x00048014,0x00070000
+#define IPU_DI1_SW_GEN0_3__DI1_OFFSET_VALUE_3      IPU_REGISTERS_OFFSET+0x00048014,0x00007FF8
+#define IPU_DI1_SW_GEN0_3__DI1_OFFSET_RESOLUTION_3 IPU_REGISTERS_OFFSET+0x00048014,0x00000007
+
+#define IPU_DI1_SW_GEN0_4__ADDR                    IPU_REGISTERS_OFFSET+0x00048018
+#define IPU_DI1_SW_GEN0_4__EMPTY                   IPU_REGISTERS_OFFSET+0x00048018,0x00000000
+#define IPU_DI1_SW_GEN0_4__FULL                    IPU_REGISTERS_OFFSET+0x00048018,0xffffffff
+#define IPU_DI1_SW_GEN0_4__DI1_RUN_VALUE_M1_4      IPU_REGISTERS_OFFSET+0x00048018,0x7FF80000
+#define IPU_DI1_SW_GEN0_4__DI1_RUN_RESOLUTION_4    IPU_REGISTERS_OFFSET+0x00048018,0x00070000
+#define IPU_DI1_SW_GEN0_4__DI1_OFFSET_VALUE_4      IPU_REGISTERS_OFFSET+0x00048018,0x00007FF8
+#define IPU_DI1_SW_GEN0_4__DI1_OFFSET_RESOLUTION_4 IPU_REGISTERS_OFFSET+0x00048018,0x00000007
+
+#define IPU_DI1_SW_GEN0_5__ADDR                    IPU_REGISTERS_OFFSET+0x0004801C
+#define IPU_DI1_SW_GEN0_5__EMPTY                   IPU_REGISTERS_OFFSET+0x0004801C,0x00000000
+#define IPU_DI1_SW_GEN0_5__FULL                    IPU_REGISTERS_OFFSET+0x0004801C,0xffffffff
+#define IPU_DI1_SW_GEN0_5__DI1_RUN_VALUE_M1_5      IPU_REGISTERS_OFFSET+0x0004801C,0x7FF80000
+#define IPU_DI1_SW_GEN0_5__DI1_RUN_RESOLUTION_5    IPU_REGISTERS_OFFSET+0x0004801C,0x00070000
+#define IPU_DI1_SW_GEN0_5__DI1_OFFSET_VALUE_5      IPU_REGISTERS_OFFSET+0x0004801C,0x00007FF8
+#define IPU_DI1_SW_GEN0_5__DI1_OFFSET_RESOLUTION_5 IPU_REGISTERS_OFFSET+0x0004801C,0x00000007
+
+#define IPU_DI1_SW_GEN0_6__ADDR                    IPU_REGISTERS_OFFSET+0x00048020
+#define IPU_DI1_SW_GEN0_6__EMPTY                   IPU_REGISTERS_OFFSET+0x00048020,0x00000000
+#define IPU_DI1_SW_GEN0_6__FULL                    IPU_REGISTERS_OFFSET+0x00048020,0xffffffff
+#define IPU_DI1_SW_GEN0_6__DI1_RUN_VALUE_M1_6      IPU_REGISTERS_OFFSET+0x00048020,0x7FF80000
+#define IPU_DI1_SW_GEN0_6__DI1_RUN_RESOLUTION_6    IPU_REGISTERS_OFFSET+0x00048020,0x00070000
+#define IPU_DI1_SW_GEN0_6__DI1_OFFSET_VALUE_6      IPU_REGISTERS_OFFSET+0x00048020,0x00007FF8
+#define IPU_DI1_SW_GEN0_6__DI1_OFFSET_RESOLUTION_6 IPU_REGISTERS_OFFSET+0x00048020,0x00000007
+
+#define IPU_DI1_SW_GEN0_7__ADDR                    IPU_REGISTERS_OFFSET+0x00048024
+#define IPU_DI1_SW_GEN0_7__EMPTY                   IPU_REGISTERS_OFFSET+0x00048024,0x00000000
+#define IPU_DI1_SW_GEN0_7__FULL                    IPU_REGISTERS_OFFSET+0x00048024,0xffffffff
+#define IPU_DI1_SW_GEN0_7__DI1_RUN_VALUE_M1_7      IPU_REGISTERS_OFFSET+0x00048024,0x7FF80000
+#define IPU_DI1_SW_GEN0_7__DI1_RUN_RESOLUTION_7    IPU_REGISTERS_OFFSET+0x00048024,0x00070000
+#define IPU_DI1_SW_GEN0_7__DI1_OFFSET_VALUE_7      IPU_REGISTERS_OFFSET+0x00048024,0x00007FF8
+#define IPU_DI1_SW_GEN0_7__DI1_OFFSET_RESOLUTION_7 IPU_REGISTERS_OFFSET+0x00048024,0x00000007
+
+#define IPU_DI1_SW_GEN0_8__ADDR                    IPU_REGISTERS_OFFSET+0x00048028
+#define IPU_DI1_SW_GEN0_8__EMPTY                   IPU_REGISTERS_OFFSET+0x00048028,0x00000000
+#define IPU_DI1_SW_GEN0_8__FULL                    IPU_REGISTERS_OFFSET+0x00048028,0xffffffff
+#define IPU_DI1_SW_GEN0_8__DI1_RUN_VALUE_M1_8      IPU_REGISTERS_OFFSET+0x00048028,0x7FF80000
+#define IPU_DI1_SW_GEN0_8__DI1_RUN_RESOLUTION_8    IPU_REGISTERS_OFFSET+0x00048028,0x00070000
+#define IPU_DI1_SW_GEN0_8__DI1_OFFSET_VALUE_8      IPU_REGISTERS_OFFSET+0x00048028,0x00007FF8
+#define IPU_DI1_SW_GEN0_8__DI1_OFFSET_RESOLUTION_8 IPU_REGISTERS_OFFSET+0x00048028,0x00000007
+
+#define IPU_DI1_SW_GEN0_9__ADDR                    IPU_REGISTERS_OFFSET+0x0004802C
+#define IPU_DI1_SW_GEN0_9__EMPTY                   IPU_REGISTERS_OFFSET+0x0004802C,0x00000000
+#define IPU_DI1_SW_GEN0_9__FULL                    IPU_REGISTERS_OFFSET+0x0004802C,0xffffffff
+#define IPU_DI1_SW_GEN0_9__DI1_RUN_VALUE_M1_9      IPU_REGISTERS_OFFSET+0x0004802C,0x7FF80000
+#define IPU_DI1_SW_GEN0_9__DI1_RUN_RESOLUTION_9    IPU_REGISTERS_OFFSET+0x0004802C,0x00070000
+#define IPU_DI1_SW_GEN0_9__DI1_OFFSET_VALUE_9      IPU_REGISTERS_OFFSET+0x0004802C,0x00007FF8
+#define IPU_DI1_SW_GEN0_9__DI1_OFFSET_RESOLUTION_9 IPU_REGISTERS_OFFSET+0x0004802C,0x00000007
+
+#define IPU_DI1_SW_GEN1_1__ADDR                           IPU_REGISTERS_OFFSET+0x00048030
+#define IPU_DI1_SW_GEN1_1__EMPTY                          IPU_REGISTERS_OFFSET+0x00048030,0x00000000
+#define IPU_DI1_SW_GEN1_1__FULL                           IPU_REGISTERS_OFFSET+0x00048030,0xffffffff
+#define IPU_DI1_SW_GEN1_1__DI1_CNT_POLARITY_GEN_EN_1      IPU_REGISTERS_OFFSET+0x00048030,0x60000000
+#define IPU_DI1_SW_GEN1_1__DI1_CNT_AUTO_RELOAD_1          IPU_REGISTERS_OFFSET+0x00048030,0x10000000
+#define IPU_DI1_SW_GEN1_1__DI1_CNT_CLR_SEL_1              IPU_REGISTERS_OFFSET+0x00048030,0x0E000000
+#define IPU_DI1_SW_GEN1_1__DI1_CNT_DOWN_1                 IPU_REGISTERS_OFFSET+0x00048030,0x01FF0000
+#define IPU_DI1_SW_GEN1_1__DI1_CNT_POLARITY_TRIGGER_SEL_1 IPU_REGISTERS_OFFSET+0x00048030,0x00007000
+#define IPU_DI1_SW_GEN1_1__DI1_CNT_POLARITY_CLR_SEL_1     IPU_REGISTERS_OFFSET+0x00048030,0x00000E00
+#define IPU_DI1_SW_GEN1_1__DI1_CNT_UP_1                   IPU_REGISTERS_OFFSET+0x00048030,0x000001FF
+
+#define IPU_DI1_SW_GEN1_2__ADDR                           IPU_REGISTERS_OFFSET+0x00048034
+#define IPU_DI1_SW_GEN1_2__EMPTY                          IPU_REGISTERS_OFFSET+0x00048034,0x00000000
+#define IPU_DI1_SW_GEN1_2__FULL                           IPU_REGISTERS_OFFSET+0x00048034,0xffffffff
+#define IPU_DI1_SW_GEN1_2__DI1_CNT_POLARITY_GEN_EN_2      IPU_REGISTERS_OFFSET+0x00048034,0x60000000
+#define IPU_DI1_SW_GEN1_2__DI1_CNT_AUTO_RELOAD_2          IPU_REGISTERS_OFFSET+0x00048034,0x10000000
+#define IPU_DI1_SW_GEN1_2__DI1_CNT_CLR_SEL_2              IPU_REGISTERS_OFFSET+0x00048034,0x0E000000
+#define IPU_DI1_SW_GEN1_2__DI1_CNT_DOWN_2                 IPU_REGISTERS_OFFSET+0x00048034,0x01FF0000
+#define IPU_DI1_SW_GEN1_2__DI1_CNT_POLARITY_TRIGGER_SEL_2 IPU_REGISTERS_OFFSET+0x00048034,0x00007000
+#define IPU_DI1_SW_GEN1_2__DI1_CNT_POLARITY_CLR_SEL_2     IPU_REGISTERS_OFFSET+0x00048034,0x00000E00
+#define IPU_DI1_SW_GEN1_2__DI1_CNT_UP_2                   IPU_REGISTERS_OFFSET+0x00048034,0x000001FF
+
+#define IPU_DI1_SW_GEN1_3__ADDR                           IPU_REGISTERS_OFFSET+0x00048038
+#define IPU_DI1_SW_GEN1_3__EMPTY                          IPU_REGISTERS_OFFSET+0x00048038,0x00000000
+#define IPU_DI1_SW_GEN1_3__FULL                           IPU_REGISTERS_OFFSET+0x00048038,0xffffffff
+#define IPU_DI1_SW_GEN1_3__DI1_CNT_POLARITY_GEN_EN_3      IPU_REGISTERS_OFFSET+0x00048038,0x60000000
+#define IPU_DI1_SW_GEN1_3__DI1_CNT_AUTO_RELOAD_3          IPU_REGISTERS_OFFSET+0x00048038,0x10000000
+#define IPU_DI1_SW_GEN1_3__DI1_CNT_CLR_SEL_3              IPU_REGISTERS_OFFSET+0x00048038,0x0E000000
+#define IPU_DI1_SW_GEN1_3__DI1_CNT_DOWN_3                 IPU_REGISTERS_OFFSET+0x00048038,0x01FF0000
+#define IPU_DI1_SW_GEN1_3__DI1_CNT_POLARITY_TRIGGER_SEL_3 IPU_REGISTERS_OFFSET+0x00048038,0x00007000
+#define IPU_DI1_SW_GEN1_3__DI1_CNT_POLARITY_CLR_SEL_3     IPU_REGISTERS_OFFSET+0x00048038,0x00000E00
+#define IPU_DI1_SW_GEN1_3__DI1_CNT_UP_3                   IPU_REGISTERS_OFFSET+0x00048038,0x000001FF
+
+#define IPU_DI1_SW_GEN1_4__ADDR                           IPU_REGISTERS_OFFSET+0x0004803C
+#define IPU_DI1_SW_GEN1_4__EMPTY                          IPU_REGISTERS_OFFSET+0x0004803C,0x00000000
+#define IPU_DI1_SW_GEN1_4__FULL                           IPU_REGISTERS_OFFSET+0x0004803C,0xffffffff
+#define IPU_DI1_SW_GEN1_4__DI1_CNT_POLARITY_GEN_EN_4      IPU_REGISTERS_OFFSET+0x0004803C,0x60000000
+#define IPU_DI1_SW_GEN1_4__DI1_CNT_AUTO_RELOAD_4          IPU_REGISTERS_OFFSET+0x0004803C,0x10000000
+#define IPU_DI1_SW_GEN1_4__DI1_CNT_CLR_SEL_4              IPU_REGISTERS_OFFSET+0x0004803C,0x0E000000
+#define IPU_DI1_SW_GEN1_4__DI1_CNT_DOWN_4                 IPU_REGISTERS_OFFSET+0x0004803C,0x01FF0000
+#define IPU_DI1_SW_GEN1_4__DI1_CNT_POLARITY_TRIGGER_SEL_4 IPU_REGISTERS_OFFSET+0x0004803C,0x00007000
+#define IPU_DI1_SW_GEN1_4__DI1_CNT_POLARITY_CLR_SEL_4     IPU_REGISTERS_OFFSET+0x0004803C,0x00000E00
+#define IPU_DI1_SW_GEN1_4__DI1_CNT_UP_4                   IPU_REGISTERS_OFFSET+0x0004803C,0x000001FF
+
+#define IPU_DI1_SW_GEN1_5__ADDR                           IPU_REGISTERS_OFFSET+0x00048040
+#define IPU_DI1_SW_GEN1_5__EMPTY                          IPU_REGISTERS_OFFSET+0x00048040,0x00000000
+#define IPU_DI1_SW_GEN1_5__FULL                           IPU_REGISTERS_OFFSET+0x00048040,0xffffffff
+#define IPU_DI1_SW_GEN1_5__DI1_CNT_POLARITY_GEN_EN_5      IPU_REGISTERS_OFFSET+0x00048040,0x60000000
+#define IPU_DI1_SW_GEN1_5__DI1_CNT_AUTO_RELOAD_5          IPU_REGISTERS_OFFSET+0x00048040,0x10000000
+#define IPU_DI1_SW_GEN1_5__DI1_CNT_CLR_SEL_5              IPU_REGISTERS_OFFSET+0x00048040,0x0E000000
+#define IPU_DI1_SW_GEN1_5__DI1_CNT_DOWN_5                 IPU_REGISTERS_OFFSET+0x00048040,0x01FF0000
+#define IPU_DI1_SW_GEN1_5__DI1_CNT_POLARITY_TRIGGER_SEL_5 IPU_REGISTERS_OFFSET+0x00048040,0x00007000
+#define IPU_DI1_SW_GEN1_5__DI1_CNT_POLARITY_CLR_SEL_5     IPU_REGISTERS_OFFSET+0x00048040,0x00000E00
+#define IPU_DI1_SW_GEN1_5__DI1_CNT_UP_5                   IPU_REGISTERS_OFFSET+0x00048040,0x000001FF
+
+#define IPU_DI1_SW_GEN1_6__ADDR                           IPU_REGISTERS_OFFSET+0x00048044
+#define IPU_DI1_SW_GEN1_6__EMPTY                          IPU_REGISTERS_OFFSET+0x00048044,0x00000000
+#define IPU_DI1_SW_GEN1_6__FULL                           IPU_REGISTERS_OFFSET+0x00048044,0xffffffff
+#define IPU_DI1_SW_GEN1_6__DI1_CNT_POLARITY_GEN_EN_6      IPU_REGISTERS_OFFSET+0x00048044,0x60000000
+#define IPU_DI1_SW_GEN1_6__DI1_CNT_AUTO_RELOAD_6          IPU_REGISTERS_OFFSET+0x00048044,0x10000000
+#define IPU_DI1_SW_GEN1_6__DI1_CNT_CLR_SEL_6              IPU_REGISTERS_OFFSET+0x00048044,0x0E000000
+#define IPU_DI1_SW_GEN1_6__DI1_CNT_DOWN_6                 IPU_REGISTERS_OFFSET+0x00048044,0x01FF0000
+#define IPU_DI1_SW_GEN1_6__DI1_CNT_POLARITY_TRIGGER_SEL_6 IPU_REGISTERS_OFFSET+0x00048044,0x00007000
+#define IPU_DI1_SW_GEN1_6__DI1_CNT_POLARITY_CLR_SEL_6     IPU_REGISTERS_OFFSET+0x00048044,0x00000E00
+#define IPU_DI1_SW_GEN1_6__DI1_CNT_UP_6                   IPU_REGISTERS_OFFSET+0x00048044,0x000001FF
+
+#define IPU_DI1_SW_GEN1_7__ADDR                           IPU_REGISTERS_OFFSET+0x00048048
+#define IPU_DI1_SW_GEN1_7__EMPTY                          IPU_REGISTERS_OFFSET+0x00048048,0x00000000
+#define IPU_DI1_SW_GEN1_7__FULL                           IPU_REGISTERS_OFFSET+0x00048048,0xffffffff
+#define IPU_DI1_SW_GEN1_7__DI1_CNT_POLARITY_GEN_EN_7      IPU_REGISTERS_OFFSET+0x00048048,0x60000000
+#define IPU_DI1_SW_GEN1_7__DI1_CNT_AUTO_RELOAD_7          IPU_REGISTERS_OFFSET+0x00048048,0x10000000
+#define IPU_DI1_SW_GEN1_7__DI1_CNT_CLR_SEL_7              IPU_REGISTERS_OFFSET+0x00048048,0x0E000000
+#define IPU_DI1_SW_GEN1_7__DI1_CNT_DOWN_7                 IPU_REGISTERS_OFFSET+0x00048048,0x01FF0000
+#define IPU_DI1_SW_GEN1_7__DI1_CNT_POLARITY_TRIGGER_SEL_7 IPU_REGISTERS_OFFSET+0x00048048,0x00007000
+#define IPU_DI1_SW_GEN1_7__DI1_CNT_POLARITY_CLR_SEL_7     IPU_REGISTERS_OFFSET+0x00048048,0x00000E00
+#define IPU_DI1_SW_GEN1_7__DI1_CNT_UP_7                   IPU_REGISTERS_OFFSET+0x00048048,0x000001FF
+
+#define IPU_DI1_SW_GEN1_8__ADDR                           IPU_REGISTERS_OFFSET+0x0004804C
+#define IPU_DI1_SW_GEN1_8__EMPTY                          IPU_REGISTERS_OFFSET+0x0004804C,0x00000000
+#define IPU_DI1_SW_GEN1_8__FULL                           IPU_REGISTERS_OFFSET+0x0004804C,0xffffffff
+#define IPU_DI1_SW_GEN1_8__DI1_CNT_POLARITY_GEN_EN_8      IPU_REGISTERS_OFFSET+0x0004804C,0x60000000
+#define IPU_DI1_SW_GEN1_8__DI1_CNT_AUTO_RELOAD_8          IPU_REGISTERS_OFFSET+0x0004804C,0x10000000
+#define IPU_DI1_SW_GEN1_8__DI1_CNT_CLR_SEL_8              IPU_REGISTERS_OFFSET+0x0004804C,0x0E000000
+#define IPU_DI1_SW_GEN1_8__DI1_CNT_DOWN_8                 IPU_REGISTERS_OFFSET+0x0004804C,0x01FF0000
+#define IPU_DI1_SW_GEN1_8__DI1_CNT_POLARITY_TRIGGER_SEL_8 IPU_REGISTERS_OFFSET+0x0004804C,0x00007000
+#define IPU_DI1_SW_GEN1_8__DI1_CNT_POLARITY_CLR_SEL_8     IPU_REGISTERS_OFFSET+0x0004804C,0x00000E00
+#define IPU_DI1_SW_GEN1_8__DI1_CNT_UP_8                   IPU_REGISTERS_OFFSET+0x0004804C,0x000001FF
+
+#define IPU_DI1_SW_GEN1_9__ADDR                  IPU_REGISTERS_OFFSET+0x00048050
+#define IPU_DI1_SW_GEN1_9__EMPTY                 IPU_REGISTERS_OFFSET+0x00048050,0x00000000
+#define IPU_DI1_SW_GEN1_9__FULL                  IPU_REGISTERS_OFFSET+0x00048050,0xffffffff
+#define IPU_DI1_SW_GEN1_9__DI1_GENTIME_SEL_9     IPU_REGISTERS_OFFSET+0x00048050,0xE0000000
+#define IPU_DI1_SW_GEN1_9__DI1_CNT_AUTO_RELOAD_9 IPU_REGISTERS_OFFSET+0x00048050,0x10000000
+#define IPU_DI1_SW_GEN1_9__DI1_CNT_CLR_SEL_9     IPU_REGISTERS_OFFSET+0x00048050,0x0E000000
+#define IPU_DI1_SW_GEN1_9__DI1_CNT_DOWN_9        IPU_REGISTERS_OFFSET+0x00048050,0x01FF0000
+#define IPU_DI1_SW_GEN1_9__DI1_TAG_SEL_9         IPU_REGISTERS_OFFSET+0x00048050,0x00008000
+#define IPU_DI1_SW_GEN1_9__DI1_CNT_UP_9          IPU_REGISTERS_OFFSET+0x00048050,0x000001FF
+
+#define IPU_DI1_SYNC_AS_GEN__ADDR              IPU_REGISTERS_OFFSET+0x00048054
+#define IPU_DI1_SYNC_AS_GEN__EMPTY             IPU_REGISTERS_OFFSET+0x00048054,0x00000000
+#define IPU_DI1_SYNC_AS_GEN__FULL              IPU_REGISTERS_OFFSET+0x00048054,0xffffffff
+#define IPU_DI1_SYNC_AS_GEN__DI1_SYNC_START_EN IPU_REGISTERS_OFFSET+0x00048054,0x10000000
+#define IPU_DI1_SYNC_AS_GEN__DI1_VSYNC_SEL     IPU_REGISTERS_OFFSET+0x00048054,0x0000E000
+#define IPU_DI1_SYNC_AS_GEN__DI1_SYNC_START    IPU_REGISTERS_OFFSET+0x00048054,0x00000FFF
+
+#define IPU_DI1_DW_GEN_0__ADDR                  IPU_REGISTERS_OFFSET+0x00048058
+#define IPU_DI1_DW_GEN_0__EMPTY                 IPU_REGISTERS_OFFSET+0x00048058,0x00000000
+#define IPU_DI1_DW_GEN_0__FULL                  IPU_REGISTERS_OFFSET+0x00048058,0xffffffff
+#define IPU_DI1_DW_GEN_0__DI1_ACCESS_SIZE_0     IPU_REGISTERS_OFFSET+0x00048058,0xFF000000
+#define IPU_DI1_DW_GEN_0__DI1_COMPONNENT_SIZE_0 IPU_REGISTERS_OFFSET+0x00048058,0x00FF0000
+#define IPU_DI1_DW_GEN_0__DI1_CST_0             IPU_REGISTERS_OFFSET+0x00048058,0x0000C000
+#define IPU_DI1_DW_GEN_0__DI1_PT_6_0            IPU_REGISTERS_OFFSET+0x00048058,0x00003000
+#define IPU_DI1_DW_GEN_0__DI1_PT_5_0            IPU_REGISTERS_OFFSET+0x00048058,0x00000C00
+#define IPU_DI1_DW_GEN_0__DI1_PT_4_0            IPU_REGISTERS_OFFSET+0x00048058,0x00000300
+#define IPU_DI1_DW_GEN_0__DI1_PT_3_0            IPU_REGISTERS_OFFSET+0x00048058,0x000000C0
+#define IPU_DI1_DW_GEN_0__DI1_PT_2_0            IPU_REGISTERS_OFFSET+0x00048058,0x00000030
+#define IPU_DI1_DW_GEN_0__DI1_PT_1_0            IPU_REGISTERS_OFFSET+0x00048058,0x0000000C
+#define IPU_DI1_DW_GEN_0__DI1_PT_0_0            IPU_REGISTERS_OFFSET+0x00048058,0x00000003
+
+#define IPU_DI1_DW_GEN_1__ADDR                  IPU_REGISTERS_OFFSET+0x0004805C
+#define IPU_DI1_DW_GEN_1__EMPTY                 IPU_REGISTERS_OFFSET+0x0004805C,0x00000000
+#define IPU_DI1_DW_GEN_1__FULL                  IPU_REGISTERS_OFFSET+0x0004805C,0xffffffff
+#define IPU_DI1_DW_GEN_1__DI1_ACCESS_SIZE_1     IPU_REGISTERS_OFFSET+0x0004805C,0xFF000000
+#define IPU_DI1_DW_GEN_1__DI1_COMPONNENT_SIZE_1 IPU_REGISTERS_OFFSET+0x0004805C,0x00FF0000
+#define IPU_DI1_DW_GEN_1__DI1_CST_1             IPU_REGISTERS_OFFSET+0x0004805C,0x0000C000
+#define IPU_DI1_DW_GEN_1__DI1_PT_6_1            IPU_REGISTERS_OFFSET+0x0004805C,0x00003000
+#define IPU_DI1_DW_GEN_1__DI1_PT_5_1            IPU_REGISTERS_OFFSET+0x0004805C,0x00000C00
+#define IPU_DI1_DW_GEN_1__DI1_PT_4_1            IPU_REGISTERS_OFFSET+0x0004805C,0x00000300
+#define IPU_DI1_DW_GEN_1__DI1_PT_3_1            IPU_REGISTERS_OFFSET+0x0004805C,0x000000C0
+#define IPU_DI1_DW_GEN_1__DI1_PT_2_1            IPU_REGISTERS_OFFSET+0x0004805C,0x00000030
+#define IPU_DI1_DW_GEN_1__DI1_PT_1_1            IPU_REGISTERS_OFFSET+0x0004805C,0x0000000C
+#define IPU_DI1_DW_GEN_1__DI1_PT_0_1            IPU_REGISTERS_OFFSET+0x0004805C,0x00000003
+
+#define IPU_DI1_DW_GEN_2__ADDR                  IPU_REGISTERS_OFFSET+0x00048060
+#define IPU_DI1_DW_GEN_2__EMPTY                 IPU_REGISTERS_OFFSET+0x00048060,0x00000000
+#define IPU_DI1_DW_GEN_2__FULL                  IPU_REGISTERS_OFFSET+0x00048060,0xffffffff
+#define IPU_DI1_DW_GEN_2__DI1_ACCESS_SIZE_2     IPU_REGISTERS_OFFSET+0x00048060,0xFF000000
+#define IPU_DI1_DW_GEN_2__DI1_COMPONNENT_SIZE_2 IPU_REGISTERS_OFFSET+0x00048060,0x00FF0000
+#define IPU_DI1_DW_GEN_2__DI1_CST_2             IPU_REGISTERS_OFFSET+0x00048060,0x0000C000
+#define IPU_DI1_DW_GEN_2__DI1_PT_6_2            IPU_REGISTERS_OFFSET+0x00048060,0x00003000
+#define IPU_DI1_DW_GEN_2__DI1_PT_5_2            IPU_REGISTERS_OFFSET+0x00048060,0x00000C00
+#define IPU_DI1_DW_GEN_2__DI1_PT_4_2            IPU_REGISTERS_OFFSET+0x00048060,0x00000300
+#define IPU_DI1_DW_GEN_2__DI1_PT_3_2            IPU_REGISTERS_OFFSET+0x00048060,0x000000C0
+#define IPU_DI1_DW_GEN_2__DI1_PT_2_2            IPU_REGISTERS_OFFSET+0x00048060,0x00000030
+#define IPU_DI1_DW_GEN_2__DI1_PT_1_2            IPU_REGISTERS_OFFSET+0x00048060,0x0000000C
+#define IPU_DI1_DW_GEN_2__DI1_PT_0_2            IPU_REGISTERS_OFFSET+0x00048060,0x00000003
+
+#define IPU_DI1_DW_GEN_3__ADDR                  IPU_REGISTERS_OFFSET+0x00048064
+#define IPU_DI1_DW_GEN_3__EMPTY                 IPU_REGISTERS_OFFSET+0x00048064,0x00000000
+#define IPU_DI1_DW_GEN_3__FULL                  IPU_REGISTERS_OFFSET+0x00048064,0xffffffff
+#define IPU_DI1_DW_GEN_3__DI1_ACCESS_SIZE_3     IPU_REGISTERS_OFFSET+0x00048064,0xFF000000
+#define IPU_DI1_DW_GEN_3__DI1_COMPONNENT_SIZE_3 IPU_REGISTERS_OFFSET+0x00048064,0x00FF0000
+#define IPU_DI1_DW_GEN_3__DI1_CST_3             IPU_REGISTERS_OFFSET+0x00048064,0x0000C000
+#define IPU_DI1_DW_GEN_3__DI1_PT_6_3            IPU_REGISTERS_OFFSET+0x00048064,0x00003000
+#define IPU_DI1_DW_GEN_3__DI1_PT_5_3            IPU_REGISTERS_OFFSET+0x00048064,0x00000C00
+#define IPU_DI1_DW_GEN_3__DI1_PT_4_3            IPU_REGISTERS_OFFSET+0x00048064,0x00000300
+#define IPU_DI1_DW_GEN_3__DI1_PT_3_3            IPU_REGISTERS_OFFSET+0x00048064,0x000000C0
+#define IPU_DI1_DW_GEN_3__DI1_PT_2_3            IPU_REGISTERS_OFFSET+0x00048064,0x00000030
+#define IPU_DI1_DW_GEN_3__DI1_PT_1_3            IPU_REGISTERS_OFFSET+0x00048064,0x0000000C
+#define IPU_DI1_DW_GEN_3__DI1_PT_0_3            IPU_REGISTERS_OFFSET+0x00048064,0x00000003
+
+#define IPU_DI1_DW_GEN_4__ADDR                  IPU_REGISTERS_OFFSET+0x00048068
+#define IPU_DI1_DW_GEN_4__EMPTY                 IPU_REGISTERS_OFFSET+0x00048068,0x00000000
+#define IPU_DI1_DW_GEN_4__FULL                  IPU_REGISTERS_OFFSET+0x00048068,0xffffffff
+#define IPU_DI1_DW_GEN_4__DI1_ACCESS_SIZE_4     IPU_REGISTERS_OFFSET+0x00048068,0xFF000000
+#define IPU_DI1_DW_GEN_4__DI1_COMPONNENT_SIZE_4 IPU_REGISTERS_OFFSET+0x00048068,0x00FF0000
+#define IPU_DI1_DW_GEN_4__DI1_CST_4             IPU_REGISTERS_OFFSET+0x00048068,0x0000C000
+#define IPU_DI1_DW_GEN_4__DI1_PT_6_4            IPU_REGISTERS_OFFSET+0x00048068,0x00003000
+#define IPU_DI1_DW_GEN_4__DI1_PT_5_4            IPU_REGISTERS_OFFSET+0x00048068,0x00000C00
+#define IPU_DI1_DW_GEN_4__DI1_PT_4_4            IPU_REGISTERS_OFFSET+0x00048068,0x00000300
+#define IPU_DI1_DW_GEN_4__DI1_PT_3_4            IPU_REGISTERS_OFFSET+0x00048068,0x000000C0
+#define IPU_DI1_DW_GEN_4__DI1_PT_2_4            IPU_REGISTERS_OFFSET+0x00048068,0x00000030
+#define IPU_DI1_DW_GEN_4__DI1_PT_1_4            IPU_REGISTERS_OFFSET+0x00048068,0x0000000C
+#define IPU_DI1_DW_GEN_4__DI1_PT_0_4            IPU_REGISTERS_OFFSET+0x00048068,0x00000003
+
+#define IPU_DI1_DW_GEN_5__ADDR                  IPU_REGISTERS_OFFSET+0x0004806C
+#define IPU_DI1_DW_GEN_5__EMPTY                 IPU_REGISTERS_OFFSET+0x0004806C,0x00000000
+#define IPU_DI1_DW_GEN_5__FULL                  IPU_REGISTERS_OFFSET+0x0004806C,0xffffffff
+#define IPU_DI1_DW_GEN_5__DI1_ACCESS_SIZE_5     IPU_REGISTERS_OFFSET+0x0004806C,0xFF000000
+#define IPU_DI1_DW_GEN_5__DI1_COMPONNENT_SIZE_5 IPU_REGISTERS_OFFSET+0x0004806C,0x00FF0000
+#define IPU_DI1_DW_GEN_5__DI1_CST_5             IPU_REGISTERS_OFFSET+0x0004806C,0x0000C000
+#define IPU_DI1_DW_GEN_5__DI1_PT_6_5            IPU_REGISTERS_OFFSET+0x0004806C,0x00003000
+#define IPU_DI1_DW_GEN_5__DI1_PT_5_5            IPU_REGISTERS_OFFSET+0x0004806C,0x00000C00
+#define IPU_DI1_DW_GEN_5__DI1_PT_4_5            IPU_REGISTERS_OFFSET+0x0004806C,0x00000300
+#define IPU_DI1_DW_GEN_5__DI1_PT_3_5            IPU_REGISTERS_OFFSET+0x0004806C,0x000000C0
+#define IPU_DI1_DW_GEN_5__DI1_PT_2_5            IPU_REGISTERS_OFFSET+0x0004806C,0x00000030
+#define IPU_DI1_DW_GEN_5__DI1_PT_1_5            IPU_REGISTERS_OFFSET+0x0004806C,0x0000000C
+#define IPU_DI1_DW_GEN_5__DI1_PT_0_5            IPU_REGISTERS_OFFSET+0x0004806C,0x00000003
+
+#define IPU_DI1_DW_GEN_6__ADDR                  IPU_REGISTERS_OFFSET+0x00048070
+#define IPU_DI1_DW_GEN_6__EMPTY                 IPU_REGISTERS_OFFSET+0x00048070,0x00000000
+#define IPU_DI1_DW_GEN_6__FULL                  IPU_REGISTERS_OFFSET+0x00048070,0xffffffff
+#define IPU_DI1_DW_GEN_6__DI1_ACCESS_SIZE_6     IPU_REGISTERS_OFFSET+0x00048070,0xFF000000
+#define IPU_DI1_DW_GEN_6__DI1_COMPONNENT_SIZE_6 IPU_REGISTERS_OFFSET+0x00048070,0x00FF0000
+#define IPU_DI1_DW_GEN_6__DI1_CST_6             IPU_REGISTERS_OFFSET+0x00048070,0x0000C000
+#define IPU_DI1_DW_GEN_6__DI1_PT_6_6            IPU_REGISTERS_OFFSET+0x00048070,0x00003000
+#define IPU_DI1_DW_GEN_6__DI1_PT_5_6            IPU_REGISTERS_OFFSET+0x00048070,0x00000C00
+#define IPU_DI1_DW_GEN_6__DI1_PT_4_6            IPU_REGISTERS_OFFSET+0x00048070,0x00000300
+#define IPU_DI1_DW_GEN_6__DI1_PT_3_6            IPU_REGISTERS_OFFSET+0x00048070,0x000000C0
+#define IPU_DI1_DW_GEN_6__DI1_PT_2_6            IPU_REGISTERS_OFFSET+0x00048070,0x00000030
+#define IPU_DI1_DW_GEN_6__DI1_PT_1_6            IPU_REGISTERS_OFFSET+0x00048070,0x0000000C
+#define IPU_DI1_DW_GEN_6__DI1_PT_0_6            IPU_REGISTERS_OFFSET+0x00048070,0x00000003
+
+#define IPU_DI1_DW_GEN_7__ADDR                  IPU_REGISTERS_OFFSET+0x00048074
+#define IPU_DI1_DW_GEN_7__EMPTY                 IPU_REGISTERS_OFFSET+0x00048074,0x00000000
+#define IPU_DI1_DW_GEN_7__FULL                  IPU_REGISTERS_OFFSET+0x00048074,0xffffffff
+#define IPU_DI1_DW_GEN_7__DI1_ACCESS_SIZE_7     IPU_REGISTERS_OFFSET+0x00048074,0xFF000000
+#define IPU_DI1_DW_GEN_7__DI1_COMPONNENT_SIZE_7 IPU_REGISTERS_OFFSET+0x00048074,0x00FF0000
+#define IPU_DI1_DW_GEN_7__DI1_CST_7             IPU_REGISTERS_OFFSET+0x00048074,0x0000C000
+#define IPU_DI1_DW_GEN_7__DI1_PT_6_7            IPU_REGISTERS_OFFSET+0x00048074,0x00003000
+#define IPU_DI1_DW_GEN_7__DI1_PT_5_7            IPU_REGISTERS_OFFSET+0x00048074,0x00000C00
+#define IPU_DI1_DW_GEN_7__DI1_PT_4_7            IPU_REGISTERS_OFFSET+0x00048074,0x00000300
+#define IPU_DI1_DW_GEN_7__DI1_PT_3_7            IPU_REGISTERS_OFFSET+0x00048074,0x000000C0
+#define IPU_DI1_DW_GEN_7__DI1_PT_2_7            IPU_REGISTERS_OFFSET+0x00048074,0x00000030
+#define IPU_DI1_DW_GEN_7__DI1_PT_1_7            IPU_REGISTERS_OFFSET+0x00048074,0x0000000C
+#define IPU_DI1_DW_GEN_7__DI1_PT_0_7            IPU_REGISTERS_OFFSET+0x00048074,0x00000003
+
+#define IPU_DI1_DW_GEN_8__ADDR                  IPU_REGISTERS_OFFSET+0x00048078
+#define IPU_DI1_DW_GEN_8__EMPTY                 IPU_REGISTERS_OFFSET+0x00048078,0x00000000
+#define IPU_DI1_DW_GEN_8__FULL                  IPU_REGISTERS_OFFSET+0x00048078,0xffffffff
+#define IPU_DI1_DW_GEN_8__DI1_ACCESS_SIZE_8     IPU_REGISTERS_OFFSET+0x00048078,0xFF000000
+#define IPU_DI1_DW_GEN_8__DI1_COMPONNENT_SIZE_8 IPU_REGISTERS_OFFSET+0x00048078,0x00FF0000
+#define IPU_DI1_DW_GEN_8__DI1_CST_8             IPU_REGISTERS_OFFSET+0x00048078,0x0000C000
+#define IPU_DI1_DW_GEN_8__DI1_PT_6_8            IPU_REGISTERS_OFFSET+0x00048078,0x00003000
+#define IPU_DI1_DW_GEN_8__DI1_PT_5_8            IPU_REGISTERS_OFFSET+0x00048078,0x00000C00
+#define IPU_DI1_DW_GEN_8__DI1_PT_4_8            IPU_REGISTERS_OFFSET+0x00048078,0x00000300
+#define IPU_DI1_DW_GEN_8__DI1_PT_3_8            IPU_REGISTERS_OFFSET+0x00048078,0x000000C0
+#define IPU_DI1_DW_GEN_8__DI1_PT_2_8            IPU_REGISTERS_OFFSET+0x00048078,0x00000030
+#define IPU_DI1_DW_GEN_8__DI1_PT_1_8            IPU_REGISTERS_OFFSET+0x00048078,0x0000000C
+#define IPU_DI1_DW_GEN_8__DI1_PT_0_8            IPU_REGISTERS_OFFSET+0x00048078,0x00000003
+
+#define IPU_DI1_DW_GEN_9__ADDR                  IPU_REGISTERS_OFFSET+0x0004807C
+#define IPU_DI1_DW_GEN_9__EMPTY                 IPU_REGISTERS_OFFSET+0x0004807C,0x00000000
+#define IPU_DI1_DW_GEN_9__FULL                  IPU_REGISTERS_OFFSET+0x0004807C,0xffffffff
+#define IPU_DI1_DW_GEN_9__DI1_ACCESS_SIZE_9     IPU_REGISTERS_OFFSET+0x0004807C,0xFF000000
+#define IPU_DI1_DW_GEN_9__DI1_COMPONNENT_SIZE_9 IPU_REGISTERS_OFFSET+0x0004807C,0x00FF0000
+#define IPU_DI1_DW_GEN_9__DI1_CST_9             IPU_REGISTERS_OFFSET+0x0004807C,0x0000C000
+#define IPU_DI1_DW_GEN_9__DI1_PT_6_9            IPU_REGISTERS_OFFSET+0x0004807C,0x00003000
+#define IPU_DI1_DW_GEN_9__DI1_PT_5_9            IPU_REGISTERS_OFFSET+0x0004807C,0x00000C00
+#define IPU_DI1_DW_GEN_9__DI1_PT_4_9            IPU_REGISTERS_OFFSET+0x0004807C,0x00000300
+#define IPU_DI1_DW_GEN_9__DI1_PT_3_9            IPU_REGISTERS_OFFSET+0x0004807C,0x000000C0
+#define IPU_DI1_DW_GEN_9__DI1_PT_2_9            IPU_REGISTERS_OFFSET+0x0004807C,0x00000030
+#define IPU_DI1_DW_GEN_9__DI1_PT_1_9            IPU_REGISTERS_OFFSET+0x0004807C,0x0000000C
+#define IPU_DI1_DW_GEN_9__DI1_PT_0_9            IPU_REGISTERS_OFFSET+0x0004807C,0x00000003
+
+#define IPU_DI1_DW_GEN_10__ADDR                   IPU_REGISTERS_OFFSET+0x00048080
+#define IPU_DI1_DW_GEN_10__EMPTY                  IPU_REGISTERS_OFFSET+0x00048080,0x00000000
+#define IPU_DI1_DW_GEN_10__FULL                   IPU_REGISTERS_OFFSET+0x00048080,0xffffffff
+#define IPU_DI1_DW_GEN_10__DI1_ACCESS_SIZE_10     IPU_REGISTERS_OFFSET+0x00048080,0xFF000000
+#define IPU_DI1_DW_GEN_10__DI1_COMPONNENT_SIZE_10 IPU_REGISTERS_OFFSET+0x00048080,0x00FF0000
+#define IPU_DI1_DW_GEN_10__DI1_CST_10             IPU_REGISTERS_OFFSET+0x00048080,0x0000C000
+#define IPU_DI1_DW_GEN_10__DI1_PT_6_10            IPU_REGISTERS_OFFSET+0x00048080,0x00003000
+#define IPU_DI1_DW_GEN_10__DI1_PT_5_10            IPU_REGISTERS_OFFSET+0x00048080,0x00000C00
+#define IPU_DI1_DW_GEN_10__DI1_PT_4_10            IPU_REGISTERS_OFFSET+0x00048080,0x00000300
+#define IPU_DI1_DW_GEN_10__DI1_PT_3_10            IPU_REGISTERS_OFFSET+0x00048080,0x000000C0
+#define IPU_DI1_DW_GEN_10__DI1_PT_2_10            IPU_REGISTERS_OFFSET+0x00048080,0x00000030
+#define IPU_DI1_DW_GEN_10__DI1_PT_1_10            IPU_REGISTERS_OFFSET+0x00048080,0x0000000C
+#define IPU_DI1_DW_GEN_10__DI1_PT_0_10            IPU_REGISTERS_OFFSET+0x00048080,0x00000003
+
+#define IPU_DI1_DW_GEN_11__ADDR                   IPU_REGISTERS_OFFSET+0x00048084
+#define IPU_DI1_DW_GEN_11__EMPTY                  IPU_REGISTERS_OFFSET+0x00048084,0x00000000
+#define IPU_DI1_DW_GEN_11__FULL                   IPU_REGISTERS_OFFSET+0x00048084,0xffffffff
+#define IPU_DI1_DW_GEN_11__DI1_ACCESS_SIZE_11     IPU_REGISTERS_OFFSET+0x00048084,0xFF000000
+#define IPU_DI1_DW_GEN_11__DI1_COMPONNENT_SIZE_11 IPU_REGISTERS_OFFSET+0x00048084,0x00FF0000
+#define IPU_DI1_DW_GEN_11__DI1_CST_11             IPU_REGISTERS_OFFSET+0x00048084,0x0000C000
+#define IPU_DI1_DW_GEN_11__DI1_PT_6_11            IPU_REGISTERS_OFFSET+0x00048084,0x00003000
+#define IPU_DI1_DW_GEN_11__DI1_PT_5_11            IPU_REGISTERS_OFFSET+0x00048084,0x00000C00
+#define IPU_DI1_DW_GEN_11__DI1_PT_4_11            IPU_REGISTERS_OFFSET+0x00048084,0x00000300
+#define IPU_DI1_DW_GEN_11__DI1_PT_3_11            IPU_REGISTERS_OFFSET+0x00048084,0x000000C0
+#define IPU_DI1_DW_GEN_11__DI1_PT_2_11            IPU_REGISTERS_OFFSET+0x00048084,0x00000030
+#define IPU_DI1_DW_GEN_11__DI1_PT_1_11            IPU_REGISTERS_OFFSET+0x00048084,0x0000000C
+#define IPU_DI1_DW_GEN_11__DI1_PT_0_11            IPU_REGISTERS_OFFSET+0x00048084,0x00000003
+
+#define IPU_DI1_DW_SET0_0__ADDR                 IPU_REGISTERS_OFFSET+0x00048088
+#define IPU_DI1_DW_SET0_0__EMPTY                IPU_REGISTERS_OFFSET+0x00048088,0x00000000
+#define IPU_DI1_DW_SET0_0__FULL                 IPU_REGISTERS_OFFSET+0x00048088,0xffffffff
+#define IPU_DI1_DW_SET0_0__DI1_DATA_CNT_DOWN0_0 IPU_REGISTERS_OFFSET+0x00048088,0x01FF0000
+#define IPU_DI1_DW_SET0_0__DI1_DATA_CNT_UP0_0   IPU_REGISTERS_OFFSET+0x00048088,0x000001FF
+
+#define IPU_DI1_DW_SET0_1__ADDR                 IPU_REGISTERS_OFFSET+0x0004808C
+#define IPU_DI1_DW_SET0_1__EMPTY                IPU_REGISTERS_OFFSET+0x0004808C,0x00000000
+#define IPU_DI1_DW_SET0_1__FULL                 IPU_REGISTERS_OFFSET+0x0004808C,0xffffffff
+#define IPU_DI1_DW_SET0_1__DI1_DATA_CNT_DOWN0_1 IPU_REGISTERS_OFFSET+0x0004808C,0x01FF0000
+#define IPU_DI1_DW_SET0_1__DI1_DATA_CNT_UP0_1   IPU_REGISTERS_OFFSET+0x0004808C,0x000001FF
+
+#define IPU_DI1_DW_SET0_2__ADDR                 IPU_REGISTERS_OFFSET+0x00048090
+#define IPU_DI1_DW_SET0_2__EMPTY                IPU_REGISTERS_OFFSET+0x00048090,0x00000000
+#define IPU_DI1_DW_SET0_2__FULL                 IPU_REGISTERS_OFFSET+0x00048090,0xffffffff
+#define IPU_DI1_DW_SET0_2__DI1_DATA_CNT_DOWN0_2 IPU_REGISTERS_OFFSET+0x00048090,0x01FF0000
+#define IPU_DI1_DW_SET0_2__DI1_DATA_CNT_UP0_2   IPU_REGISTERS_OFFSET+0x00048090,0x000001FF
+
+#define IPU_DI1_DW_SET0_3__ADDR                 IPU_REGISTERS_OFFSET+0x00048094
+#define IPU_DI1_DW_SET0_3__EMPTY                IPU_REGISTERS_OFFSET+0x00048094,0x00000000
+#define IPU_DI1_DW_SET0_3__FULL                 IPU_REGISTERS_OFFSET+0x00048094,0xffffffff
+#define IPU_DI1_DW_SET0_3__DI1_DATA_CNT_DOWN0_3 IPU_REGISTERS_OFFSET+0x00048094,0x01FF0000
+#define IPU_DI1_DW_SET0_3__DI1_DATA_CNT_UP0_3   IPU_REGISTERS_OFFSET+0x00048094,0x000001FF
+
+#define IPU_DI1_DW_SET0_4__ADDR                 IPU_REGISTERS_OFFSET+0x00048098
+#define IPU_DI1_DW_SET0_4__EMPTY                IPU_REGISTERS_OFFSET+0x00048098,0x00000000
+#define IPU_DI1_DW_SET0_4__FULL                 IPU_REGISTERS_OFFSET+0x00048098,0xffffffff
+#define IPU_DI1_DW_SET0_4__DI1_DATA_CNT_DOWN0_4 IPU_REGISTERS_OFFSET+0x00048098,0x01FF0000
+#define IPU_DI1_DW_SET0_4__DI1_DATA_CNT_UP0_4   IPU_REGISTERS_OFFSET+0x00048098,0x000001FF
+
+#define IPU_DI1_DW_SET0_5__ADDR                 IPU_REGISTERS_OFFSET+0x0004809C
+#define IPU_DI1_DW_SET0_5__EMPTY                IPU_REGISTERS_OFFSET+0x0004809C,0x00000000
+#define IPU_DI1_DW_SET0_5__FULL                 IPU_REGISTERS_OFFSET+0x0004809C,0xffffffff
+#define IPU_DI1_DW_SET0_5__DI1_DATA_CNT_DOWN0_5 IPU_REGISTERS_OFFSET+0x0004809C,0x01FF0000
+#define IPU_DI1_DW_SET0_5__DI1_DATA_CNT_UP0_5   IPU_REGISTERS_OFFSET+0x0004809C,0x000001FF
+
+#define IPU_DI1_DW_SET0_6__ADDR                 IPU_REGISTERS_OFFSET+0x000480A0
+#define IPU_DI1_DW_SET0_6__EMPTY                IPU_REGISTERS_OFFSET+0x000480A0,0x00000000
+#define IPU_DI1_DW_SET0_6__FULL                 IPU_REGISTERS_OFFSET+0x000480A0,0xffffffff
+#define IPU_DI1_DW_SET0_6__DI1_DATA_CNT_DOWN0_6 IPU_REGISTERS_OFFSET+0x000480A0,0x01FF0000
+#define IPU_DI1_DW_SET0_6__DI1_DATA_CNT_UP0_6   IPU_REGISTERS_OFFSET+0x000480A0,0x000001FF
+
+#define IPU_DI1_DW_SET0_7__ADDR                 IPU_REGISTERS_OFFSET+0x000480A4
+#define IPU_DI1_DW_SET0_7__EMPTY                IPU_REGISTERS_OFFSET+0x000480A4,0x00000000
+#define IPU_DI1_DW_SET0_7__FULL                 IPU_REGISTERS_OFFSET+0x000480A4,0xffffffff
+#define IPU_DI1_DW_SET0_7__DI1_DATA_CNT_DOWN0_7 IPU_REGISTERS_OFFSET+0x000480A4,0x01FF0000
+#define IPU_DI1_DW_SET0_7__DI1_DATA_CNT_UP0_7   IPU_REGISTERS_OFFSET+0x000480A4,0x000001FF
+
+#define IPU_DI1_DW_SET0_8__ADDR                 IPU_REGISTERS_OFFSET+0x000480A8
+#define IPU_DI1_DW_SET0_8__EMPTY                IPU_REGISTERS_OFFSET+0x000480A8,0x00000000
+#define IPU_DI1_DW_SET0_8__FULL                 IPU_REGISTERS_OFFSET+0x000480A8,0xffffffff
+#define IPU_DI1_DW_SET0_8__DI1_DATA_CNT_DOWN0_8 IPU_REGISTERS_OFFSET+0x000480A8,0x01FF0000
+#define IPU_DI1_DW_SET0_8__DI1_DATA_CNT_UP0_8   IPU_REGISTERS_OFFSET+0x000480A8,0x000001FF
+
+#define IPU_DI1_DW_SET0_9__ADDR                 IPU_REGISTERS_OFFSET+0x000480AC
+#define IPU_DI1_DW_SET0_9__EMPTY                IPU_REGISTERS_OFFSET+0x000480AC,0x00000000
+#define IPU_DI1_DW_SET0_9__FULL                 IPU_REGISTERS_OFFSET+0x000480AC,0xffffffff
+#define IPU_DI1_DW_SET0_9__DI1_DATA_CNT_DOWN0_9 IPU_REGISTERS_OFFSET+0x000480AC,0x01FF0000
+#define IPU_DI1_DW_SET0_9__DI1_DATA_CNT_UP0_9   IPU_REGISTERS_OFFSET+0x000480AC,0x000001FF
+
+#define IPU_DI1_DW_SET0_10__ADDR                  IPU_REGISTERS_OFFSET+0x000480B0
+#define IPU_DI1_DW_SET0_10__EMPTY                 IPU_REGISTERS_OFFSET+0x000480B0,0x00000000
+#define IPU_DI1_DW_SET0_10__FULL                  IPU_REGISTERS_OFFSET+0x000480B0,0xffffffff
+#define IPU_DI1_DW_SET0_10__DI1_DATA_CNT_DOWN0_10 IPU_REGISTERS_OFFSET+0x000480B0,0x01FF0000
+#define IPU_DI1_DW_SET0_10__DI1_DATA_CNT_UP0_10   IPU_REGISTERS_OFFSET+0x000480B0,0x000001FF
+
+#define IPU_DI1_DW_SET0_11__ADDR                  IPU_REGISTERS_OFFSET+0x000480B4
+#define IPU_DI1_DW_SET0_11__EMPTY                 IPU_REGISTERS_OFFSET+0x000480B4,0x00000000
+#define IPU_DI1_DW_SET0_11__FULL                  IPU_REGISTERS_OFFSET+0x000480B4,0xffffffff
+#define IPU_DI1_DW_SET0_11__DI1_DATA_CNT_DOWN0_11 IPU_REGISTERS_OFFSET+0x000480B4,0x01FF0000
+#define IPU_DI1_DW_SET0_11__DI1_DATA_CNT_UP0_11   IPU_REGISTERS_OFFSET+0x000480B4,0x000001FF
+
+#define IPU_DI1_DW_SET1_0__ADDR                 IPU_REGISTERS_OFFSET+0x000480B8
+#define IPU_DI1_DW_SET1_0__EMPTY                IPU_REGISTERS_OFFSET+0x000480B8,0x00000000
+#define IPU_DI1_DW_SET1_0__FULL                 IPU_REGISTERS_OFFSET+0x000480B8,0xffffffff
+#define IPU_DI1_DW_SET1_0__DI1_DATA_CNT_DOWN1_0 IPU_REGISTERS_OFFSET+0x000480B8,0x01FF0000
+#define IPU_DI1_DW_SET1_0__DI1_DATA_CNT_UP1_0   IPU_REGISTERS_OFFSET+0x000480B8,0x000001FF
+
+#define IPU_DI1_DW_SET1_1__ADDR                 IPU_REGISTERS_OFFSET+0x000480BC
+#define IPU_DI1_DW_SET1_1__EMPTY                IPU_REGISTERS_OFFSET+0x000480BC,0x00000000
+#define IPU_DI1_DW_SET1_1__FULL                 IPU_REGISTERS_OFFSET+0x000480BC,0xffffffff
+#define IPU_DI1_DW_SET1_1__DI1_DATA_CNT_DOWN1_1 IPU_REGISTERS_OFFSET+0x000480BC,0x01FF0000
+#define IPU_DI1_DW_SET1_1__DI1_DATA_CNT_UP1_1   IPU_REGISTERS_OFFSET+0x000480BC,0x000001FF
+
+#define IPU_DI1_DW_SET1_2__ADDR                 IPU_REGISTERS_OFFSET+0x000480C0
+#define IPU_DI1_DW_SET1_2__EMPTY                IPU_REGISTERS_OFFSET+0x000480C0,0x00000000
+#define IPU_DI1_DW_SET1_2__FULL                 IPU_REGISTERS_OFFSET+0x000480C0,0xffffffff
+#define IPU_DI1_DW_SET1_2__DI1_DATA_CNT_DOWN1_2 IPU_REGISTERS_OFFSET+0x000480C0,0x01FF0000
+#define IPU_DI1_DW_SET1_2__DI1_DATA_CNT_UP1_2   IPU_REGISTERS_OFFSET+0x000480C0,0x000001FF
+
+#define IPU_DI1_DW_SET1_3__ADDR                 IPU_REGISTERS_OFFSET+0x000480C4
+#define IPU_DI1_DW_SET1_3__EMPTY                IPU_REGISTERS_OFFSET+0x000480C4,0x00000000
+#define IPU_DI1_DW_SET1_3__FULL                 IPU_REGISTERS_OFFSET+0x000480C4,0xffffffff
+#define IPU_DI1_DW_SET1_3__DI1_DATA_CNT_DOWN1_3 IPU_REGISTERS_OFFSET+0x000480C4,0x01FF0000
+#define IPU_DI1_DW_SET1_3__DI1_DATA_CNT_UP1_3   IPU_REGISTERS_OFFSET+0x000480C4,0x000001FF
+
+#define IPU_DI1_DW_SET1_4__ADDR                 IPU_REGISTERS_OFFSET+0x000480C8
+#define IPU_DI1_DW_SET1_4__EMPTY                IPU_REGISTERS_OFFSET+0x000480C8,0x00000000
+#define IPU_DI1_DW_SET1_4__FULL                 IPU_REGISTERS_OFFSET+0x000480C8,0xffffffff
+#define IPU_DI1_DW_SET1_4__DI1_DATA_CNT_DOWN1_4 IPU_REGISTERS_OFFSET+0x000480C8,0x01FF0000
+#define IPU_DI1_DW_SET1_4__DI1_DATA_CNT_UP1_4   IPU_REGISTERS_OFFSET+0x000480C8,0x000001FF
+
+#define IPU_DI1_DW_SET1_5__ADDR                 IPU_REGISTERS_OFFSET+0x000480CC
+#define IPU_DI1_DW_SET1_5__EMPTY                IPU_REGISTERS_OFFSET+0x000480CC,0x00000000
+#define IPU_DI1_DW_SET1_5__FULL                 IPU_REGISTERS_OFFSET+0x000480CC,0xffffffff
+#define IPU_DI1_DW_SET1_5__DI1_DATA_CNT_DOWN1_5 IPU_REGISTERS_OFFSET+0x000480CC,0x01FF0000
+#define IPU_DI1_DW_SET1_5__DI1_DATA_CNT_UP1_5   IPU_REGISTERS_OFFSET+0x000480CC,0x000001FF
+
+#define IPU_DI1_DW_SET1_6__ADDR                 IPU_REGISTERS_OFFSET+0x000480D0
+#define IPU_DI1_DW_SET1_6__EMPTY                IPU_REGISTERS_OFFSET+0x000480D0,0x00000000
+#define IPU_DI1_DW_SET1_6__FULL                 IPU_REGISTERS_OFFSET+0x000480D0,0xffffffff
+#define IPU_DI1_DW_SET1_6__DI1_DATA_CNT_DOWN1_6 IPU_REGISTERS_OFFSET+0x000480D0,0x01FF0000
+#define IPU_DI1_DW_SET1_6__DI1_DATA_CNT_UP1_6   IPU_REGISTERS_OFFSET+0x000480D0,0x000001FF
+
+#define IPU_DI1_DW_SET1_7__ADDR                 IPU_REGISTERS_OFFSET+0x000480D4
+#define IPU_DI1_DW_SET1_7__EMPTY                IPU_REGISTERS_OFFSET+0x000480D4,0x00000000
+#define IPU_DI1_DW_SET1_7__FULL                 IPU_REGISTERS_OFFSET+0x000480D4,0xffffffff
+#define IPU_DI1_DW_SET1_7__DI1_DATA_CNT_DOWN1_7 IPU_REGISTERS_OFFSET+0x000480D4,0x01FF0000
+#define IPU_DI1_DW_SET1_7__DI1_DATA_CNT_UP1_7   IPU_REGISTERS_OFFSET+0x000480D4,0x000001FF
+
+#define IPU_DI1_DW_SET1_8__ADDR                 IPU_REGISTERS_OFFSET+0x000480D8
+#define IPU_DI1_DW_SET1_8__EMPTY                IPU_REGISTERS_OFFSET+0x000480D8,0x00000000
+#define IPU_DI1_DW_SET1_8__FULL                 IPU_REGISTERS_OFFSET+0x000480D8,0xffffffff
+#define IPU_DI1_DW_SET1_8__DI1_DATA_CNT_DOWN1_8 IPU_REGISTERS_OFFSET+0x000480D8,0x01FF0000
+#define IPU_DI1_DW_SET1_8__DI1_DATA_CNT_UP1_8   IPU_REGISTERS_OFFSET+0x000480D8,0x000001FF
+
+#define IPU_DI1_DW_SET1_9__ADDR                 IPU_REGISTERS_OFFSET+0x000480DC
+#define IPU_DI1_DW_SET1_9__EMPTY                IPU_REGISTERS_OFFSET+0x000480DC,0x00000000
+#define IPU_DI1_DW_SET1_9__FULL                 IPU_REGISTERS_OFFSET+0x000480DC,0xffffffff
+#define IPU_DI1_DW_SET1_9__DI1_DATA_CNT_DOWN1_9 IPU_REGISTERS_OFFSET+0x000480DC,0x01FF0000
+#define IPU_DI1_DW_SET1_9__DI1_DATA_CNT_UP1_9   IPU_REGISTERS_OFFSET+0x000480DC,0x000001FF
+
+#define IPU_DI1_DW_SET1_10__ADDR                  IPU_REGISTERS_OFFSET+0x000480E0
+#define IPU_DI1_DW_SET1_10__EMPTY                 IPU_REGISTERS_OFFSET+0x000480E0,0x00000000
+#define IPU_DI1_DW_SET1_10__FULL                  IPU_REGISTERS_OFFSET+0x000480E0,0xffffffff
+#define IPU_DI1_DW_SET1_10__DI1_DATA_CNT_DOWN1_10 IPU_REGISTERS_OFFSET+0x000480E0,0x01FF0000
+#define IPU_DI1_DW_SET1_10__DI1_DATA_CNT_UP1_10   IPU_REGISTERS_OFFSET+0x000480E0,0x000001FF
+
+#define IPU_DI1_DW_SET1_11__ADDR                  IPU_REGISTERS_OFFSET+0x000480E4
+#define IPU_DI1_DW_SET1_11__EMPTY                 IPU_REGISTERS_OFFSET+0x000480E4,0x00000000
+#define IPU_DI1_DW_SET1_11__FULL                  IPU_REGISTERS_OFFSET+0x000480E4,0xffffffff
+#define IPU_DI1_DW_SET1_11__DI1_DATA_CNT_DOWN1_11 IPU_REGISTERS_OFFSET+0x000480E4,0x01FF0000
+#define IPU_DI1_DW_SET1_11__DI1_DATA_CNT_UP1_11   IPU_REGISTERS_OFFSET+0x000480E4,0x000001FF
+
+#define IPU_DI1_DW_SET2_0__ADDR                 IPU_REGISTERS_OFFSET+0x000480E8
+#define IPU_DI1_DW_SET2_0__EMPTY                IPU_REGISTERS_OFFSET+0x000480E8,0x00000000
+#define IPU_DI1_DW_SET2_0__FULL                 IPU_REGISTERS_OFFSET+0x000480E8,0xffffffff
+#define IPU_DI1_DW_SET2_0__DI1_DATA_CNT_DOWN2_0 IPU_REGISTERS_OFFSET+0x000480E8,0x01FF0000
+#define IPU_DI1_DW_SET2_0__DI1_DATA_CNT_UP2_0   IPU_REGISTERS_OFFSET+0x000480E8,0x000001FF
+
+#define IPU_DI1_DW_SET2_1__ADDR                 IPU_REGISTERS_OFFSET+0x000480EC
+#define IPU_DI1_DW_SET2_1__EMPTY                IPU_REGISTERS_OFFSET+0x000480EC,0x00000000
+#define IPU_DI1_DW_SET2_1__FULL                 IPU_REGISTERS_OFFSET+0x000480EC,0xffffffff
+#define IPU_DI1_DW_SET2_1__DI1_DATA_CNT_DOWN2_1 IPU_REGISTERS_OFFSET+0x000480EC,0x01FF0000
+#define IPU_DI1_DW_SET2_1__DI1_DATA_CNT_UP2_1   IPU_REGISTERS_OFFSET+0x000480EC,0x000001FF
+
+#define IPU_DI1_DW_SET2_2__ADDR                 IPU_REGISTERS_OFFSET+0x000480F0
+#define IPU_DI1_DW_SET2_2__EMPTY                IPU_REGISTERS_OFFSET+0x000480F0,0x00000000
+#define IPU_DI1_DW_SET2_2__FULL                 IPU_REGISTERS_OFFSET+0x000480F0,0xffffffff
+#define IPU_DI1_DW_SET2_2__DI1_DATA_CNT_DOWN2_2 IPU_REGISTERS_OFFSET+0x000480F0,0x01FF0000
+#define IPU_DI1_DW_SET2_2__DI1_DATA_CNT_UP2_2   IPU_REGISTERS_OFFSET+0x000480F0,0x000001FF
+
+#define IPU_DI1_DW_SET2_3__ADDR                 IPU_REGISTERS_OFFSET+0x000480F4
+#define IPU_DI1_DW_SET2_3__EMPTY                IPU_REGISTERS_OFFSET+0x000480F4,0x00000000
+#define IPU_DI1_DW_SET2_3__FULL                 IPU_REGISTERS_OFFSET+0x000480F4,0xffffffff
+#define IPU_DI1_DW_SET2_3__DI1_DATA_CNT_DOWN2_3 IPU_REGISTERS_OFFSET+0x000480F4,0x01FF0000
+#define IPU_DI1_DW_SET2_3__DI1_DATA_CNT_UP2_3   IPU_REGISTERS_OFFSET+0x000480F4,0x000001FF
+
+#define IPU_DI1_DW_SET2_4__ADDR                 IPU_REGISTERS_OFFSET+0x000480F8
+#define IPU_DI1_DW_SET2_4__EMPTY                IPU_REGISTERS_OFFSET+0x000480F8,0x00000000
+#define IPU_DI1_DW_SET2_4__FULL                 IPU_REGISTERS_OFFSET+0x000480F8,0xffffffff
+#define IPU_DI1_DW_SET2_4__DI1_DATA_CNT_DOWN2_4 IPU_REGISTERS_OFFSET+0x000480F8,0x01FF0000
+#define IPU_DI1_DW_SET2_4__DI1_DATA_CNT_UP2_4   IPU_REGISTERS_OFFSET+0x000480F8,0x000001FF
+
+#define IPU_DI1_DW_SET2_5__ADDR                 IPU_REGISTERS_OFFSET+0x000480FC
+#define IPU_DI1_DW_SET2_5__EMPTY                IPU_REGISTERS_OFFSET+0x000480FC,0x00000000
+#define IPU_DI1_DW_SET2_5__FULL                 IPU_REGISTERS_OFFSET+0x000480FC,0xffffffff
+#define IPU_DI1_DW_SET2_5__DI1_DATA_CNT_DOWN2_5 IPU_REGISTERS_OFFSET+0x000480FC,0x01FF0000
+#define IPU_DI1_DW_SET2_5__DI1_DATA_CNT_UP2_5   IPU_REGISTERS_OFFSET+0x000480FC,0x000001FF
+
+#define IPU_DI1_DW_SET2_6__ADDR                 IPU_REGISTERS_OFFSET+0x00048100
+#define IPU_DI1_DW_SET2_6__EMPTY                IPU_REGISTERS_OFFSET+0x00048100,0x00000000
+#define IPU_DI1_DW_SET2_6__FULL                 IPU_REGISTERS_OFFSET+0x00048100,0xffffffff
+#define IPU_DI1_DW_SET2_6__DI1_DATA_CNT_DOWN2_6 IPU_REGISTERS_OFFSET+0x00048100,0x01FF0000
+#define IPU_DI1_DW_SET2_6__DI1_DATA_CNT_UP2_6   IPU_REGISTERS_OFFSET+0x00048100,0x000001FF
+
+#define IPU_DI1_DW_SET2_7__ADDR                 IPU_REGISTERS_OFFSET+0x00048104
+#define IPU_DI1_DW_SET2_7__EMPTY                IPU_REGISTERS_OFFSET+0x00048104,0x00000000
+#define IPU_DI1_DW_SET2_7__FULL                 IPU_REGISTERS_OFFSET+0x00048104,0xffffffff
+#define IPU_DI1_DW_SET2_7__DI1_DATA_CNT_DOWN2_7 IPU_REGISTERS_OFFSET+0x00048104,0x01FF0000
+#define IPU_DI1_DW_SET2_7__DI1_DATA_CNT_UP2_7   IPU_REGISTERS_OFFSET+0x00048104,0x000001FF
+
+#define IPU_DI1_DW_SET2_8__ADDR                 IPU_REGISTERS_OFFSET+0x00048108
+#define IPU_DI1_DW_SET2_8__EMPTY                IPU_REGISTERS_OFFSET+0x00048108,0x00000000
+#define IPU_DI1_DW_SET2_8__FULL                 IPU_REGISTERS_OFFSET+0x00048108,0xffffffff
+#define IPU_DI1_DW_SET2_8__DI1_DATA_CNT_DOWN2_8 IPU_REGISTERS_OFFSET+0x00048108,0x01FF0000
+#define IPU_DI1_DW_SET2_8__DI1_DATA_CNT_UP2_8   IPU_REGISTERS_OFFSET+0x00048108,0x000001FF
+
+#define IPU_DI1_DW_SET2_9__ADDR                 IPU_REGISTERS_OFFSET+0x0004810C
+#define IPU_DI1_DW_SET2_9__EMPTY                IPU_REGISTERS_OFFSET+0x0004810C,0x00000000
+#define IPU_DI1_DW_SET2_9__FULL                 IPU_REGISTERS_OFFSET+0x0004810C,0xffffffff
+#define IPU_DI1_DW_SET2_9__DI1_DATA_CNT_DOWN2_9 IPU_REGISTERS_OFFSET+0x0004810C,0x01FF0000
+#define IPU_DI1_DW_SET2_9__DI1_DATA_CNT_UP2_9   IPU_REGISTERS_OFFSET+0x0004810C,0x000001FF
+
+#define IPU_DI1_DW_SET2_10__ADDR                  IPU_REGISTERS_OFFSET+0x00048110
+#define IPU_DI1_DW_SET2_10__EMPTY                 IPU_REGISTERS_OFFSET+0x00048110,0x00000000
+#define IPU_DI1_DW_SET2_10__FULL                  IPU_REGISTERS_OFFSET+0x00048110,0xffffffff
+#define IPU_DI1_DW_SET2_10__DI1_DATA_CNT_DOWN2_10 IPU_REGISTERS_OFFSET+0x00048110,0x01FF0000
+#define IPU_DI1_DW_SET2_10__DI1_DATA_CNT_UP2_10   IPU_REGISTERS_OFFSET+0x00048110,0x000001FF
+
+#define IPU_DI1_DW_SET2_11__ADDR                  IPU_REGISTERS_OFFSET+0x00048114
+#define IPU_DI1_DW_SET2_11__EMPTY                 IPU_REGISTERS_OFFSET+0x00048114,0x00000000
+#define IPU_DI1_DW_SET2_11__FULL                  IPU_REGISTERS_OFFSET+0x00048114,0xffffffff
+#define IPU_DI1_DW_SET2_11__DI1_DATA_CNT_DOWN2_11 IPU_REGISTERS_OFFSET+0x00048114,0x01FF0000
+#define IPU_DI1_DW_SET2_11__DI1_DATA_CNT_UP2_11   IPU_REGISTERS_OFFSET+0x00048114,0x000001FF
+
+#define IPU_DI1_DW_SET3_0__ADDR                 IPU_REGISTERS_OFFSET+0x00048118
+#define IPU_DI1_DW_SET3_0__EMPTY                IPU_REGISTERS_OFFSET+0x00048118,0x00000000
+#define IPU_DI1_DW_SET3_0__FULL                 IPU_REGISTERS_OFFSET+0x00048118,0xffffffff
+#define IPU_DI1_DW_SET3_0__DI1_DATA_CNT_DOWN3_0 IPU_REGISTERS_OFFSET+0x00048118,0x01FF0000
+#define IPU_DI1_DW_SET3_0__DI1_DATA_CNT_UP3_0   IPU_REGISTERS_OFFSET+0x00048118,0x000001FF
+
+#define IPU_DI1_DW_SET3_1__ADDR                 IPU_REGISTERS_OFFSET+0x0004811C
+#define IPU_DI1_DW_SET3_1__EMPTY                IPU_REGISTERS_OFFSET+0x0004811C,0x00000000
+#define IPU_DI1_DW_SET3_1__FULL                 IPU_REGISTERS_OFFSET+0x0004811C,0xffffffff
+#define IPU_DI1_DW_SET3_1__DI1_DATA_CNT_DOWN3_1 IPU_REGISTERS_OFFSET+0x0004811C,0x01FF0000
+#define IPU_DI1_DW_SET3_1__DI1_DATA_CNT_UP3_1   IPU_REGISTERS_OFFSET+0x0004811C,0x000001FF
+
+#define IPU_DI1_DW_SET3_2__ADDR                 IPU_REGISTERS_OFFSET+0x00048120
+#define IPU_DI1_DW_SET3_2__EMPTY                IPU_REGISTERS_OFFSET+0x00048120,0x00000000
+#define IPU_DI1_DW_SET3_2__FULL                 IPU_REGISTERS_OFFSET+0x00048120,0xffffffff
+#define IPU_DI1_DW_SET3_2__DI1_DATA_CNT_DOWN3_2 IPU_REGISTERS_OFFSET+0x00048120,0x01FF0000
+#define IPU_DI1_DW_SET3_2__DI1_DATA_CNT_UP3_2   IPU_REGISTERS_OFFSET+0x00048120,0x000001FF
+
+#define IPU_DI1_DW_SET3_3__ADDR                 IPU_REGISTERS_OFFSET+0x00048124
+#define IPU_DI1_DW_SET3_3__EMPTY                IPU_REGISTERS_OFFSET+0x00048124,0x00000000
+#define IPU_DI1_DW_SET3_3__FULL                 IPU_REGISTERS_OFFSET+0x00048124,0xffffffff
+#define IPU_DI1_DW_SET3_3__DI1_DATA_CNT_DOWN3_3 IPU_REGISTERS_OFFSET+0x00048124,0x01FF0000
+#define IPU_DI1_DW_SET3_3__DI1_DATA_CNT_UP3_3   IPU_REGISTERS_OFFSET+0x00048124,0x000001FF
+
+#define IPU_DI1_DW_SET3_4__ADDR                 IPU_REGISTERS_OFFSET+0x00048128
+#define IPU_DI1_DW_SET3_4__EMPTY                IPU_REGISTERS_OFFSET+0x00048128,0x00000000
+#define IPU_DI1_DW_SET3_4__FULL                 IPU_REGISTERS_OFFSET+0x00048128,0xffffffff
+#define IPU_DI1_DW_SET3_4__DI1_DATA_CNT_DOWN3_4 IPU_REGISTERS_OFFSET+0x00048128,0x01FF0000
+#define IPU_DI1_DW_SET3_4__DI1_DATA_CNT_UP3_4   IPU_REGISTERS_OFFSET+0x00048128,0x000001FF
+
+#define IPU_DI1_DW_SET3_5__ADDR                 IPU_REGISTERS_OFFSET+0x0004812C
+#define IPU_DI1_DW_SET3_5__EMPTY                IPU_REGISTERS_OFFSET+0x0004812C,0x00000000
+#define IPU_DI1_DW_SET3_5__FULL                 IPU_REGISTERS_OFFSET+0x0004812C,0xffffffff
+#define IPU_DI1_DW_SET3_5__DI1_DATA_CNT_DOWN3_5 IPU_REGISTERS_OFFSET+0x0004812C,0x01FF0000
+#define IPU_DI1_DW_SET3_5__DI1_DATA_CNT_UP3_5   IPU_REGISTERS_OFFSET+0x0004812C,0x000001FF
+
+#define IPU_DI1_DW_SET3_6__ADDR                 IPU_REGISTERS_OFFSET+0x00048130
+#define IPU_DI1_DW_SET3_6__EMPTY                IPU_REGISTERS_OFFSET+0x00048130,0x00000000
+#define IPU_DI1_DW_SET3_6__FULL                 IPU_REGISTERS_OFFSET+0x00048130,0xffffffff
+#define IPU_DI1_DW_SET3_6__DI1_DATA_CNT_DOWN3_6 IPU_REGISTERS_OFFSET+0x00048130,0x01FF0000
+#define IPU_DI1_DW_SET3_6__DI1_DATA_CNT_UP3_6   IPU_REGISTERS_OFFSET+0x00048130,0x000001FF
+
+#define IPU_DI1_DW_SET3_7__ADDR                 IPU_REGISTERS_OFFSET+0x00048134
+#define IPU_DI1_DW_SET3_7__EMPTY                IPU_REGISTERS_OFFSET+0x00048134,0x00000000
+#define IPU_DI1_DW_SET3_7__FULL                 IPU_REGISTERS_OFFSET+0x00048134,0xffffffff
+#define IPU_DI1_DW_SET3_7__DI1_DATA_CNT_DOWN3_7 IPU_REGISTERS_OFFSET+0x00048134,0x01FF0000
+#define IPU_DI1_DW_SET3_7__DI1_DATA_CNT_UP3_7   IPU_REGISTERS_OFFSET+0x00048134,0x000001FF
+
+#define IPU_DI1_DW_SET3_8__ADDR                 IPU_REGISTERS_OFFSET+0x00048138
+#define IPU_DI1_DW_SET3_8__EMPTY                IPU_REGISTERS_OFFSET+0x00048138,0x00000000
+#define IPU_DI1_DW_SET3_8__FULL                 IPU_REGISTERS_OFFSET+0x00048138,0xffffffff
+#define IPU_DI1_DW_SET3_8__DI1_DATA_CNT_DOWN3_8 IPU_REGISTERS_OFFSET+0x00048138,0x01FF0000
+#define IPU_DI1_DW_SET3_8__DI1_DATA_CNT_UP3_8   IPU_REGISTERS_OFFSET+0x00048138,0x000001FF
+
+#define IPU_DI1_DW_SET3_9__ADDR                 IPU_REGISTERS_OFFSET+0x0004813C
+#define IPU_DI1_DW_SET3_9__EMPTY                IPU_REGISTERS_OFFSET+0x0004813C,0x00000000
+#define IPU_DI1_DW_SET3_9__FULL                 IPU_REGISTERS_OFFSET+0x0004813C,0xffffffff
+#define IPU_DI1_DW_SET3_9__DI1_DATA_CNT_DOWN3_9 IPU_REGISTERS_OFFSET+0x0004813C,0x01FF0000
+#define IPU_DI1_DW_SET3_9__DI1_DATA_CNT_UP3_9   IPU_REGISTERS_OFFSET+0x0004813C,0x000001FF
+
+#define IPU_DI1_DW_SET3_10__ADDR                  IPU_REGISTERS_OFFSET+0x00048140
+#define IPU_DI1_DW_SET3_10__EMPTY                 IPU_REGISTERS_OFFSET+0x00048140,0x00000000
+#define IPU_DI1_DW_SET3_10__FULL                  IPU_REGISTERS_OFFSET+0x00048140,0xffffffff
+#define IPU_DI1_DW_SET3_10__DI1_DATA_CNT_DOWN3_10 IPU_REGISTERS_OFFSET+0x00048140,0x01FF0000
+#define IPU_DI1_DW_SET3_10__DI1_DATA_CNT_UP3_10   IPU_REGISTERS_OFFSET+0x00048140,0x000001FF
+
+#define IPU_DI1_DW_SET3_11__ADDR                  IPU_REGISTERS_OFFSET+0x00048144
+#define IPU_DI1_DW_SET3_11__EMPTY                 IPU_REGISTERS_OFFSET+0x00048144,0x00000000
+#define IPU_DI1_DW_SET3_11__FULL                  IPU_REGISTERS_OFFSET+0x00048144,0xffffffff
+#define IPU_DI1_DW_SET3_11__DI1_DATA_CNT_DOWN3_11 IPU_REGISTERS_OFFSET+0x00048144,0x01FF0000
+#define IPU_DI1_DW_SET3_11__DI1_DATA_CNT_UP3_11   IPU_REGISTERS_OFFSET+0x00048144,0x000001FF
+
+#define IPU_DI1_STP_REP_1__ADDR              IPU_REGISTERS_OFFSET+0x00048148
+#define IPU_DI1_STP_REP_1__EMPTY             IPU_REGISTERS_OFFSET+0x00048148,0x00000000
+#define IPU_DI1_STP_REP_1__FULL              IPU_REGISTERS_OFFSET+0x00048148,0xffffffff
+#define IPU_DI1_STP_REP_1__DI1_STEP_REPEAT_2 IPU_REGISTERS_OFFSET+0x00048148,0x0FFF0000
+#define IPU_DI1_STP_REP_1__DI1_STEP_REPEAT_1 IPU_REGISTERS_OFFSET+0x00048148,0x00000FFF
+
+#define IPU_DI1_STP_REP_2__ADDR              IPU_REGISTERS_OFFSET+0x0004814C
+#define IPU_DI1_STP_REP_2__EMPTY             IPU_REGISTERS_OFFSET+0x0004814C,0x00000000
+#define IPU_DI1_STP_REP_2__FULL              IPU_REGISTERS_OFFSET+0x0004814C,0xffffffff
+#define IPU_DI1_STP_REP_2__DI1_STEP_REPEAT_4 IPU_REGISTERS_OFFSET+0x0004814C,0x0FFF0000
+#define IPU_DI1_STP_REP_2__DI1_STEP_REPEAT_3 IPU_REGISTERS_OFFSET+0x0004814C,0x00000FFF
+
+#define IPU_DI1_STP_REP_3__ADDR              IPU_REGISTERS_OFFSET+0x00048150
+#define IPU_DI1_STP_REP_3__EMPTY             IPU_REGISTERS_OFFSET+0x00048150,0x00000000
+#define IPU_DI1_STP_REP_3__FULL              IPU_REGISTERS_OFFSET+0x00048150,0xffffffff
+#define IPU_DI1_STP_REP_3__DI1_STEP_REPEAT_6 IPU_REGISTERS_OFFSET+0x00048150,0x0FFF0000
+#define IPU_DI1_STP_REP_3__DI1_STEP_REPEAT_5 IPU_REGISTERS_OFFSET+0x00048150,0x00000FFF
+
+#define IPU_DI1_STP_REP_4__ADDR              IPU_REGISTERS_OFFSET+0x00048154
+#define IPU_DI1_STP_REP_4__EMPTY             IPU_REGISTERS_OFFSET+0x00048154,0x00000000
+#define IPU_DI1_STP_REP_4__FULL              IPU_REGISTERS_OFFSET+0x00048154,0xffffffff
+#define IPU_DI1_STP_REP_4__DI1_STEP_REPEAT_8 IPU_REGISTERS_OFFSET+0x00048154,0x0FFF0000
+#define IPU_DI1_STP_REP_4__DI1_STEP_REPEAT_7 IPU_REGISTERS_OFFSET+0x00048154,0x00000FFF
+
+#define IPU_DI1_STP_REP_9__ADDR              IPU_REGISTERS_OFFSET+0x00048158
+#define IPU_DI1_STP_REP_9__EMPTY             IPU_REGISTERS_OFFSET+0x00048158,0x00000000
+#define IPU_DI1_STP_REP_9__FULL              IPU_REGISTERS_OFFSET+0x00048158,0xffffffff
+#define IPU_DI1_STP_REP_9__DI1_STEP_REPEAT_9 IPU_REGISTERS_OFFSET+0x00048158,0x00000FFF
+
+#define IPU_DI1_SER_CONF__ADDR                       IPU_REGISTERS_OFFSET+0x0004815C
+#define IPU_DI1_SER_CONF__EMPTY                      IPU_REGISTERS_OFFSET+0x0004815C,0x00000000
+#define IPU_DI1_SER_CONF__FULL                       IPU_REGISTERS_OFFSET+0x0004815C,0xffffffff
+#define IPU_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_R_1 IPU_REGISTERS_OFFSET+0x0004815C,0xF0000000
+#define IPU_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_R_0 IPU_REGISTERS_OFFSET+0x0004815C,0x0F000000
+#define IPU_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_W_1 IPU_REGISTERS_OFFSET+0x0004815C,0x00F00000
+#define IPU_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_W_0 IPU_REGISTERS_OFFSET+0x0004815C,0x000F0000
+#define IPU_DI1_SER_CONF__DI1_SERIAL_LATCH           IPU_REGISTERS_OFFSET+0x0004815C,0x0000FF00
+#define IPU_DI1_SER_CONF__DI1_LLA_SER_ACCESS         IPU_REGISTERS_OFFSET+0x0004815C,0x00000020
+#define IPU_DI1_SER_CONF__DI1_SER_CLK_POLARITY       IPU_REGISTERS_OFFSET+0x0004815C,0x00000010
+#define IPU_DI1_SER_CONF__DI1_SERIAL_DATA_POLARITY   IPU_REGISTERS_OFFSET+0x0004815C,0x00000008
+#define IPU_DI1_SER_CONF__DI1_SERIAL_RS_POLARITY     IPU_REGISTERS_OFFSET+0x0004815C,0x00000004
+#define IPU_DI1_SER_CONF__DI1_SERIAL_CS_POLARITY     IPU_REGISTERS_OFFSET+0x0004815C,0x00000002
+#define IPU_DI1_SER_CONF__DI1_WAIT4SERIAL            IPU_REGISTERS_OFFSET+0x0004815C,0x00000001
+
+#define IPU_DI1_SSC__ADDR              IPU_REGISTERS_OFFSET+0x00048160
+#define IPU_DI1_SSC__EMPTY             IPU_REGISTERS_OFFSET+0x00048160,0x00000000
+#define IPU_DI1_SSC__FULL              IPU_REGISTERS_OFFSET+0x00048160,0xffffffff
+#define IPU_DI1_SSC__DI1_PIN17_ERM     IPU_REGISTERS_OFFSET+0x00048160,0x00800000
+#define IPU_DI1_SSC__DI1_PIN16_ERM     IPU_REGISTERS_OFFSET+0x00048160,0x00400000
+#define IPU_DI1_SSC__DI1_PIN15_ERM     IPU_REGISTERS_OFFSET+0x00048160,0x00200000
+#define IPU_DI1_SSC__DI1_PIN14_ERM     IPU_REGISTERS_OFFSET+0x00048160,0x00100000
+#define IPU_DI1_SSC__DI1_PIN13_ERM     IPU_REGISTERS_OFFSET+0x00048160,0x00080000
+#define IPU_DI1_SSC__DI1_PIN12_ERM     IPU_REGISTERS_OFFSET+0x00048160,0x00040000
+#define IPU_DI1_SSC__DI1_PIN11_ERM     IPU_REGISTERS_OFFSET+0x00048160,0x00020000
+#define IPU_DI1_SSC__DI1_CS_ERM        IPU_REGISTERS_OFFSET+0x00048160,0x00010000
+#define IPU_DI1_SSC__DI1_WAIT_ON       IPU_REGISTERS_OFFSET+0x00048160,0x00000020
+#define IPU_DI1_SSC__DI1_BYTE_EN_RD_IN IPU_REGISTERS_OFFSET+0x00048160,0x00000008
+#define IPU_DI1_SSC__DI1_BYTE_EN_PNTR  IPU_REGISTERS_OFFSET+0x00048160,0x00000007
+
+#define IPU_DI1_POL__ADDR                     IPU_REGISTERS_OFFSET+0x00048164
+#define IPU_DI1_POL__EMPTY                    IPU_REGISTERS_OFFSET+0x00048164,0x00000000
+#define IPU_DI1_POL__FULL                     IPU_REGISTERS_OFFSET+0x00048164,0xffffffff
+#define IPU_DI1_POL__DI1_WAIT_POLARITY        IPU_REGISTERS_OFFSET+0x00048164,0x04000000
+#define IPU_DI1_POL__DI1_CS1_BYTE_EN_POLARITY IPU_REGISTERS_OFFSET+0x00048164,0x02000000
+#define IPU_DI1_POL__DI1_CS0_BYTE_EN_POLARITY IPU_REGISTERS_OFFSET+0x00048164,0x01000000
+#define IPU_DI1_POL__DI1_CS1_DATA_POLARITY    IPU_REGISTERS_OFFSET+0x00048164,0x00800000
+#define IPU_DI1_POL__DI1_CS1_POLARITY_17      IPU_REGISTERS_OFFSET+0x00048164,0x00400000
+#define IPU_DI1_POL__DI1_CS1_POLARITY_16      IPU_REGISTERS_OFFSET+0x00048164,0x00200000
+#define IPU_DI1_POL__DI1_CS1_POLARITY_15      IPU_REGISTERS_OFFSET+0x00048164,0x00100000
+#define IPU_DI1_POL__DI1_CS1_POLARITY_14      IPU_REGISTERS_OFFSET+0x00048164,0x00080000
+#define IPU_DI1_POL__DI1_CS1_POLARITY_13      IPU_REGISTERS_OFFSET+0x00048164,0x00040000
+#define IPU_DI1_POL__DI1_CS1_POLARITY_12      IPU_REGISTERS_OFFSET+0x00048164,0x00020000
+#define IPU_DI1_POL__DI1_CS1_POLARITY_11      IPU_REGISTERS_OFFSET+0x00048164,0x00010000
+#define IPU_DI1_POL__DI1_CS0_DATA_POLARITY    IPU_REGISTERS_OFFSET+0x00048164,0x00008000
+#define IPU_DI1_POL__DI1_CS0_POLARITY_17      IPU_REGISTERS_OFFSET+0x00048164,0x00004000
+#define IPU_DI1_POL__DI1_CS0_POLARITY_16      IPU_REGISTERS_OFFSET+0x00048164,0x00002000
+#define IPU_DI1_POL__DI1_CS0_POLARITY_15      IPU_REGISTERS_OFFSET+0x00048164,0x00001000
+#define IPU_DI1_POL__DI1_CS0_POLARITY_14      IPU_REGISTERS_OFFSET+0x00048164,0x00000800
+#define IPU_DI1_POL__DI1_CS0_POLARITY_13      IPU_REGISTERS_OFFSET+0x00048164,0x00000400
+#define IPU_DI1_POL__DI1_CS0_POLARITY_12      IPU_REGISTERS_OFFSET+0x00048164,0x00000200
+#define IPU_DI1_POL__DI1_CS0_POLARITY_11      IPU_REGISTERS_OFFSET+0x00048164,0x00000100
+#define IPU_DI1_POL__DI1_DRDY_DATA_POLARITY   IPU_REGISTERS_OFFSET+0x00048164,0x00000080
+#define IPU_DI1_POL__DI1_DRDY_POLARITY_17     IPU_REGISTERS_OFFSET+0x00048164,0x00000040
+#define IPU_DI1_POL__DI1_DRDY_POLARITY_16     IPU_REGISTERS_OFFSET+0x00048164,0x00000020
+#define IPU_DI1_POL__DI1_DRDY_POLARITY_15     IPU_REGISTERS_OFFSET+0x00048164,0x00000010
+#define IPU_DI1_POL__DI1_DRDY_POLARITY_14     IPU_REGISTERS_OFFSET+0x00048164,0x00000008
+#define IPU_DI1_POL__DI1_DRDY_POLARITY_13     IPU_REGISTERS_OFFSET+0x00048164,0x00000004
+#define IPU_DI1_POL__DI1_DRDY_POLARITY_12     IPU_REGISTERS_OFFSET+0x00048164,0x00000002
+#define IPU_DI1_POL__DI1_DRDY_POLARITY_11     IPU_REGISTERS_OFFSET+0x00048164,0x00000001
+
+#define IPU_DI1_AW0__ADDR              IPU_REGISTERS_OFFSET+0x00048168
+#define IPU_DI1_AW0__EMPTY             IPU_REGISTERS_OFFSET+0x00048168,0x00000000
+#define IPU_DI1_AW0__FULL              IPU_REGISTERS_OFFSET+0x00048168,0xffffffff
+#define IPU_DI1_AW0__DI1_AW_TRIG_SEL   IPU_REGISTERS_OFFSET+0x00048168,0xF0000000
+#define IPU_DI1_AW0__DI1_AW_HEND       IPU_REGISTERS_OFFSET+0x00048168,0x0FFF0000
+#define IPU_DI1_AW0__DI1_AW_HCOUNT_SEL IPU_REGISTERS_OFFSET+0x00048168,0x0000F000
+#define IPU_DI1_AW0__DI1_AW_HSTART     IPU_REGISTERS_OFFSET+0x00048168,0x00000FFF
+
+#define IPU_DI1_AW1__ADDR              IPU_REGISTERS_OFFSET+0x0004816C
+#define IPU_DI1_AW1__EMPTY             IPU_REGISTERS_OFFSET+0x0004816C,0x00000000
+#define IPU_DI1_AW1__FULL              IPU_REGISTERS_OFFSET+0x0004816C,0xffffffff
+#define IPU_DI1_AW1__DI1_AW_VEND       IPU_REGISTERS_OFFSET+0x0004816C,0x0FFF0000
+#define IPU_DI1_AW1__DI1_AW_VCOUNT_SEL IPU_REGISTERS_OFFSET+0x0004816C,0x0000F000
+#define IPU_DI1_AW1__DI1_AW_VSTART     IPU_REGISTERS_OFFSET+0x0004816C,0x00000FFF
+
+#define IPU_DI1_SCR_CONF__ADDR              IPU_REGISTERS_OFFSET+0x00048170
+#define IPU_DI1_SCR_CONF__EMPTY             IPU_REGISTERS_OFFSET+0x00048170,0x00000000
+#define IPU_DI1_SCR_CONF__FULL              IPU_REGISTERS_OFFSET+0x00048170,0xffffffff
+#define IPU_DI1_SCR_CONF__DI1_SCREEN_HEIGHT IPU_REGISTERS_OFFSET+0x00048170,0x00000FFF
+
+#define IPU_DI1_STAT__ADDR                IPU_REGISTERS_OFFSET+0x00048174
+#define IPU_DI1_STAT__EMPTY               IPU_REGISTERS_OFFSET+0x00048174,0x00000000
+#define IPU_DI1_STAT__FULL                IPU_REGISTERS_OFFSET+0x00048174,0xffffffff
+#define IPU_DI1_STAT__DI1_CNTR_FIFO_FULL  IPU_REGISTERS_OFFSET+0x00048174,0x00000008
+#define IPU_DI1_STAT__DI1_CNTR_FIFO_EMPTY IPU_REGISTERS_OFFSET+0x00048174,0x00000004
+#define IPU_DI1_STAT__DI1_READ_FIFO_FULL  IPU_REGISTERS_OFFSET+0x00048174,0x00000002
+#define IPU_DI1_STAT__DI1_READ_FIFO_EMPTY IPU_REGISTERS_OFFSET+0x00048174,0x00000001
+
+#define IPU_SMFC_MAP__ADDR    IPU_REGISTERS_OFFSET+0x00050000
+#define IPU_SMFC_MAP__EMPTY   IPU_REGISTERS_OFFSET+0x00050000,0x00000000
+#define IPU_SMFC_MAP__FULL    IPU_REGISTERS_OFFSET+0x00050000,0xffffffff
+#define IPU_SMFC_MAP__MAP_CH3 IPU_REGISTERS_OFFSET+0x00050000,0x00000E00
+#define IPU_SMFC_MAP__MAP_CH2 IPU_REGISTERS_OFFSET+0x00050000,0x000001C0
+#define IPU_SMFC_MAP__MAP_CH1 IPU_REGISTERS_OFFSET+0x00050000,0x00000038
+#define IPU_SMFC_MAP__MAP_CH0 IPU_REGISTERS_OFFSET+0x00050000,0x00000007
+
+#define IPU_SMFC_WMC__ADDR    IPU_REGISTERS_OFFSET+0x00050004
+#define IPU_SMFC_WMC__EMPTY   IPU_REGISTERS_OFFSET+0x00050004,0x00000000
+#define IPU_SMFC_WMC__FULL    IPU_REGISTERS_OFFSET+0x00050004,0xffffffff
+#define IPU_SMFC_WMC__WM3_CLR IPU_REGISTERS_OFFSET+0x00050004,0x0E000000
+#define IPU_SMFC_WMC__WM3_SET IPU_REGISTERS_OFFSET+0x00050004,0x01C00000
+#define IPU_SMFC_WMC__WM2_CLR IPU_REGISTERS_OFFSET+0x00050004,0x00380000
+#define IPU_SMFC_WMC__WM2_SET IPU_REGISTERS_OFFSET+0x00050004,0x00070000
+#define IPU_SMFC_WMC__WM1_CLR IPU_REGISTERS_OFFSET+0x00050004,0x00000E00
+#define IPU_SMFC_WMC__WM1_SET IPU_REGISTERS_OFFSET+0x00050004,0x000001C0
+#define IPU_SMFC_WMC__WM0_CLR IPU_REGISTERS_OFFSET+0x00050004,0x00000038
+#define IPU_SMFC_WMC__WM0_SET IPU_REGISTERS_OFFSET+0x00050004,0x00000007
+
+#define IPU_SMFC_BS__ADDR        IPU_REGISTERS_OFFSET+0x00050008
+#define IPU_SMFC_BS__EMPTY       IPU_REGISTERS_OFFSET+0x00050008,0x00000000
+#define IPU_SMFC_BS__FULL        IPU_REGISTERS_OFFSET+0x00050008,0xffffffff
+#define IPU_SMFC_BS__BURST3_SIZE IPU_REGISTERS_OFFSET+0x00050008,0x0000F000
+#define IPU_SMFC_BS__BURST2_SIZE IPU_REGISTERS_OFFSET+0x00050008,0x00000F00
+#define IPU_SMFC_BS__BURST1_SIZE IPU_REGISTERS_OFFSET+0x00050008,0x000000F0
+#define IPU_SMFC_BS__BURST0_SIZE IPU_REGISTERS_OFFSET+0x00050008,0x0000000F
+
+#define IPU_DC_READ_CH_CONF__ADDR                IPU_REGISTERS_OFFSET+0x00058000
+#define IPU_DC_READ_CH_CONF__EMPTY               IPU_REGISTERS_OFFSET+0x00058000,0x00000000
+#define IPU_DC_READ_CH_CONF__FULL                IPU_REGISTERS_OFFSET+0x00058000,0xffffffff
+#define IPU_DC_READ_CH_CONF__TIME_OUT_VALUE      IPU_REGISTERS_OFFSET+0x00058000,0xFFFF0000
+#define IPU_DC_READ_CH_CONF__CS_ID_3             IPU_REGISTERS_OFFSET+0x00058000,0x00000800
+#define IPU_DC_READ_CH_CONF__CS_ID_2             IPU_REGISTERS_OFFSET+0x00058000,0x00000400
+#define IPU_DC_READ_CH_CONF__CS_ID_1             IPU_REGISTERS_OFFSET+0x00058000,0x00000200
+#define IPU_DC_READ_CH_CONF__CS_ID_0             IPU_REGISTERS_OFFSET+0x00058000,0x00000100
+#define IPU_DC_READ_CH_CONF__CHAN_MASK_DEFAULT_0 IPU_REGISTERS_OFFSET+0x00058000,0x00000040
+#define IPU_DC_READ_CH_CONF__W_SIZE_0            IPU_REGISTERS_OFFSET+0x00058000,0x00000030
+#define IPU_DC_READ_CH_CONF__PROG_DISP_ID_0      IPU_REGISTERS_OFFSET+0x00058000,0x0000000C
+#define IPU_DC_READ_CH_CONF__PROG_DI_ID_0        IPU_REGISTERS_OFFSET+0x00058000,0x00000002
+#define IPU_DC_READ_CH_CONF__RD_CHANNEL_EN       IPU_REGISTERS_OFFSET+0x00058000,0x00000001
+
+#define IPU_DC_READ_CH_ADDR__ADDR      IPU_REGISTERS_OFFSET+0x00058004
+#define IPU_DC_READ_CH_ADDR__EMPTY     IPU_REGISTERS_OFFSET+0x00058004,0x00000000
+#define IPU_DC_READ_CH_ADDR__FULL      IPU_REGISTERS_OFFSET+0x00058004,0xffffffff
+#define IPU_DC_READ_CH_ADDR__ST_ADDR_0 IPU_REGISTERS_OFFSET+0x00058004,0x1FFFFFFF
+
+#define IPU_DC_RL0_CH_0__ADDR                   IPU_REGISTERS_OFFSET+0x00058008
+#define IPU_DC_RL0_CH_0__EMPTY                  IPU_REGISTERS_OFFSET+0x00058008,0x00000000
+#define IPU_DC_RL0_CH_0__FULL                   IPU_REGISTERS_OFFSET+0x00058008,0xffffffff
+#define IPU_DC_RL0_CH_0__COD_NL_START_CHAN_0    IPU_REGISTERS_OFFSET+0x00058008,0xFF000000
+#define IPU_DC_RL0_CH_0__COD_NL_PRIORITY_CHAN_0 IPU_REGISTERS_OFFSET+0x00058008,0x000F0000
+#define IPU_DC_RL0_CH_0__COD_NF_START_CHAN_0    IPU_REGISTERS_OFFSET+0x00058008,0x0000FF00
+#define IPU_DC_RL0_CH_0__COD_NF_PRIORITY_CHAN_0 IPU_REGISTERS_OFFSET+0x00058008,0x0000000F
+
+#define IPU_DC_RL1_CH_0__ADDR                       IPU_REGISTERS_OFFSET+0x0005800C
+#define IPU_DC_RL1_CH_0__EMPTY                      IPU_REGISTERS_OFFSET+0x0005800C,0x00000000
+#define IPU_DC_RL1_CH_0__FULL                       IPU_REGISTERS_OFFSET+0x0005800C,0xffffffff
+#define IPU_DC_RL1_CH_0__COD_NFIELD_START_CHAN_0    IPU_REGISTERS_OFFSET+0x0005800C,0xFF000000
+#define IPU_DC_RL1_CH_0__COD_NFIELD_PRIORITY_CHAN_0 IPU_REGISTERS_OFFSET+0x0005800C,0x000F0000
+#define IPU_DC_RL1_CH_0__COD_EOF_START_CHAN_0       IPU_REGISTERS_OFFSET+0x0005800C,0x0000FF00
+#define IPU_DC_RL1_CH_0__COD_EOF_PRIORITY_CHAN_0    IPU_REGISTERS_OFFSET+0x0005800C,0x0000000F
+
+#define IPU_DC_RL2_CH_0__ADDR                        IPU_REGISTERS_OFFSET+0x00058010
+#define IPU_DC_RL2_CH_0__EMPTY                       IPU_REGISTERS_OFFSET+0x00058010,0x00000000
+#define IPU_DC_RL2_CH_0__FULL                        IPU_REGISTERS_OFFSET+0x00058010,0xffffffff
+#define IPU_DC_RL2_CH_0__COD_EOFIELD_START_CHAN_0    IPU_REGISTERS_OFFSET+0x00058010,0xFF000000
+#define IPU_DC_RL2_CH_0__COD_EOFIELD_PRIORITY_CHAN_0 IPU_REGISTERS_OFFSET+0x00058010,0x000F0000
+#define IPU_DC_RL2_CH_0__COD_EOL_START_CHAN_0        IPU_REGISTERS_OFFSET+0x00058010,0x0000FF00
+#define IPU_DC_RL2_CH_0__COD_EOL_PRIORITY_CHAN_0     IPU_REGISTERS_OFFSET+0x00058010,0x0000000F
+
+#define IPU_DC_RL3_CH_0__ADDR                         IPU_REGISTERS_OFFSET+0x00058014
+#define IPU_DC_RL3_CH_0__EMPTY                        IPU_REGISTERS_OFFSET+0x00058014,0x00000000
+#define IPU_DC_RL3_CH_0__FULL                         IPU_REGISTERS_OFFSET+0x00058014,0xffffffff
+#define IPU_DC_RL3_CH_0__COD_NEW_CHAN_START_CHAN_0    IPU_REGISTERS_OFFSET+0x00058014,0xFF000000
+#define IPU_DC_RL3_CH_0__COD_NEW_CHAN_PRIORITY_CHAN_0 IPU_REGISTERS_OFFSET+0x00058014,0x000F0000
+#define IPU_DC_RL3_CH_0__COD_NEW_ADDR_START_CHAN_0    IPU_REGISTERS_OFFSET+0x00058014,0x0000FF00
+#define IPU_DC_RL3_CH_0__COD_NEW_ADDR_PRIORITY_CHAN_0 IPU_REGISTERS_OFFSET+0x00058014,0x0000000F
+
+#define IPU_DC_RL4_CH_0__ADDR                         IPU_REGISTERS_OFFSET+0x00058018
+#define IPU_DC_RL4_CH_0__EMPTY                        IPU_REGISTERS_OFFSET+0x00058018,0x00000000
+#define IPU_DC_RL4_CH_0__FULL                         IPU_REGISTERS_OFFSET+0x00058018,0xffffffff
+#define IPU_DC_RL4_CH_0__COD_NEW_DATA_START_CHAN_0    IPU_REGISTERS_OFFSET+0x00058018,0x0000FF00
+#define IPU_DC_RL4_CH_0__COD_NEW_DATA_PRIORITY_CHAN_0 IPU_REGISTERS_OFFSET+0x00058018,0x0000000F
+
+#define IPU_DC_WR_CH_CONF_1__ADDR                IPU_REGISTERS_OFFSET+0x0005801C
+#define IPU_DC_WR_CH_CONF_1__EMPTY               IPU_REGISTERS_OFFSET+0x0005801C,0x00000000
+#define IPU_DC_WR_CH_CONF_1__FULL                IPU_REGISTERS_OFFSET+0x0005801C,0xffffffff
+#define IPU_DC_WR_CH_CONF_1__PROG_START_TIME_1   IPU_REGISTERS_OFFSET+0x0005801C,0x07FF0000
+#define IPU_DC_WR_CH_CONF_1__FIELD_MODE_1        IPU_REGISTERS_OFFSET+0x0005801C,0x00000200
+#define IPU_DC_WR_CH_CONF_1__CHAN_MASK_DEFAULT_1 IPU_REGISTERS_OFFSET+0x0005801C,0x00000100
+#define IPU_DC_WR_CH_CONF_1__PROG_CHAN_TYP_1     IPU_REGISTERS_OFFSET+0x0005801C,0x000000E0
+#define IPU_DC_WR_CH_CONF_1__PROG_DISP_ID_1      IPU_REGISTERS_OFFSET+0x0005801C,0x00000018
+#define IPU_DC_WR_CH_CONF_1__PROG_DI_ID_1        IPU_REGISTERS_OFFSET+0x0005801C,0x00000004
+#define IPU_DC_WR_CH_CONF_1__W_SIZE_1            IPU_REGISTERS_OFFSET+0x0005801C,0x00000003
+
+#define IPU_DC_WR_CH_ADDR_1__ADDR      IPU_REGISTERS_OFFSET+0x00058020
+#define IPU_DC_WR_CH_ADDR_1__EMPTY     IPU_REGISTERS_OFFSET+0x00058020,0x00000000
+#define IPU_DC_WR_CH_ADDR_1__FULL      IPU_REGISTERS_OFFSET+0x00058020,0xffffffff
+#define IPU_DC_WR_CH_ADDR_1__ST_ADDR_1 IPU_REGISTERS_OFFSET+0x00058020,0x1FFFFFFF
+
+#define IPU_DC_RL0_CH_1__ADDR                   IPU_REGISTERS_OFFSET+0x00058024
+#define IPU_DC_RL0_CH_1__EMPTY                  IPU_REGISTERS_OFFSET+0x00058024,0x00000000
+#define IPU_DC_RL0_CH_1__FULL                   IPU_REGISTERS_OFFSET+0x00058024,0xffffffff
+#define IPU_DC_RL0_CH_1__COD_NL_START_CHAN_1    IPU_REGISTERS_OFFSET+0x00058024,0xFF000000
+#define IPU_DC_RL0_CH_1__COD_NL_PRIORITY_CHAN_1 IPU_REGISTERS_OFFSET+0x00058024,0x000F0000
+#define IPU_DC_RL0_CH_1__COD_NF_START_CHAN_1    IPU_REGISTERS_OFFSET+0x00058024,0x0000FF00
+#define IPU_DC_RL0_CH_1__COD_NF_PRIORITY_CHAN_1 IPU_REGISTERS_OFFSET+0x00058024,0x0000000F
+
+#define IPU_DC_RL1_CH_1__ADDR                       IPU_REGISTERS_OFFSET+0x00058028
+#define IPU_DC_RL1_CH_1__EMPTY                      IPU_REGISTERS_OFFSET+0x00058028,0x00000000
+#define IPU_DC_RL1_CH_1__FULL                       IPU_REGISTERS_OFFSET+0x00058028,0xffffffff
+#define IPU_DC_RL1_CH_1__COD_NFIELD_START_CHAN_1    IPU_REGISTERS_OFFSET+0x00058028,0xFF000000
+#define IPU_DC_RL1_CH_1__COD_NFIELD_PRIORITY_CHAN_1 IPU_REGISTERS_OFFSET+0x00058028,0x000F0000
+#define IPU_DC_RL1_CH_1__COD_EOF_START_CHAN_1       IPU_REGISTERS_OFFSET+0x00058028,0x0000FF00
+#define IPU_DC_RL1_CH_1__COD_EOF_PRIORITY_CHAN_1    IPU_REGISTERS_OFFSET+0x00058028,0x0000000F
+
+#define IPU_DC_RL2_CH_1__ADDR                        IPU_REGISTERS_OFFSET+0x0005802C
+#define IPU_DC_RL2_CH_1__EMPTY                       IPU_REGISTERS_OFFSET+0x0005802C,0x00000000
+#define IPU_DC_RL2_CH_1__FULL                        IPU_REGISTERS_OFFSET+0x0005802C,0xffffffff
+#define IPU_DC_RL2_CH_1__COD_EOFIELD_START_CHAN_1    IPU_REGISTERS_OFFSET+0x0005802C,0xFF000000
+#define IPU_DC_RL2_CH_1__COD_EOFIELD_PRIORITY_CHAN_1 IPU_REGISTERS_OFFSET+0x0005802C,0x000F0000
+#define IPU_DC_RL2_CH_1__COD_EOL_START_CHAN_1        IPU_REGISTERS_OFFSET+0x0005802C,0x0000FF00
+#define IPU_DC_RL2_CH_1__COD_EOL_PRIORITY_CHAN_1     IPU_REGISTERS_OFFSET+0x0005802C,0x0000000F
+
+#define IPU_DC_RL3_CH_1__ADDR                         IPU_REGISTERS_OFFSET+0x00058030
+#define IPU_DC_RL3_CH_1__EMPTY                        IPU_REGISTERS_OFFSET+0x00058030,0x00000000
+#define IPU_DC_RL3_CH_1__FULL                         IPU_REGISTERS_OFFSET+0x00058030,0xffffffff
+#define IPU_DC_RL3_CH_1__COD_NEW_CHAN_START_CHAN_1    IPU_REGISTERS_OFFSET+0x00058030,0xFF000000
+#define IPU_DC_RL3_CH_1__COD_NEW_CHAN_PRIORITY_CHAN_1 IPU_REGISTERS_OFFSET+0x00058030,0x000F0000
+#define IPU_DC_RL3_CH_1__COD_NEW_ADDR_START_CHAN_1    IPU_REGISTERS_OFFSET+0x00058030,0x0000FF00
+#define IPU_DC_RL3_CH_1__COD_NEW_ADDR_PRIORITY_CHAN_1 IPU_REGISTERS_OFFSET+0x00058030,0x0000000F
+
+#define IPU_DC_RL4_CH_1__ADDR                         IPU_REGISTERS_OFFSET+0x00058034
+#define IPU_DC_RL4_CH_1__EMPTY                        IPU_REGISTERS_OFFSET+0x00058034,0x00000000
+#define IPU_DC_RL4_CH_1__FULL                         IPU_REGISTERS_OFFSET+0x00058034,0xffffffff
+#define IPU_DC_RL4_CH_1__COD_NEW_DATA_START_CHAN_1    IPU_REGISTERS_OFFSET+0x00058034,0x0000FF00
+#define IPU_DC_RL4_CH_1__COD_NEW_DATA_PRIORITY_CHAN_1 IPU_REGISTERS_OFFSET+0x00058034,0x0000000F
+
+#define IPU_DC_WR_CH_CONF_2__ADDR                IPU_REGISTERS_OFFSET+0x00058038
+#define IPU_DC_WR_CH_CONF_2__EMPTY               IPU_REGISTERS_OFFSET+0x00058038,0x00000000
+#define IPU_DC_WR_CH_CONF_2__FULL                IPU_REGISTERS_OFFSET+0x00058038,0xffffffff
+#define IPU_DC_WR_CH_CONF_2__PROG_START_TIME_2   IPU_REGISTERS_OFFSET+0x00058038,0x07FF0000
+#define IPU_DC_WR_CH_CONF_2__CHAN_MASK_DEFAULT_2 IPU_REGISTERS_OFFSET+0x00058038,0x00000100
+#define IPU_DC_WR_CH_CONF_2__PROG_CHAN_TYP_2     IPU_REGISTERS_OFFSET+0x00058038,0x000000E0
+#define IPU_DC_WR_CH_CONF_2__PROG_DISP_ID_2      IPU_REGISTERS_OFFSET+0x00058038,0x00000018
+#define IPU_DC_WR_CH_CONF_2__PROG_DI_ID_2        IPU_REGISTERS_OFFSET+0x00058038,0x00000004
+#define IPU_DC_WR_CH_CONF_2__W_SIZE_2            IPU_REGISTERS_OFFSET+0x00058038,0x00000003
+
+#define IPU_DC_WR_CH_ADDR_2__ADDR      IPU_REGISTERS_OFFSET+0x0005803C
+#define IPU_DC_WR_CH_ADDR_2__EMPTY     IPU_REGISTERS_OFFSET+0x0005803C,0x00000000
+#define IPU_DC_WR_CH_ADDR_2__FULL      IPU_REGISTERS_OFFSET+0x0005803C,0xffffffff
+#define IPU_DC_WR_CH_ADDR_2__ST_ADDR_2 IPU_REGISTERS_OFFSET+0x0005803C,0x1FFFFFFF
+
+#define IPU_DC_RL0_CH_2__ADDR                   IPU_REGISTERS_OFFSET+0x00058040
+#define IPU_DC_RL0_CH_2__EMPTY                  IPU_REGISTERS_OFFSET+0x00058040,0x00000000
+#define IPU_DC_RL0_CH_2__FULL                   IPU_REGISTERS_OFFSET+0x00058040,0xffffffff
+#define IPU_DC_RL0_CH_2__COD_NL_START_CHAN_2    IPU_REGISTERS_OFFSET+0x00058040,0xFF000000
+#define IPU_DC_RL0_CH_2__COD_NL_PRIORITY_CHAN_2 IPU_REGISTERS_OFFSET+0x00058040,0x000F0000
+#define IPU_DC_RL0_CH_2__COD_NF_START_CHAN_2    IPU_REGISTERS_OFFSET+0x00058040,0x0000FF00
+#define IPU_DC_RL0_CH_2__COD_NF_PRIORITY_CHAN_2 IPU_REGISTERS_OFFSET+0x00058040,0x0000000F
+
+#define IPU_DC_RL1_CH_2__ADDR                       IPU_REGISTERS_OFFSET+0x00058044
+#define IPU_DC_RL1_CH_2__EMPTY                      IPU_REGISTERS_OFFSET+0x00058044,0x00000000
+#define IPU_DC_RL1_CH_2__FULL                       IPU_REGISTERS_OFFSET+0x00058044,0xffffffff
+#define IPU_DC_RL1_CH_2__COD_NFIELD_START_CHAN_2    IPU_REGISTERS_OFFSET+0x00058044,0xFF000000
+#define IPU_DC_RL1_CH_2__COD_NFIELD_PRIORITY_CHAN_2 IPU_REGISTERS_OFFSET+0x00058044,0x000F0000
+#define IPU_DC_RL1_CH_2__COD_EOF_START_CHAN_2       IPU_REGISTERS_OFFSET+0x00058044,0x0000FF00
+#define IPU_DC_RL1_CH_2__COD_EOF_PRIORITY_CHAN_2    IPU_REGISTERS_OFFSET+0x00058044,0x0000000F
+
+#define IPU_DC_RL2_CH_2__ADDR                        IPU_REGISTERS_OFFSET+0x00058048
+#define IPU_DC_RL2_CH_2__EMPTY                       IPU_REGISTERS_OFFSET+0x00058048,0x00000000
+#define IPU_DC_RL2_CH_2__FULL                        IPU_REGISTERS_OFFSET+0x00058048,0xffffffff
+#define IPU_DC_RL2_CH_2__COD_EOFIELD_START_CHAN_2    IPU_REGISTERS_OFFSET+0x00058048,0xFF000000
+#define IPU_DC_RL2_CH_2__COD_EOFIELD_PRIORITY_CHAN_2 IPU_REGISTERS_OFFSET+0x00058048,0x000F0000
+#define IPU_DC_RL2_CH_2__COD_EOL_START_CHAN_2        IPU_REGISTERS_OFFSET+0x00058048,0x0000FF00
+#define IPU_DC_RL2_CH_2__COD_EOL_PRIORITY_CHAN_2     IPU_REGISTERS_OFFSET+0x00058048,0x0000000F
+
+#define IPU_DC_RL3_CH_2__ADDR                         IPU_REGISTERS_OFFSET+0x0005804C
+#define IPU_DC_RL3_CH_2__EMPTY                        IPU_REGISTERS_OFFSET+0x0005804C,0x00000000
+#define IPU_DC_RL3_CH_2__FULL                         IPU_REGISTERS_OFFSET+0x0005804C,0xffffffff
+#define IPU_DC_RL3_CH_2__COD_NEW_CHAN_START_CHAN_2    IPU_REGISTERS_OFFSET+0x0005804C,0xFF000000
+#define IPU_DC_RL3_CH_2__COD_NEW_CHAN_PRIORITY_CHAN_2 IPU_REGISTERS_OFFSET+0x0005804C,0x000F0000
+#define IPU_DC_RL3_CH_2__COD_NEW_ADDR_START_CHAN_2    IPU_REGISTERS_OFFSET+0x0005804C,0x0000FF00
+#define IPU_DC_RL3_CH_2__COD_NEW_ADDR_PRIORITY_CHAN_2 IPU_REGISTERS_OFFSET+0x0005804C,0x0000000F
+
+#define IPU_DC_RL4_CH_2__ADDR                         IPU_REGISTERS_OFFSET+0x00058050
+#define IPU_DC_RL4_CH_2__EMPTY                        IPU_REGISTERS_OFFSET+0x00058050,0x00000000
+#define IPU_DC_RL4_CH_2__FULL                         IPU_REGISTERS_OFFSET+0x00058050,0xffffffff
+#define IPU_DC_RL4_CH_2__COD_NEW_DATA_START_CHAN_2    IPU_REGISTERS_OFFSET+0x00058050,0x0000FF00
+#define IPU_DC_RL4_CH_2__COD_NEW_DATA_PRIORITY_CHAN_2 IPU_REGISTERS_OFFSET+0x00058050,0x0000000F
+
+#define IPU_DC_CMD_CH_CONF_3__ADDR                      IPU_REGISTERS_OFFSET+0x00058054
+#define IPU_DC_CMD_CH_CONF_3__EMPTY                     IPU_REGISTERS_OFFSET+0x00058054,0x00000000
+#define IPU_DC_CMD_CH_CONF_3__FULL                      IPU_REGISTERS_OFFSET+0x00058054,0xffffffff
+#define IPU_DC_CMD_CH_CONF_3__COD_CMND_START_CHAN_RS1_3 IPU_REGISTERS_OFFSET+0x00058054,0xFF000000
+#define IPU_DC_CMD_CH_CONF_3__COD_CMND_START_CHAN_RS0_3 IPU_REGISTERS_OFFSET+0x00058054,0x0000FF00
+#define IPU_DC_CMD_CH_CONF_3__W_SIZE_3                  IPU_REGISTERS_OFFSET+0x00058054,0x00000003
+
+#define IPU_DC_CMD_CH_CONF_4__ADDR                      IPU_REGISTERS_OFFSET+0x00058058
+#define IPU_DC_CMD_CH_CONF_4__EMPTY                     IPU_REGISTERS_OFFSET+0x00058058,0x00000000
+#define IPU_DC_CMD_CH_CONF_4__FULL                      IPU_REGISTERS_OFFSET+0x00058058,0xffffffff
+#define IPU_DC_CMD_CH_CONF_4__COD_CMND_START_CHAN_RS1_4 IPU_REGISTERS_OFFSET+0x00058058,0xFF000000
+#define IPU_DC_CMD_CH_CONF_4__COD_CMND_START_CHAN_RS0_4 IPU_REGISTERS_OFFSET+0x00058058,0x0000FF00
+#define IPU_DC_CMD_CH_CONF_4__W_SIZE_4                  IPU_REGISTERS_OFFSET+0x00058058,0x00000003
+
+#define IPU_DC_WR_CH_CONF_5__ADDR                IPU_REGISTERS_OFFSET+0x0005805C
+#define IPU_DC_WR_CH_CONF_5__EMPTY               IPU_REGISTERS_OFFSET+0x0005805C,0x00000000
+#define IPU_DC_WR_CH_CONF_5__FULL                IPU_REGISTERS_OFFSET+0x0005805C,0xffffffff
+#define IPU_DC_WR_CH_CONF_5__PROG_START_TIME_5   IPU_REGISTERS_OFFSET+0x0005805C,0x07FF0000
+#define IPU_DC_WR_CH_CONF_5__FIELD_MODE_5        IPU_REGISTERS_OFFSET+0x0005805C,0x00000200
+#define IPU_DC_WR_CH_CONF_5__CHAN_MASK_DEFAULT_5 IPU_REGISTERS_OFFSET+0x0005805C,0x00000100
+#define IPU_DC_WR_CH_CONF_5__PROG_CHAN_TYP_5     IPU_REGISTERS_OFFSET+0x0005805C,0x000000E0
+#define IPU_DC_WR_CH_CONF_5__PROG_DISP_ID_5      IPU_REGISTERS_OFFSET+0x0005805C,0x00000018
+#define IPU_DC_WR_CH_CONF_5__PROG_DI_ID_5        IPU_REGISTERS_OFFSET+0x0005805C,0x00000004
+#define IPU_DC_WR_CH_CONF_5__W_SIZE_5            IPU_REGISTERS_OFFSET+0x0005805C,0x00000003
+
+#define IPU_DC_WR_CH_ADDR_5__ADDR      IPU_REGISTERS_OFFSET+0x00058060
+#define IPU_DC_WR_CH_ADDR_5__EMPTY     IPU_REGISTERS_OFFSET+0x00058060,0x00000000
+#define IPU_DC_WR_CH_ADDR_5__FULL      IPU_REGISTERS_OFFSET+0x00058060,0xffffffff
+#define IPU_DC_WR_CH_ADDR_5__ST_ADDR_5 IPU_REGISTERS_OFFSET+0x00058060,0x1FFFFFFF
+
+#define IPU_DC_RL0_CH_5__ADDR                   IPU_REGISTERS_OFFSET+0x00058064
+#define IPU_DC_RL0_CH_5__EMPTY                  IPU_REGISTERS_OFFSET+0x00058064,0x00000000
+#define IPU_DC_RL0_CH_5__FULL                   IPU_REGISTERS_OFFSET+0x00058064,0xffffffff
+#define IPU_DC_RL0_CH_5__COD_NL_START_CHAN_5    IPU_REGISTERS_OFFSET+0x00058064,0xFF000000
+#define IPU_DC_RL0_CH_5__COD_NL_PRIORITY_CHAN_5 IPU_REGISTERS_OFFSET+0x00058064,0x000F0000
+#define IPU_DC_RL0_CH_5__COD_NF_START_CHAN_5    IPU_REGISTERS_OFFSET+0x00058064,0x0000FF00
+#define IPU_DC_RL0_CH_5__COD_NF_PRIORITY_CHAN_5 IPU_REGISTERS_OFFSET+0x00058064,0x0000000F
+
+#define IPU_DC_RL1_CH_5__ADDR                       IPU_REGISTERS_OFFSET+0x00058068
+#define IPU_DC_RL1_CH_5__EMPTY                      IPU_REGISTERS_OFFSET+0x00058068,0x00000000
+#define IPU_DC_RL1_CH_5__FULL                       IPU_REGISTERS_OFFSET+0x00058068,0xffffffff
+#define IPU_DC_RL1_CH_5__COD_NFIELD_START_CHAN_5    IPU_REGISTERS_OFFSET+0x00058068,0xFF000000
+#define IPU_DC_RL1_CH_5__COD_NFIELD_PRIORITY_CHAN_5 IPU_REGISTERS_OFFSET+0x00058068,0x000F0000
+#define IPU_DC_RL1_CH_5__COD_EOF_START_CHAN_5       IPU_REGISTERS_OFFSET+0x00058068,0x0000FF00
+#define IPU_DC_RL1_CH_5__COD_EOF_PRIORITY_CHAN_5    IPU_REGISTERS_OFFSET+0x00058068,0x0000000F
+
+#define IPU_DC_RL2_CH_5__ADDR                        IPU_REGISTERS_OFFSET+0x0005806C
+#define IPU_DC_RL2_CH_5__EMPTY                       IPU_REGISTERS_OFFSET+0x0005806C,0x00000000
+#define IPU_DC_RL2_CH_5__FULL                        IPU_REGISTERS_OFFSET+0x0005806C,0xffffffff
+#define IPU_DC_RL2_CH_5__COD_EOFIELD_START_CHAN_5    IPU_REGISTERS_OFFSET+0x0005806C,0xFF000000
+#define IPU_DC_RL2_CH_5__COD_EOFIELD_PRIORITY_CHAN_5 IPU_REGISTERS_OFFSET+0x0005806C,0x000F0000
+#define IPU_DC_RL2_CH_5__COD_EOL_START_CHAN_5        IPU_REGISTERS_OFFSET+0x0005806C,0x0000FF00
+#define IPU_DC_RL2_CH_5__COD_EOL_PRIORITY_CHAN_5     IPU_REGISTERS_OFFSET+0x0005806C,0x0000000F
+
+#define IPU_DC_RL3_CH_5__ADDR                         IPU_REGISTERS_OFFSET+0x00058070
+#define IPU_DC_RL3_CH_5__EMPTY                        IPU_REGISTERS_OFFSET+0x00058070,0x00000000
+#define IPU_DC_RL3_CH_5__FULL                         IPU_REGISTERS_OFFSET+0x00058070,0xffffffff
+#define IPU_DC_RL3_CH_5__COD_NEW_CHAN_START_CHAN_5    IPU_REGISTERS_OFFSET+0x00058070,0xFF000000
+#define IPU_DC_RL3_CH_5__COD_NEW_CHAN_PRIORITY_CHAN_5 IPU_REGISTERS_OFFSET+0x00058070,0x000F0000
+#define IPU_DC_RL3_CH_5__COD_NEW_ADDR_START_CHAN_5    IPU_REGISTERS_OFFSET+0x00058070,0x0000FF00
+#define IPU_DC_RL3_CH_5__COD_NEW_ADDR_PRIORITY_CHAN_5 IPU_REGISTERS_OFFSET+0x00058070,0x0000000F
+
+#define IPU_DC_RL4_CH_5__ADDR                         IPU_REGISTERS_OFFSET+0x00058074
+#define IPU_DC_RL4_CH_5__EMPTY                        IPU_REGISTERS_OFFSET+0x00058074,0x00000000
+#define IPU_DC_RL4_CH_5__FULL                         IPU_REGISTERS_OFFSET+0x00058074,0xffffffff
+#define IPU_DC_RL4_CH_5__COD_NEW_DATA_START_CHAN_5    IPU_REGISTERS_OFFSET+0x00058074,0x0000FF00
+#define IPU_DC_RL4_CH_5__COD_NEW_DATA_PRIORITY_CHAN_5 IPU_REGISTERS_OFFSET+0x00058074,0x0000000F
+
+#define IPU_DC_WR_CH_CONF_6__ADDR                IPU_REGISTERS_OFFSET+0x00058078
+#define IPU_DC_WR_CH_CONF_6__EMPTY               IPU_REGISTERS_OFFSET+0x00058078,0x00000000
+#define IPU_DC_WR_CH_CONF_6__FULL                IPU_REGISTERS_OFFSET+0x00058078,0xffffffff
+#define IPU_DC_WR_CH_CONF_6__PROG_START_TIME_6   IPU_REGISTERS_OFFSET+0x00058078,0x07FF0000
+#define IPU_DC_WR_CH_CONF_6__CHAN_MASK_DEFAULT_6 IPU_REGISTERS_OFFSET+0x00058078,0x00000100
+#define IPU_DC_WR_CH_CONF_6__PROG_CHAN_TYP_6     IPU_REGISTERS_OFFSET+0x00058078,0x000000E0
+#define IPU_DC_WR_CH_CONF_6__PROG_DISP_ID_6      IPU_REGISTERS_OFFSET+0x00058078,0x00000018
+#define IPU_DC_WR_CH_CONF_6__PROG_DI_ID_6        IPU_REGISTERS_OFFSET+0x00058078,0x00000004
+#define IPU_DC_WR_CH_CONF_6__W_SIZE_6            IPU_REGISTERS_OFFSET+0x00058078,0x00000003
+
+#define IPU_DC_WR_CH_ADDR_6__ADDR      IPU_REGISTERS_OFFSET+0x0005807C
+#define IPU_DC_WR_CH_ADDR_6__EMPTY     IPU_REGISTERS_OFFSET+0x0005807C,0x00000000
+#define IPU_DC_WR_CH_ADDR_6__FULL      IPU_REGISTERS_OFFSET+0x0005807C,0xffffffff
+#define IPU_DC_WR_CH_ADDR_6__ST_ADDR_6 IPU_REGISTERS_OFFSET+0x0005807C,0x1FFFFFFF
+
+#define IPU_DC_RL0_CH_6__ADDR                   IPU_REGISTERS_OFFSET+0x00058080
+#define IPU_DC_RL0_CH_6__EMPTY                  IPU_REGISTERS_OFFSET+0x00058080,0x00000000
+#define IPU_DC_RL0_CH_6__FULL                   IPU_REGISTERS_OFFSET+0x00058080,0xffffffff
+#define IPU_DC_RL0_CH_6__COD_NL_START_CHAN_6    IPU_REGISTERS_OFFSET+0x00058080,0xFF000000
+#define IPU_DC_RL0_CH_6__COD_NL_PRIORITY_CHAN_6 IPU_REGISTERS_OFFSET+0x00058080,0x000F0000
+#define IPU_DC_RL0_CH_6__COD_NF_START_CHAN_6    IPU_REGISTERS_OFFSET+0x00058080,0x0000FF00
+#define IPU_DC_RL0_CH_6__COD_NF_PRIORITY_CHAN_6 IPU_REGISTERS_OFFSET+0x00058080,0x0000000F
+
+#define IPU_DC_RL1_CH_6__ADDR                       IPU_REGISTERS_OFFSET+0x00058084
+#define IPU_DC_RL1_CH_6__EMPTY                      IPU_REGISTERS_OFFSET+0x00058084,0x00000000
+#define IPU_DC_RL1_CH_6__FULL                       IPU_REGISTERS_OFFSET+0x00058084,0xffffffff
+#define IPU_DC_RL1_CH_6__COD_NFIELD_START_CHAN_6    IPU_REGISTERS_OFFSET+0x00058084,0xFF000000
+#define IPU_DC_RL1_CH_6__COD_NFIELD_PRIORITY_CHAN_6 IPU_REGISTERS_OFFSET+0x00058084,0x000F0000
+#define IPU_DC_RL1_CH_6__COD_EOF_START_CHAN_6       IPU_REGISTERS_OFFSET+0x00058084,0x0000FF00
+#define IPU_DC_RL1_CH_6__COD_EOF_PRIORITY_CHAN_6    IPU_REGISTERS_OFFSET+0x00058084,0x0000000F
+
+#define IPU_DC_RL2_CH_6__ADDR                        IPU_REGISTERS_OFFSET+0x00058088
+#define IPU_DC_RL2_CH_6__EMPTY                       IPU_REGISTERS_OFFSET+0x00058088,0x00000000
+#define IPU_DC_RL2_CH_6__FULL                        IPU_REGISTERS_OFFSET+0x00058088,0xffffffff
+#define IPU_DC_RL2_CH_6__COD_EOFIELD_START_CHAN_6    IPU_REGISTERS_OFFSET+0x00058088,0xFF000000
+#define IPU_DC_RL2_CH_6__COD_EOFIELD_PRIORITY_CHAN_6 IPU_REGISTERS_OFFSET+0x00058088,0x000F0000
+#define IPU_DC_RL2_CH_6__COD_EOL_START_CHAN_6        IPU_REGISTERS_OFFSET+0x00058088,0x0000FF00
+#define IPU_DC_RL2_CH_6__COD_EOL_PRIORITY_CHAN_6     IPU_REGISTERS_OFFSET+0x00058088,0x0000000F
+
+#define IPU_DC_RL3_CH_6__ADDR                         IPU_REGISTERS_OFFSET+0x0005808C
+#define IPU_DC_RL3_CH_6__EMPTY                        IPU_REGISTERS_OFFSET+0x0005808C,0x00000000
+#define IPU_DC_RL3_CH_6__FULL                         IPU_REGISTERS_OFFSET+0x0005808C,0xffffffff
+#define IPU_DC_RL3_CH_6__COD_NEW_CHAN_START_CHAN_6    IPU_REGISTERS_OFFSET+0x0005808C,0xFF000000
+#define IPU_DC_RL3_CH_6__COD_NEW_CHAN_PRIORITY_CHAN_6 IPU_REGISTERS_OFFSET+0x0005808C,0x000F0000
+#define IPU_DC_RL3_CH_6__COD_NEW_ADDR_START_CHAN_6    IPU_REGISTERS_OFFSET+0x0005808C,0x0000FF00
+#define IPU_DC_RL3_CH_6__COD_NEW_ADDR_PRIORITY_CHAN_6 IPU_REGISTERS_OFFSET+0x0005808C,0x0000000F
+
+#define IPU_DC_RL4_CH_6__ADDR                         IPU_REGISTERS_OFFSET+0x00058090
+#define IPU_DC_RL4_CH_6__EMPTY                        IPU_REGISTERS_OFFSET+0x00058090,0x00000000
+#define IPU_DC_RL4_CH_6__FULL                         IPU_REGISTERS_OFFSET+0x00058090,0xffffffff
+#define IPU_DC_RL4_CH_6__COD_NEW_DATA_START_CHAN_6    IPU_REGISTERS_OFFSET+0x00058090,0x0000FF00
+#define IPU_DC_RL4_CH_6__COD_NEW_DATA_PRIORITY_CHAN_6 IPU_REGISTERS_OFFSET+0x00058090,0x0000000F
+
+#define IPU_DC_WR_CH_CONF1_8__ADDR                IPU_REGISTERS_OFFSET+0x00058094
+#define IPU_DC_WR_CH_CONF1_8__EMPTY               IPU_REGISTERS_OFFSET+0x00058094,0x00000000
+#define IPU_DC_WR_CH_CONF1_8__FULL                IPU_REGISTERS_OFFSET+0x00058094,0xffffffff
+#define IPU_DC_WR_CH_CONF1_8__MCU_DISP_ID_8       IPU_REGISTERS_OFFSET+0x00058094,0x00000018
+#define IPU_DC_WR_CH_CONF1_8__CHAN_MASK_DEFAULT_8 IPU_REGISTERS_OFFSET+0x00058094,0x00000004
+#define IPU_DC_WR_CH_CONF1_8__W_SIZE_8            IPU_REGISTERS_OFFSET+0x00058094,0x00000003
+
+#define IPU_DC_WR_CH_CONF2_8__ADDR                IPU_REGISTERS_OFFSET+0x00058098
+#define IPU_DC_WR_CH_CONF2_8__EMPTY               IPU_REGISTERS_OFFSET+0x00058098,0x00000000
+#define IPU_DC_WR_CH_CONF2_8__FULL                IPU_REGISTERS_OFFSET+0x00058098,0xffffffff
+#define IPU_DC_WR_CH_CONF2_8__NEW_ADDR_SPACE_SA_8 IPU_REGISTERS_OFFSET+0x00058098,0x1FFFFFFF
+
+#define IPU_DC_RL1_CH_8__ADDR                          IPU_REGISTERS_OFFSET+0x0005809C
+#define IPU_DC_RL1_CH_8__EMPTY                         IPU_REGISTERS_OFFSET+0x0005809C,0x00000000
+#define IPU_DC_RL1_CH_8__FULL                          IPU_REGISTERS_OFFSET+0x0005809C,0xffffffff
+#define IPU_DC_RL1_CH_8__COD_NEW_ADDR_START_CHAN_W_8_1 IPU_REGISTERS_OFFSET+0x0005809C,0xFF000000
+#define IPU_DC_RL1_CH_8__COD_NEW_ADDR_START_CHAN_W_8_0 IPU_REGISTERS_OFFSET+0x0005809C,0x0000FF00
+#define IPU_DC_RL1_CH_8__COD_NEW_ADDR_PRIORITY_CHAN_8  IPU_REGISTERS_OFFSET+0x0005809C,0x0000000F
+
+#define IPU_DC_RL2_CH_8__ADDR                          IPU_REGISTERS_OFFSET+0x000580A0
+#define IPU_DC_RL2_CH_8__EMPTY                         IPU_REGISTERS_OFFSET+0x000580A0,0x00000000
+#define IPU_DC_RL2_CH_8__FULL                          IPU_REGISTERS_OFFSET+0x000580A0,0xffffffff
+#define IPU_DC_RL2_CH_8__COD_NEW_CHAN_START_CHAN_W_8_1 IPU_REGISTERS_OFFSET+0x000580A0,0xFF000000
+#define IPU_DC_RL2_CH_8__COD_NEW_CHAN_START_CHAN_W_8_0 IPU_REGISTERS_OFFSET+0x000580A0,0x0000FF00
+#define IPU_DC_RL2_CH_8__COD_NEW_CHAN_PRIORITY_CHAN_8  IPU_REGISTERS_OFFSET+0x000580A0,0x0000000F
+
+#define IPU_DC_RL3_CH_8__ADDR                          IPU_REGISTERS_OFFSET+0x000580A4
+#define IPU_DC_RL3_CH_8__EMPTY                         IPU_REGISTERS_OFFSET+0x000580A4,0x00000000
+#define IPU_DC_RL3_CH_8__FULL                          IPU_REGISTERS_OFFSET+0x000580A4,0xffffffff
+#define IPU_DC_RL3_CH_8__COD_NEW_DATA_START_CHAN_W_8_1 IPU_REGISTERS_OFFSET+0x000580A4,0xFF000000
+#define IPU_DC_RL3_CH_8__COD_NEW_DATA_START_CHAN_W_8_0 IPU_REGISTERS_OFFSET+0x000580A4,0x0000FF00
+#define IPU_DC_RL3_CH_8__COD_NEW_DATA_PRIORITY_CHAN_8  IPU_REGISTERS_OFFSET+0x000580A4,0x0000000F
+
+#define IPU_DC_RL4_CH_8__ADDR                          IPU_REGISTERS_OFFSET+0x000580A8
+#define IPU_DC_RL4_CH_8__EMPTY                         IPU_REGISTERS_OFFSET+0x000580A8,0x00000000
+#define IPU_DC_RL4_CH_8__FULL                          IPU_REGISTERS_OFFSET+0x000580A8,0xffffffff
+#define IPU_DC_RL4_CH_8__COD_NEW_ADDR_START_CHAN_R_8_1 IPU_REGISTERS_OFFSET+0x000580A8,0xFF000000
+#define IPU_DC_RL4_CH_8__COD_NEW_ADDR_START_CHAN_R_8_0 IPU_REGISTERS_OFFSET+0x000580A8,0x0000FF00
+
+#define IPU_DC_RL5_CH_8__ADDR                          IPU_REGISTERS_OFFSET+0x000580AC
+#define IPU_DC_RL5_CH_8__EMPTY                         IPU_REGISTERS_OFFSET+0x000580AC,0x00000000
+#define IPU_DC_RL5_CH_8__FULL                          IPU_REGISTERS_OFFSET+0x000580AC,0xffffffff
+#define IPU_DC_RL5_CH_8__COD_NEW_CHAN_START_CHAN_R_8_1 IPU_REGISTERS_OFFSET+0x000580AC,0xFF000000
+#define IPU_DC_RL5_CH_8__COD_NEW_CHAN_START_CHAN_R_8_0 IPU_REGISTERS_OFFSET+0x000580AC,0x0000FF00
+
+#define IPU_DC_RL6_CH_8__ADDR                          IPU_REGISTERS_OFFSET+0x000580B0
+#define IPU_DC_RL6_CH_8__EMPTY                         IPU_REGISTERS_OFFSET+0x000580B0,0x00000000
+#define IPU_DC_RL6_CH_8__FULL                          IPU_REGISTERS_OFFSET+0x000580B0,0xffffffff
+#define IPU_DC_RL6_CH_8__COD_NEW_DATA_START_CHAN_R_8_1 IPU_REGISTERS_OFFSET+0x000580B0,0xFF000000
+#define IPU_DC_RL6_CH_8__COD_NEW_DATA_START_CHAN_R_8_0 IPU_REGISTERS_OFFSET+0x000580B0,0x0000FF00
+
+#define IPU_DC_WR_CH_CONF1_9__ADDR                IPU_REGISTERS_OFFSET+0x000580B4
+#define IPU_DC_WR_CH_CONF1_9__EMPTY               IPU_REGISTERS_OFFSET+0x000580B4,0x00000000
+#define IPU_DC_WR_CH_CONF1_9__FULL                IPU_REGISTERS_OFFSET+0x000580B4,0xffffffff
+#define IPU_DC_WR_CH_CONF1_9__MCU_DISP_ID_9       IPU_REGISTERS_OFFSET+0x000580B4,0x00000018
+#define IPU_DC_WR_CH_CONF1_9__CHAN_MASK_DEFAULT_9 IPU_REGISTERS_OFFSET+0x000580B4,0x00000004
+#define IPU_DC_WR_CH_CONF1_9__W_SIZE_9            IPU_REGISTERS_OFFSET+0x000580B4,0x00000003
+
+#define IPU_DC_WR_CH_CONF2_9__ADDR                IPU_REGISTERS_OFFSET+0x000580B8
+#define IPU_DC_WR_CH_CONF2_9__EMPTY               IPU_REGISTERS_OFFSET+0x000580B8,0x00000000
+#define IPU_DC_WR_CH_CONF2_9__FULL                IPU_REGISTERS_OFFSET+0x000580B8,0xffffffff
+#define IPU_DC_WR_CH_CONF2_9__NEW_ADDR_SPACE_SA_9 IPU_REGISTERS_OFFSET+0x000580B8,0x1FFFFFFF
+
+#define IPU_DC_RL1_CH_9__ADDR                          IPU_REGISTERS_OFFSET+0x000580BC
+#define IPU_DC_RL1_CH_9__EMPTY                         IPU_REGISTERS_OFFSET+0x000580BC,0x00000000
+#define IPU_DC_RL1_CH_9__FULL                          IPU_REGISTERS_OFFSET+0x000580BC,0xffffffff
+#define IPU_DC_RL1_CH_9__COD_NEW_ADDR_START_CHAN_W_9_1 IPU_REGISTERS_OFFSET+0x000580BC,0xFF000000
+#define IPU_DC_RL1_CH_9__COD_NEW_ADDR_START_CHAN_W_9_0 IPU_REGISTERS_OFFSET+0x000580BC,0x0000FF00
+#define IPU_DC_RL1_CH_9__COD_NEW_ADDR_PRIORITY_CHAN_9  IPU_REGISTERS_OFFSET+0x000580BC,0x0000000F
+
+#define IPU_DC_RL2_CH_9__ADDR                          IPU_REGISTERS_OFFSET+0x000580C0
+#define IPU_DC_RL2_CH_9__EMPTY                         IPU_REGISTERS_OFFSET+0x000580C0,0x00000000
+#define IPU_DC_RL2_CH_9__FULL                          IPU_REGISTERS_OFFSET+0x000580C0,0xffffffff
+#define IPU_DC_RL2_CH_9__COD_NEW_CHAN_START_CHAN_W_9_1 IPU_REGISTERS_OFFSET+0x000580C0,0xFF000000
+#define IPU_DC_RL2_CH_9__COD_NEW_CHAN_START_CHAN_W_9_0 IPU_REGISTERS_OFFSET+0x000580C0,0x0000FF00
+#define IPU_DC_RL2_CH_9__COD_NEW_CHAN_PRIORITY_CHAN_9  IPU_REGISTERS_OFFSET+0x000580C0,0x0000000F
+
+#define IPU_DC_RL3_CH_9__ADDR                          IPU_REGISTERS_OFFSET+0x000580C4
+#define IPU_DC_RL3_CH_9__EMPTY                         IPU_REGISTERS_OFFSET+0x000580C4,0x00000000
+#define IPU_DC_RL3_CH_9__FULL                          IPU_REGISTERS_OFFSET+0x000580C4,0xffffffff
+#define IPU_DC_RL3_CH_9__COD_NEW_DATA_START_CHAN_W_9_1 IPU_REGISTERS_OFFSET+0x000580C4,0xFF000000
+#define IPU_DC_RL3_CH_9__COD_NEW_DATA_START_CHAN_W_9_0 IPU_REGISTERS_OFFSET+0x000580C4,0x0000FF00
+#define IPU_DC_RL3_CH_9__COD_NEW_DATA_PRIORITY_CHAN_9  IPU_REGISTERS_OFFSET+0x000580C4,0x0000000F
+
+#define IPU_DC_RL4_CH_9__ADDR                          IPU_REGISTERS_OFFSET+0x000580C8
+#define IPU_DC_RL4_CH_9__EMPTY                         IPU_REGISTERS_OFFSET+0x000580C8,0x00000000
+#define IPU_DC_RL4_CH_9__FULL                          IPU_REGISTERS_OFFSET+0x000580C8,0xffffffff
+#define IPU_DC_RL4_CH_9__COD_NEW_ADDR_START_CHAN_R_9_1 IPU_REGISTERS_OFFSET+0x000580C8,0xFF000000
+#define IPU_DC_RL4_CH_9__COD_NEW_ADDR_START_CHAN_R_9_0 IPU_REGISTERS_OFFSET+0x000580C8,0x0000FF00
+
+#define IPU_DC_RL5_CH_9__ADDR                          IPU_REGISTERS_OFFSET+0x000580CC
+#define IPU_DC_RL5_CH_9__EMPTY                         IPU_REGISTERS_OFFSET+0x000580CC,0x00000000
+#define IPU_DC_RL5_CH_9__FULL                          IPU_REGISTERS_OFFSET+0x000580CC,0xffffffff
+#define IPU_DC_RL5_CH_9__COD_NEW_CHAN_START_CHAN_R_9_1 IPU_REGISTERS_OFFSET+0x000580CC,0xFF000000
+#define IPU_DC_RL5_CH_9__COD_NEW_CHAN_START_CHAN_R_9_0 IPU_REGISTERS_OFFSET+0x000580CC,0x0000FF00
+
+#define IPU_DC_RL6_CH_9__ADDR                          IPU_REGISTERS_OFFSET+0x000580D0
+#define IPU_DC_RL6_CH_9__EMPTY                         IPU_REGISTERS_OFFSET+0x000580D0,0x00000000
+#define IPU_DC_RL6_CH_9__FULL                          IPU_REGISTERS_OFFSET+0x000580D0,0xffffffff
+#define IPU_DC_RL6_CH_9__COD_NEW_DATA_START_CHAN_R_9_1 IPU_REGISTERS_OFFSET+0x000580D0,0xFF000000
+#define IPU_DC_RL6_CH_9__COD_NEW_DATA_START_CHAN_R_9_0 IPU_REGISTERS_OFFSET+0x000580D0,0x0000FF00
+
+#define IPU_DC_GEN__ADDR            IPU_REGISTERS_OFFSET+0x000580D4
+#define IPU_DC_GEN__EMPTY           IPU_REGISTERS_OFFSET+0x000580D4,0x00000000
+#define IPU_DC_GEN__FULL            IPU_REGISTERS_OFFSET+0x000580D4,0xffffffff
+#define IPU_DC_GEN__DC_BK_EN        IPU_REGISTERS_OFFSET+0x000580D4,0x01000000
+#define IPU_DC_GEN__DC_BKDIV        IPU_REGISTERS_OFFSET+0x000580D4,0x00FF0000
+#define IPU_DC_GEN__DC_CH5_TYPE     IPU_REGISTERS_OFFSET+0x000580D4,0x00000100
+#define IPU_DC_GEN__SYNC_PRIORITY_1 IPU_REGISTERS_OFFSET+0x000580D4,0x00000080
+#define IPU_DC_GEN__SYNC_PRIORITY_5 IPU_REGISTERS_OFFSET+0x000580D4,0x00000040
+#define IPU_DC_GEN__MASK4CHAN_5     IPU_REGISTERS_OFFSET+0x000580D4,0x00000020
+#define IPU_DC_GEN__MASK_EN         IPU_REGISTERS_OFFSET+0x000580D4,0x00000010
+#define IPU_DC_GEN__SYNC_1_6        IPU_REGISTERS_OFFSET+0x000580D4,0x00000006
+
+#define IPU_DC_DISP_CONF1_0__ADDR                IPU_REGISTERS_OFFSET+0x000580D8
+#define IPU_DC_DISP_CONF1_0__EMPTY               IPU_REGISTERS_OFFSET+0x000580D8,0x00000000
+#define IPU_DC_DISP_CONF1_0__FULL                IPU_REGISTERS_OFFSET+0x000580D8,0xffffffff
+#define IPU_DC_DISP_CONF1_0__DISP_RD_VALUE_PTR_0 IPU_REGISTERS_OFFSET+0x000580D8,0x00000080
+#define IPU_DC_DISP_CONF1_0__MCU_ACC_LB_MASK_0   IPU_REGISTERS_OFFSET+0x000580D8,0x00000040
+#define IPU_DC_DISP_CONF1_0__ADDR_BE_L_INC_0     IPU_REGISTERS_OFFSET+0x000580D8,0x00000030
+#define IPU_DC_DISP_CONF1_0__ADDR_INCREMENT_0    IPU_REGISTERS_OFFSET+0x000580D8,0x0000000C
+#define IPU_DC_DISP_CONF1_0__DISP_TYP_0          IPU_REGISTERS_OFFSET+0x000580D8,0x00000003
+
+#define IPU_DC_DISP_CONF1_1__ADDR                IPU_REGISTERS_OFFSET+0x000580DC
+#define IPU_DC_DISP_CONF1_1__EMPTY               IPU_REGISTERS_OFFSET+0x000580DC,0x00000000
+#define IPU_DC_DISP_CONF1_1__FULL                IPU_REGISTERS_OFFSET+0x000580DC,0xffffffff
+#define IPU_DC_DISP_CONF1_1__DISP_RD_VALUE_PTR_1 IPU_REGISTERS_OFFSET+0x000580DC,0x00000080
+#define IPU_DC_DISP_CONF1_1__MCU_ACC_LB_MASK_1   IPU_REGISTERS_OFFSET+0x000580DC,0x00000040
+#define IPU_DC_DISP_CONF1_1__ADDR_BE_L_INC_1     IPU_REGISTERS_OFFSET+0x000580DC,0x00000030
+#define IPU_DC_DISP_CONF1_1__ADDR_INCREMENT_1    IPU_REGISTERS_OFFSET+0x000580DC,0x0000000C
+#define IPU_DC_DISP_CONF1_1__DISP_TYP_1          IPU_REGISTERS_OFFSET+0x000580DC,0x00000003
+
+#define IPU_DC_DISP_CONF1_2__ADDR                IPU_REGISTERS_OFFSET+0x000580E0
+#define IPU_DC_DISP_CONF1_2__EMPTY               IPU_REGISTERS_OFFSET+0x000580E0,0x00000000
+#define IPU_DC_DISP_CONF1_2__FULL                IPU_REGISTERS_OFFSET+0x000580E0,0xffffffff
+#define IPU_DC_DISP_CONF1_2__DISP_RD_VALUE_PTR_2 IPU_REGISTERS_OFFSET+0x000580E0,0x00000080
+#define IPU_DC_DISP_CONF1_2__MCU_ACC_LB_MASK_2   IPU_REGISTERS_OFFSET+0x000580E0,0x00000040
+#define IPU_DC_DISP_CONF1_2__ADDR_BE_L_INC_2     IPU_REGISTERS_OFFSET+0x000580E0,0x00000030
+#define IPU_DC_DISP_CONF1_2__ADDR_INCREMENT_2    IPU_REGISTERS_OFFSET+0x000580E0,0x0000000C
+#define IPU_DC_DISP_CONF1_2__DISP_TYP_2          IPU_REGISTERS_OFFSET+0x000580E0,0x00000003
+
+#define IPU_DC_DISP_CONF1_3__ADDR                IPU_REGISTERS_OFFSET+0x000580E4
+#define IPU_DC_DISP_CONF1_3__EMPTY               IPU_REGISTERS_OFFSET+0x000580E4,0x00000000
+#define IPU_DC_DISP_CONF1_3__FULL                IPU_REGISTERS_OFFSET+0x000580E4,0xffffffff
+#define IPU_DC_DISP_CONF1_3__DISP_RD_VALUE_PTR_3 IPU_REGISTERS_OFFSET+0x000580E4,0x00000080
+#define IPU_DC_DISP_CONF1_3__MCU_ACC_LB_MASK_3   IPU_REGISTERS_OFFSET+0x000580E4,0x00000040
+#define IPU_DC_DISP_CONF1_3__ADDR_BE_L_INC_3     IPU_REGISTERS_OFFSET+0x000580E4,0x00000030
+#define IPU_DC_DISP_CONF1_3__ADDR_INCREMENT_3    IPU_REGISTERS_OFFSET+0x000580E4,0x0000000C
+#define IPU_DC_DISP_CONF1_3__DISP_TYP_3          IPU_REGISTERS_OFFSET+0x000580E4,0x00000003
+
+#define IPU_DC_DISP_CONF2_0__ADDR  IPU_REGISTERS_OFFSET+0x000580E8
+#define IPU_DC_DISP_CONF2_0__EMPTY IPU_REGISTERS_OFFSET+0x000580E8,0x00000000
+#define IPU_DC_DISP_CONF2_0__FULL  IPU_REGISTERS_OFFSET+0x000580E8,0xffffffff
+#define IPU_DC_DISP_CONF2_0__SL_0  IPU_REGISTERS_OFFSET+0x000580E8,0x1FFFFFFF
+
+#define IPU_DC_DISP_CONF2_1__ADDR  IPU_REGISTERS_OFFSET+0x000580EC
+#define IPU_DC_DISP_CONF2_1__EMPTY IPU_REGISTERS_OFFSET+0x000580EC,0x00000000
+#define IPU_DC_DISP_CONF2_1__FULL  IPU_REGISTERS_OFFSET+0x000580EC,0xffffffff
+#define IPU_DC_DISP_CONF2_1__SL_1  IPU_REGISTERS_OFFSET+0x000580EC,0x1FFFFFFF
+
+#define IPU_DC_DISP_CONF2_2__ADDR  IPU_REGISTERS_OFFSET+0x000580F0
+#define IPU_DC_DISP_CONF2_2__EMPTY IPU_REGISTERS_OFFSET+0x000580F0,0x00000000
+#define IPU_DC_DISP_CONF2_2__FULL  IPU_REGISTERS_OFFSET+0x000580F0,0xffffffff
+#define IPU_DC_DISP_CONF2_2__SL_2  IPU_REGISTERS_OFFSET+0x000580F0,0x1FFFFFFF
+
+#define IPU_DC_DISP_CONF2_3__ADDR  IPU_REGISTERS_OFFSET+0x000580F4
+#define IPU_DC_DISP_CONF2_3__EMPTY IPU_REGISTERS_OFFSET+0x000580F4,0x00000000
+#define IPU_DC_DISP_CONF2_3__FULL  IPU_REGISTERS_OFFSET+0x000580F4,0xffffffff
+#define IPU_DC_DISP_CONF2_3__SL_3  IPU_REGISTERS_OFFSET+0x000580F4,0x1FFFFFFF
+
+#define IPU_DC_DI0_CONF_1__ADDR                IPU_REGISTERS_OFFSET+0x000580F8
+#define IPU_DC_DI0_CONF_1__EMPTY               IPU_REGISTERS_OFFSET+0x000580F8,0x00000000
+#define IPU_DC_DI0_CONF_1__FULL                IPU_REGISTERS_OFFSET+0x000580F8,0xffffffff
+#define IPU_DC_DI0_CONF_1__DI_READ_DATA_MASK_0 IPU_REGISTERS_OFFSET+0x000580F8,0xFFFFFFFF
+
+#define IPU_DC_DI0_CONF_2__ADDR                     IPU_REGISTERS_OFFSET+0x000580FC
+#define IPU_DC_DI0_CONF_2__EMPTY                    IPU_REGISTERS_OFFSET+0x000580FC,0x00000000
+#define IPU_DC_DI0_CONF_2__FULL                     IPU_REGISTERS_OFFSET+0x000580FC,0xffffffff
+#define IPU_DC_DI0_CONF_2__DI_READ_DATA_ACK_VALUE_0 IPU_REGISTERS_OFFSET+0x000580FC,0xFFFFFFFF
+
+#define IPU_DC_DI1_CONF_1__ADDR                IPU_REGISTERS_OFFSET+0x00058100
+#define IPU_DC_DI1_CONF_1__EMPTY               IPU_REGISTERS_OFFSET+0x00058100,0x00000000
+#define IPU_DC_DI1_CONF_1__FULL                IPU_REGISTERS_OFFSET+0x00058100,0xffffffff
+#define IPU_DC_DI1_CONF_1__DI_READ_DATA_MASK_1 IPU_REGISTERS_OFFSET+0x00058100,0xFFFFFFFF
+
+#define IPU_DC_DI1_CONF_2__ADDR                     IPU_REGISTERS_OFFSET+0x00058104
+#define IPU_DC_DI1_CONF_2__EMPTY                    IPU_REGISTERS_OFFSET+0x00058104,0x00000000
+#define IPU_DC_DI1_CONF_2__FULL                     IPU_REGISTERS_OFFSET+0x00058104,0xffffffff
+#define IPU_DC_DI1_CONF_2__DI_READ_DATA_ACK_VALUE_1 IPU_REGISTERS_OFFSET+0x00058104,0xFFFFFFFF
+
+#define IPU_DC_MAP_CONF_0__ADDR                 IPU_REGISTERS_OFFSET+0x00058108
+#define IPU_DC_MAP_CONF_0__EMPTY                IPU_REGISTERS_OFFSET+0x00058108,0x00000000
+#define IPU_DC_MAP_CONF_0__FULL                 IPU_REGISTERS_OFFSET+0x00058108,0xffffffff
+#define IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE2_1 IPU_REGISTERS_OFFSET+0x00058108,0x7C000000
+#define IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE1_1 IPU_REGISTERS_OFFSET+0x00058108,0x03E00000
+#define IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE0_1 IPU_REGISTERS_OFFSET+0x00058108,0x001F0000
+#define IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE2_0 IPU_REGISTERS_OFFSET+0x00058108,0x00007C00
+#define IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE1_0 IPU_REGISTERS_OFFSET+0x00058108,0x000003E0
+#define IPU_DC_MAP_CONF_0__MAPPING_PNTR_BYTE0_0 IPU_REGISTERS_OFFSET+0x00058108,0x0000001F
+
+#define IPU_DC_MAP_CONF_1__ADDR                 IPU_REGISTERS_OFFSET+0x0005810C
+#define IPU_DC_MAP_CONF_1__EMPTY                IPU_REGISTERS_OFFSET+0x0005810C,0x00000000
+#define IPU_DC_MAP_CONF_1__FULL                 IPU_REGISTERS_OFFSET+0x0005810C,0xffffffff
+#define IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE2_3 IPU_REGISTERS_OFFSET+0x0005810C,0x7C000000
+#define IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE1_3 IPU_REGISTERS_OFFSET+0x0005810C,0x03E00000
+#define IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE0_3 IPU_REGISTERS_OFFSET+0x0005810C,0x001F0000
+#define IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE2_2 IPU_REGISTERS_OFFSET+0x0005810C,0x00007C00
+#define IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE1_2 IPU_REGISTERS_OFFSET+0x0005810C,0x000003E0
+#define IPU_DC_MAP_CONF_1__MAPPING_PNTR_BYTE0_2 IPU_REGISTERS_OFFSET+0x0005810C,0x0000001F
+
+#define IPU_DC_MAP_CONF_2__ADDR                 IPU_REGISTERS_OFFSET+0x00058110
+#define IPU_DC_MAP_CONF_2__EMPTY                IPU_REGISTERS_OFFSET+0x00058110,0x00000000
+#define IPU_DC_MAP_CONF_2__FULL                 IPU_REGISTERS_OFFSET+0x00058110,0xffffffff
+#define IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE2_5 IPU_REGISTERS_OFFSET+0x00058110,0x7C000000
+#define IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE1_5 IPU_REGISTERS_OFFSET+0x00058110,0x03E00000
+#define IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE0_5 IPU_REGISTERS_OFFSET+0x00058110,0x001F0000
+#define IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE2_4 IPU_REGISTERS_OFFSET+0x00058110,0x00007C00
+#define IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE1_4 IPU_REGISTERS_OFFSET+0x00058110,0x000003E0
+#define IPU_DC_MAP_CONF_2__MAPPING_PNTR_BYTE0_4 IPU_REGISTERS_OFFSET+0x00058110,0x0000001F
+
+#define IPU_DC_MAP_CONF_3__ADDR                 IPU_REGISTERS_OFFSET+0x00058114
+#define IPU_DC_MAP_CONF_3__EMPTY                IPU_REGISTERS_OFFSET+0x00058114,0x00000000
+#define IPU_DC_MAP_CONF_3__FULL                 IPU_REGISTERS_OFFSET+0x00058114,0xffffffff
+#define IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE2_7 IPU_REGISTERS_OFFSET+0x00058114,0x7C000000
+#define IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE1_7 IPU_REGISTERS_OFFSET+0x00058114,0x03E00000
+#define IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE0_7 IPU_REGISTERS_OFFSET+0x00058114,0x001F0000
+#define IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE2_6 IPU_REGISTERS_OFFSET+0x00058114,0x00007C00
+#define IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE1_6 IPU_REGISTERS_OFFSET+0x00058114,0x000003E0
+#define IPU_DC_MAP_CONF_3__MAPPING_PNTR_BYTE0_6 IPU_REGISTERS_OFFSET+0x00058114,0x0000001F
+
+#define IPU_DC_MAP_CONF_4__ADDR                 IPU_REGISTERS_OFFSET+0x00058118
+#define IPU_DC_MAP_CONF_4__EMPTY                IPU_REGISTERS_OFFSET+0x00058118,0x00000000
+#define IPU_DC_MAP_CONF_4__FULL                 IPU_REGISTERS_OFFSET+0x00058118,0xffffffff
+#define IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE2_9 IPU_REGISTERS_OFFSET+0x00058118,0x7C000000
+#define IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE1_9 IPU_REGISTERS_OFFSET+0x00058118,0x03E00000
+#define IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE0_9 IPU_REGISTERS_OFFSET+0x00058118,0x001F0000
+#define IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE2_8 IPU_REGISTERS_OFFSET+0x00058118,0x00007C00
+#define IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE1_8 IPU_REGISTERS_OFFSET+0x00058118,0x000003E0
+#define IPU_DC_MAP_CONF_4__MAPPING_PNTR_BYTE0_8 IPU_REGISTERS_OFFSET+0x00058118,0x0000001F
+
+#define IPU_DC_MAP_CONF_5__ADDR                  IPU_REGISTERS_OFFSET+0x0005811C
+#define IPU_DC_MAP_CONF_5__EMPTY                 IPU_REGISTERS_OFFSET+0x0005811C,0x00000000
+#define IPU_DC_MAP_CONF_5__FULL                  IPU_REGISTERS_OFFSET+0x0005811C,0xffffffff
+#define IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE2_11 IPU_REGISTERS_OFFSET+0x0005811C,0x7C000000
+#define IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE1_11 IPU_REGISTERS_OFFSET+0x0005811C,0x03E00000
+#define IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE0_11 IPU_REGISTERS_OFFSET+0x0005811C,0x001F0000
+#define IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE2_10 IPU_REGISTERS_OFFSET+0x0005811C,0x00007C00
+#define IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE1_10 IPU_REGISTERS_OFFSET+0x0005811C,0x000003E0
+#define IPU_DC_MAP_CONF_5__MAPPING_PNTR_BYTE0_10 IPU_REGISTERS_OFFSET+0x0005811C,0x0000001F
+
+#define IPU_DC_MAP_CONF_6__ADDR                  IPU_REGISTERS_OFFSET+0x00058120
+#define IPU_DC_MAP_CONF_6__EMPTY                 IPU_REGISTERS_OFFSET+0x00058120,0x00000000
+#define IPU_DC_MAP_CONF_6__FULL                  IPU_REGISTERS_OFFSET+0x00058120,0xffffffff
+#define IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE2_13 IPU_REGISTERS_OFFSET+0x00058120,0x7C000000
+#define IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE1_13 IPU_REGISTERS_OFFSET+0x00058120,0x03E00000
+#define IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE0_13 IPU_REGISTERS_OFFSET+0x00058120,0x001F0000
+#define IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE2_12 IPU_REGISTERS_OFFSET+0x00058120,0x00007C00
+#define IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE1_12 IPU_REGISTERS_OFFSET+0x00058120,0x000003E0
+#define IPU_DC_MAP_CONF_6__MAPPING_PNTR_BYTE0_12 IPU_REGISTERS_OFFSET+0x00058120,0x0000001F
+
+#define IPU_DC_MAP_CONF_7__ADDR                  IPU_REGISTERS_OFFSET+0x00058124
+#define IPU_DC_MAP_CONF_7__EMPTY                 IPU_REGISTERS_OFFSET+0x00058124,0x00000000
+#define IPU_DC_MAP_CONF_7__FULL                  IPU_REGISTERS_OFFSET+0x00058124,0xffffffff
+#define IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE2_15 IPU_REGISTERS_OFFSET+0x00058124,0x7C000000
+#define IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE1_15 IPU_REGISTERS_OFFSET+0x00058124,0x03E00000
+#define IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE0_15 IPU_REGISTERS_OFFSET+0x00058124,0x001F0000
+#define IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE2_14 IPU_REGISTERS_OFFSET+0x00058124,0x00007C00
+#define IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE1_14 IPU_REGISTERS_OFFSET+0x00058124,0x000003E0
+#define IPU_DC_MAP_CONF_7__MAPPING_PNTR_BYTE0_14 IPU_REGISTERS_OFFSET+0x00058124,0x0000001F
+
+#define IPU_DC_MAP_CONF_8__ADDR                  IPU_REGISTERS_OFFSET+0x00058128
+#define IPU_DC_MAP_CONF_8__EMPTY                 IPU_REGISTERS_OFFSET+0x00058128,0x00000000
+#define IPU_DC_MAP_CONF_8__FULL                  IPU_REGISTERS_OFFSET+0x00058128,0xffffffff
+#define IPU_DC_MAP_CONF_8__MAPPING_PNTR_BYTE2_17 IPU_REGISTERS_OFFSET+0x00058128,0x7C000000
+#define IPU_DC_MAP_CONF_8__MAPPING_PNTR_BYTE1_17 IPU_REGISTERS_OFFSET+0x00058128,0x03E00000
+#define IPU_DC_MAP_CONF_8__MAPPING_PNTR_BYTE0_17 IPU_REGISTERS_OFFSET+0x00058128,0x001F0000
+#define IPU_DC_MAP_CONF_8__MAPPING_PNTR_BYTE2_16 IPU_REGISTERS_OFFSET+0x00058128,0x00007C00
+#define IPU_DC_MAP_CONF_8__MAPPING_PNTR_BYTE1_16 IPU_REGISTERS_OFFSET+0x00058128,0x000003E0
+#define IPU_DC_MAP_CONF_8__MAPPING_PNTR_BYTE0_16 IPU_REGISTERS_OFFSET+0x00058128,0x0000001F
+
+#define IPU_DC_MAP_CONF_9__ADDR                  IPU_REGISTERS_OFFSET+0x0005812C
+#define IPU_DC_MAP_CONF_9__EMPTY                 IPU_REGISTERS_OFFSET+0x0005812C,0x00000000
+#define IPU_DC_MAP_CONF_9__FULL                  IPU_REGISTERS_OFFSET+0x0005812C,0xffffffff
+#define IPU_DC_MAP_CONF_9__MAPPING_PNTR_BYTE2_19 IPU_REGISTERS_OFFSET+0x0005812C,0x7C000000
+#define IPU_DC_MAP_CONF_9__MAPPING_PNTR_BYTE1_19 IPU_REGISTERS_OFFSET+0x0005812C,0x03E00000
+#define IPU_DC_MAP_CONF_9__MAPPING_PNTR_BYTE0_19 IPU_REGISTERS_OFFSET+0x0005812C,0x001F0000
+#define IPU_DC_MAP_CONF_9__MAPPING_PNTR_BYTE2_18 IPU_REGISTERS_OFFSET+0x0005812C,0x00007C00
+#define IPU_DC_MAP_CONF_9__MAPPING_PNTR_BYTE1_18 IPU_REGISTERS_OFFSET+0x0005812C,0x000003E0
+#define IPU_DC_MAP_CONF_9__MAPPING_PNTR_BYTE0_18 IPU_REGISTERS_OFFSET+0x0005812C,0x0000001F
+
+#define IPU_DC_MAP_CONF_10__ADDR                  IPU_REGISTERS_OFFSET+0x00058130
+#define IPU_DC_MAP_CONF_10__EMPTY                 IPU_REGISTERS_OFFSET+0x00058130,0x00000000
+#define IPU_DC_MAP_CONF_10__FULL                  IPU_REGISTERS_OFFSET+0x00058130,0xffffffff
+#define IPU_DC_MAP_CONF_10__MAPPING_PNTR_BYTE2_21 IPU_REGISTERS_OFFSET+0x00058130,0x7C000000
+#define IPU_DC_MAP_CONF_10__MAPPING_PNTR_BYTE1_21 IPU_REGISTERS_OFFSET+0x00058130,0x03E00000
+#define IPU_DC_MAP_CONF_10__MAPPING_PNTR_BYTE0_21 IPU_REGISTERS_OFFSET+0x00058130,0x001F0000
+#define IPU_DC_MAP_CONF_10__MAPPING_PNTR_BYTE2_20 IPU_REGISTERS_OFFSET+0x00058130,0x00007C00
+#define IPU_DC_MAP_CONF_10__MAPPING_PNTR_BYTE1_20 IPU_REGISTERS_OFFSET+0x00058130,0x000003E0
+#define IPU_DC_MAP_CONF_10__MAPPING_PNTR_BYTE0_20 IPU_REGISTERS_OFFSET+0x00058130,0x0000001F
+
+#define IPU_DC_MAP_CONF_11__ADDR                  IPU_REGISTERS_OFFSET+0x00058134
+#define IPU_DC_MAP_CONF_11__EMPTY                 IPU_REGISTERS_OFFSET+0x00058134,0x00000000
+#define IPU_DC_MAP_CONF_11__FULL                  IPU_REGISTERS_OFFSET+0x00058134,0xffffffff
+#define IPU_DC_MAP_CONF_11__MAPPING_PNTR_BYTE2_23 IPU_REGISTERS_OFFSET+0x00058134,0x7C000000
+#define IPU_DC_MAP_CONF_11__MAPPING_PNTR_BYTE1_23 IPU_REGISTERS_OFFSET+0x00058134,0x03E00000
+#define IPU_DC_MAP_CONF_11__MAPPING_PNTR_BYTE0_23 IPU_REGISTERS_OFFSET+0x00058134,0x001F0000
+#define IPU_DC_MAP_CONF_11__MAPPING_PNTR_BYTE2_22 IPU_REGISTERS_OFFSET+0x00058134,0x00007C00
+#define IPU_DC_MAP_CONF_11__MAPPING_PNTR_BYTE1_22 IPU_REGISTERS_OFFSET+0x00058134,0x000003E0
+#define IPU_DC_MAP_CONF_11__MAPPING_PNTR_BYTE0_22 IPU_REGISTERS_OFFSET+0x00058134,0x0000001F
+
+#define IPU_DC_MAP_CONF_12__ADDR                  IPU_REGISTERS_OFFSET+0x00058138
+#define IPU_DC_MAP_CONF_12__EMPTY                 IPU_REGISTERS_OFFSET+0x00058138,0x00000000
+#define IPU_DC_MAP_CONF_12__FULL                  IPU_REGISTERS_OFFSET+0x00058138,0xffffffff
+#define IPU_DC_MAP_CONF_12__MAPPING_PNTR_BYTE2_25 IPU_REGISTERS_OFFSET+0x00058138,0x7C000000
+#define IPU_DC_MAP_CONF_12__MAPPING_PNTR_BYTE1_25 IPU_REGISTERS_OFFSET+0x00058138,0x03E00000
+#define IPU_DC_MAP_CONF_12__MAPPING_PNTR_BYTE0_25 IPU_REGISTERS_OFFSET+0x00058138,0x001F0000
+#define IPU_DC_MAP_CONF_12__MAPPING_PNTR_BYTE2_24 IPU_REGISTERS_OFFSET+0x00058138,0x00007C00
+#define IPU_DC_MAP_CONF_12__MAPPING_PNTR_BYTE1_24 IPU_REGISTERS_OFFSET+0x00058138,0x000003E0
+#define IPU_DC_MAP_CONF_12__MAPPING_PNTR_BYTE0_24 IPU_REGISTERS_OFFSET+0x00058138,0x0000001F
+
+#define IPU_DC_MAP_CONF_13__ADDR                  IPU_REGISTERS_OFFSET+0x0005813C
+#define IPU_DC_MAP_CONF_13__EMPTY                 IPU_REGISTERS_OFFSET+0x0005813C,0x00000000
+#define IPU_DC_MAP_CONF_13__FULL                  IPU_REGISTERS_OFFSET+0x0005813C,0xffffffff
+#define IPU_DC_MAP_CONF_13__MAPPING_PNTR_BYTE2_27 IPU_REGISTERS_OFFSET+0x0005813C,0x7C000000
+#define IPU_DC_MAP_CONF_13__MAPPING_PNTR_BYTE1_27 IPU_REGISTERS_OFFSET+0x0005813C,0x03E00000
+#define IPU_DC_MAP_CONF_13__MAPPING_PNTR_BYTE0_27 IPU_REGISTERS_OFFSET+0x0005813C,0x001F0000
+#define IPU_DC_MAP_CONF_13__MAPPING_PNTR_BYTE2_26 IPU_REGISTERS_OFFSET+0x0005813C,0x00007C00
+#define IPU_DC_MAP_CONF_13__MAPPING_PNTR_BYTE1_26 IPU_REGISTERS_OFFSET+0x0005813C,0x000003E0
+#define IPU_DC_MAP_CONF_13__MAPPING_PNTR_BYTE0_26 IPU_REGISTERS_OFFSET+0x0005813C,0x0000001F
+
+#define IPU_DC_MAP_CONF_14__ADDR                  IPU_REGISTERS_OFFSET+0x00058140
+#define IPU_DC_MAP_CONF_14__EMPTY                 IPU_REGISTERS_OFFSET+0x00058140,0x00000000
+#define IPU_DC_MAP_CONF_14__FULL                  IPU_REGISTERS_OFFSET+0x00058140,0xffffffff
+#define IPU_DC_MAP_CONF_14__MAPPING_PNTR_BYTE2_29 IPU_REGISTERS_OFFSET+0x00058140,0x7C000000
+#define IPU_DC_MAP_CONF_14__MAPPING_PNTR_BYTE1_29 IPU_REGISTERS_OFFSET+0x00058140,0x03E00000
+#define IPU_DC_MAP_CONF_14__MAPPING_PNTR_BYTE0_29 IPU_REGISTERS_OFFSET+0x00058140,0x001F0000
+#define IPU_DC_MAP_CONF_14__MAPPING_PNTR_BYTE2_28 IPU_REGISTERS_OFFSET+0x00058140,0x00007C00
+#define IPU_DC_MAP_CONF_14__MAPPING_PNTR_BYTE1_28 IPU_REGISTERS_OFFSET+0x00058140,0x000003E0
+#define IPU_DC_MAP_CONF_14__MAPPING_PNTR_BYTE0_28 IPU_REGISTERS_OFFSET+0x00058140,0x0000001F
+
+#define IPU_DC_MAP_CONF_15__ADDR        IPU_REGISTERS_OFFSET+0x00058144
+#define IPU_DC_MAP_CONF_15__EMPTY       IPU_REGISTERS_OFFSET+0x00058144,0x00000000
+#define IPU_DC_MAP_CONF_15__FULL        IPU_REGISTERS_OFFSET+0x00058144,0xffffffff
+#define IPU_DC_MAP_CONF_15__MD_OFFSET_1 IPU_REGISTERS_OFFSET+0x00058144,0x1F000000
+#define IPU_DC_MAP_CONF_15__MD_MASK_1   IPU_REGISTERS_OFFSET+0x00058144,0x00FF0000
+#define IPU_DC_MAP_CONF_15__MD_OFFSET_0 IPU_REGISTERS_OFFSET+0x00058144,0x00001F00
+#define IPU_DC_MAP_CONF_15__MD_MASK_0   IPU_REGISTERS_OFFSET+0x00058144,0x000000FF
+
+#define IPU_DC_MAP_CONF_16__ADDR        IPU_REGISTERS_OFFSET+0x00058148
+#define IPU_DC_MAP_CONF_16__EMPTY       IPU_REGISTERS_OFFSET+0x00058148,0x00000000
+#define IPU_DC_MAP_CONF_16__FULL        IPU_REGISTERS_OFFSET+0x00058148,0xffffffff
+#define IPU_DC_MAP_CONF_16__MD_OFFSET_3 IPU_REGISTERS_OFFSET+0x00058148,0x1F000000
+#define IPU_DC_MAP_CONF_16__MD_MASK_3   IPU_REGISTERS_OFFSET+0x00058148,0x00FF0000
+#define IPU_DC_MAP_CONF_16__MD_OFFSET_2 IPU_REGISTERS_OFFSET+0x00058148,0x00001F00
+#define IPU_DC_MAP_CONF_16__MD_MASK_2   IPU_REGISTERS_OFFSET+0x00058148,0x000000FF
+
+#define IPU_DC_MAP_CONF_17__ADDR        IPU_REGISTERS_OFFSET+0x0005814C
+#define IPU_DC_MAP_CONF_17__EMPTY       IPU_REGISTERS_OFFSET+0x0005814C,0x00000000
+#define IPU_DC_MAP_CONF_17__FULL        IPU_REGISTERS_OFFSET+0x0005814C,0xffffffff
+#define IPU_DC_MAP_CONF_17__MD_OFFSET_5 IPU_REGISTERS_OFFSET+0x0005814C,0x1F000000
+#define IPU_DC_MAP_CONF_17__MD_MASK_5   IPU_REGISTERS_OFFSET+0x0005814C,0x00FF0000
+#define IPU_DC_MAP_CONF_17__MD_OFFSET_4 IPU_REGISTERS_OFFSET+0x0005814C,0x00001F00
+#define IPU_DC_MAP_CONF_17__MD_MASK_4   IPU_REGISTERS_OFFSET+0x0005814C,0x000000FF
+
+#define IPU_DC_MAP_CONF_18__ADDR        IPU_REGISTERS_OFFSET+0x00058150
+#define IPU_DC_MAP_CONF_18__EMPTY       IPU_REGISTERS_OFFSET+0x00058150,0x00000000
+#define IPU_DC_MAP_CONF_18__FULL        IPU_REGISTERS_OFFSET+0x00058150,0xffffffff
+#define IPU_DC_MAP_CONF_18__MD_OFFSET_7 IPU_REGISTERS_OFFSET+0x00058150,0x1F000000
+#define IPU_DC_MAP_CONF_18__MD_MASK_7   IPU_REGISTERS_OFFSET+0x00058150,0x00FF0000
+#define IPU_DC_MAP_CONF_18__MD_OFFSET_6 IPU_REGISTERS_OFFSET+0x00058150,0x00001F00
+#define IPU_DC_MAP_CONF_18__MD_MASK_6   IPU_REGISTERS_OFFSET+0x00058150,0x000000FF
+
+#define IPU_DC_MAP_CONF_19__ADDR        IPU_REGISTERS_OFFSET+0x00058154
+#define IPU_DC_MAP_CONF_19__EMPTY       IPU_REGISTERS_OFFSET+0x00058154,0x00000000
+#define IPU_DC_MAP_CONF_19__FULL        IPU_REGISTERS_OFFSET+0x00058154,0xffffffff
+#define IPU_DC_MAP_CONF_19__MD_OFFSET_9 IPU_REGISTERS_OFFSET+0x00058154,0x1F000000
+#define IPU_DC_MAP_CONF_19__MD_MASK_9   IPU_REGISTERS_OFFSET+0x00058154,0x00FF0000
+#define IPU_DC_MAP_CONF_19__MD_OFFSET_8 IPU_REGISTERS_OFFSET+0x00058154,0x00001F00
+#define IPU_DC_MAP_CONF_19__MD_MASK_8   IPU_REGISTERS_OFFSET+0x00058154,0x000000FF
+
+#define IPU_DC_MAP_CONF_20__ADDR         IPU_REGISTERS_OFFSET+0x00058158
+#define IPU_DC_MAP_CONF_20__EMPTY        IPU_REGISTERS_OFFSET+0x00058158,0x00000000
+#define IPU_DC_MAP_CONF_20__FULL         IPU_REGISTERS_OFFSET+0x00058158,0xffffffff
+#define IPU_DC_MAP_CONF_20__MD_OFFSET_11 IPU_REGISTERS_OFFSET+0x00058158,0x1F000000
+#define IPU_DC_MAP_CONF_20__MD_MASK_11   IPU_REGISTERS_OFFSET+0x00058158,0x00FF0000
+#define IPU_DC_MAP_CONF_20__MD_OFFSET_10 IPU_REGISTERS_OFFSET+0x00058158,0x00001F00
+#define IPU_DC_MAP_CONF_20__MD_MASK_10   IPU_REGISTERS_OFFSET+0x00058158,0x000000FF
+
+#define IPU_DC_MAP_CONF_21__ADDR         IPU_REGISTERS_OFFSET+0x0005815C
+#define IPU_DC_MAP_CONF_21__EMPTY        IPU_REGISTERS_OFFSET+0x0005815C,0x00000000
+#define IPU_DC_MAP_CONF_21__FULL         IPU_REGISTERS_OFFSET+0x0005815C,0xffffffff
+#define IPU_DC_MAP_CONF_21__MD_OFFSET_13 IPU_REGISTERS_OFFSET+0x0005815C,0x1F000000
+#define IPU_DC_MAP_CONF_21__MD_MASK_13   IPU_REGISTERS_OFFSET+0x0005815C,0x00FF0000
+#define IPU_DC_MAP_CONF_21__MD_OFFSET_12 IPU_REGISTERS_OFFSET+0x0005815C,0x00001F00
+#define IPU_DC_MAP_CONF_21__MD_MASK_12   IPU_REGISTERS_OFFSET+0x0005815C,0x000000FF
+
+#define IPU_DC_MAP_CONF_22__ADDR         IPU_REGISTERS_OFFSET+0x00058160
+#define IPU_DC_MAP_CONF_22__EMPTY        IPU_REGISTERS_OFFSET+0x00058160,0x00000000
+#define IPU_DC_MAP_CONF_22__FULL         IPU_REGISTERS_OFFSET+0x00058160,0xffffffff
+#define IPU_DC_MAP_CONF_22__MD_OFFSET_15 IPU_REGISTERS_OFFSET+0x00058160,0x1F000000
+#define IPU_DC_MAP_CONF_22__MD_MASK_15   IPU_REGISTERS_OFFSET+0x00058160,0x00FF0000
+#define IPU_DC_MAP_CONF_22__MD_OFFSET_14 IPU_REGISTERS_OFFSET+0x00058160,0x00001F00
+#define IPU_DC_MAP_CONF_22__MD_MASK_14   IPU_REGISTERS_OFFSET+0x00058160,0x000000FF
+
+#define IPU_DC_MAP_CONF_23__ADDR         IPU_REGISTERS_OFFSET+0x00058164
+#define IPU_DC_MAP_CONF_23__EMPTY        IPU_REGISTERS_OFFSET+0x00058164,0x00000000
+#define IPU_DC_MAP_CONF_23__FULL         IPU_REGISTERS_OFFSET+0x00058164,0xffffffff
+#define IPU_DC_MAP_CONF_23__MD_OFFSET_17 IPU_REGISTERS_OFFSET+0x00058164,0x1F000000
+#define IPU_DC_MAP_CONF_23__MD_MASK_17   IPU_REGISTERS_OFFSET+0x00058164,0x00FF0000
+#define IPU_DC_MAP_CONF_23__MD_OFFSET_16 IPU_REGISTERS_OFFSET+0x00058164,0x00001F00
+#define IPU_DC_MAP_CONF_23__MD_MASK_16   IPU_REGISTERS_OFFSET+0x00058164,0x000000FF
+
+#define IPU_DC_MAP_CONF_24__ADDR         IPU_REGISTERS_OFFSET+0x00058168
+#define IPU_DC_MAP_CONF_24__EMPTY        IPU_REGISTERS_OFFSET+0x00058168,0x00000000
+#define IPU_DC_MAP_CONF_24__FULL         IPU_REGISTERS_OFFSET+0x00058168,0xffffffff
+#define IPU_DC_MAP_CONF_24__MD_OFFSET_19 IPU_REGISTERS_OFFSET+0x00058168,0x1F000000
+#define IPU_DC_MAP_CONF_24__MD_MASK_19   IPU_REGISTERS_OFFSET+0x00058168,0x00FF0000
+#define IPU_DC_MAP_CONF_24__MD_OFFSET_18 IPU_REGISTERS_OFFSET+0x00058168,0x00001F00
+#define IPU_DC_MAP_CONF_24__MD_MASK_18   IPU_REGISTERS_OFFSET+0x00058168,0x000000FF
+
+#define IPU_DC_MAP_CONF_25__ADDR         IPU_REGISTERS_OFFSET+0x0005816C
+#define IPU_DC_MAP_CONF_25__EMPTY        IPU_REGISTERS_OFFSET+0x0005816C,0x00000000
+#define IPU_DC_MAP_CONF_25__FULL         IPU_REGISTERS_OFFSET+0x0005816C,0xffffffff
+#define IPU_DC_MAP_CONF_25__MD_OFFSET_21 IPU_REGISTERS_OFFSET+0x0005816C,0x1F000000
+#define IPU_DC_MAP_CONF_25__MD_MASK_21   IPU_REGISTERS_OFFSET+0x0005816C,0x00FF0000
+#define IPU_DC_MAP_CONF_25__MD_OFFSET_20 IPU_REGISTERS_OFFSET+0x0005816C,0x00001F00
+#define IPU_DC_MAP_CONF_25__MD_MASK_20   IPU_REGISTERS_OFFSET+0x0005816C,0x000000FF
+
+#define IPU_DC_MAP_CONF_26__ADDR         IPU_REGISTERS_OFFSET+0x00058170
+#define IPU_DC_MAP_CONF_26__EMPTY        IPU_REGISTERS_OFFSET+0x00058170,0x00000000
+#define IPU_DC_MAP_CONF_26__FULL         IPU_REGISTERS_OFFSET+0x00058170,0xffffffff
+#define IPU_DC_MAP_CONF_26__MD_OFFSET_23 IPU_REGISTERS_OFFSET+0x00058170,0x1F000000
+#define IPU_DC_MAP_CONF_26__MD_MASK_23   IPU_REGISTERS_OFFSET+0x00058170,0x00FF0000
+#define IPU_DC_MAP_CONF_26__MD_OFFSET_22 IPU_REGISTERS_OFFSET+0x00058170,0x00001F00
+#define IPU_DC_MAP_CONF_26__MD_MASK_22   IPU_REGISTERS_OFFSET+0x00058170,0x000000FF
+
+#define IPU_DC_UGDE0_0__ADDR              IPU_REGISTERS_OFFSET+0x00058174
+#define IPU_DC_UGDE0_0__EMPTY             IPU_REGISTERS_OFFSET+0x00058174,0x00000000
+#define IPU_DC_UGDE0_0__FULL              IPU_REGISTERS_OFFSET+0x00058174,0xffffffff
+#define IPU_DC_UGDE0_0__NF_NL_0           IPU_REGISTERS_OFFSET+0x00058174,0x18000000
+#define IPU_DC_UGDE0_0__AUTORESTART_0     IPU_REGISTERS_OFFSET+0x00058174,0x04000000
+#define IPU_DC_UGDE0_0__ODD_EN_0          IPU_REGISTERS_OFFSET+0x00058174,0x02000000
+#define IPU_DC_UGDE0_0__COD_ODD_START_0   IPU_REGISTERS_OFFSET+0x00058174,0x00FF0000
+#define IPU_DC_UGDE0_0__COD_EV_START_0    IPU_REGISTERS_OFFSET+0x00058174,0x0000FF00
+#define IPU_DC_UGDE0_0__COD_EV_PRIORITY_0 IPU_REGISTERS_OFFSET+0x00058174,0x00000078
+#define IPU_DC_UGDE0_0__ID_CODED_0        IPU_REGISTERS_OFFSET+0x00058174,0x00000007
+
+#define IPU_DC_UGDE0_1__ADDR   IPU_REGISTERS_OFFSET+0x00058178
+#define IPU_DC_UGDE0_1__EMPTY  IPU_REGISTERS_OFFSET+0x00058178,0x00000000
+#define IPU_DC_UGDE0_1__FULL   IPU_REGISTERS_OFFSET+0x00058178,0xffffffff
+#define IPU_DC_UGDE0_1__STEP_0 IPU_REGISTERS_OFFSET+0x00058178,0x1FFFFFFF
+
+#define IPU_DC_UGDE0_2__ADDR        IPU_REGISTERS_OFFSET+0x0005817C
+#define IPU_DC_UGDE0_2__EMPTY       IPU_REGISTERS_OFFSET+0x0005817C,0x00000000
+#define IPU_DC_UGDE0_2__FULL        IPU_REGISTERS_OFFSET+0x0005817C,0xffffffff
+#define IPU_DC_UGDE0_2__OFFSET_DT_0 IPU_REGISTERS_OFFSET+0x0005817C,0x1FFFFFFF
+
+#define IPU_DC_UGDE0_3__ADDR          IPU_REGISTERS_OFFSET+0x00058180
+#define IPU_DC_UGDE0_3__EMPTY         IPU_REGISTERS_OFFSET+0x00058180,0x00000000
+#define IPU_DC_UGDE0_3__FULL          IPU_REGISTERS_OFFSET+0x00058180,0xffffffff
+#define IPU_DC_UGDE0_3__STEP_REPEAT_0 IPU_REGISTERS_OFFSET+0x00058180,0x1FFFFFFF
+
+#define IPU_DC_UGDE1_0__ADDR              IPU_REGISTERS_OFFSET+0x00058184
+#define IPU_DC_UGDE1_0__EMPTY             IPU_REGISTERS_OFFSET+0x00058184,0x00000000
+#define IPU_DC_UGDE1_0__FULL              IPU_REGISTERS_OFFSET+0x00058184,0xffffffff
+#define IPU_DC_UGDE1_0__NF_NL_1           IPU_REGISTERS_OFFSET+0x00058184,0x18000000
+#define IPU_DC_UGDE1_0__AUTORESTART_1     IPU_REGISTERS_OFFSET+0x00058184,0x04000000
+#define IPU_DC_UGDE1_0__ODD_EN_1          IPU_REGISTERS_OFFSET+0x00058184,0x02000000
+#define IPU_DC_UGDE1_0__COD_ODD_START_1   IPU_REGISTERS_OFFSET+0x00058184,0x00FF0000
+#define IPU_DC_UGDE1_0__COD_EV_START_1    IPU_REGISTERS_OFFSET+0x00058184,0x00007F80
+#define IPU_DC_UGDE1_0__COD_EV_PRIORITY_1 IPU_REGISTERS_OFFSET+0x00058184,0x00000078
+#define IPU_DC_UGDE1_0__ID_CODED_1        IPU_REGISTERS_OFFSET+0x00058184,0x00000007
+
+#define IPU_DC_UGDE1_1__ADDR   IPU_REGISTERS_OFFSET+0x00058188
+#define IPU_DC_UGDE1_1__EMPTY  IPU_REGISTERS_OFFSET+0x00058188,0x00000000
+#define IPU_DC_UGDE1_1__FULL   IPU_REGISTERS_OFFSET+0x00058188,0xffffffff
+#define IPU_DC_UGDE1_1__STEP_1 IPU_REGISTERS_OFFSET+0x00058188,0x1FFFFFFF
+
+#define IPU_DC_UGDE1_2__ADDR        IPU_REGISTERS_OFFSET+0x0005818C
+#define IPU_DC_UGDE1_2__EMPTY       IPU_REGISTERS_OFFSET+0x0005818C,0x00000000
+#define IPU_DC_UGDE1_2__FULL        IPU_REGISTERS_OFFSET+0x0005818C,0xffffffff
+#define IPU_DC_UGDE1_2__OFFSET_DT_1 IPU_REGISTERS_OFFSET+0x0005818C,0x1FFFFFFF
+
+#define IPU_DC_UGDE1_3__ADDR          IPU_REGISTERS_OFFSET+0x00058190
+#define IPU_DC_UGDE1_3__EMPTY         IPU_REGISTERS_OFFSET+0x00058190,0x00000000
+#define IPU_DC_UGDE1_3__FULL          IPU_REGISTERS_OFFSET+0x00058190,0xffffffff
+#define IPU_DC_UGDE1_3__STEP_REPEAT_1 IPU_REGISTERS_OFFSET+0x00058190,0x1FFFFFFF
+
+#define IPU_DC_UGDE2_0__ADDR              IPU_REGISTERS_OFFSET+0x00058194
+#define IPU_DC_UGDE2_0__EMPTY             IPU_REGISTERS_OFFSET+0x00058194,0x00000000
+#define IPU_DC_UGDE2_0__FULL              IPU_REGISTERS_OFFSET+0x00058194,0xffffffff
+#define IPU_DC_UGDE2_0__NF_NL_2           IPU_REGISTERS_OFFSET+0x00058194,0x18000000
+#define IPU_DC_UGDE2_0__AUTORESTART_2     IPU_REGISTERS_OFFSET+0x00058194,0x04000000
+#define IPU_DC_UGDE2_0__ODD_EN_2          IPU_REGISTERS_OFFSET+0x00058194,0x02000000
+#define IPU_DC_UGDE2_0__COD_ODD_START_2   IPU_REGISTERS_OFFSET+0x00058194,0x00FF0000
+#define IPU_DC_UGDE2_0__COD_EV_START_2    IPU_REGISTERS_OFFSET+0x00058194,0x00007F80
+#define IPU_DC_UGDE2_0__COD_EV_PRIORITY_2 IPU_REGISTERS_OFFSET+0x00058194,0x00000078
+#define IPU_DC_UGDE2_0__ID_CODED_2        IPU_REGISTERS_OFFSET+0x00058194,0x00000007
+
+#define IPU_DC_UGDE2_1__ADDR   IPU_REGISTERS_OFFSET+0x00058198
+#define IPU_DC_UGDE2_1__EMPTY  IPU_REGISTERS_OFFSET+0x00058198,0x00000000
+#define IPU_DC_UGDE2_1__FULL   IPU_REGISTERS_OFFSET+0x00058198,0xffffffff
+#define IPU_DC_UGDE2_1__STEP_2 IPU_REGISTERS_OFFSET+0x00058198,0x1FFFFFFF
+
+#define IPU_DC_UGDE2_2__ADDR        IPU_REGISTERS_OFFSET+0x0005819C
+#define IPU_DC_UGDE2_2__EMPTY       IPU_REGISTERS_OFFSET+0x0005819C,0x00000000
+#define IPU_DC_UGDE2_2__FULL        IPU_REGISTERS_OFFSET+0x0005819C,0xffffffff
+#define IPU_DC_UGDE2_2__OFFSET_DT_2 IPU_REGISTERS_OFFSET+0x0005819C,0x1FFFFFFF
+
+#define IPU_DC_UGDE2_3__ADDR          IPU_REGISTERS_OFFSET+0x000581A0
+#define IPU_DC_UGDE2_3__EMPTY         IPU_REGISTERS_OFFSET+0x000581A0,0x00000000
+#define IPU_DC_UGDE2_3__FULL          IPU_REGISTERS_OFFSET+0x000581A0,0xffffffff
+#define IPU_DC_UGDE2_3__STEP_REPEAT_2 IPU_REGISTERS_OFFSET+0x000581A0,0x1FFFFFFF
+
+#define IPU_DC_UGDE3_0__ADDR              IPU_REGISTERS_OFFSET+0x000581A4
+#define IPU_DC_UGDE3_0__EMPTY             IPU_REGISTERS_OFFSET+0x000581A4,0x00000000
+#define IPU_DC_UGDE3_0__FULL              IPU_REGISTERS_OFFSET+0x000581A4,0xffffffff
+#define IPU_DC_UGDE3_0__NF_NL_3           IPU_REGISTERS_OFFSET+0x000581A4,0x18000000
+#define IPU_DC_UGDE3_0__AUTORESTART_3     IPU_REGISTERS_OFFSET+0x000581A4,0x04000000
+#define IPU_DC_UGDE3_0__ODD_EN_3          IPU_REGISTERS_OFFSET+0x000581A4,0x02000000
+#define IPU_DC_UGDE3_0__COD_ODD_START_3   IPU_REGISTERS_OFFSET+0x000581A4,0x00FF0000
+#define IPU_DC_UGDE3_0__COD_EV_START_3    IPU_REGISTERS_OFFSET+0x000581A4,0x00007F80
+#define IPU_DC_UGDE3_0__COD_EV_PRIORITY_3 IPU_REGISTERS_OFFSET+0x000581A4,0x00000078
+#define IPU_DC_UGDE3_0__ID_CODED_3        IPU_REGISTERS_OFFSET+0x000581A4,0x00000007
+
+#define IPU_DC_UGDE3_1__ADDR   IPU_REGISTERS_OFFSET+0x000581A8
+#define IPU_DC_UGDE3_1__EMPTY  IPU_REGISTERS_OFFSET+0x000581A8,0x00000000
+#define IPU_DC_UGDE3_1__FULL   IPU_REGISTERS_OFFSET+0x000581A8,0xffffffff
+#define IPU_DC_UGDE3_1__STEP_3 IPU_REGISTERS_OFFSET+0x000581A8,0x1FFFFFFF
+
+#define IPU_DC_UGDE3_2__ADDR        IPU_REGISTERS_OFFSET+0x000581AC
+#define IPU_DC_UGDE3_2__EMPTY       IPU_REGISTERS_OFFSET+0x000581AC,0x00000000
+#define IPU_DC_UGDE3_2__FULL        IPU_REGISTERS_OFFSET+0x000581AC,0xffffffff
+#define IPU_DC_UGDE3_2__OFFSET_DT_3 IPU_REGISTERS_OFFSET+0x000581AC,0x1FFFFFFF
+
+#define IPU_DC_UGDE3_3__ADDR          IPU_REGISTERS_OFFSET+0x000581B0
+#define IPU_DC_UGDE3_3__EMPTY         IPU_REGISTERS_OFFSET+0x000581B0,0x00000000
+#define IPU_DC_UGDE3_3__FULL          IPU_REGISTERS_OFFSET+0x000581B0,0xffffffff
+#define IPU_DC_UGDE3_3__STEP_REPEAT_3 IPU_REGISTERS_OFFSET+0x000581B0,0x1FFFFFFF
+
+#define IPU_DC_LLA0__ADDR       IPU_REGISTERS_OFFSET+0x000581B4
+#define IPU_DC_LLA0__EMPTY      IPU_REGISTERS_OFFSET+0x000581B4,0x00000000
+#define IPU_DC_LLA0__FULL       IPU_REGISTERS_OFFSET+0x000581B4,0xffffffff
+#define IPU_DC_LLA0__MCU_RS_3_0 IPU_REGISTERS_OFFSET+0x000581B4,0xFF000000
+#define IPU_DC_LLA0__MCU_RS_2_0 IPU_REGISTERS_OFFSET+0x000581B4,0x00FF0000
+#define IPU_DC_LLA0__MCU_RS_1_0 IPU_REGISTERS_OFFSET+0x000581B4,0x0000FF00
+#define IPU_DC_LLA0__MCU_RS_0_0 IPU_REGISTERS_OFFSET+0x000581B4,0x000000FF
+
+#define IPU_DC_LLA1__ADDR       IPU_REGISTERS_OFFSET+0x000581B8
+#define IPU_DC_LLA1__EMPTY      IPU_REGISTERS_OFFSET+0x000581B8,0x00000000
+#define IPU_DC_LLA1__FULL       IPU_REGISTERS_OFFSET+0x000581B8,0xffffffff
+#define IPU_DC_LLA1__MCU_RS_3_1 IPU_REGISTERS_OFFSET+0x000581B8,0xFF000000
+#define IPU_DC_LLA1__MCU_RS_2_1 IPU_REGISTERS_OFFSET+0x000581B8,0x00FF0000
+#define IPU_DC_LLA1__MCU_RS_1_1 IPU_REGISTERS_OFFSET+0x000581B8,0x0000FF00
+#define IPU_DC_LLA1__MCU_RS_0_1 IPU_REGISTERS_OFFSET+0x000581B8,0x000000FF
+
+#define IPU_DC_R_LLA0__ADDR         IPU_REGISTERS_OFFSET+0x000581BC
+#define IPU_DC_R_LLA0__EMPTY        IPU_REGISTERS_OFFSET+0x000581BC,0x00000000
+#define IPU_DC_R_LLA0__FULL         IPU_REGISTERS_OFFSET+0x000581BC,0xffffffff
+#define IPU_DC_R_LLA0__MCU_RS_R_3_0 IPU_REGISTERS_OFFSET+0x000581BC,0xFF000000
+#define IPU_DC_R_LLA0__MCU_RS_R_2_0 IPU_REGISTERS_OFFSET+0x000581BC,0x00FF0000
+#define IPU_DC_R_LLA0__MCU_RS_R_1_0 IPU_REGISTERS_OFFSET+0x000581BC,0x0000FF00
+#define IPU_DC_R_LLA0__MCU_RS_R_0_0 IPU_REGISTERS_OFFSET+0x000581BC,0x000000FF
+
+#define IPU_DC_R_LLA1__ADDR         IPU_REGISTERS_OFFSET+0x000581C0
+#define IPU_DC_R_LLA1__EMPTY        IPU_REGISTERS_OFFSET+0x000581C0,0x00000000
+#define IPU_DC_R_LLA1__FULL         IPU_REGISTERS_OFFSET+0x000581C0,0xffffffff
+#define IPU_DC_R_LLA1__MCU_RS_R_3_1 IPU_REGISTERS_OFFSET+0x000581C0,0xFF000000
+#define IPU_DC_R_LLA1__MCU_RS_R_2_1 IPU_REGISTERS_OFFSET+0x000581C0,0x00FF0000
+#define IPU_DC_R_LLA1__MCU_RS_R_1_1 IPU_REGISTERS_OFFSET+0x000581C0,0x0000FF00
+#define IPU_DC_R_LLA1__MCU_RS_R_0_1 IPU_REGISTERS_OFFSET+0x000581C0,0x000000FF
+
+#define IPU_DC_WR_CH_ADDR_5_ALT__ADDR          IPU_REGISTERS_OFFSET+0x000581C4
+#define IPU_DC_WR_CH_ADDR_5_ALT__EMPTY         IPU_REGISTERS_OFFSET+0x000581C4,0x00000000
+#define IPU_DC_WR_CH_ADDR_5_ALT__FULL          IPU_REGISTERS_OFFSET+0x000581C4,0xffffffff
+#define IPU_DC_WR_CH_ADDR_5_ALT__ST_ADDR_5_ALT IPU_REGISTERS_OFFSET+0x000581C4,0x1FFFFFFF
+
+#define IPU_DC_STAT__ADDR                       IPU_REGISTERS_OFFSET+0x000581C8
+#define IPU_DC_STAT__EMPTY                      IPU_REGISTERS_OFFSET+0x000581C8,0x00000000
+#define IPU_DC_STAT__FULL                       IPU_REGISTERS_OFFSET+0x000581C8,0xffffffff
+#define IPU_DC_STAT__DC_TRIPLE_BUF_DATA_EMPTY_1 IPU_REGISTERS_OFFSET+0x000581C8,0x00000080
+#define IPU_DC_STAT__DC_TRIPLE_BUF_DATA_FULL_1  IPU_REGISTERS_OFFSET+0x000581C8,0x00000040
+#define IPU_DC_STAT__DC_TRIPLE_BUF_CNT_EMPTY_1  IPU_REGISTERS_OFFSET+0x000581C8,0x00000020
+#define IPU_DC_STAT__DC_TRIPLE_BUF_CNT_FULL_1   IPU_REGISTERS_OFFSET+0x000581C8,0x00000010
+#define IPU_DC_STAT__DC_TRIPLE_BUF_DATA_EMPTY_0 IPU_REGISTERS_OFFSET+0x000581C8,0x00000008
+#define IPU_DC_STAT__DC_TRIPLE_BUF_DATA_FULL_0  IPU_REGISTERS_OFFSET+0x000581C8,0x00000004
+#define IPU_DC_STAT__DC_TRIPLE_BUF_CNT_EMPTY_0  IPU_REGISTERS_OFFSET+0x000581C8,0x00000002
+#define IPU_DC_STAT__DC_TRIPLE_BUF_CNT_FULL_0   IPU_REGISTERS_OFFSET+0x000581C8,0x00000001
+
+#define IPU_DMFC_RD_CHAN__ADDR              IPU_REGISTERS_OFFSET+0x00060000
+#define IPU_DMFC_RD_CHAN__EMPTY             IPU_REGISTERS_OFFSET+0x00060000,0x00000000
+#define IPU_DMFC_RD_CHAN__FULL              IPU_REGISTERS_OFFSET+0x00060000,0xffffffff
+#define IPU_DMFC_RD_CHAN__DMFC_PPW_C        IPU_REGISTERS_OFFSET+0x00060000,0x03000000
+#define IPU_DMFC_RD_CHAN__DMFC_WM_CLR_0     IPU_REGISTERS_OFFSET+0x00060000,0x00E00000
+#define IPU_DMFC_RD_CHAN__DMFC_WM_SET_0     IPU_REGISTERS_OFFSET+0x00060000,0x001C0000
+#define IPU_DMFC_RD_CHAN__DMFC_WM_EN_0      IPU_REGISTERS_OFFSET+0x00060000,0x00020000
+#define IPU_DMFC_RD_CHAN__DMFC_BURST_SIZE_0 IPU_REGISTERS_OFFSET+0x00060000,0x000000C0
+
+#define IPU_DMFC_WR_CHAN__ADDR               IPU_REGISTERS_OFFSET+0x00060004
+#define IPU_DMFC_WR_CHAN__EMPTY              IPU_REGISTERS_OFFSET+0x00060004,0x00000000
+#define IPU_DMFC_WR_CHAN__FULL               IPU_REGISTERS_OFFSET+0x00060004,0xffffffff
+#define IPU_DMFC_WR_CHAN__DMFC_BURST_SIZE_2C IPU_REGISTERS_OFFSET+0x00060004,0xC0000000
+#define IPU_DMFC_WR_CHAN__DMFC_FIFO_SIZE_2C  IPU_REGISTERS_OFFSET+0x00060004,0x38000000
+#define IPU_DMFC_WR_CHAN__DMFC_ST_ADDR_2C    IPU_REGISTERS_OFFSET+0x00060004,0x07000000
+#define IPU_DMFC_WR_CHAN__DMFC_BURST_SIZE_1C IPU_REGISTERS_OFFSET+0x00060004,0x00C00000
+#define IPU_DMFC_WR_CHAN__DMFC_FIFO_SIZE_1C  IPU_REGISTERS_OFFSET+0x00060004,0x00380000
+#define IPU_DMFC_WR_CHAN__DMFC_ST_ADDR_1C    IPU_REGISTERS_OFFSET+0x00060004,0x00070000
+#define IPU_DMFC_WR_CHAN__DMFC_BURST_SIZE_2  IPU_REGISTERS_OFFSET+0x00060004,0x0000C000
+#define IPU_DMFC_WR_CHAN__DMFC_FIFO_SIZE_2   IPU_REGISTERS_OFFSET+0x00060004,0x00003800
+#define IPU_DMFC_WR_CHAN__DMFC_ST_ADDR_2     IPU_REGISTERS_OFFSET+0x00060004,0x00000700
+#define IPU_DMFC_WR_CHAN__DMFC_BURST_SIZE_1  IPU_REGISTERS_OFFSET+0x00060004,0x000000C0
+#define IPU_DMFC_WR_CHAN__DMFC_FIFO_SIZE_1   IPU_REGISTERS_OFFSET+0x00060004,0x00000038
+#define IPU_DMFC_WR_CHAN__DMFC_ST_ADDR_1     IPU_REGISTERS_OFFSET+0x00060004,0x00000007
+
+#define IPU_DMFC_WR_CHAN_DEF__ADDR           IPU_REGISTERS_OFFSET+0x00060008
+#define IPU_DMFC_WR_CHAN_DEF__EMPTY          IPU_REGISTERS_OFFSET+0x00060008,0x00000000
+#define IPU_DMFC_WR_CHAN_DEF__FULL           IPU_REGISTERS_OFFSET+0x00060008,0xffffffff
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_CLR_2C IPU_REGISTERS_OFFSET+0x00060008,0xE0000000
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_SET_2C IPU_REGISTERS_OFFSET+0x00060008,0x1C000000
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_EN_2C  IPU_REGISTERS_OFFSET+0x00060008,0x02000000
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_CLR_1C IPU_REGISTERS_OFFSET+0x00060008,0x00E00000
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_SET_1C IPU_REGISTERS_OFFSET+0x00060008,0x001C0000
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_EN_1C  IPU_REGISTERS_OFFSET+0x00060008,0x00020000
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_CLR_2  IPU_REGISTERS_OFFSET+0x00060008,0x0000E000
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_SET_2  IPU_REGISTERS_OFFSET+0x00060008,0x00001C00
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_EN_2   IPU_REGISTERS_OFFSET+0x00060008,0x00000200
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_CLR_1  IPU_REGISTERS_OFFSET+0x00060008,0x000000E0
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_SET_1  IPU_REGISTERS_OFFSET+0x00060008,0x0000001C
+#define IPU_DMFC_WR_CHAN_DEF__DMFC_WM_EN_1   IPU_REGISTERS_OFFSET+0x00060008,0x00000002
+
+#define IPU_DMFC_DP_CHAN__ADDR               IPU_REGISTERS_OFFSET+0x0006000C
+#define IPU_DMFC_DP_CHAN__EMPTY              IPU_REGISTERS_OFFSET+0x0006000C,0x00000000
+#define IPU_DMFC_DP_CHAN__FULL               IPU_REGISTERS_OFFSET+0x0006000C,0xffffffff
+#define IPU_DMFC_DP_CHAN__DMFC_BURST_SIZE_6F IPU_REGISTERS_OFFSET+0x0006000C,0xC0000000
+#define IPU_DMFC_DP_CHAN__DMFC_FIFO_SIZE_6F  IPU_REGISTERS_OFFSET+0x0006000C,0x38000000
+#define IPU_DMFC_DP_CHAN__DMFC_ST_ADDR_6F    IPU_REGISTERS_OFFSET+0x0006000C,0x07000000
+#define IPU_DMFC_DP_CHAN__DMFC_BURST_SIZE_6B IPU_REGISTERS_OFFSET+0x0006000C,0x00C00000
+#define IPU_DMFC_DP_CHAN__DMFC_FIFO_SIZE_6B  IPU_REGISTERS_OFFSET+0x0006000C,0x00380000
+#define IPU_DMFC_DP_CHAN__DMFC_ST_ADDR_6B    IPU_REGISTERS_OFFSET+0x0006000C,0x00070000
+#define IPU_DMFC_DP_CHAN__DMFC_BURST_SIZE_5F IPU_REGISTERS_OFFSET+0x0006000C,0x0000C000
+#define IPU_DMFC_DP_CHAN__DMFC_FIFO_SIZE_5F  IPU_REGISTERS_OFFSET+0x0006000C,0x00003800
+#define IPU_DMFC_DP_CHAN__DMFC_ST_ADDR_5F    IPU_REGISTERS_OFFSET+0x0006000C,0x00000700
+#define IPU_DMFC_DP_CHAN__DMFC_BURST_SIZE_5B IPU_REGISTERS_OFFSET+0x0006000C,0x000000C0
+#define IPU_DMFC_DP_CHAN__DMFC_FIFO_SIZE_5B  IPU_REGISTERS_OFFSET+0x0006000C,0x00000038
+#define IPU_DMFC_DP_CHAN__DMFC_ST_ADDR_5B    IPU_REGISTERS_OFFSET+0x0006000C,0x00000007
+
+#define IPU_DMFC_DP_CHAN_DEF__ADDR           IPU_REGISTERS_OFFSET+0x00060010
+#define IPU_DMFC_DP_CHAN_DEF__EMPTY          IPU_REGISTERS_OFFSET+0x00060010,0x00000000
+#define IPU_DMFC_DP_CHAN_DEF__FULL           IPU_REGISTERS_OFFSET+0x00060010,0xffffffff
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_CLR_6F IPU_REGISTERS_OFFSET+0x00060010,0xE0000000
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_SET_6F IPU_REGISTERS_OFFSET+0x00060010,0x1C000000
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_EN_6F  IPU_REGISTERS_OFFSET+0x00060010,0x02000000
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_CLR_6B IPU_REGISTERS_OFFSET+0x00060010,0x00E00000
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_SET_6B IPU_REGISTERS_OFFSET+0x00060010,0x001C0000
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_EN_6B  IPU_REGISTERS_OFFSET+0x00060010,0x00020000
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_CLR_5F IPU_REGISTERS_OFFSET+0x00060010,0x0000E000
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_SET_5F IPU_REGISTERS_OFFSET+0x00060010,0x00001C00
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_EN_5F  IPU_REGISTERS_OFFSET+0x00060010,0x00000200
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_CLR_5B IPU_REGISTERS_OFFSET+0x00060010,0x000000E0
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_SET_5B IPU_REGISTERS_OFFSET+0x00060010,0x0000001C
+#define IPU_DMFC_DP_CHAN_DEF__DMFC_WM_EN_5B  IPU_REGISTERS_OFFSET+0x00060010,0x00000002
+
+#define IPU_DMFC_GENERAL1__ADDR              IPU_REGISTERS_OFFSET+0x00060014
+#define IPU_DMFC_GENERAL1__EMPTY             IPU_REGISTERS_OFFSET+0x00060014,0x00000000
+#define IPU_DMFC_GENERAL1__FULL              IPU_REGISTERS_OFFSET+0x00060014,0xffffffff
+#define IPU_DMFC_GENERAL1__WAIT4EOT_9        IPU_REGISTERS_OFFSET+0x00060014,0x01000000
+#define IPU_DMFC_GENERAL1__WAIT4EOT_6F       IPU_REGISTERS_OFFSET+0x00060014,0x00800000
+#define IPU_DMFC_GENERAL1__WAIT4EOT_6B       IPU_REGISTERS_OFFSET+0x00060014,0x00400000
+#define IPU_DMFC_GENERAL1__WAIT4EOT_5F       IPU_REGISTERS_OFFSET+0x00060014,0x00200000
+#define IPU_DMFC_GENERAL1__WAIT4EOT_5B       IPU_REGISTERS_OFFSET+0x00060014,0x00100000
+#define IPU_DMFC_GENERAL1__WAIT4EOT_4        IPU_REGISTERS_OFFSET+0x00060014,0x00080000
+#define IPU_DMFC_GENERAL1__WAIT4EOT_3        IPU_REGISTERS_OFFSET+0x00060014,0x00040000
+#define IPU_DMFC_GENERAL1__WAIT4EOT_2        IPU_REGISTERS_OFFSET+0x00060014,0x00020000
+#define IPU_DMFC_GENERAL1__WAIT4EOT_1        IPU_REGISTERS_OFFSET+0x00060014,0x00010000
+#define IPU_DMFC_GENERAL1__DMFC_WM_CLR_9     IPU_REGISTERS_OFFSET+0x00060014,0x0000E000
+#define IPU_DMFC_GENERAL1__DMFC_WM_SET_9     IPU_REGISTERS_OFFSET+0x00060014,0x00001C00
+#define IPU_DMFC_GENERAL1__DMFC_WM_EN_9      IPU_REGISTERS_OFFSET+0x00060014,0x00000200
+#define IPU_DMFC_GENERAL1__DMFC_BURST_SIZE_9 IPU_REGISTERS_OFFSET+0x00060014,0x00000060
+#define IPU_DMFC_GENERAL1__DMFC_DCDP_SYNC_PR IPU_REGISTERS_OFFSET+0x00060014,0x00000003
+
+#define IPU_DMFC_GENERAL2__ADDR                 IPU_REGISTERS_OFFSET+0x00060018
+#define IPU_DMFC_GENERAL2__EMPTY                IPU_REGISTERS_OFFSET+0x00060018,0x00000000
+#define IPU_DMFC_GENERAL2__FULL                 IPU_REGISTERS_OFFSET+0x00060018,0xffffffff
+#define IPU_DMFC_GENERAL2__DMFC_FRAME_HEIGHT_RD IPU_REGISTERS_OFFSET+0x00060018,0x1FFF0000
+#define IPU_DMFC_GENERAL2__DMFC_FRAME_WIDTH_RD  IPU_REGISTERS_OFFSET+0x00060018,0x00001FFF
+
+#define IPU_DMFC_IC_CTRL__ADDR                    IPU_REGISTERS_OFFSET+0x0006001C
+#define IPU_DMFC_IC_CTRL__EMPTY                   IPU_REGISTERS_OFFSET+0x0006001C,0x00000000
+#define IPU_DMFC_IC_CTRL__FULL                    IPU_REGISTERS_OFFSET+0x0006001C,0xffffffff
+#define IPU_DMFC_IC_CTRL__DMFC_IC_FRAME_HEIGHT_RD IPU_REGISTERS_OFFSET+0x0006001C,0xFFF80000
+#define IPU_DMFC_IC_CTRL__DMFC_IC_FRAME_WIDTH_RD  IPU_REGISTERS_OFFSET+0x0006001C,0x0007FFC0
+#define IPU_DMFC_IC_CTRL__DMFC_IC_PPW_C           IPU_REGISTERS_OFFSET+0x0006001C,0x00000030
+#define IPU_DMFC_IC_CTRL__DMFC_IC_IN_PORT         IPU_REGISTERS_OFFSET+0x0006001C,0x00000007
+
+#define IPU_DMFC_WR_CHAN_ALT__ADDR                  IPU_REGISTERS_OFFSET+0x00060020
+#define IPU_DMFC_WR_CHAN_ALT__EMPTY                 IPU_REGISTERS_OFFSET+0x00060020,0x00000000
+#define IPU_DMFC_WR_CHAN_ALT__FULL                  IPU_REGISTERS_OFFSET+0x00060020,0xffffffff
+#define IPU_DMFC_WR_CHAN_ALT__DMFC_BURST_SIZE_2_ALT IPU_REGISTERS_OFFSET+0x00060020,0x0000C000
+#define IPU_DMFC_WR_CHAN_ALT__DMFC_FIFO_SIZE_2_ALT  IPU_REGISTERS_OFFSET+0x00060020,0x00003800
+#define IPU_DMFC_WR_CHAN_ALT__DMFC_ST_ADDR_2_ALT    IPU_REGISTERS_OFFSET+0x00060020,0x00000700
+
+#define IPU_DMFC_WR_CHAN_DEF_ALT__ADDR              IPU_REGISTERS_OFFSET+0x00060024
+#define IPU_DMFC_WR_CHAN_DEF_ALT__EMPTY             IPU_REGISTERS_OFFSET+0x00060024,0x00000000
+#define IPU_DMFC_WR_CHAN_DEF_ALT__FULL              IPU_REGISTERS_OFFSET+0x00060024,0xffffffff
+#define IPU_DMFC_WR_CHAN_DEF_ALT__DMFC_WM_CLR_2_ALT IPU_REGISTERS_OFFSET+0x00060024,0x0000E000
+#define IPU_DMFC_WR_CHAN_DEF_ALT__DMFC_WM_SET_2_ALT IPU_REGISTERS_OFFSET+0x00060024,0x00001C00
+#define IPU_DMFC_WR_CHAN_DEF_ALT__DMFC_WM_EN_2_ALT  IPU_REGISTERS_OFFSET+0x00060024,0x00000200
+
+#define IPU_DMFC_DP_CHAN_ALT__ADDR                   IPU_REGISTERS_OFFSET+0x00060028
+#define IPU_DMFC_DP_CHAN_ALT__EMPTY                  IPU_REGISTERS_OFFSET+0x00060028,0x00000000
+#define IPU_DMFC_DP_CHAN_ALT__FULL                   IPU_REGISTERS_OFFSET+0x00060028,0xffffffff
+#define IPU_DMFC_DP_CHAN_ALT__DMFC_BURST_SIZE_6F_ALT IPU_REGISTERS_OFFSET+0x00060028,0xC0000000
+#define IPU_DMFC_DP_CHAN_ALT__DMFC_FIFO_SIZE_6F_ALT  IPU_REGISTERS_OFFSET+0x00060028,0x38000000
+#define IPU_DMFC_DP_CHAN_ALT__DMFC_ST_ADDR_6F_ALT    IPU_REGISTERS_OFFSET+0x00060028,0x07000000
+#define IPU_DMFC_DP_CHAN_ALT__DMFC_BURST_SIZE_6B_ALT IPU_REGISTERS_OFFSET+0x00060028,0x00C00000
+#define IPU_DMFC_DP_CHAN_ALT__DMFC_FIFO_SIZE_6B_ALT  IPU_REGISTERS_OFFSET+0x00060028,0x00380000
+#define IPU_DMFC_DP_CHAN_ALT__DMFC_ST_ADDR_6B_ALT    IPU_REGISTERS_OFFSET+0x00060028,0x00070000
+#define IPU_DMFC_DP_CHAN_ALT__DMFC_BURST_SIZE_5B_ALT IPU_REGISTERS_OFFSET+0x00060028,0x000000C0
+#define IPU_DMFC_DP_CHAN_ALT__DMFC_FIFO_SIZE_5B_ALT  IPU_REGISTERS_OFFSET+0x00060028,0x00000038
+#define IPU_DMFC_DP_CHAN_ALT__DMFC_ST_ADDR_5B_ALT    IPU_REGISTERS_OFFSET+0x00060028,0x00000007
+
+#define IPU_DMFC_DP_CHAN_DEF_ALT__ADDR               IPU_REGISTERS_OFFSET+0x0006002C
+#define IPU_DMFC_DP_CHAN_DEF_ALT__EMPTY              IPU_REGISTERS_OFFSET+0x0006002C,0x00000000
+#define IPU_DMFC_DP_CHAN_DEF_ALT__FULL               IPU_REGISTERS_OFFSET+0x0006002C,0xffffffff
+#define IPU_DMFC_DP_CHAN_DEF_ALT__DMFC_WM_CLR_6F_ALT IPU_REGISTERS_OFFSET+0x0006002C,0xE0000000
+#define IPU_DMFC_DP_CHAN_DEF_ALT__DMFC_WM_SET_6F_ALT IPU_REGISTERS_OFFSET+0x0006002C,0x1C000000
+#define IPU_DMFC_DP_CHAN_DEF_ALT__DMFC_WM_EN_6F_ALT  IPU_REGISTERS_OFFSET+0x0006002C,0x02000000
+#define IPU_DMFC_DP_CHAN_DEF_ALT__DMFC_WM_CLR_6B_ALT IPU_REGISTERS_OFFSET+0x0006002C,0x00E00000
+#define IPU_DMFC_DP_CHAN_DEF_ALT__DMFC_WM_SET_6B_ALT IPU_REGISTERS_OFFSET+0x0006002C,0x001C0000
+#define IPU_DMFC_DP_CHAN_DEF_ALT__DMFC_WM_EN_6B_ALT  IPU_REGISTERS_OFFSET+0x0006002C,0x00020000
+#define IPU_DMFC_DP_CHAN_DEF_ALT__DMFC_WM_CLR_5B_ALT IPU_REGISTERS_OFFSET+0x0006002C,0x000000E0
+#define IPU_DMFC_DP_CHAN_DEF_ALT__DMFC_WM_SET_5B_ALT IPU_REGISTERS_OFFSET+0x0006002C,0x0000001C
+#define IPU_DMFC_DP_CHAN_DEF_ALT__DMFC_WM_EN_5B_ALT  IPU_REGISTERS_OFFSET+0x0006002C,0x00000002
+
+#define IPU_DMFC_GENERAL1_ALT__ADDR            IPU_REGISTERS_OFFSET+0x00060030
+#define IPU_DMFC_GENERAL1_ALT__EMPTY           IPU_REGISTERS_OFFSET+0x00060030,0x00000000
+#define IPU_DMFC_GENERAL1_ALT__FULL            IPU_REGISTERS_OFFSET+0x00060030,0xffffffff
+#define IPU_DMFC_GENERAL1_ALT__WAIT4EOT_6F_ALT IPU_REGISTERS_OFFSET+0x00060030,0x00800000
+#define IPU_DMFC_GENERAL1_ALT__WAIT4EOT_6B_ALT IPU_REGISTERS_OFFSET+0x00060030,0x00400000
+#define IPU_DMFC_GENERAL1_ALT__WAIT4EOT_5B_ALT IPU_REGISTERS_OFFSET+0x00060030,0x00100000
+#define IPU_DMFC_GENERAL1_ALT__WAIT4EOT_2_ALT  IPU_REGISTERS_OFFSET+0x00060030,0x00020000
+
+#define IPU_DMFC_STAT__ADDR                 IPU_REGISTERS_OFFSET+0x00060034
+#define IPU_DMFC_STAT__EMPTY                IPU_REGISTERS_OFFSET+0x00060034,0x00000000
+#define IPU_DMFC_STAT__FULL                 IPU_REGISTERS_OFFSET+0x00060034,0xffffffff
+#define IPU_DMFC_STAT__DMFC_IC_BUFFER_EMPTY IPU_REGISTERS_OFFSET+0x00060034,0x02000000
+#define IPU_DMFC_STAT__DMFC_IC_BUFFER_FULL  IPU_REGISTERS_OFFSET+0x00060034,0x01000000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_11   IPU_REGISTERS_OFFSET+0x00060034,0x00800000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_10   IPU_REGISTERS_OFFSET+0x00060034,0x00400000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_9    IPU_REGISTERS_OFFSET+0x00060034,0x00200000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_8    IPU_REGISTERS_OFFSET+0x00060034,0x00100000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_7    IPU_REGISTERS_OFFSET+0x00060034,0x00080000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_6    IPU_REGISTERS_OFFSET+0x00060034,0x00040000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_5    IPU_REGISTERS_OFFSET+0x00060034,0x00020000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_4    IPU_REGISTERS_OFFSET+0x00060034,0x00010000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_3    IPU_REGISTERS_OFFSET+0x00060034,0x00008000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_2    IPU_REGISTERS_OFFSET+0x00060034,0x00004000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_1    IPU_REGISTERS_OFFSET+0x00060034,0x00002000
+#define IPU_DMFC_STAT__DMFC_FIFO_EMPTY_0    IPU_REGISTERS_OFFSET+0x00060034,0x00001000
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_11    IPU_REGISTERS_OFFSET+0x00060034,0x00000800
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_10    IPU_REGISTERS_OFFSET+0x00060034,0x00000400
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_9     IPU_REGISTERS_OFFSET+0x00060034,0x00000200
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_8     IPU_REGISTERS_OFFSET+0x00060034,0x00000100
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_7     IPU_REGISTERS_OFFSET+0x00060034,0x00000080
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_6     IPU_REGISTERS_OFFSET+0x00060034,0x00000040
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_5     IPU_REGISTERS_OFFSET+0x00060034,0x00000020
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_4     IPU_REGISTERS_OFFSET+0x00060034,0x00000010
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_3     IPU_REGISTERS_OFFSET+0x00060034,0x00000008
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_2     IPU_REGISTERS_OFFSET+0x00060034,0x00000004
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_1     IPU_REGISTERS_OFFSET+0x00060034,0x00000002
+#define IPU_DMFC_STAT__DMFC_FIFO_FULL_0     IPU_REGISTERS_OFFSET+0x00060034,0x00000001
+
+#define IPU_VDI_FSIZE__ADDR        IPU_REGISTERS_OFFSET+0x00068000
+#define IPU_VDI_FSIZE__EMPTY       IPU_REGISTERS_OFFSET+0x00068000,0x00000000
+#define IPU_VDI_FSIZE__FULL        IPU_REGISTERS_OFFSET+0x00068000,0xffffffff
+#define IPU_VDI_FSIZE__VDI_FHEIGHT IPU_REGISTERS_OFFSET+0x00068000,0x07FF0000
+#define IPU_VDI_FSIZE__VDI_FWIDTH  IPU_REGISTERS_OFFSET+0x00068000,0x000007FF
+
+#define IPU_VDI_C__ADDR               IPU_REGISTERS_OFFSET+0x00068004
+#define IPU_VDI_C__EMPTY              IPU_REGISTERS_OFFSET+0x00068004,0x00000000
+#define IPU_VDI_C__FULL               IPU_REGISTERS_OFFSET+0x00068004,0xffffffff
+#define IPU_VDI_C__VDI_TOP_FIELD_AUTO IPU_REGISTERS_OFFSET+0x00068004,0x80000000
+#define IPU_VDI_C__VDI_TOP_FIELD_MAN  IPU_REGISTERS_OFFSET+0x00068004,0x40000000
+#define IPU_VDI_C__VDI_VWM3_CLR       IPU_REGISTERS_OFFSET+0x00068004,0x0E000000
+#define IPU_VDI_C__VDI_VWM3_SET       IPU_REGISTERS_OFFSET+0x00068004,0x01C00000
+#define IPU_VDI_C__VDI_VWM1_CLR       IPU_REGISTERS_OFFSET+0x00068004,0x00380000
+#define IPU_VDI_C__VDI_VWM1_SET       IPU_REGISTERS_OFFSET+0x00068004,0x00070000
+#define IPU_VDI_C__VDI_BURST_SIZE3    IPU_REGISTERS_OFFSET+0x00068004,0x0000F000
+#define IPU_VDI_C__VDI_BURST_SIZE2    IPU_REGISTERS_OFFSET+0x00068004,0x00000F00
+#define IPU_VDI_C__VDI_BURST_SIZE1    IPU_REGISTERS_OFFSET+0x00068004,0x000000F0
+#define IPU_VDI_C__VDI_MOT_SEL        IPU_REGISTERS_OFFSET+0x00068004,0x0000000C
+#define IPU_VDI_C__VDI_CH_422         IPU_REGISTERS_OFFSET+0x00068004,0x00000002
+
+#define IPU_VDI_C2__ADDR             IPU_REGISTERS_OFFSET+0x00068008
+#define IPU_VDI_C2__EMPTY            IPU_REGISTERS_OFFSET+0x00068008,0x00000000
+#define IPU_VDI_C2__FULL             IPU_REGISTERS_OFFSET+0x00068008,0xffffffff
+#define IPU_VDI_C2__VDI_PLANE_1_EN   IPU_REGISTERS_OFFSET+0x00068008,0x00000008
+#define IPU_VDI_C2__VDI_GLB_A_EN     IPU_REGISTERS_OFFSET+0x00068008,0x00000004
+#define IPU_VDI_C2__VDI_KEY_COLOR_EN IPU_REGISTERS_OFFSET+0x00068008,0x00000002
+#define IPU_VDI_C2__VDI_CMB_EN       IPU_REGISTERS_OFFSET+0x00068008,0x00000001
+
+#define IPU_VDI_CMBP_1__ADDR            IPU_REGISTERS_OFFSET+0x0006800C
+#define IPU_VDI_CMBP_1__EMPTY           IPU_REGISTERS_OFFSET+0x0006800C,0x00000000
+#define IPU_VDI_CMBP_1__FULL            IPU_REGISTERS_OFFSET+0x0006800C,0xffffffff
+#define IPU_VDI_CMBP_1__VDI_ALPHA       IPU_REGISTERS_OFFSET+0x0006800C,0xFF000000
+#define IPU_VDI_CMBP_1__VDI_KEY_COLOR_R IPU_REGISTERS_OFFSET+0x0006800C,0x00FF0000
+#define IPU_VDI_CMBP_1__VDI_KEY_COLOR_G IPU_REGISTERS_OFFSET+0x0006800C,0x0000FF00
+#define IPU_VDI_CMBP_1__VDI_KEY_COLOR_B IPU_REGISTERS_OFFSET+0x0006800C,0x000000FF
+
+#define IPU_VDI_CMBP_2__ADDR           IPU_REGISTERS_OFFSET+0x00068010
+#define IPU_VDI_CMBP_2__EMPTY          IPU_REGISTERS_OFFSET+0x00068010,0x00000000
+#define IPU_VDI_CMBP_2__FULL           IPU_REGISTERS_OFFSET+0x00068010,0xffffffff
+#define IPU_VDI_CMBP_2__VDI_BG_COLOR_R IPU_REGISTERS_OFFSET+0x00068010,0x00FF0000
+#define IPU_VDI_CMBP_2__VDI_BG_COLOR_G IPU_REGISTERS_OFFSET+0x00068010,0x0000FF00
+#define IPU_VDI_CMBP_2__VDI_BG_COLOR_B IPU_REGISTERS_OFFSET+0x00068010,0x000000FF
+
+#define IPU_VDI_PS_1__ADDR         IPU_REGISTERS_OFFSET+0x00068014
+#define IPU_VDI_PS_1__EMPTY        IPU_REGISTERS_OFFSET+0x00068014,0x00000000
+#define IPU_VDI_PS_1__FULL         IPU_REGISTERS_OFFSET+0x00068014,0xffffffff
+#define IPU_VDI_PS_1__VDI_FHEIGHT1 IPU_REGISTERS_OFFSET+0x00068014,0x07FF0000
+#define IPU_VDI_PS_1__VDI_FWIDTH1  IPU_REGISTERS_OFFSET+0x00068014,0x000007FF
+
+#define IPU_VDI_PS_2__ADDR            IPU_REGISTERS_OFFSET+0x00068018
+#define IPU_VDI_PS_2__EMPTY           IPU_REGISTERS_OFFSET+0x00068018,0x00000000
+#define IPU_VDI_PS_2__FULL            IPU_REGISTERS_OFFSET+0x00068018,0xffffffff
+#define IPU_VDI_PS_2__VDI_OFFSET_VER1 IPU_REGISTERS_OFFSET+0x00068018,0x07FF0000
+#define IPU_VDI_PS_2__VDI_OFFSET_HOR1 IPU_REGISTERS_OFFSET+0x00068018,0x000007FF
+
+#define IPU_VDI_PS_3__ADDR         IPU_REGISTERS_OFFSET+0x0006801C
+#define IPU_VDI_PS_3__EMPTY        IPU_REGISTERS_OFFSET+0x0006801C,0x00000000
+#define IPU_VDI_PS_3__FULL         IPU_REGISTERS_OFFSET+0x0006801C,0xffffffff
+#define IPU_VDI_PS_3__VDI_FHEIGHT3 IPU_REGISTERS_OFFSET+0x0006801C,0x07FF0000
+#define IPU_VDI_PS_3__VDI_FWIDTH3  IPU_REGISTERS_OFFSET+0x0006801C,0x000007FF
+
+#define IPU_VDI_PS_4__ADDR            IPU_REGISTERS_OFFSET+0x00068020
+#define IPU_VDI_PS_4__EMPTY           IPU_REGISTERS_OFFSET+0x00068020,0x00000000
+#define IPU_VDI_PS_4__FULL            IPU_REGISTERS_OFFSET+0x00068020,0xffffffff
+#define IPU_VDI_PS_4__VDI_OFFSET_VER3 IPU_REGISTERS_OFFSET+0x00068020,0x07FF0000
+#define IPU_VDI_PS_4__VDI_OFFSET_HOR3 IPU_REGISTERS_OFFSET+0x00068020,0x000007FF
+
+#define IPU_DP_COM_CONF_ASYNC__ADDR                       IPU_REGISTERS_OFFSET+0x00018060
+#define IPU_DP_COM_CONF_ASYNC__EMPTY                      IPU_REGISTERS_OFFSET+0x00018060,0x00000000
+#define IPU_DP_COM_CONF_ASYNC__FULL                       IPU_REGISTERS_OFFSET+0x00018060,0xffffffff
+#define IPU_DP_COM_CONF_ASYNC__DP_GAMMA_YUV_EN_ASYNC     IPU_REGISTERS_OFFSET+0x00018060,0x00002000
+#define IPU_DP_COM_CONF_ASYNC__DP_GAMMA_EN_ASYNC         IPU_REGISTERS_OFFSET+0x00018060,0x00001000
+#define IPU_DP_COM_CONF_ASYNC__DP_CSC_YUV_SAT_MODE_ASYNC IPU_REGISTERS_OFFSET+0x00018060,0x00000800
+#define IPU_DP_COM_CONF_ASYNC__DP_CSC_GAMUT_SAT_EN_ASYNC IPU_REGISTERS_OFFSET+0x00018060,0x00000400
+#define IPU_DP_COM_CONF_ASYNC__DP_CSC_DEF_ASYNC          IPU_REGISTERS_OFFSET+0x00018060,0x00000300
+#define IPU_DP_COM_CONF_ASYNC__DP_COC_ASYNC              IPU_REGISTERS_OFFSET+0x00018060,0x00000070
+#define IPU_DP_COM_CONF_ASYNC__DP_GWCKE_ASYNC            IPU_REGISTERS_OFFSET+0x00018060,0x00000008
+#define IPU_DP_COM_CONF_ASYNC__DP_GWAM_ASYNC             IPU_REGISTERS_OFFSET+0x00018060,0x00000004
+#define IPU_DP_COM_CONF_ASYNC__DP_GWSEL_ASYNC            IPU_REGISTERS_OFFSET+0x00018060,0x00000002
+
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC__ADDR            IPU_REGISTERS_OFFSET+0x00018064
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC__EMPTY           IPU_REGISTERS_OFFSET+0x00018064,0x00000000
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC__FULL            IPU_REGISTERS_OFFSET+0x00018064,0xffffffff
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC__DP_GWAV_ASYNC  IPU_REGISTERS_OFFSET+0x00018064,0xFF000000
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC__DP_GWCKR_ASYNC IPU_REGISTERS_OFFSET+0x00018064,0x00FF0000
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC__DP_GWCKG_ASYNC IPU_REGISTERS_OFFSET+0x00018064,0x0000FF00
+#define IPU_DP_GRAPH_WIND_CTRL_ASYNC__DP_GWCKB_ASYNC IPU_REGISTERS_OFFSET+0x00018064,0x000000FF
+
+#define IPU_DP_FG_POS_ASYNC__ADDR           IPU_REGISTERS_OFFSET+0x00018068
+#define IPU_DP_FG_POS_ASYNC__EMPTY          IPU_REGISTERS_OFFSET+0x00018068,0x00000000
+#define IPU_DP_FG_POS_ASYNC__FULL           IPU_REGISTERS_OFFSET+0x00018068,0xffffffff
+#define IPU_DP_FG_POS_ASYNC__DP_FGXP_ASYNC IPU_REGISTERS_OFFSET+0x00018068,0x07FF0000
+#define IPU_DP_FG_POS_ASYNC__DP_FGYP_ASYNC IPU_REGISTERS_OFFSET+0x00018068,0x000007FF
+
+#define IPU_DP_CUR_POS_ASYNC__ADDR          IPU_REGISTERS_OFFSET+0x0001806C
+#define IPU_DP_CUR_POS_ASYNC__EMPTY         IPU_REGISTERS_OFFSET+0x0001806C,0x00000000
+#define IPU_DP_CUR_POS_ASYNC__FULL          IPU_REGISTERS_OFFSET+0x0001806C,0xffffffff
+#define IPU_DP_CUR_POS_ASYNC__DP_CXW_ASYNC IPU_REGISTERS_OFFSET+0x0001806C,0xF8000000
+#define IPU_DP_CUR_POS_ASYNC__DP_CXP_ASYNC IPU_REGISTERS_OFFSET+0x0001806C,0x07FF0000
+#define IPU_DP_CUR_POS_ASYNC__DP_CYH_ASYNC IPU_REGISTERS_OFFSET+0x0001806C,0x0000F800
+#define IPU_DP_CUR_POS_ASYNC__DP_CYP_ASYNC IPU_REGISTERS_OFFSET+0x0001806C,0x000007FF
+
+#define IPU_DP_CUR_MAP_ASYNC__ADDR             IPU_REGISTERS_OFFSET+0x00018070
+#define IPU_DP_CUR_MAP_ASYNC__EMPTY            IPU_REGISTERS_OFFSET+0x00018070,0x00000000
+#define IPU_DP_CUR_MAP_ASYNC__FULL             IPU_REGISTERS_OFFSET+0x00018070,0xffffffff
+#define IPU_DP_CUR_MAP_ASYNC__CUR_COL_R_ASYNC IPU_REGISTERS_OFFSET+0x00018070,0x00FF0000
+#define IPU_DP_CUR_MAP_ASYNC__CUR_COL_G_ASYNC IPU_REGISTERS_OFFSET+0x00018070,0x0000FF00
+#define IPU_DP_CUR_MAP_ASYNC__CUR_COL_B_ASYNC IPU_REGISTERS_OFFSET+0x00018070,0x000000FF
+
+#define IPU_DP_GAMMA_C_ASYNC_0__ADDR                IPU_REGISTERS_OFFSET+0x00018074
+#define IPU_DP_GAMMA_C_ASYNC_0__EMPTY               IPU_REGISTERS_OFFSET+0x00018074,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC_0__FULL                IPU_REGISTERS_OFFSET+0x00018074,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC_0__DP_GAMMA_C_ASYNC_1 IPU_REGISTERS_OFFSET+0x00018074,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC_0__DP_GAMMA_C_ASYNC_0 IPU_REGISTERS_OFFSET+0x00018074,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC_1__ADDR                IPU_REGISTERS_OFFSET+0x00018078
+#define IPU_DP_GAMMA_C_ASYNC_1__EMPTY               IPU_REGISTERS_OFFSET+0x00018078,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC_1__FULL                IPU_REGISTERS_OFFSET+0x00018078,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC_1__DP_GAMMA_C_ASYNC_3 IPU_REGISTERS_OFFSET+0x00018078,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC_1__DP_GAMMA_C_ASYNC_2 IPU_REGISTERS_OFFSET+0x00018078,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC_2__ADDR                IPU_REGISTERS_OFFSET+0x0001807C
+#define IPU_DP_GAMMA_C_ASYNC_2__EMPTY               IPU_REGISTERS_OFFSET+0x0001807C,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC_2__FULL                IPU_REGISTERS_OFFSET+0x0001807C,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC_2__DP_GAMMA_C_ASYNC_5 IPU_REGISTERS_OFFSET+0x0001807C,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC_2__DP_GAMMA_C_ASYNC_4 IPU_REGISTERS_OFFSET+0x0001807C,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC_3__ADDR                IPU_REGISTERS_OFFSET+0x00018080
+#define IPU_DP_GAMMA_C_ASYNC_3__EMPTY               IPU_REGISTERS_OFFSET+0x00018080,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC_3__FULL                IPU_REGISTERS_OFFSET+0x00018080,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC_3__DP_GAMMA_C_ASYNC_7 IPU_REGISTERS_OFFSET+0x00018080,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC_3__DP_GAMMA_C_ASYNC_6 IPU_REGISTERS_OFFSET+0x00018080,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC_4__ADDR                IPU_REGISTERS_OFFSET+0x00018084
+#define IPU_DP_GAMMA_C_ASYNC_4__EMPTY               IPU_REGISTERS_OFFSET+0x00018084,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC_4__FULL                IPU_REGISTERS_OFFSET+0x00018084,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC_4__DP_GAMMA_C_ASYNC_9 IPU_REGISTERS_OFFSET+0x00018084,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC_4__DP_GAMMA_C_ASYNC_8 IPU_REGISTERS_OFFSET+0x00018084,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC_5__ADDR                 IPU_REGISTERS_OFFSET+0x00018088
+#define IPU_DP_GAMMA_C_ASYNC_5__EMPTY                IPU_REGISTERS_OFFSET+0x00018088,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC_5__FULL                 IPU_REGISTERS_OFFSET+0x00018088,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC_5__DP_GAMMA_C_ASYNC_11 IPU_REGISTERS_OFFSET+0x00018088,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC_5__DP_GAMMA_C_ASYNC_10 IPU_REGISTERS_OFFSET+0x00018088,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC_6__ADDR                 IPU_REGISTERS_OFFSET+0x0001808C
+#define IPU_DP_GAMMA_C_ASYNC_6__EMPTY                IPU_REGISTERS_OFFSET+0x0001808C,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC_6__FULL                 IPU_REGISTERS_OFFSET+0x0001808C,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC_6__DP_GAMMA_C_ASYNC_13 IPU_REGISTERS_OFFSET+0x0001808C,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC_6__DP_GAMMA_C_ASYNC_12 IPU_REGISTERS_OFFSET+0x0001808C,0x000001FF
+
+#define IPU_DP_GAMMA_C_ASYNC_7__ADDR                 IPU_REGISTERS_OFFSET+0x00018090
+#define IPU_DP_GAMMA_C_ASYNC_7__EMPTY                IPU_REGISTERS_OFFSET+0x00018090,0x00000000
+#define IPU_DP_GAMMA_C_ASYNC_7__FULL                 IPU_REGISTERS_OFFSET+0x00018090,0xffffffff
+#define IPU_DP_GAMMA_C_ASYNC_7__DP_GAMMA_C_ASYNC_15 IPU_REGISTERS_OFFSET+0x00018090,0x01FF0000
+#define IPU_DP_GAMMA_C_ASYNC_7__DP_GAMMA_C_ASYNC_14 IPU_REGISTERS_OFFSET+0x00018090,0x000001FF
+
+#define IPU_DP_GAMMA_S_ASYNC_0__ADDR                IPU_REGISTERS_OFFSET+0x00018094
+#define IPU_DP_GAMMA_S_ASYNC_0__EMPTY               IPU_REGISTERS_OFFSET+0x00018094,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC_0__FULL                IPU_REGISTERS_OFFSET+0x00018094,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC_0__DP_GAMMA_S_ASYNC_3 IPU_REGISTERS_OFFSET+0x00018094,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC_0__DP_GAMMA_S_ASYNC_2 IPU_REGISTERS_OFFSET+0x00018094,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC_0__DP_GAMMA_S_ASYNC_1 IPU_REGISTERS_OFFSET+0x00018094,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC_0__DP_GAMMA_S_ASYNC_0 IPU_REGISTERS_OFFSET+0x00018094,0x000000FF
+
+#define IPU_DP_GAMMA_S_ASYNC_1__ADDR                IPU_REGISTERS_OFFSET+0x00018098
+#define IPU_DP_GAMMA_S_ASYNC_1__EMPTY               IPU_REGISTERS_OFFSET+0x00018098,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC_1__FULL                IPU_REGISTERS_OFFSET+0x00018098,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC_1__DP_GAMMA_S_ASYNC_7 IPU_REGISTERS_OFFSET+0x00018098,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC_1__DP_GAMMA_S_ASYNC_6 IPU_REGISTERS_OFFSET+0x00018098,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC_1__DP_GAMMA_S_ASYNC_5 IPU_REGISTERS_OFFSET+0x00018098,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC_1__DP_GAMMA_S_ASYNC_4 IPU_REGISTERS_OFFSET+0x00018098,0x000000FF
+
+#define IPU_DP_GAMMA_S_ASYNC_2__ADDR                 IPU_REGISTERS_OFFSET+0x0001809C
+#define IPU_DP_GAMMA_S_ASYNC_2__EMPTY                IPU_REGISTERS_OFFSET+0x0001809C,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC_2__FULL                 IPU_REGISTERS_OFFSET+0x0001809C,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC_2__DP_GAMMA_S_ASYNC_11 IPU_REGISTERS_OFFSET+0x0001809C,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC_2__DP_GAMMA_S_ASYNC_10 IPU_REGISTERS_OFFSET+0x0001809C,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC_2__DP_GAMMA_S_ASYNC_9  IPU_REGISTERS_OFFSET+0x0001809C,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC_2__DP_GAMMA_S_ASYNC_8  IPU_REGISTERS_OFFSET+0x0001809C,0x000000FF
+
+#define IPU_DP_GAMMA_S_ASYNC_3__ADDR                 IPU_REGISTERS_OFFSET+0x000180A0
+#define IPU_DP_GAMMA_S_ASYNC_3__EMPTY                IPU_REGISTERS_OFFSET+0x000180A0,0x00000000
+#define IPU_DP_GAMMA_S_ASYNC_3__FULL                 IPU_REGISTERS_OFFSET+0x000180A0,0xffffffff
+#define IPU_DP_GAMMA_S_ASYNC_3__DP_GAMMA_S_ASYNC_15 IPU_REGISTERS_OFFSET+0x000180A0,0xFF000000
+#define IPU_DP_GAMMA_S_ASYNC_3__DP_GAMMA_S_ASYNC_14 IPU_REGISTERS_OFFSET+0x000180A0,0x00FF0000
+#define IPU_DP_GAMMA_S_ASYNC_3__DP_GAMMA_S_ASYNC_13 IPU_REGISTERS_OFFSET+0x000180A0,0x0000FF00
+#define IPU_DP_GAMMA_S_ASYNC_3__DP_GAMMA_S_ASYNC_12 IPU_REGISTERS_OFFSET+0x000180A0,0x000000FF
+
+#define IPU_DP_CSCA_ASYNC_0__ADDR              IPU_REGISTERS_OFFSET+0x000180A4
+#define IPU_DP_CSCA_ASYNC_0__EMPTY             IPU_REGISTERS_OFFSET+0x000180A4,0x00000000
+#define IPU_DP_CSCA_ASYNC_0__FULL              IPU_REGISTERS_OFFSET+0x000180A4,0xffffffff
+#define IPU_DP_CSCA_ASYNC_0__DP_CSC_A_ASYNC_1 IPU_REGISTERS_OFFSET+0x000180A4,0x03FF0000
+#define IPU_DP_CSCA_ASYNC_0__DP_CSC_A_ASYNC_0 IPU_REGISTERS_OFFSET+0x000180A4,0x000003FF
+
+#define IPU_DP_CSCA_ASYNC_1__ADDR              IPU_REGISTERS_OFFSET+0x000180A8
+#define IPU_DP_CSCA_ASYNC_1__EMPTY             IPU_REGISTERS_OFFSET+0x000180A8,0x00000000
+#define IPU_DP_CSCA_ASYNC_1__FULL              IPU_REGISTERS_OFFSET+0x000180A8,0xffffffff
+#define IPU_DP_CSCA_ASYNC_1__DP_CSC_A_ASYNC_3 IPU_REGISTERS_OFFSET+0x000180A8,0x03FF0000
+#define IPU_DP_CSCA_ASYNC_1__DP_CSC_A_ASYNC_2 IPU_REGISTERS_OFFSET+0x000180A8,0x000003FF
+
+#define IPU_DP_CSCA_ASYNC_2__ADDR              IPU_REGISTERS_OFFSET+0x000180AC
+#define IPU_DP_CSCA_ASYNC_2__EMPTY             IPU_REGISTERS_OFFSET+0x000180AC,0x00000000
+#define IPU_DP_CSCA_ASYNC_2__FULL              IPU_REGISTERS_OFFSET+0x000180AC,0xffffffff
+#define IPU_DP_CSCA_ASYNC_2__DP_CSC_A_ASYNC_5 IPU_REGISTERS_OFFSET+0x000180AC,0x03FF0000
+#define IPU_DP_CSCA_ASYNC_2__DP_CSC_A_ASYNC_4 IPU_REGISTERS_OFFSET+0x000180AC,0x000003FF
+
+#define IPU_DP_CSCA_ASYNC_3__ADDR              IPU_REGISTERS_OFFSET+0x000180B0
+#define IPU_DP_CSCA_ASYNC_3__EMPTY             IPU_REGISTERS_OFFSET+0x000180B0,0x00000000
+#define IPU_DP_CSCA_ASYNC_3__FULL              IPU_REGISTERS_OFFSET+0x000180B0,0xffffffff
+#define IPU_DP_CSCA_ASYNC_3__DP_CSC_A_ASYNC_7 IPU_REGISTERS_OFFSET+0x000180B0,0x03FF0000
+#define IPU_DP_CSCA_ASYNC_3__DP_CSC_A_ASYNC_6 IPU_REGISTERS_OFFSET+0x000180B0,0x000003FF
+
+#define IPU_DP_CSC_ASYNC_0__ADDR             IPU_REGISTERS_OFFSET+0x000180B4
+#define IPU_DP_CSC_ASYNC_0__EMPTY            IPU_REGISTERS_OFFSET+0x000180B4,0x00000000
+#define IPU_DP_CSC_ASYNC_0__FULL             IPU_REGISTERS_OFFSET+0x000180B4,0xffffffff
+#define IPU_DP_CSC_ASYNC_0__DP_CSC_S0_ASYNC IPU_REGISTERS_OFFSET+0x000180B4,0xC0000000
+#define IPU_DP_CSC_ASYNC_0__DP_CSC_B0_ASYNC IPU_REGISTERS_OFFSET+0x000180B4,0x3FFF0000
+#define IPU_DP_CSC_ASYNC_0__DP_CSC_A8_ASYNC IPU_REGISTERS_OFFSET+0x000180B4,0x000003FF
+
+#define IPU_DP_CSC_ASYNC_1__ADDR             IPU_REGISTERS_OFFSET+0x000180B8
+#define IPU_DP_CSC_ASYNC_1__EMPTY            IPU_REGISTERS_OFFSET+0x000180B8,0x00000000
+#define IPU_DP_CSC_ASYNC_1__FULL             IPU_REGISTERS_OFFSET+0x000180B8,0xffffffff
+#define IPU_DP_CSC_ASYNC_1__DP_CSC_S2_ASYNC IPU_REGISTERS_OFFSET+0x000180B8,0xC0000000
+#define IPU_DP_CSC_ASYNC_1__DP_CSC_B2_ASYNC IPU_REGISTERS_OFFSET+0x000180B8,0x3FFF0000
+#define IPU_DP_CSC_ASYNC_1__DP_CSC_S1_ASYNC IPU_REGISTERS_OFFSET+0x000180B8,0x0000C000
+#define IPU_DP_CSC_ASYNC_1__DP_CSC_B1_ASYNC IPU_REGISTERS_OFFSET+0x000180B8,0x00003FFF
+
+
+#define IPU_DI0_DW_GEN_0__ADDR                    IPU_REGISTERS_OFFSET+0x00040058
+#define IPU_DI0_DW_GEN_0__EMPTY                   IPU_REGISTERS_OFFSET+0x00040058,0x00000000
+#define IPU_DI0_DW_GEN_0__FULL                    IPU_REGISTERS_OFFSET+0x00040058,0xffffffff
+#define IPU_DI0_DW_GEN_0__DI0_SERIAL_PERIOD_0     IPU_REGISTERS_OFFSET+0x00040058,0xFF000000
+#define IPU_DI0_DW_GEN_0__DI0_START_PERIOD_0      IPU_REGISTERS_OFFSET+0x00040058,0x00FF0000
+#define IPU_DI0_DW_GEN_0__DI0_CST_0               IPU_REGISTERS_OFFSET+0x00040058,0x0000C000
+#define IPU_DI0_DW_GEN_0__DI0_SERIAL_VALID_BITS_0 IPU_REGISTERS_OFFSET+0x00040058,0x000001F0
+#define IPU_DI0_DW_GEN_0__DI0_SERIAL_RS_0         IPU_REGISTERS_OFFSET+0x00040058,0x0000000C
+#define IPU_DI0_DW_GEN_0__DI0_SERIAL_CLK_0        IPU_REGISTERS_OFFSET+0x00040058,0x00000003
+
+#define IPU_DI0_DW_GEN_1__ADDR                    IPU_REGISTERS_OFFSET+0x0004005C
+#define IPU_DI0_DW_GEN_1__EMPTY                   IPU_REGISTERS_OFFSET+0x0004005C,0x00000000
+#define IPU_DI0_DW_GEN_1__FULL                    IPU_REGISTERS_OFFSET+0x0004005C,0xffffffff
+#define IPU_DI0_DW_GEN_1__DI0_SERIAL_PERIOD_1     IPU_REGISTERS_OFFSET+0x0004005C,0xFF000000
+#define IPU_DI0_DW_GEN_1__DI0_START_PERIOD_1      IPU_REGISTERS_OFFSET+0x0004005C,0x00FF0000
+#define IPU_DI0_DW_GEN_1__DI0_CST_1               IPU_REGISTERS_OFFSET+0x0004005C,0x0000C000
+#define IPU_DI0_DW_GEN_1__DI0_SERIAL_VALID_BITS_1 IPU_REGISTERS_OFFSET+0x0004005C,0x000001F0
+#define IPU_DI0_DW_GEN_1__DI0_SERIAL_RS_1         IPU_REGISTERS_OFFSET+0x0004005C,0x0000000C
+#define IPU_DI0_DW_GEN_1__DI0_SERIAL_CLK_1        IPU_REGISTERS_OFFSET+0x0004005C,0x00000003
+
+#define IPU_DI0_DW_GEN_2__ADDR                    IPU_REGISTERS_OFFSET+0x00040060
+#define IPU_DI0_DW_GEN_2__EMPTY                   IPU_REGISTERS_OFFSET+0x00040060,0x00000000
+#define IPU_DI0_DW_GEN_2__FULL                    IPU_REGISTERS_OFFSET+0x00040060,0xffffffff
+#define IPU_DI0_DW_GEN_2__DI0_SERIAL_PERIOD_2     IPU_REGISTERS_OFFSET+0x00040060,0xFF000000
+#define IPU_DI0_DW_GEN_2__DI0_START_PERIOD_2      IPU_REGISTERS_OFFSET+0x00040060,0x00FF0000
+#define IPU_DI0_DW_GEN_2__DI0_CST_2               IPU_REGISTERS_OFFSET+0x00040060,0x0000C000
+#define IPU_DI0_DW_GEN_2__DI0_SERIAL_VALID_BITS_2 IPU_REGISTERS_OFFSET+0x00040060,0x000001F0
+#define IPU_DI0_DW_GEN_2__DI0_SERIAL_RS_2         IPU_REGISTERS_OFFSET+0x00040060,0x0000000C
+#define IPU_DI0_DW_GEN_2__DI0_SERIAL_CLK_2        IPU_REGISTERS_OFFSET+0x00040060,0x00000003
+
+#define IPU_DI0_DW_GEN_3__ADDR                    IPU_REGISTERS_OFFSET+0x00040064
+#define IPU_DI0_DW_GEN_3__EMPTY                   IPU_REGISTERS_OFFSET+0x00040064,0x00000000
+#define IPU_DI0_DW_GEN_3__FULL                    IPU_REGISTERS_OFFSET+0x00040064,0xffffffff
+#define IPU_DI0_DW_GEN_3__DI0_SERIAL_PERIOD_3     IPU_REGISTERS_OFFSET+0x00040064,0xFF000000
+#define IPU_DI0_DW_GEN_3__DI0_START_PERIOD_3      IPU_REGISTERS_OFFSET+0x00040064,0x00FF0000
+#define IPU_DI0_DW_GEN_3__DI0_CST_3               IPU_REGISTERS_OFFSET+0x00040064,0x0000C000
+#define IPU_DI0_DW_GEN_3__DI0_SERIAL_VALID_BITS_3 IPU_REGISTERS_OFFSET+0x00040064,0x000001F0
+#define IPU_DI0_DW_GEN_3__DI0_SERIAL_RS_3         IPU_REGISTERS_OFFSET+0x00040064,0x0000000C
+#define IPU_DI0_DW_GEN_3__DI0_SERIAL_CLK_3        IPU_REGISTERS_OFFSET+0x00040064,0x00000003
+
+#define IPU_DI0_DW_GEN_4__ADDR                    IPU_REGISTERS_OFFSET+0x00040068
+#define IPU_DI0_DW_GEN_4__EMPTY                   IPU_REGISTERS_OFFSET+0x00040068,0x00000000
+#define IPU_DI0_DW_GEN_4__FULL                    IPU_REGISTERS_OFFSET+0x00040068,0xffffffff
+#define IPU_DI0_DW_GEN_4__DI0_SERIAL_PERIOD_4     IPU_REGISTERS_OFFSET+0x00040068,0xFF000000
+#define IPU_DI0_DW_GEN_4__DI0_START_PERIOD_4      IPU_REGISTERS_OFFSET+0x00040068,0x00FF0000
+#define IPU_DI0_DW_GEN_4__DI0_CST_4               IPU_REGISTERS_OFFSET+0x00040068,0x0000C000
+#define IPU_DI0_DW_GEN_4__DI0_SERIAL_VALID_BITS_4 IPU_REGISTERS_OFFSET+0x00040068,0x000001F0
+#define IPU_DI0_DW_GEN_4__DI0_SERIAL_RS_4         IPU_REGISTERS_OFFSET+0x00040068,0x0000000C
+#define IPU_DI0_DW_GEN_4__DI0_SERIAL_CLK_4        IPU_REGISTERS_OFFSET+0x00040068,0x00000003
+
+#define IPU_DI0_DW_GEN_5__ADDR                    IPU_REGISTERS_OFFSET+0x0004006C
+#define IPU_DI0_DW_GEN_5__EMPTY                   IPU_REGISTERS_OFFSET+0x0004006C,0x00000000
+#define IPU_DI0_DW_GEN_5__FULL                    IPU_REGISTERS_OFFSET+0x0004006C,0xffffffff
+#define IPU_DI0_DW_GEN_5__DI0_SERIAL_PERIOD_5     IPU_REGISTERS_OFFSET+0x0004006C,0xFF000000
+#define IPU_DI0_DW_GEN_5__DI0_START_PERIOD_5      IPU_REGISTERS_OFFSET+0x0004006C,0x00FF0000
+#define IPU_DI0_DW_GEN_5__DI0_CST_5               IPU_REGISTERS_OFFSET+0x0004006C,0x0000C000
+#define IPU_DI0_DW_GEN_5__DI0_SERIAL_VALID_BITS_5 IPU_REGISTERS_OFFSET+0x0004006C,0x000001F0
+#define IPU_DI0_DW_GEN_5__DI0_SERIAL_RS_5         IPU_REGISTERS_OFFSET+0x0004006C,0x0000000C
+#define IPU_DI0_DW_GEN_5__DI0_SERIAL_CLK_5        IPU_REGISTERS_OFFSET+0x0004006C,0x00000003
+
+#define IPU_DI0_DW_GEN_6__ADDR                    IPU_REGISTERS_OFFSET+0x00040070
+#define IPU_DI0_DW_GEN_6__EMPTY                   IPU_REGISTERS_OFFSET+0x00040070,0x00000000
+#define IPU_DI0_DW_GEN_6__FULL                    IPU_REGISTERS_OFFSET+0x00040070,0xffffffff
+#define IPU_DI0_DW_GEN_6__DI0_SERIAL_PERIOD_6     IPU_REGISTERS_OFFSET+0x00040070,0xFF000000
+#define IPU_DI0_DW_GEN_6__DI0_START_PERIOD_6      IPU_REGISTERS_OFFSET+0x00040070,0x00FF0000
+#define IPU_DI0_DW_GEN_6__DI0_CST_6               IPU_REGISTERS_OFFSET+0x00040070,0x0000C000
+#define IPU_DI0_DW_GEN_6__DI0_SERIAL_VALID_BITS_6 IPU_REGISTERS_OFFSET+0x00040070,0x000001F0
+#define IPU_DI0_DW_GEN_6__DI0_SERIAL_RS_6         IPU_REGISTERS_OFFSET+0x00040070,0x0000000C
+#define IPU_DI0_DW_GEN_6__DI0_SERIAL_CLK_6        IPU_REGISTERS_OFFSET+0x00040070,0x00000003
+
+#define IPU_DI0_DW_GEN_7__ADDR                    IPU_REGISTERS_OFFSET+0x00040074
+#define IPU_DI0_DW_GEN_7__EMPTY                   IPU_REGISTERS_OFFSET+0x00040074,0x00000000
+#define IPU_DI0_DW_GEN_7__FULL                    IPU_REGISTERS_OFFSET+0x00040074,0xffffffff
+#define IPU_DI0_DW_GEN_7__DI0_SERIAL_PERIOD_7     IPU_REGISTERS_OFFSET+0x00040074,0xFF000000
+#define IPU_DI0_DW_GEN_7__DI0_START_PERIOD_7      IPU_REGISTERS_OFFSET+0x00040074,0x00FF0000
+#define IPU_DI0_DW_GEN_7__DI0_CST_7               IPU_REGISTERS_OFFSET+0x00040074,0x0000C000
+#define IPU_DI0_DW_GEN_7__DI0_SERIAL_VALID_BITS_7 IPU_REGISTERS_OFFSET+0x00040074,0x000001F0
+#define IPU_DI0_DW_GEN_7__DI0_SERIAL_RS_7         IPU_REGISTERS_OFFSET+0x00040074,0x0000000C
+#define IPU_DI0_DW_GEN_7__DI0_SERIAL_CLK_7        IPU_REGISTERS_OFFSET+0x00040074,0x00000003
+
+#define IPU_DI0_DW_GEN_8__ADDR                    IPU_REGISTERS_OFFSET+0x00040078
+#define IPU_DI0_DW_GEN_8__EMPTY                   IPU_REGISTERS_OFFSET+0x00040078,0x00000000
+#define IPU_DI0_DW_GEN_8__FULL                    IPU_REGISTERS_OFFSET+0x00040078,0xffffffff
+#define IPU_DI0_DW_GEN_8__DI0_SERIAL_PERIOD_8     IPU_REGISTERS_OFFSET+0x00040078,0xFF000000
+#define IPU_DI0_DW_GEN_8__DI0_START_PERIOD_8      IPU_REGISTERS_OFFSET+0x00040078,0x00FF0000
+#define IPU_DI0_DW_GEN_8__DI0_CST_8               IPU_REGISTERS_OFFSET+0x00040078,0x0000C000
+#define IPU_DI0_DW_GEN_8__DI0_SERIAL_VALID_BITS_8 IPU_REGISTERS_OFFSET+0x00040078,0x000001F0
+#define IPU_DI0_DW_GEN_8__DI0_SERIAL_RS_8         IPU_REGISTERS_OFFSET+0x00040078,0x0000000C
+#define IPU_DI0_DW_GEN_8__DI0_SERIAL_CLK_8        IPU_REGISTERS_OFFSET+0x00040078,0x00000003
+
+#define IPU_DI0_DW_GEN_9__ADDR                    IPU_REGISTERS_OFFSET+0x0004007C
+#define IPU_DI0_DW_GEN_9__EMPTY                   IPU_REGISTERS_OFFSET+0x0004007C,0x00000000
+#define IPU_DI0_DW_GEN_9__FULL                    IPU_REGISTERS_OFFSET+0x0004007C,0xffffffff
+#define IPU_DI0_DW_GEN_9__DI0_SERIAL_PERIOD_9     IPU_REGISTERS_OFFSET+0x0004007C,0xFF000000
+#define IPU_DI0_DW_GEN_9__DI0_START_PERIOD_9      IPU_REGISTERS_OFFSET+0x0004007C,0x00FF0000
+#define IPU_DI0_DW_GEN_9__DI0_CST_9               IPU_REGISTERS_OFFSET+0x0004007C,0x0000C000
+#define IPU_DI0_DW_GEN_9__DI0_SERIAL_VALID_BITS_9 IPU_REGISTERS_OFFSET+0x0004007C,0x000001F0
+#define IPU_DI0_DW_GEN_9__DI0_SERIAL_RS_9         IPU_REGISTERS_OFFSET+0x0004007C,0x0000000C
+#define IPU_DI0_DW_GEN_9__DI0_SERIAL_CLK_9        IPU_REGISTERS_OFFSET+0x0004007C,0x00000003
+
+#define IPU_DI0_DW_GEN_10__ADDR                     IPU_REGISTERS_OFFSET+0x00040080
+#define IPU_DI0_DW_GEN_10__EMPTY                    IPU_REGISTERS_OFFSET+0x00040080,0x00000000
+#define IPU_DI0_DW_GEN_10__FULL                     IPU_REGISTERS_OFFSET+0x00040080,0xffffffff
+#define IPU_DI0_DW_GEN_10__DI0_SERIAL_PERIOD_10     IPU_REGISTERS_OFFSET+0x00040080,0xFF000000
+#define IPU_DI0_DW_GEN_10__DI0_START_PERIOD_10      IPU_REGISTERS_OFFSET+0x00040080,0x00FF0000
+#define IPU_DI0_DW_GEN_10__DI0_CST_10               IPU_REGISTERS_OFFSET+0x00040080,0x0000C000
+#define IPU_DI0_DW_GEN_10__DI0_SERIAL_VALID_BITS_10 IPU_REGISTERS_OFFSET+0x00040080,0x000001F0
+#define IPU_DI0_DW_GEN_10__DI0_SERIAL_RS_10         IPU_REGISTERS_OFFSET+0x00040080,0x0000000C
+#define IPU_DI0_DW_GEN_10__DI0_SERIAL_CLK_10        IPU_REGISTERS_OFFSET+0x00040080,0x00000003
+
+#define IPU_DI0_DW_GEN_11__ADDR                     IPU_REGISTERS_OFFSET+0x00040084
+#define IPU_DI0_DW_GEN_11__EMPTY                    IPU_REGISTERS_OFFSET+0x00040084,0x00000000
+#define IPU_DI0_DW_GEN_11__FULL                     IPU_REGISTERS_OFFSET+0x00040084,0xffffffff
+#define IPU_DI0_DW_GEN_11__DI0_SERIAL_PERIOD_11     IPU_REGISTERS_OFFSET+0x00040084,0xFF000000
+#define IPU_DI0_DW_GEN_11__DI0_START_PERIOD_11      IPU_REGISTERS_OFFSET+0x00040084,0x00FF0000
+#define IPU_DI0_DW_GEN_11__DI0_CST_11               IPU_REGISTERS_OFFSET+0x00040084,0x0000C000
+#define IPU_DI0_DW_GEN_11__DI0_SERIAL_VALID_BITS_11 IPU_REGISTERS_OFFSET+0x00040084,0x000001F0
+#define IPU_DI0_DW_GEN_11__DI0_SERIAL_RS_11         IPU_REGISTERS_OFFSET+0x00040084,0x0000000C
+#define IPU_DI0_DW_GEN_11__DI0_SERIAL_CLK_11        IPU_REGISTERS_OFFSET+0x00040084,0x00000003
+
+#define IPU_DI1_DW_GEN_0__ADDR                    IPU_REGISTERS_OFFSET+0x00048058
+#define IPU_DI1_DW_GEN_0__EMPTY                   IPU_REGISTERS_OFFSET+0x00048058,0x00000000
+#define IPU_DI1_DW_GEN_0__FULL                    IPU_REGISTERS_OFFSET+0x00048058,0xffffffff
+#define IPU_DI1_DW_GEN_0__DI1_SERIAL_PERIOD_0     IPU_REGISTERS_OFFSET+0x00048058,0xFF000000
+#define IPU_DI1_DW_GEN_0__DI1_START_PERIOD_0      IPU_REGISTERS_OFFSET+0x00048058,0x00FF0000
+#define IPU_DI1_DW_GEN_0__DI1_CST_0               IPU_REGISTERS_OFFSET+0x00048058,0x0000C000
+#define IPU_DI1_DW_GEN_0__DI1_SERIAL_VALID_BITS_0 IPU_REGISTERS_OFFSET+0x00048058,0x000001F0
+#define IPU_DI1_DW_GEN_0__DI1_SERIAL_RS_0         IPU_REGISTERS_OFFSET+0x00048058,0x0000000C
+#define IPU_DI1_DW_GEN_0__DI1_SERIAL_CLK_0        IPU_REGISTERS_OFFSET+0x00048058,0x00000003
+
+#define IPU_DI1_DW_GEN_1__ADDR                    IPU_REGISTERS_OFFSET+0x0004805C
+#define IPU_DI1_DW_GEN_1__EMPTY                   IPU_REGISTERS_OFFSET+0x0004805C,0x00000000
+#define IPU_DI1_DW_GEN_1__FULL                    IPU_REGISTERS_OFFSET+0x0004805C,0xffffffff
+#define IPU_DI1_DW_GEN_1__DI1_SERIAL_PERIOD_1     IPU_REGISTERS_OFFSET+0x0004805C,0xFF000000
+#define IPU_DI1_DW_GEN_1__DI1_START_PERIOD_1      IPU_REGISTERS_OFFSET+0x0004805C,0x00FF0000
+#define IPU_DI1_DW_GEN_1__DI1_CST_1               IPU_REGISTERS_OFFSET+0x0004805C,0x0000C000
+#define IPU_DI1_DW_GEN_1__DI1_SERIAL_VALID_BITS_1 IPU_REGISTERS_OFFSET+0x0004805C,0x000001F0
+#define IPU_DI1_DW_GEN_1__DI1_SERIAL_RS_1         IPU_REGISTERS_OFFSET+0x0004805C,0x0000000C
+#define IPU_DI1_DW_GEN_1__DI1_SERIAL_CLK_1        IPU_REGISTERS_OFFSET+0x0004805C,0x00000003
+
+#define IPU_DI1_DW_GEN_2__ADDR                    IPU_REGISTERS_OFFSET+0x00048060
+#define IPU_DI1_DW_GEN_2__EMPTY                   IPU_REGISTERS_OFFSET+0x00048060,0x00000000
+#define IPU_DI1_DW_GEN_2__FULL                    IPU_REGISTERS_OFFSET+0x00048060,0xffffffff
+#define IPU_DI1_DW_GEN_2__DI1_SERIAL_PERIOD_2     IPU_REGISTERS_OFFSET+0x00048060,0xFF000000
+#define IPU_DI1_DW_GEN_2__DI1_START_PERIOD_2      IPU_REGISTERS_OFFSET+0x00048060,0x00FF0000
+#define IPU_DI1_DW_GEN_2__DI1_CST_2               IPU_REGISTERS_OFFSET+0x00048060,0x0000C000
+#define IPU_DI1_DW_GEN_2__DI1_SERIAL_VALID_BITS_2 IPU_REGISTERS_OFFSET+0x00048060,0x000001F0
+#define IPU_DI1_DW_GEN_2__DI1_SERIAL_RS_2         IPU_REGISTERS_OFFSET+0x00048060,0x0000000C
+#define IPU_DI1_DW_GEN_2__DI1_SERIAL_CLK_2        IPU_REGISTERS_OFFSET+0x00048060,0x00000003
+
+#define IPU_DI1_DW_GEN_3__ADDR                    IPU_REGISTERS_OFFSET+0x00048064
+#define IPU_DI1_DW_GEN_3__EMPTY                   IPU_REGISTERS_OFFSET+0x00048064,0x00000000
+#define IPU_DI1_DW_GEN_3__FULL                    IPU_REGISTERS_OFFSET+0x00048064,0xffffffff
+#define IPU_DI1_DW_GEN_3__DI1_SERIAL_PERIOD_3     IPU_REGISTERS_OFFSET+0x00048064,0xFF000000
+#define IPU_DI1_DW_GEN_3__DI1_START_PERIOD_3      IPU_REGISTERS_OFFSET+0x00048064,0x00FF0000
+#define IPU_DI1_DW_GEN_3__DI1_CST_3               IPU_REGISTERS_OFFSET+0x00048064,0x0000C000
+#define IPU_DI1_DW_GEN_3__DI1_SERIAL_VALID_BITS_3 IPU_REGISTERS_OFFSET+0x00048064,0x000001F0
+#define IPU_DI1_DW_GEN_3__DI1_SERIAL_RS_3         IPU_REGISTERS_OFFSET+0x00048064,0x0000000C
+#define IPU_DI1_DW_GEN_3__DI1_SERIAL_CLK_3        IPU_REGISTERS_OFFSET+0x00048064,0x00000003
+
+#define IPU_DI1_DW_GEN_4__ADDR                    IPU_REGISTERS_OFFSET+0x00048068
+#define IPU_DI1_DW_GEN_4__EMPTY                   IPU_REGISTERS_OFFSET+0x00048068,0x00000000
+#define IPU_DI1_DW_GEN_4__FULL                    IPU_REGISTERS_OFFSET+0x00048068,0xffffffff
+#define IPU_DI1_DW_GEN_4__DI1_SERIAL_PERIOD_4     IPU_REGISTERS_OFFSET+0x00048068,0xFF000000
+#define IPU_DI1_DW_GEN_4__DI1_START_PERIOD_4      IPU_REGISTERS_OFFSET+0x00048068,0x00FF0000
+#define IPU_DI1_DW_GEN_4__DI1_CST_4               IPU_REGISTERS_OFFSET+0x00048068,0x0000C000
+#define IPU_DI1_DW_GEN_4__DI1_SERIAL_VALID_BITS_4 IPU_REGISTERS_OFFSET+0x00048068,0x000001F0
+#define IPU_DI1_DW_GEN_4__DI1_SERIAL_RS_4         IPU_REGISTERS_OFFSET+0x00048068,0x0000000C
+#define IPU_DI1_DW_GEN_4__DI1_SERIAL_CLK_4        IPU_REGISTERS_OFFSET+0x00048068,0x00000003
+
+#define IPU_DI1_DW_GEN_5__ADDR                    IPU_REGISTERS_OFFSET+0x0004806C
+#define IPU_DI1_DW_GEN_5__EMPTY                   IPU_REGISTERS_OFFSET+0x0004806C,0x00000000
+#define IPU_DI1_DW_GEN_5__FULL                    IPU_REGISTERS_OFFSET+0x0004806C,0xffffffff
+#define IPU_DI1_DW_GEN_5__DI1_SERIAL_PERIOD_5     IPU_REGISTERS_OFFSET+0x0004806C,0xFF000000
+#define IPU_DI1_DW_GEN_5__DI1_START_PERIOD_5      IPU_REGISTERS_OFFSET+0x0004806C,0x00FF0000
+#define IPU_DI1_DW_GEN_5__DI1_CST_5               IPU_REGISTERS_OFFSET+0x0004806C,0x0000C000
+#define IPU_DI1_DW_GEN_5__DI1_SERIAL_VALID_BITS_5 IPU_REGISTERS_OFFSET+0x0004806C,0x000001F0
+#define IPU_DI1_DW_GEN_5__DI1_SERIAL_RS_5         IPU_REGISTERS_OFFSET+0x0004806C,0x0000000C
+#define IPU_DI1_DW_GEN_5__DI1_SERIAL_CLK_5        IPU_REGISTERS_OFFSET+0x0004806C,0x00000003
+
+#define IPU_DI1_DW_GEN_6__ADDR                    IPU_REGISTERS_OFFSET+0x00048070
+#define IPU_DI1_DW_GEN_6__EMPTY                   IPU_REGISTERS_OFFSET+0x00048070,0x00000000
+#define IPU_DI1_DW_GEN_6__FULL                    IPU_REGISTERS_OFFSET+0x00048070,0xffffffff
+#define IPU_DI1_DW_GEN_6__DI1_SERIAL_PERIOD_6     IPU_REGISTERS_OFFSET+0x00048070,0xFF000000
+#define IPU_DI1_DW_GEN_6__DI1_START_PERIOD_6      IPU_REGISTERS_OFFSET+0x00048070,0x00FF0000
+#define IPU_DI1_DW_GEN_6__DI1_CST_6               IPU_REGISTERS_OFFSET+0x00048070,0x0000C000
+#define IPU_DI1_DW_GEN_6__DI1_SERIAL_VALID_BITS_6 IPU_REGISTERS_OFFSET+0x00048070,0x000001F0
+#define IPU_DI1_DW_GEN_6__DI1_SERIAL_RS_6         IPU_REGISTERS_OFFSET+0x00048070,0x0000000C
+#define IPU_DI1_DW_GEN_6__DI1_SERIAL_CLK_6        IPU_REGISTERS_OFFSET+0x00048070,0x00000003
+
+#define IPU_DI1_DW_GEN_7__ADDR                    IPU_REGISTERS_OFFSET+0x00048074
+#define IPU_DI1_DW_GEN_7__EMPTY                   IPU_REGISTERS_OFFSET+0x00048074,0x00000000
+#define IPU_DI1_DW_GEN_7__FULL                    IPU_REGISTERS_OFFSET+0x00048074,0xffffffff
+#define IPU_DI1_DW_GEN_7__DI1_SERIAL_PERIOD_7     IPU_REGISTERS_OFFSET+0x00048074,0xFF000000
+#define IPU_DI1_DW_GEN_7__DI1_START_PERIOD_7      IPU_REGISTERS_OFFSET+0x00048074,0x00FF0000
+#define IPU_DI1_DW_GEN_7__DI1_CST_7               IPU_REGISTERS_OFFSET+0x00048074,0x0000C000
+#define IPU_DI1_DW_GEN_7__DI1_SERIAL_VALID_BITS_7 IPU_REGISTERS_OFFSET+0x00048074,0x000001F0
+#define IPU_DI1_DW_GEN_7__DI1_SERIAL_RS_7         IPU_REGISTERS_OFFSET+0x00048074,0x0000000C
+#define IPU_DI1_DW_GEN_7__DI1_SERIAL_CLK_7        IPU_REGISTERS_OFFSET+0x00048074,0x00000003
+
+#define IPU_DI1_DW_GEN_8__ADDR                    IPU_REGISTERS_OFFSET+0x00048078
+#define IPU_DI1_DW_GEN_8__EMPTY                   IPU_REGISTERS_OFFSET+0x00048078,0x00000000
+#define IPU_DI1_DW_GEN_8__FULL                    IPU_REGISTERS_OFFSET+0x00048078,0xffffffff
+#define IPU_DI1_DW_GEN_8__DI1_SERIAL_PERIOD_8     IPU_REGISTERS_OFFSET+0x00048078,0xFF000000
+#define IPU_DI1_DW_GEN_8__DI1_START_PERIOD_8      IPU_REGISTERS_OFFSET+0x00048078,0x00FF0000
+#define IPU_DI1_DW_GEN_8__DI1_CST_8               IPU_REGISTERS_OFFSET+0x00048078,0x0000C000
+#define IPU_DI1_DW_GEN_8__DI1_SERIAL_VALID_BITS_8 IPU_REGISTERS_OFFSET+0x00048078,0x000001F0
+#define IPU_DI1_DW_GEN_8__DI1_SERIAL_RS_8         IPU_REGISTERS_OFFSET+0x00048078,0x0000000C
+#define IPU_DI1_DW_GEN_8__DI1_SERIAL_CLK_8        IPU_REGISTERS_OFFSET+0x00048078,0x00000003
+
+#define IPU_DI1_DW_GEN_9__ADDR                    IPU_REGISTERS_OFFSET+0x0004807C
+#define IPU_DI1_DW_GEN_9__EMPTY                   IPU_REGISTERS_OFFSET+0x0004807C,0x00000000
+#define IPU_DI1_DW_GEN_9__FULL                    IPU_REGISTERS_OFFSET+0x0004807C,0xffffffff
+#define IPU_DI1_DW_GEN_9__DI1_SERIAL_PERIOD_9     IPU_REGISTERS_OFFSET+0x0004807C,0xFF000000
+#define IPU_DI1_DW_GEN_9__DI1_START_PERIOD_9      IPU_REGISTERS_OFFSET+0x0004807C,0x00FF0000
+#define IPU_DI1_DW_GEN_9__DI1_CST_9               IPU_REGISTERS_OFFSET+0x0004807C,0x0000C000
+#define IPU_DI1_DW_GEN_9__DI1_SERIAL_VALID_BITS_9 IPU_REGISTERS_OFFSET+0x0004807C,0x000001F0
+#define IPU_DI1_DW_GEN_9__DI1_SERIAL_RS_9         IPU_REGISTERS_OFFSET+0x0004807C,0x0000000C
+#define IPU_DI1_DW_GEN_9__DI1_SERIAL_CLK_9        IPU_REGISTERS_OFFSET+0x0004807C,0x00000003
+
+#define IPU_DI1_DW_GEN_10__ADDR                     IPU_REGISTERS_OFFSET+0x00048080
+#define IPU_DI1_DW_GEN_10__EMPTY                    IPU_REGISTERS_OFFSET+0x00048080,0x00000000
+#define IPU_DI1_DW_GEN_10__FULL                     IPU_REGISTERS_OFFSET+0x00048080,0xffffffff
+#define IPU_DI1_DW_GEN_10__DI1_SERIAL_PERIOD_10     IPU_REGISTERS_OFFSET+0x00048080,0xFF000000
+#define IPU_DI1_DW_GEN_10__DI1_START_PERIOD_10      IPU_REGISTERS_OFFSET+0x00048080,0x00FF0000
+#define IPU_DI1_DW_GEN_10__DI1_CST_10               IPU_REGISTERS_OFFSET+0x00048080,0x0000C000
+#define IPU_DI1_DW_GEN_10__DI0_SERIAL_VALID_BITS_10 IPU_REGISTERS_OFFSET+0x00048080,0x000001F0
+#define IPU_DI1_DW_GEN_10__DI1_SERIAL_RS_10         IPU_REGISTERS_OFFSET+0x00048080,0x0000000C
+#define IPU_DI1_DW_GEN_10__DI1_SERIAL_CLK_10        IPU_REGISTERS_OFFSET+0x00048080,0x00000003
+
+#define IPU_DI1_DW_GEN_11__ADDR                     IPU_REGISTERS_OFFSET+0x00048084
+#define IPU_DI1_DW_GEN_11__EMPTY                    IPU_REGISTERS_OFFSET+0x00048084,0x00000000
+#define IPU_DI1_DW_GEN_11__FULL                     IPU_REGISTERS_OFFSET+0x00048084,0xffffffff
+#define IPU_DI1_DW_GEN_11__DI1_SERIAL_PERIOD_11     IPU_REGISTERS_OFFSET+0x00048084,0xFF000000
+#define IPU_DI1_DW_GEN_11__DI1_START_PERIOD_11      IPU_REGISTERS_OFFSET+0x00048084,0x00FF0000
+#define IPU_DI1_DW_GEN_11__DI1_CST_11               IPU_REGISTERS_OFFSET+0x00048084,0x0000C000
+#define IPU_DI1_DW_GEN_11__DI0_SERIAL_VALID_BITS_11 IPU_REGISTERS_OFFSET+0x00048084,0x000001F0
+#define IPU_DI1_DW_GEN_11__DI1_SERIAL_RS_11         IPU_REGISTERS_OFFSET+0x00048084,0x0000000C
+#define IPU_DI1_DW_GEN_11__DI1_SERIAL_CLK_11        IPU_REGISTERS_OFFSET+0x00048084,0x00000003
+
+
+
+#define CPMEM_WORD0_DATA0_INT__ADDR  IPU_MEMORY_OFFSET+0x0000000
+#define CPMEM_WORD0_DATA0_INT__EMPTY IPU_MEMORY_OFFSET+0x0000000,0x00000000
+#define CPMEM_WORD0_DATA0_INT__FULL  IPU_MEMORY_OFFSET+0x0000000,0xffffffff
+#define CPMEM_WORD0_DATA0_INT__XB    IPU_MEMORY_OFFSET+0x0000000,0xFFF80000
+#define CPMEM_WORD0_DATA0_INT__YV    IPU_MEMORY_OFFSET+0x0000000,0x0007FC00
+#define CPMEM_WORD0_DATA0_INT__XV    IPU_MEMORY_OFFSET+0x0000000,0x000003FF
+
+#define CPMEM_WORD0_DATA1_INT__ADDR   IPU_MEMORY_OFFSET+0x0000004
+#define CPMEM_WORD0_DATA1_INT__EMPTY  IPU_MEMORY_OFFSET+0x0000004,0x00000000
+#define CPMEM_WORD0_DATA1_INT__FULL   IPU_MEMORY_OFFSET+0x0000004,0xffffffff
+#define CPMEM_WORD0_DATA1_INT__SY_LOW IPU_MEMORY_OFFSET+0x0000004,0xFC000000
+#define CPMEM_WORD0_DATA1_INT__SX     IPU_MEMORY_OFFSET+0x0000004,0x03FFC000
+#define CPMEM_WORD0_DATA1_INT__CF     IPU_MEMORY_OFFSET+0x0000004,0x00002000
+#define CPMEM_WORD0_DATA1_INT__NSB_B  IPU_MEMORY_OFFSET+0x0000004,0x00001000
+#define CPMEM_WORD0_DATA1_INT__YB     IPU_MEMORY_OFFSET+0x0000004,0x00000FFF
+
+#define CPMEM_WORD0_DATA2_INT__ADDR    IPU_MEMORY_OFFSET+0x0000008 
+#define CPMEM_WORD0_DATA2_INT__EMPTY   IPU_MEMORY_OFFSET+0x0000008,0x00000000
+#define CPMEM_WORD0_DATA2_INT__FULL    IPU_MEMORY_OFFSET+0x0000008,0xffffffff
+#define CPMEM_WORD0_DATA2_INT__SM      IPU_MEMORY_OFFSET+0x0000008,0xFFC00000
+#define CPMEM_WORD0_DATA2_INT__SDX     IPU_MEMORY_OFFSET+0x0000008,0x003F8000
+#define CPMEM_WORD0_DATA2_INT__NS      IPU_MEMORY_OFFSET+0x0000008,0x00007FE0
+#define CPMEM_WORD0_DATA2_INT__SY_HIGH IPU_MEMORY_OFFSET+0x0000008,0x0000001F
+
+#define CPMEM_WORD0_DATA3_INT__ADDR    IPU_MEMORY_OFFSET+0x000000C
+#define CPMEM_WORD0_DATA3_INT__EMPTY   IPU_MEMORY_OFFSET+0x000000C,0x00000000
+#define CPMEM_WORD0_DATA3_INT__FULL    IPU_MEMORY_OFFSET+0x000000C,0xffffffff
+#define CPMEM_WORD0_DATA3_INT__FW_LOW  IPU_MEMORY_OFFSET+0x000000C,0xE0000000
+#define CPMEM_WORD0_DATA3_INT__CAE     IPU_MEMORY_OFFSET+0x000000C,0x10000000
+#define CPMEM_WORD0_DATA3_INT__CAP     IPU_MEMORY_OFFSET+0x000000C,0x08000000
+#define CPMEM_WORD0_DATA3_INT__THE     IPU_MEMORY_OFFSET+0x000000C,0x04000000
+#define CPMEM_WORD0_DATA3_INT__VF      IPU_MEMORY_OFFSET+0x000000C,0x02000000
+#define CPMEM_WORD0_DATA3_INT__HF      IPU_MEMORY_OFFSET+0x000000C,0x01000000
+#define CPMEM_WORD0_DATA3_INT__ROT     IPU_MEMORY_OFFSET+0x000000C,0x00800000
+#define CPMEM_WORD0_DATA3_INT__BM      IPU_MEMORY_OFFSET+0x000000C,0x00600000
+#define CPMEM_WORD0_DATA3_INT__BNDM    IPU_MEMORY_OFFSET+0x000000C,0x001C0000
+#define CPMEM_WORD0_DATA3_INT__SO      IPU_MEMORY_OFFSET+0x000000C,0x00020000
+#define CPMEM_WORD0_DATA3_INT__DIM     IPU_MEMORY_OFFSET+0x000000C,0x00010000
+#define CPMEM_WORD0_DATA3_INT__DEC_SEL IPU_MEMORY_OFFSET+0x000000C,0x0000C000
+#define CPMEM_WORD0_DATA3_INT__BPP     IPU_MEMORY_OFFSET+0x000000C,0x00003800
+#define CPMEM_WORD0_DATA3_INT__SDRY    IPU_MEMORY_OFFSET+0x000000C,0x00000400
+#define CPMEM_WORD0_DATA3_INT__SDRX    IPU_MEMORY_OFFSET+0x000000C,0x00000200
+#define CPMEM_WORD0_DATA3_INT__SDY     IPU_MEMORY_OFFSET+0x000000C,0x000001FC
+#define CPMEM_WORD0_DATA3_INT__SCE     IPU_MEMORY_OFFSET+0x000000C,0x00000002
+#define CPMEM_WORD0_DATA3_INT__SCC     IPU_MEMORY_OFFSET+0x000000C,0x00000001
+
+#define CPMEM_WORD0_DATA4_INT__ADDR     IPU_MEMORY_OFFSET+0x0000010
+#define CPMEM_WORD0_DATA4_INT__EMPTY    IPU_MEMORY_OFFSET+0x0000010,0x00000000
+#define CPMEM_WORD0_DATA4_INT__FULL     IPU_MEMORY_OFFSET+0x0000010,0xffffffff
+#define CPMEM_WORD0_DATA4_INT__RESERVED IPU_MEMORY_OFFSET+0x0000010,0xFFC00000
+#define CPMEM_WORD0_DATA4_INT__FH       IPU_MEMORY_OFFSET+0x0000010,0x003FFC00
+#define CPMEM_WORD0_DATA4_INT__FW_HIGH  IPU_MEMORY_OFFSET+0x0000010,0x000003FF
+
+#define CPMEM_WORD0_DATA0_N_INT__ADDR  IPU_MEMORY_OFFSET+0x0000000
+#define CPMEM_WORD0_DATA0_N_INT__EMPTY IPU_MEMORY_OFFSET+0x0000000,0x00000000
+#define CPMEM_WORD0_DATA0_N_INT__FULL  IPU_MEMORY_OFFSET+0x0000000,0xffffffff
+#define CPMEM_WORD0_DATA0_N_INT__XB    IPU_MEMORY_OFFSET+0x0000000,0xFFF80000
+#define CPMEM_WORD0_DATA0_N_INT__YV    IPU_MEMORY_OFFSET+0x0000000,0x0007FC00
+#define CPMEM_WORD0_DATA0_N_INT__XV    IPU_MEMORY_OFFSET+0x0000000,0x000003FF
+
+#define CPMEM_WORD0_DATA1_N_INT__ADDR    IPU_MEMORY_OFFSET+0x0000004
+#define CPMEM_WORD0_DATA1_N_INT__EMPTY   IPU_MEMORY_OFFSET+0x0000004,0x00000000
+#define CPMEM_WORD0_DATA1_N_INT__FULL    IPU_MEMORY_OFFSET+0x0000004,0xffffffff
+#define CPMEM_WORD0_DATA1_N_INT__UBO_LOW IPU_MEMORY_OFFSET+0x0000004,0xFFFFC000
+#define CPMEM_WORD0_DATA1_N_INT__CF      IPU_MEMORY_OFFSET+0x0000004,0x00002000
+#define CPMEM_WORD0_DATA1_N_INT__NSB_B   IPU_MEMORY_OFFSET+0x0000004,0x00001000
+#define CPMEM_WORD0_DATA1_N_INT__YB      IPU_MEMORY_OFFSET+0x0000004,0x00000FFF
+
+#define CPMEM_WORD0_DATA2_N_INT__ADDR     IPU_MEMORY_OFFSET+0x0000008
+#define CPMEM_WORD0_DATA2_N_INT__EMPTY    IPU_MEMORY_OFFSET+0x0000008,0x00000000
+#define CPMEM_WORD0_DATA2_N_INT__FULL     IPU_MEMORY_OFFSET+0x0000008,0xffffffff
+#define CPMEM_WORD0_DATA2_N_INT__RESERVED IPU_MEMORY_OFFSET+0x0000008,0x80000000
+#define CPMEM_WORD0_DATA2_N_INT__RDRW     IPU_MEMORY_OFFSET+0x0000008,0x40000000
+#define CPMEM_WORD0_DATA2_N_INT__IOX      IPU_MEMORY_OFFSET+0x0000008,0x3c000000
+#define CPMEM_WORD0_DATA2_N_INT__VBO      IPU_MEMORY_OFFSET+0x0000008,0x03FFFFF0
+#define CPMEM_WORD0_DATA2_N_INT__UBO_HIGH IPU_MEMORY_OFFSET+0x0000008,0x0000000F
+
+#define CPMEM_WORD0_DATA3_N_INT__ADDR     IPU_MEMORY_OFFSET+0x000000C
+#define CPMEM_WORD0_DATA3_N_INT__EMPTY    IPU_MEMORY_OFFSET+0x000000C,0x00000000
+#define CPMEM_WORD0_DATA3_N_INT__FULL     IPU_MEMORY_OFFSET+0x000000C,0xffffffff
+#define CPMEM_WORD0_DATA3_N_INT__FW_LOW   IPU_MEMORY_OFFSET+0x000000C,0xE0000000
+#define CPMEM_WORD0_DATA3_N_INT__CAE      IPU_MEMORY_OFFSET+0x000000C,0x10000000
+#define CPMEM_WORD0_DATA3_N_INT__CAP      IPU_MEMORY_OFFSET+0x000000C,0x08000000
+#define CPMEM_WORD0_DATA3_N_INT__THE      IPU_MEMORY_OFFSET+0x000000C,0x04000000
+#define CPMEM_WORD0_DATA3_N_INT__VF       IPU_MEMORY_OFFSET+0x000000C,0x02000000
+#define CPMEM_WORD0_DATA3_N_INT__HF       IPU_MEMORY_OFFSET+0x000000C,0x01000000
+#define CPMEM_WORD0_DATA3_N_INT__ROT      IPU_MEMORY_OFFSET+0x000000C,0x00800000
+#define CPMEM_WORD0_DATA3_N_INT__BM       IPU_MEMORY_OFFSET+0x000000C,0x00600000
+#define CPMEM_WORD0_DATA3_N_INT__BNDM     IPU_MEMORY_OFFSET+0x000000C,0x001C0000
+#define CPMEM_WORD0_DATA3_N_INT__SO       IPU_MEMORY_OFFSET+0x000000C,0x00020000
+#define CPMEM_WORD0_DATA3_N_INT__RESERVED IPU_MEMORY_OFFSET+0x000000C,0x0001FFFF
+
+#define CPMEM_WORD0_DATA4_N_INT__ADDR     IPU_MEMORY_OFFSET+0x0000010
+#define CPMEM_WORD0_DATA4_N_INT__EMPTY    IPU_MEMORY_OFFSET+0x0000010,0x00000000
+#define CPMEM_WORD0_DATA4_N_INT__FULL     IPU_MEMORY_OFFSET+0x0000010,0xffffffff
+#define CPMEM_WORD0_DATA4_N_INT__RESERVED IPU_MEMORY_OFFSET+0x0000010,0xFFC00000
+#define CPMEM_WORD0_DATA4_N_INT__FH       IPU_MEMORY_OFFSET+0x0000010,0x003FFC00
+#define CPMEM_WORD0_DATA4_N_INT__FW_HIGH  IPU_MEMORY_OFFSET+0x0000010,0x000003FF
+
+#define CPMEM_WORD1_DATA0_INT__ADDR     IPU_MEMORY_OFFSET+0x0000020
+#define CPMEM_WORD1_DATA0_INT__EMPTY    IPU_MEMORY_OFFSET+0x0000020,0x00000000
+#define CPMEM_WORD1_DATA0_INT__FULL     IPU_MEMORY_OFFSET+0x0000020,0xffffffff
+#define CPMEM_WORD1_DATA0_INT__EBA1_LOW IPU_MEMORY_OFFSET+0x0000020,0xE0000000
+#define CPMEM_WORD1_DATA0_INT__EBA0     IPU_MEMORY_OFFSET+0x0000020,0x1FFFFFFF
+
+#define CPMEM_WORD1_DATA1_INT__ADDR      IPU_MEMORY_OFFSET+0x0000024
+#define CPMEM_WORD1_DATA1_INT__EMPTY     IPU_MEMORY_OFFSET+0x0000024,0x00000000
+#define CPMEM_WORD1_DATA1_INT__FULL      IPU_MEMORY_OFFSET+0x0000024,0xffffffff
+#define CPMEM_WORD1_DATA1_INT__ILO_LOW   IPU_MEMORY_OFFSET+0x0000024,0xFC000000
+#define CPMEM_WORD1_DATA1_INT__EBA1_HIGH IPU_MEMORY_OFFSET+0x0000024,0x03FFFFFF
+
+#define CPMEM_WORD1_DATA2_INT__ADDR     IPU_MEMORY_OFFSET+0x0000028
+#define CPMEM_WORD1_DATA2_INT__EMPTY    IPU_MEMORY_OFFSET+0x0000028,0x00000000
+#define CPMEM_WORD1_DATA2_INT__FULL     IPU_MEMORY_OFFSET+0x0000028,0xffffffff
+#define CPMEM_WORD1_DATA2_INT__TH_LOW   IPU_MEMORY_OFFSET+0x0000028,0x80000000
+#define CPMEM_WORD1_DATA2_INT__ID       IPU_MEMORY_OFFSET+0x0000028,0x60000000
+#define CPMEM_WORD1_DATA2_INT__ALBM     IPU_MEMORY_OFFSET+0x0000028,0x1C000000
+#define CPMEM_WORD1_DATA2_INT__ALU      IPU_MEMORY_OFFSET+0x0000028,0x02000000
+#define CPMEM_WORD1_DATA2_INT__PFS      IPU_MEMORY_OFFSET+0x0000028,0x01E00000
+#define CPMEM_WORD1_DATA2_INT__NPB      IPU_MEMORY_OFFSET+0x0000028,0x001FC000
+#define CPMEM_WORD1_DATA2_INT__ILO_HIGH IPU_MEMORY_OFFSET+0x0000028,0x00003FFF
+
+#define CPMEM_WORD1_DATA3_INT__ADDR    IPU_MEMORY_OFFSET+0x000002C
+#define CPMEM_WORD1_DATA3_INT__EMPTY   IPU_MEMORY_OFFSET+0x000002C,0x00000000
+#define CPMEM_WORD1_DATA3_INT__FULL    IPU_MEMORY_OFFSET+0x000002C,0xffffffff
+#define CPMEM_WORD1_DATA3_INT__WID3    IPU_MEMORY_OFFSET+0x000002C,0xE0000000
+#define CPMEM_WORD1_DATA3_INT__WID2    IPU_MEMORY_OFFSET+0x000002C,0x1C000000
+#define CPMEM_WORD1_DATA3_INT__WID1    IPU_MEMORY_OFFSET+0x000002C,0x03800000
+#define CPMEM_WORD1_DATA3_INT__WID0    IPU_MEMORY_OFFSET+0x000002C,0x00700000
+#define CPMEM_WORD1_DATA3_INT__SL      IPU_MEMORY_OFFSET+0x000002C,0x000FFFC0
+#define CPMEM_WORD1_DATA3_INT__TH_HIGH IPU_MEMORY_OFFSET+0x000002C,0x0000003F
+
+#define CPMEM_WORD1_DATA4_INT__ADDR     IPU_MEMORY_OFFSET+0x0000030
+#define CPMEM_WORD1_DATA4_INT__EMPTY    IPU_MEMORY_OFFSET+0x0000030,0x00000000
+#define CPMEM_WORD1_DATA4_INT__FULL     IPU_MEMORY_OFFSET+0x0000030,0xffffffff
+#define CPMEM_WORD1_DATA4_INT__RESERVED IPU_MEMORY_OFFSET+0x0000030,0xFF800000
+#define CPMEM_WORD1_DATA4_INT__DEC_SEL2 IPU_MEMORY_OFFSET+0x0000030,0x00400000
+#define CPMEM_WORD1_DATA4_INT__CRE      IPU_MEMORY_OFFSET+0x0000030,0x00200000
+#define CPMEM_WORD1_DATA4_INT__SXYS     IPU_MEMORY_OFFSET+0x0000030,0x00100000
+#define CPMEM_WORD1_DATA4_INT__OFS3     IPU_MEMORY_OFFSET+0x0000030,0x000F8000
+#define CPMEM_WORD1_DATA4_INT__OFS2     IPU_MEMORY_OFFSET+0x0000030,0x00007C00
+#define CPMEM_WORD1_DATA4_INT__OFS1     IPU_MEMORY_OFFSET+0x0000030,0x000003E0
+#define CPMEM_WORD1_DATA4_INT__OFS0     IPU_MEMORY_OFFSET+0x0000030,0x0000001F
+
+#define CPMEM_WORD1_DATA0_N_INT__ADDR     IPU_MEMORY_OFFSET+0x0000020
+#define CPMEM_WORD1_DATA0_N_INT__EMPTY    IPU_MEMORY_OFFSET+0x0000020,0x00000000
+#define CPMEM_WORD1_DATA0_N_INT__FULL     IPU_MEMORY_OFFSET+0x0000020,0xffffffff
+#define CPMEM_WORD1_DATA0_N_INT__EBA1_LOW IPU_MEMORY_OFFSET+0x0000020,0xE0000000
+#define CPMEM_WORD1_DATA0_N_INT__EBA0     IPU_MEMORY_OFFSET+0x0000020,0x1FFFFFFF
+
+#define CPMEM_WORD1_DATA1_N_INT__ADDR      IPU_MEMORY_OFFSET+0x0000024
+#define CPMEM_WORD1_DATA1_N_INT__EMPTY     IPU_MEMORY_OFFSET+0x0000024,0x00000000
+#define CPMEM_WORD1_DATA1_N_INT__FULL      IPU_MEMORY_OFFSET+0x0000024,0xffffffff
+#define CPMEM_WORD1_DATA1_N_INT__ILO_LOW   IPU_MEMORY_OFFSET+0x0000024,0xFC000000
+#define CPMEM_WORD1_DATA1_N_INT__EBA1_HIGH IPU_MEMORY_OFFSET+0x0000024,0x03FFFFFF
+
+#define CPMEM_WORD1_DATA2_N_INT__ADDR     IPU_MEMORY_OFFSET+0x0000028
+#define CPMEM_WORD1_DATA2_N_INT__EMPTY    IPU_MEMORY_OFFSET+0x0000028,0x00000000
+#define CPMEM_WORD1_DATA2_N_INT__FULL     IPU_MEMORY_OFFSET+0x0000028,0xffffffff
+#define CPMEM_WORD1_DATA2_N_INT__TH_LOW   IPU_MEMORY_OFFSET+0x0000028,0x80000000
+#define CPMEM_WORD1_DATA2_N_INT__ID       IPU_MEMORY_OFFSET+0x0000028,0x60000000
+#define CPMEM_WORD1_DATA2_N_INT__ALBM     IPU_MEMORY_OFFSET+0x0000028,0x1C000000
+#define CPMEM_WORD1_DATA2_N_INT__ALU      IPU_MEMORY_OFFSET+0x0000028,0x02000000
+#define CPMEM_WORD1_DATA2_N_INT__PFS      IPU_MEMORY_OFFSET+0x0000028,0x01E00000
+#define CPMEM_WORD1_DATA2_N_INT__NPB      IPU_MEMORY_OFFSET+0x0000028,0x001FC000
+#define CPMEM_WORD1_DATA2_N_INT__ILO_HIGH IPU_MEMORY_OFFSET+0x0000028,0x00003FFF
+
+#define CPMEM_WORD1_DATA3_N_INT__ADDR     IPU_MEMORY_OFFSET+0x000002C
+#define CPMEM_WORD1_DATA3_N_INT__EMPTY    IPU_MEMORY_OFFSET+0x000002C,0x00000000
+#define CPMEM_WORD1_DATA3_N_INT__FULL     IPU_MEMORY_OFFSET+0x000002C,0xffffffff
+#define CPMEM_WORD1_DATA3_N_INT__SLY      IPU_MEMORY_OFFSET+0x000002C,0x000FFFC0
+#define CPMEM_WORD1_DATA3_N_INT__WID3     IPU_MEMORY_OFFSET+0x000002C,0xE0000000
+#define CPMEM_WORD1_DATA3_N_INT__TH_HIGH  IPU_MEMORY_OFFSET+0x000002C,0x0000003F
+
+#define CPMEM_WORD1_DATA4_N_INT__ADDR      IPU_MEMORY_OFFSET+0x0000030
+#define CPMEM_WORD1_DATA4_N_INT__EMPTY     IPU_MEMORY_OFFSET+0x0000030,0x00000000
+#define CPMEM_WORD1_DATA4_N_INT__FULL      IPU_MEMORY_OFFSET+0x0000030,0xffffffff
+#define CPMEM_WORD1_DATA4_N_INT__RESERVED  IPU_MEMORY_OFFSET+0x0000030,0xFFDFC000
+#define CPMEM_WORD1_DATA4_N_INT__CRE       IPU_MEMORY_OFFSET+0x0000030,0x00200000
+#define CPMEM_WORD1_DATA4_N_INT__SLUV      IPU_MEMORY_OFFSET+0x0000030,0x00003FFF
+
+
+#define IC_INTERNAL_MEM_FW 0x400                 
+#define TASK1_TMP_COEF IC_INTERNAL_MEM_FW
+#define TASK1_CSC1_W0    TASK1_TMP_COEF+1
+#define TASK1_CSC1_W1    TASK1_CSC1_W0+1
+#define TASK1_CSC1_W2    TASK1_CSC1_W1+1 
+
+#define IPU_IC_TPMEM_ENC_CSC1_WORD0__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK1_CSC1_W0 << 3)
+#define IPU_IC_TPMEM_ENC_CSC1_WORD0__EMPTY  IPU_IC_TPMEM_ENC_CSC1_WORD0__ADDR,0x00000000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD0__FULL   IPU_IC_TPMEM_ENC_CSC1_WORD0__ADDR,0xffffffff
+#define IPU_IC_TPMEM_ENC_CSC1_WORD0__A0_LOW IPU_IC_TPMEM_ENC_CSC1_WORD0__ADDR,0xF8000000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD0__C00    IPU_IC_TPMEM_ENC_CSC1_WORD0__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD0__C11    IPU_IC_TPMEM_ENC_CSC1_WORD0__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_ENC_CSC1_WORD0__C22    IPU_IC_TPMEM_ENC_CSC1_WORD0__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_ENC_CSC1_WORD1__ADDR     IPU_MEMORY_OFFSET+0x0060000 + (TASK1_CSC1_W0 << 3) + 4
+#define IPU_IC_TPMEM_ENC_CSC1_WORD1__EMPTY    IPU_IC_TPMEM_ENC_CSC1_WORD1__ADDR,0x00000000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD1__FULL     IPU_IC_TPMEM_ENC_CSC1_WORD1__ADDR,0xffffffff
+#define IPU_IC_TPMEM_ENC_CSC1_WORD1__SAT_MODE IPU_IC_TPMEM_ENC_CSC1_WORD1__ADDR,0x00000400
+#define IPU_IC_TPMEM_ENC_CSC1_WORD1__SCALE    IPU_IC_TPMEM_ENC_CSC1_WORD1__ADDR,0x00000300
+#define IPU_IC_TPMEM_ENC_CSC1_WORD1__A0_HIGH  IPU_IC_TPMEM_ENC_CSC1_WORD1__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_ENC_CSC1_WORD2__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK1_CSC1_W1 << 3)
+#define IPU_IC_TPMEM_ENC_CSC1_WORD2__EMPTY  IPU_IC_TPMEM_ENC_CSC1_WORD2__ADDR,0x00000000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD2__FULL   IPU_IC_TPMEM_ENC_CSC1_WORD2__ADDR,0xffffffff
+#define IPU_IC_TPMEM_ENC_CSC1_WORD2__A1_LOW IPU_IC_TPMEM_ENC_CSC1_WORD2__ADDR,0xF8000000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD2__C01    IPU_IC_TPMEM_ENC_CSC1_WORD2__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD2__C10    IPU_IC_TPMEM_ENC_CSC1_WORD2__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_ENC_CSC1_WORD2__C20    IPU_IC_TPMEM_ENC_CSC1_WORD2__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_ENC_CSC1_WORD3__ADDR    IPU_MEMORY_OFFSET+0x0060000 + (TASK1_CSC1_W1 << 3) + 4
+#define IPU_IC_TPMEM_ENC_CSC1_WORD3__EMPTY   IPU_IC_TPMEM_ENC_CSC1_WORD3__ADDR,0x00000000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD3__FULL    IPU_IC_TPMEM_ENC_CSC1_WORD3__ADDR,0xffffffff
+#define IPU_IC_TPMEM_ENC_CSC1_WORD3__A1_HIGH IPU_IC_TPMEM_ENC_CSC1_WORD3__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_ENC_CSC1_WORD4__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK1_CSC1_W2 << 3)
+#define IPU_IC_TPMEM_ENC_CSC1_WORD4__EMPTY  IPU_IC_TPMEM_ENC_CSC1_WORD4__ADDR,0x00000000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD4__FULL   IPU_IC_TPMEM_ENC_CSC1_WORD4__ADDR,0xffffffff
+#define IPU_IC_TPMEM_ENC_CSC1_WORD4__A2_LOW IPU_IC_TPMEM_ENC_CSC1_WORD4__ADDR,0xF8000000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD4__C02    IPU_IC_TPMEM_ENC_CSC1_WORD4__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD4__C12    IPU_IC_TPMEM_ENC_CSC1_WORD4__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_ENC_CSC1_WORD4__C21    IPU_IC_TPMEM_ENC_CSC1_WORD4__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_ENC_CSC1_WORD5__ADDR    IPU_MEMORY_OFFSET+0x0060000 + (TASK1_CSC1_W2 << 3) + 4
+#define IPU_IC_TPMEM_ENC_CSC1_WORD5__EMPTY   IPU_IC_TPMEM_ENC_CSC1_WORD5__ADDR,0x00000000
+#define IPU_IC_TPMEM_ENC_CSC1_WORD5__FULL    IPU_IC_TPMEM_ENC_CSC1_WORD5__ADDR,0xffffffff
+#define IPU_IC_TPMEM_ENC_CSC1_WORD5__A2_HIGH IPU_IC_TPMEM_ENC_CSC1_WORD5__ADDR,0x000000FF
+
+#define TASK2_TMP_COEF TASK1_CSC1_W2+IC_INTERNAL_MEM_FW+1
+#define TASK2_CSC1_W0    TASK2_TMP_COEF+1
+#define TASK2_CSC1_W1    TASK2_CSC1_W0+1
+#define TASK2_CSC1_W2    TASK2_CSC1_W1+1
+#define TASK2_CSC2_W0    TASK2_CSC1_W2+1
+#define TASK2_CSC2_W1    TASK2_CSC2_W0+1
+#define TASK2_CSC2_W2    TASK2_CSC2_W1+1 
+
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD0__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC1_W0 << 3)
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD0__EMPTY  IPU_IC_TPMEM_VIEW_CSC1_WORD0__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD0__FULL   IPU_IC_TPMEM_VIEW_CSC1_WORD0__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD0__A0_LOW IPU_IC_TPMEM_VIEW_CSC1_WORD0__ADDR,0xF8000000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD0__C00    IPU_IC_TPMEM_VIEW_CSC1_WORD0__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD0__C11    IPU_IC_TPMEM_VIEW_CSC1_WORD0__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD0__C22    IPU_IC_TPMEM_VIEW_CSC1_WORD0__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD1__ADDR     IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC1_W0 << 3) + 4
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD1__EMPTY    IPU_IC_TPMEM_VIEW_CSC1_WORD1__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD1__FULL     IPU_IC_TPMEM_VIEW_CSC1_WORD1__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD1__SAT_MODE IPU_IC_TPMEM_VIEW_CSC1_WORD1__ADDR,0x00000400
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD1__SCALE    IPU_IC_TPMEM_VIEW_CSC1_WORD1__ADDR,0x00000300
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD1__A0_HIGH  IPU_IC_TPMEM_VIEW_CSC1_WORD1__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD2__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC1_W1 << 3)
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD2__EMPTY  IPU_IC_TPMEM_VIEW_CSC1_WORD2__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD2__FULL   IPU_IC_TPMEM_VIEW_CSC1_WORD2__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD2__A1_LOW IPU_IC_TPMEM_VIEW_CSC1_WORD2__ADDR,0xF8000000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD2__C01    IPU_IC_TPMEM_VIEW_CSC1_WORD2__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD2__C10    IPU_IC_TPMEM_VIEW_CSC1_WORD2__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD2__C20    IPU_IC_TPMEM_VIEW_CSC1_WORD2__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD3__ADDR    IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC1_W1 << 3) + 4
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD3__EMPTY   IPU_IC_TPMEM_VIEW_CSC1_WORD3__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD3__FULL    IPU_IC_TPMEM_VIEW_CSC1_WORD3__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD3__A1_HIGH IPU_IC_TPMEM_VIEW_CSC1_WORD3__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD4__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC1_W2 << 3)
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD4__EMPTY  IPU_IC_TPMEM_VIEW_CSC1_WORD4__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD4__FULL   IPU_IC_TPMEM_VIEW_CSC1_WORD4__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD4__A2_LOW IPU_IC_TPMEM_VIEW_CSC1_WORD4__ADDR,0xF8000000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD4__C02    IPU_IC_TPMEM_VIEW_CSC1_WORD4__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD4__C12    IPU_IC_TPMEM_VIEW_CSC1_WORD4__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD4__C21    IPU_IC_TPMEM_VIEW_CSC1_WORD4__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD5__ADDR    IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC1_W2 << 3) + 4
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD5__EMPTY   IPU_IC_TPMEM_VIEW_CSC1_WORD5__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD5__FULL    IPU_IC_TPMEM_VIEW_CSC1_WORD5__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC1_WORD5__A2_HIGH IPU_IC_TPMEM_VIEW_CSC1_WORD5__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD0__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC2_W0 << 3)
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD0__EMPTY  IPU_IC_TPMEM_VIEW_CSC2_WORD0__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD0__FULL   IPU_IC_TPMEM_VIEW_CSC2_WORD0__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD0__A0_LOW IPU_IC_TPMEM_VIEW_CSC2_WORD0__ADDR,0xF8000000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD0__C00    IPU_IC_TPMEM_VIEW_CSC2_WORD0__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD0__C11    IPU_IC_TPMEM_VIEW_CSC2_WORD0__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD0__C22    IPU_IC_TPMEM_VIEW_CSC2_WORD0__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD1__ADDR     IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC2_W0 << 3) + 4
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD1__EMPTY    IPU_IC_TPMEM_VIEW_CSC2_WORD1__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD1__FULL     IPU_IC_TPMEM_VIEW_CSC2_WORD1__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD1__SAT_MODE IPU_IC_TPMEM_VIEW_CSC2_WORD1__ADDR,0x00000400
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD1__SCALE    IPU_IC_TPMEM_VIEW_CSC2_WORD1__ADDR,0x00000300
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD1__A0_HIGH  IPU_IC_TPMEM_VIEW_CSC2_WORD1__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD2__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC2_W1 << 3)
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD2__EMPTY  IPU_IC_TPMEM_VIEW_CSC2_WORD2__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD2__FULL   IPU_IC_TPMEM_VIEW_CSC2_WORD2__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD2__A1_LOW IPU_IC_TPMEM_VIEW_CSC2_WORD2__ADDR,0xF8000000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD2__C01    IPU_IC_TPMEM_VIEW_CSC2_WORD2__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD2__C10    IPU_IC_TPMEM_VIEW_CSC2_WORD2__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD2__C20    IPU_IC_TPMEM_VIEW_CSC2_WORD2__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD3__ADDR    IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC2_W1 << 3) + 4
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD3__EMPTY   IPU_IC_TPMEM_VIEW_CSC2_WORD3__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD3__FULL    IPU_IC_TPMEM_VIEW_CSC2_WORD3__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD3__A1_HIGH IPU_IC_TPMEM_VIEW_CSC2_WORD3__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD4__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC2_W2 << 3)
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD4__EMPTY  IPU_IC_TPMEM_VIEW_CSC2_WORD4__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD4__FULL   IPU_IC_TPMEM_VIEW_CSC2_WORD4__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD4__A2_LOW IPU_IC_TPMEM_VIEW_CSC2_WORD4__ADDR,0xF8000000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD4__C02    IPU_IC_TPMEM_VIEW_CSC2_WORD4__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD4__C12    IPU_IC_TPMEM_VIEW_CSC2_WORD4__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD4__C21    IPU_IC_TPMEM_VIEW_CSC2_WORD4__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD5__ADDR    IPU_MEMORY_OFFSET+0x0060000 + (TASK2_CSC2_W2 << 3) + 4
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD5__EMPTY   IPU_IC_TPMEM_VIEW_CSC2_WORD5__ADDR,0x00000000
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD5__FULL    IPU_IC_TPMEM_VIEW_CSC2_WORD5__ADDR,0xffffffff
+#define IPU_IC_TPMEM_VIEW_CSC2_WORD5__A2_HIGH IPU_IC_TPMEM_VIEW_CSC2_WORD5__ADDR,0x000000FF
+
+#define TASK3_TMP_COEF TASK2_CSC2_W2+IC_INTERNAL_MEM_FW+1
+#define TASK3_CSC1_W0    TASK3_TMP_COEF+1
+#define TASK3_CSC1_W1    TASK3_CSC1_W0+1
+#define TASK3_CSC1_W2    TASK3_CSC1_W1+1
+#define TASK3_CSC2_W0    TASK3_CSC1_W2+1
+#define TASK3_CSC2_W1    TASK3_CSC2_W0+1
+#define TASK3_CSC2_W2    TASK3_CSC2_W1+1 
+
+#define IPU_IC_TPMEM_POST_CSC1_WORD0__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC1_W0 << 3)
+#define IPU_IC_TPMEM_POST_CSC1_WORD0__EMPTY  IPU_IC_TPMEM_POST_CSC1_WORD0__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC1_WORD0__FULL   IPU_IC_TPMEM_POST_CSC1_WORD0__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC1_WORD0__A0_LOW IPU_IC_TPMEM_POST_CSC1_WORD0__ADDR,0xF8000000
+#define IPU_IC_TPMEM_POST_CSC1_WORD0__C00    IPU_IC_TPMEM_POST_CSC1_WORD0__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_POST_CSC1_WORD0__C11    IPU_IC_TPMEM_POST_CSC1_WORD0__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_POST_CSC1_WORD0__C22    IPU_IC_TPMEM_POST_CSC1_WORD0__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_POST_CSC1_WORD1__ADDR     IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC1_W0 << 3) + 4 
+#define IPU_IC_TPMEM_POST_CSC1_WORD1__EMPTY    IPU_IC_TPMEM_POST_CSC1_WORD1__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC1_WORD1__FULL     IPU_IC_TPMEM_POST_CSC1_WORD1__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC1_WORD1__SAT_MODE IPU_IC_TPMEM_POST_CSC1_WORD1__ADDR,0x00000400
+#define IPU_IC_TPMEM_POST_CSC1_WORD1__SCALE    IPU_IC_TPMEM_POST_CSC1_WORD1__ADDR,0x00000300
+#define IPU_IC_TPMEM_POST_CSC1_WORD1__A0_HIGH  IPU_IC_TPMEM_POST_CSC1_WORD1__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_POST_CSC1_WORD2__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC1_W1 << 3)
+#define IPU_IC_TPMEM_POST_CSC1_WORD2__EMPTY  IPU_IC_TPMEM_POST_CSC1_WORD2__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC1_WORD2__FULL   IPU_IC_TPMEM_POST_CSC1_WORD2__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC1_WORD2__A1_LOW IPU_IC_TPMEM_POST_CSC1_WORD2__ADDR,0xF8000000
+#define IPU_IC_TPMEM_POST_CSC1_WORD2__C01    IPU_IC_TPMEM_POST_CSC1_WORD2__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_POST_CSC1_WORD2__C10    IPU_IC_TPMEM_POST_CSC1_WORD2__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_POST_CSC1_WORD2__C20    IPU_IC_TPMEM_POST_CSC1_WORD2__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_POST_CSC1_WORD3__ADDR    IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC1_W1 << 3) + 4 
+#define IPU_IC_TPMEM_POST_CSC1_WORD3__EMPTY   IPU_IC_TPMEM_POST_CSC1_WORD3__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC1_WORD3__FULL    IPU_IC_TPMEM_POST_CSC1_WORD3__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC1_WORD3__A1_HIGH IPU_IC_TPMEM_POST_CSC1_WORD3__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_POST_CSC1_WORD4__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC1_W2 << 3)
+#define IPU_IC_TPMEM_POST_CSC1_WORD4__EMPTY  IPU_IC_TPMEM_POST_CSC1_WORD4__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC1_WORD4__FULL   IPU_IC_TPMEM_POST_CSC1_WORD4__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC1_WORD4__A2_LOW IPU_IC_TPMEM_POST_CSC1_WORD4__ADDR,0xF8000000
+#define IPU_IC_TPMEM_POST_CSC1_WORD4__C02    IPU_IC_TPMEM_POST_CSC1_WORD4__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_POST_CSC1_WORD4__C12    IPU_IC_TPMEM_POST_CSC1_WORD4__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_POST_CSC1_WORD4__C21    IPU_IC_TPMEM_POST_CSC1_WORD4__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_POST_CSC1_WORD5__ADDR    IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC1_W2 << 3) + 4 
+#define IPU_IC_TPMEM_POST_CSC1_WORD5__EMPTY   IPU_IC_TPMEM_POST_CSC1_WORD5__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC1_WORD5__FULL    IPU_IC_TPMEM_POST_CSC1_WORD5__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC1_WORD5__A2_HIGH IPU_IC_TPMEM_POST_CSC1_WORD5__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_POST_CSC2_WORD0__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC2_W0 << 3)
+#define IPU_IC_TPMEM_POST_CSC2_WORD0__EMPTY  IPU_IC_TPMEM_POST_CSC2_WORD0__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC2_WORD0__FULL   IPU_IC_TPMEM_POST_CSC2_WORD0__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC2_WORD0__A0_LOW IPU_IC_TPMEM_POST_CSC2_WORD0__ADDR,0xF8000000
+#define IPU_IC_TPMEM_POST_CSC2_WORD0__C00    IPU_IC_TPMEM_POST_CSC2_WORD0__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_POST_CSC2_WORD0__C11    IPU_IC_TPMEM_POST_CSC2_WORD0__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_POST_CSC2_WORD0__C22    IPU_IC_TPMEM_POST_CSC2_WORD0__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_POST_CSC2_WORD1__ADDR     IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC2_W0 << 3) + 4 
+#define IPU_IC_TPMEM_POST_CSC2_WORD1__EMPTY    IPU_IC_TPMEM_POST_CSC2_WORD1__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC2_WORD1__FULL     IPU_IC_TPMEM_POST_CSC2_WORD1__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC2_WORD1__SAT_MODE IPU_IC_TPMEM_POST_CSC2_WORD1__ADDR,0x00000400
+#define IPU_IC_TPMEM_POST_CSC2_WORD1__SCALE    IPU_IC_TPMEM_POST_CSC2_WORD1__ADDR,0x00000300
+#define IPU_IC_TPMEM_POST_CSC2_WORD1__A0_HIGH  IPU_IC_TPMEM_POST_CSC2_WORD1__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_POST_CSC2_WORD2__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC2_W1 << 3)
+#define IPU_IC_TPMEM_POST_CSC2_WORD2__EMPTY  IPU_IC_TPMEM_POST_CSC2_WORD2__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC2_WORD2__FULL   IPU_IC_TPMEM_POST_CSC2_WORD2__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC2_WORD2__A1_LOW IPU_IC_TPMEM_POST_CSC2_WORD2__ADDR,0xF8000000
+#define IPU_IC_TPMEM_POST_CSC2_WORD2__C01    IPU_IC_TPMEM_POST_CSC2_WORD2__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_POST_CSC2_WORD2__C10    IPU_IC_TPMEM_POST_CSC2_WORD2__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_POST_CSC2_WORD2__C20    IPU_IC_TPMEM_POST_CSC2_WORD2__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_POST_CSC2_WORD3__ADDR    IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC2_W1 << 3) + 4 
+#define IPU_IC_TPMEM_POST_CSC2_WORD3__EMPTY   IPU_IC_TPMEM_POST_CSC2_WORD3__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC2_WORD3__FULL    IPU_IC_TPMEM_POST_CSC2_WORD3__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC2_WORD3__A1_HIGH IPU_IC_TPMEM_POST_CSC2_WORD3__ADDR,0x000000FF
+
+#define IPU_IC_TPMEM_POST_CSC2_WORD4__ADDR   IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC2_W2 << 3)
+#define IPU_IC_TPMEM_POST_CSC2_WORD4__EMPTY  IPU_IC_TPMEM_POST_CSC2_WORD4__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC2_WORD4__FULL   IPU_IC_TPMEM_POST_CSC2_WORD4__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC2_WORD4__A2_LOW IPU_IC_TPMEM_POST_CSC2_WORD4__ADDR,0xF8000000
+#define IPU_IC_TPMEM_POST_CSC2_WORD4__C02    IPU_IC_TPMEM_POST_CSC2_WORD4__ADDR,0x07FC0000
+#define IPU_IC_TPMEM_POST_CSC2_WORD4__C12    IPU_IC_TPMEM_POST_CSC2_WORD4__ADDR,0x0003FE00
+#define IPU_IC_TPMEM_POST_CSC2_WORD4__C21    IPU_IC_TPMEM_POST_CSC2_WORD4__ADDR,0x000001FF
+
+#define IPU_IC_TPMEM_POST_CSC2_WORD5__ADDR    IPU_MEMORY_OFFSET+0x0060000 + (TASK3_CSC2_W2 << 3) + 4 
+#define IPU_IC_TPMEM_POST_CSC2_WORD5__EMPTY   IPU_IC_TPMEM_POST_CSC2_WORD5__ADDR,0x00000000
+#define IPU_IC_TPMEM_POST_CSC2_WORD5__FULL    IPU_IC_TPMEM_POST_CSC2_WORD5__ADDR,0xffffffff
+#define IPU_IC_TPMEM_POST_CSC2_WORD5__A2_HIGH IPU_IC_TPMEM_POST_CSC2_WORD5__ADDR,0x000000FF
+
+#define SRM_DP_COM_CONF_SYNC__ADDR                              IPU_MEMORY_OFFSET+0x0040000
+#define SRM_DP_COM_CONF_SYNC__EMPTY                             IPU_MEMORY_OFFSET+0x0040000,0x00000000
+#define SRM_DP_COM_CONF_SYNC__FULL                              IPU_MEMORY_OFFSET+0x0040000,0xffffffff
+#define SRM_DP_COM_CONF_SYNC__DP_GAMMA_YUV_EN_SYNC              IPU_MEMORY_OFFSET+0x0040000,0x00002000
+#define SRM_DP_COM_CONF_SYNC__DP_GAMMA_EN_SYNC                  IPU_MEMORY_OFFSET+0x0040000,0x00001000
+#define SRM_DP_COM_CONF_SYNC__DP_CSC_YUV_SAT_MODE_SYNC          IPU_MEMORY_OFFSET+0x0040000,0x00000800
+#define SRM_DP_COM_CONF_SYNC__DP_CSC_GAMUT_SAT_EN_SYNC          IPU_MEMORY_OFFSET+0x0040000,0x00000400
+#define SRM_DP_COM_CONF_SYNC__DP_CSC_DEF_SYNC                   IPU_MEMORY_OFFSET+0x0040000,0x00000300
+#define SRM_DP_COM_CONF_SYNC__DP_COC_SYNC                       IPU_MEMORY_OFFSET+0x0040000,0x00000070
+#define SRM_DP_COM_CONF_SYNC__DP_GWCKE_SYNC                     IPU_MEMORY_OFFSET+0x0040000,0x00000008
+#define SRM_DP_COM_CONF_SYNC__DP_GWAM_SYNC                      IPU_MEMORY_OFFSET+0x0040000,0x00000004
+#define SRM_DP_COM_CONF_SYNC__DP_GWSEL_SYNC                     IPU_MEMORY_OFFSET+0x0040000,0x00000002
+#define SRM_DP_COM_CONF_SYNC__DP_FG_EN_SYNC                     IPU_MEMORY_OFFSET+0x0040000,0x00000001
+
+#define SRM_DP_GRAPH_WIND_CTRL_SYNC__ADDR                       IPU_MEMORY_OFFSET+0x0040004
+#define SRM_DP_GRAPH_WIND_CTRL_SYNC__EMPTY                      IPU_MEMORY_OFFSET+0x0040004,0x00000000
+#define SRM_DP_GRAPH_WIND_CTRL_SYNC__FULL                       IPU_MEMORY_OFFSET+0x0040004,0xffffffff
+#define SRM_DP_GRAPH_WIND_CTRL_SYNC__DP_GWAV_SYNC               IPU_MEMORY_OFFSET+0x0040004,0xFF000000
+#define SRM_DP_GRAPH_WIND_CTRL_SYNC__DP_GWCKR_SYNC              IPU_MEMORY_OFFSET+0x0040004,0x00FF0000
+#define SRM_DP_GRAPH_WIND_CTRL_SYNC__DP_GWCKG_SYNC              IPU_MEMORY_OFFSET+0x0040004,0x0000FF00
+#define SRM_DP_GRAPH_WIND_CTRL_SYNC__DP_GWCKB_SYNC              IPU_MEMORY_OFFSET+0x0040004,0x000000FF
+
+#define SRM_DP_FG_POS_SYNC__ADDR                                IPU_MEMORY_OFFSET+0x0040008
+#define SRM_DP_FG_POS_SYNC__EMPTY                               IPU_MEMORY_OFFSET+0x0040008,0x00000000
+#define SRM_DP_FG_POS_SYNC__FULL                                IPU_MEMORY_OFFSET+0x0040008,0xffffffff
+#define SRM_DP_FG_POS_SYNC__DP_FGXP_SYNC                        IPU_MEMORY_OFFSET+0x0040008,0x07FF0000
+#define SRM_DP_FG_POS_SYNC__DP_FGYP_SYNC                        IPU_MEMORY_OFFSET+0x0040008,0x000007FF
+
+#define SRM_DP_CUR_POS_SYNC__ADDR                               IPU_MEMORY_OFFSET+0x004000C
+#define SRM_DP_CUR_POS_SYNC__EMPTY                              IPU_MEMORY_OFFSET+0x004000C,0x00000000
+#define SRM_DP_CUR_POS_SYNC__FULL                               IPU_MEMORY_OFFSET+0x004000C,0xffffffff
+#define SRM_DP_CUR_POS_SYNC__DP_CXW_SYNC                        IPU_MEMORY_OFFSET+0x004000C,0xF8000000
+#define SRM_DP_CUR_POS_SYNC__DP_CXP_SYNC                        IPU_MEMORY_OFFSET+0x004000C,0x07FF0000
+#define SRM_DP_CUR_POS_SYNC__DP_CYH_SYNC                        IPU_MEMORY_OFFSET+0x004000C,0x0000F800
+#define SRM_DP_CUR_POS_SYNC__DP_CYP_SYNC                        IPU_MEMORY_OFFSET+0x004000C,0x000007FF
+
+#define SRM_DP_CUR_MAP_SYNC__ADDR                               IPU_MEMORY_OFFSET+0x0040010
+#define SRM_DP_CUR_MAP_SYNC__EMPTY                              IPU_MEMORY_OFFSET+0x0040010,0x00000000
+#define SRM_DP_CUR_MAP_SYNC__FULL                               IPU_MEMORY_OFFSET+0x0040010,0xffffffff
+#define SRM_DP_CUR_MAP_SYNC__DP_CUR_COL_R_SYNC                  IPU_MEMORY_OFFSET+0x0040010,0x00FF0000
+#define SRM_DP_CUR_MAP_SYNC__DP_CUR_COL_G_SYNC                  IPU_MEMORY_OFFSET+0x0040010,0x0000FF00
+#define SRM_DP_CUR_MAP_SYNC__DP_CUR_COL_B_SYNC                  IPU_MEMORY_OFFSET+0x0040010,0x000000FF
+
+#define SRM_DP_GAMMA_C_SYNC_0__ADDR                             IPU_MEMORY_OFFSET+0x0040014
+#define SRM_DP_GAMMA_C_SYNC_0__EMPTY                            IPU_MEMORY_OFFSET+0x0040014,0x00000000
+#define SRM_DP_GAMMA_C_SYNC_0__FULL                             IPU_MEMORY_OFFSET+0x0040014,0xffffffff
+#define SRM_DP_GAMMA_C_SYNC_0__DP_GAMMA_C_SYNC_1                IPU_MEMORY_OFFSET+0x0040014,0x01FF0000
+#define SRM_DP_GAMMA_C_SYNC_0__DP_GAMMA_C_SYNC_0                IPU_MEMORY_OFFSET+0x0040014,0x000001FF
+
+#define SRM_DP_GAMMA_C_SYNC_1__ADDR                             IPU_MEMORY_OFFSET+0x0040018
+#define SRM_DP_GAMMA_C_SYNC_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040018,0x00000000
+#define SRM_DP_GAMMA_C_SYNC_1__FULL                             IPU_MEMORY_OFFSET+0x0040018,0xffffffff
+#define SRM_DP_GAMMA_C_SYNC_1__DP_GAMMA_C_SYNC_3                IPU_MEMORY_OFFSET+0x0040018,0x01FF0000
+#define SRM_DP_GAMMA_C_SYNC_1__DP_GAMMA_C_SYNC_2                IPU_MEMORY_OFFSET+0x0040018,0x000001FF
+
+#define SRM_DP_GAMMA_C_SYNC_2__ADDR                             IPU_MEMORY_OFFSET+0x004001C
+#define SRM_DP_GAMMA_C_SYNC_2__EMPTY                            IPU_MEMORY_OFFSET+0x004001C,0x00000000
+#define SRM_DP_GAMMA_C_SYNC_2__FULL                             IPU_MEMORY_OFFSET+0x004001C,0xffffffff
+#define SRM_DP_GAMMA_C_SYNC_2__DP_GAMMA_C_SYNC_5                IPU_MEMORY_OFFSET+0x004001C,0x01FF0000
+#define SRM_DP_GAMMA_C_SYNC_2__DP_GAMMA_C_SYNC_4                IPU_MEMORY_OFFSET+0x004001C,0x000001FF
+
+#define SRM_DP_GAMMA_C_SYNC_3__ADDR                             IPU_MEMORY_OFFSET+0x0040020
+#define SRM_DP_GAMMA_C_SYNC_3__EMPTY                            IPU_MEMORY_OFFSET+0x0040020,0x00000000
+#define SRM_DP_GAMMA_C_SYNC_3__FULL                             IPU_MEMORY_OFFSET+0x0040020,0xffffffff
+#define SRM_DP_GAMMA_C_SYNC_3__DP_GAMMA_C_SYNC_7                IPU_MEMORY_OFFSET+0x0040020,0x01FF0000
+#define SRM_DP_GAMMA_C_SYNC_3__DP_GAMMA_C_SYNC_6                IPU_MEMORY_OFFSET+0x0040020,0x000001FF
+
+#define SRM_DP_GAMMA_C_SYNC_4__ADDR                             IPU_MEMORY_OFFSET+0x0040024
+#define SRM_DP_GAMMA_C_SYNC_4__EMPTY                            IPU_MEMORY_OFFSET+0x0040024,0x00000000
+#define SRM_DP_GAMMA_C_SYNC_4__FULL                             IPU_MEMORY_OFFSET+0x0040024,0xffffffff
+#define SRM_DP_GAMMA_C_SYNC_4__DP_GAMMA_C_SYNC_9                IPU_MEMORY_OFFSET+0x0040024,0x01FF0000
+#define SRM_DP_GAMMA_C_SYNC_4__DP_GAMMA_C_SYNC_8                IPU_MEMORY_OFFSET+0x0040024,0x000001FF
+
+#define SRM_DP_GAMMA_C_SYNC_5__ADDR                             IPU_MEMORY_OFFSET+0x0040028
+#define SRM_DP_GAMMA_C_SYNC_5__EMPTY                            IPU_MEMORY_OFFSET+0x0040028,0x00000000
+#define SRM_DP_GAMMA_C_SYNC_5__FULL                             IPU_MEMORY_OFFSET+0x0040028,0xffffffff
+#define SRM_DP_GAMMA_C_SYNC_5__DP_GAMMA_C_SYNC_11               IPU_MEMORY_OFFSET+0x0040028,0x01FF0000
+#define SRM_DP_GAMMA_C_SYNC_5__DP_GAMMA_C_SYNC_10               IPU_MEMORY_OFFSET+0x0040028,0x000001FF
+
+#define SRM_DP_GAMMA_C_SYNC_6__ADDR                             IPU_MEMORY_OFFSET+0x004002C
+#define SRM_DP_GAMMA_C_SYNC_6__EMPTY                            IPU_MEMORY_OFFSET+0x004002C,0x00000000
+#define SRM_DP_GAMMA_C_SYNC_6__FULL                             IPU_MEMORY_OFFSET+0x004002C,0xffffffff
+#define SRM_DP_GAMMA_C_SYNC_6__DP_GAMMA_C_SYNC_13               IPU_MEMORY_OFFSET+0x004002C,0x01FF0000
+#define SRM_DP_GAMMA_C_SYNC_6__DP_GAMMA_C_SYNC_12               IPU_MEMORY_OFFSET+0x004002C,0x000001FF
+
+#define SRM_DP_GAMMA_C_SYNC_7__ADDR                             IPU_MEMORY_OFFSET+0x0040030
+#define SRM_DP_GAMMA_C_SYNC_7__EMPTY                            IPU_MEMORY_OFFSET+0x0040030,0x00000000
+#define SRM_DP_GAMMA_C_SYNC_7__FULL                             IPU_MEMORY_OFFSET+0x0040030,0xffffffff
+#define SRM_DP_GAMMA_C_SYNC_7__DP_GAMMA_C_SYNC_15               IPU_MEMORY_OFFSET+0x0040030,0x01FF0000
+#define SRM_DP_GAMMA_C_SYNC_7__DP_GAMMA_C_SYNC_14               IPU_MEMORY_OFFSET+0x0040030,0x000001FF
+
+#define SRM_DP_GAMMA_S_SYNC_0__ADDR                             IPU_MEMORY_OFFSET+0x0040034
+#define SRM_DP_GAMMA_S_SYNC_0__EMPTY                            IPU_MEMORY_OFFSET+0x0040034,0x00000000
+#define SRM_DP_GAMMA_S_SYNC_0__FULL                             IPU_MEMORY_OFFSET+0x0040034,0xffffffff
+#define SRM_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_3                IPU_MEMORY_OFFSET+0x0040034,0xFF000000
+#define SRM_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_2                IPU_MEMORY_OFFSET+0x0040034,0x00FF0000
+#define SRM_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_1                IPU_MEMORY_OFFSET+0x0040034,0x0000FF00
+#define SRM_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_0                IPU_MEMORY_OFFSET+0x0040034,0x000000FF
+
+#define SRM_DP_GAMMA_S_SYNC_1__ADDR                             IPU_MEMORY_OFFSET+0x0040038
+#define SRM_DP_GAMMA_S_SYNC_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040038,0x00000000
+#define SRM_DP_GAMMA_S_SYNC_1__FULL                             IPU_MEMORY_OFFSET+0x0040038,0xffffffff
+#define SRM_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_7                IPU_MEMORY_OFFSET+0x0040038,0xFF000000
+#define SRM_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_6                IPU_MEMORY_OFFSET+0x0040038,0x00FF0000
+#define SRM_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_5                IPU_MEMORY_OFFSET+0x0040038,0x0000FF00
+#define SRM_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_4                IPU_MEMORY_OFFSET+0x0040038,0x000000FF
+
+#define SRM_DP_GAMMA_S_SYNC_2__ADDR                             IPU_MEMORY_OFFSET+0x004003C
+#define SRM_DP_GAMMA_S_SYNC_2__EMPTY                            IPU_MEMORY_OFFSET+0x004003C,0x00000000
+#define SRM_DP_GAMMA_S_SYNC_2__FULL                             IPU_MEMORY_OFFSET+0x004003C,0xffffffff
+#define SRM_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_11               IPU_MEMORY_OFFSET+0x004003C,0xFF000000
+#define SRM_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_10               IPU_MEMORY_OFFSET+0x004003C,0x00FF0000
+#define SRM_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_9                IPU_MEMORY_OFFSET+0x004003C,0x0000FF00
+#define SRM_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_8                IPU_MEMORY_OFFSET+0x004003C,0x000000FF
+
+#define SRM_DP_GAMMA_S_SYNC_3__ADDR                             IPU_MEMORY_OFFSET+0x0040040
+#define SRM_DP_GAMMA_S_SYNC_3__EMPTY                            IPU_MEMORY_OFFSET+0x0040040,0x00000000
+#define SRM_DP_GAMMA_S_SYNC_3__FULL                             IPU_MEMORY_OFFSET+0x0040040,0xffffffff
+#define SRM_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_15               IPU_MEMORY_OFFSET+0x0040040,0xFF000000
+#define SRM_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_14               IPU_MEMORY_OFFSET+0x0040040,0x00FF0000
+#define SRM_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_13               IPU_MEMORY_OFFSET+0x0040040,0x0000FF00
+#define SRM_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_12               IPU_MEMORY_OFFSET+0x0040040,0x000000FF
+
+#define SRM_DP_CSCA_SYNC_0__ADDR                                IPU_MEMORY_OFFSET+0x0040044
+#define SRM_DP_CSCA_SYNC_0__EMPTY                               IPU_MEMORY_OFFSET+0x0040044,0x00000000
+#define SRM_DP_CSCA_SYNC_0__FULL                                IPU_MEMORY_OFFSET+0x0040044,0xffffffff
+#define SRM_DP_CSCA_SYNC_0__DP_CSC_A_SYNC_1                     IPU_MEMORY_OFFSET+0x0040044,0x03FF0000
+#define SRM_DP_CSCA_SYNC_0__DP_CSC_A_SYNC_0                     IPU_MEMORY_OFFSET+0x0040044,0x000003FF
+
+#define SRM_DP_CSCA_SYNC_1__ADDR                                IPU_MEMORY_OFFSET+0x0040048
+#define SRM_DP_CSCA_SYNC_1__EMPTY                               IPU_MEMORY_OFFSET+0x0040048,0x00000000
+#define SRM_DP_CSCA_SYNC_1__FULL                                IPU_MEMORY_OFFSET+0x0040048,0xffffffff
+#define SRM_DP_CSCA_SYNC_1__DP_CSC_A_SYNC_3                     IPU_MEMORY_OFFSET+0x0040048,0x03FF0000
+#define SRM_DP_CSCA_SYNC_1__DP_CSC_A_SYNC_2                     IPU_MEMORY_OFFSET+0x0040048,0x000003FF
+
+#define SRM_DP_CSCA_SYNC_2__ADDR                                IPU_MEMORY_OFFSET+0x004004C
+#define SRM_DP_CSCA_SYNC_2__EMPTY                               IPU_MEMORY_OFFSET+0x004004C,0x00000000
+#define SRM_DP_CSCA_SYNC_2__FULL                                IPU_MEMORY_OFFSET+0x004004C,0xffffffff
+#define SRM_DP_CSCA_SYNC_2__DP_CSC_A_SYNC_5                     IPU_MEMORY_OFFSET+0x004004C,0x03FF0000
+#define SRM_DP_CSCA_SYNC_2__DP_CSC_A_SYNC_4                     IPU_MEMORY_OFFSET+0x004004C,0x000003FF
+
+#define SRM_DP_CSCA_SYNC_3__ADDR                                IPU_MEMORY_OFFSET+0x0040050
+#define SRM_DP_CSCA_SYNC_3__EMPTY                               IPU_MEMORY_OFFSET+0x0040050,0x00000000
+#define SRM_DP_CSCA_SYNC_3__FULL                                IPU_MEMORY_OFFSET+0x0040050,0xffffffff
+#define SRM_DP_CSCA_SYNC_3__DP_CSC_A_SYNC_7                     IPU_MEMORY_OFFSET+0x0040050,0x03FF0000
+#define SRM_DP_CSCA_SYNC_3__DP_CSC_A_SYNC_6                     IPU_MEMORY_OFFSET+0x0040050,0x000003FF
+
+#define SRM_DP_CSC_SYNC_0__ADDR                                 IPU_MEMORY_OFFSET+0x0040054
+#define SRM_DP_CSC_SYNC_0__EMPTY                                IPU_MEMORY_OFFSET+0x0040054,0x00000000
+#define SRM_DP_CSC_SYNC_0__FULL                                 IPU_MEMORY_OFFSET+0x0040054,0xffffffff
+#define SRM_DP_CSC_SYNC_0__DP_CSC_S0_SYNC                       IPU_MEMORY_OFFSET+0x0040054,0xC0000000
+#define SRM_DP_CSC_SYNC_0__DP_CSC_B0_SYNC                       IPU_MEMORY_OFFSET+0x0040054,0x3FFF0000
+#define SRM_DP_CSC_SYNC_0__DP_CSC_A8_SYNC                       IPU_MEMORY_OFFSET+0x0040054,0x000003FF
+
+#define SRM_DP_CSC_SYNC_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040058
+#define SRM_DP_CSC_SYNC_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040058,0x00000000
+#define SRM_DP_CSC_SYNC_1__FULL                                 IPU_MEMORY_OFFSET+0x0040058,0xffffffff
+#define SRM_DP_CSC_SYNC_1__DP_CSC_S2_SYNC                       IPU_MEMORY_OFFSET+0x0040058,0xC0000000
+#define SRM_DP_CSC_SYNC_1__DP_CSC_B2_SYNC                       IPU_MEMORY_OFFSET+0x0040058,0x3FFF0000
+#define SRM_DP_CSC_SYNC_1__DP_CSC_S1_SYNC                       IPU_MEMORY_OFFSET+0x0040058,0x0000C000
+#define SRM_DP_CSC_SYNC_1__DP_CSC_B1_SYNC                       IPU_MEMORY_OFFSET+0x0040058,0x00003FFF
+
+#define SRM_DP_CUR_POS_ALT__ADDR                                IPU_MEMORY_OFFSET+0x004005C
+#define SRM_DP_CUR_POS_ALT__EMPTY                               IPU_MEMORY_OFFSET+0x004005C,0x00000000
+#define SRM_DP_CUR_POS_ALT__FULL                                IPU_MEMORY_OFFSET+0x004005C,0xffffffff
+#define SRM_DP_CUR_POS_ALT__DP_CXW_SYNC_ALT                     IPU_MEMORY_OFFSET+0x004005C,0xF8000000
+#define SRM_DP_CUR_POS_ALT__DP_CXP_SYNC_ALT                     IPU_MEMORY_OFFSET+0x004005C,0x07FF0000
+#define SRM_DP_CUR_POS_ALT__DP_CYH_SYNC_ALT                     IPU_MEMORY_OFFSET+0x004005C,0x0000F800
+#define SRM_DP_CUR_POS_ALT__DP_CYP_SYNC_ALT                     IPU_MEMORY_OFFSET+0x004005C,0x000007FF
+
+#define SRM_DP_COM_CONF_ASYNC0__ADDR                            IPU_MEMORY_OFFSET+0x0040060
+#define SRM_DP_COM_CONF_ASYNC0__EMPTY                           IPU_MEMORY_OFFSET+0x0040060,0x00000000
+#define SRM_DP_COM_CONF_ASYNC0__FULL                            IPU_MEMORY_OFFSET+0x0040060,0xffffffff
+#define SRM_DP_COM_CONF_ASYNC0__DP_GAMMA_YUV_EN_ASYNC0          IPU_MEMORY_OFFSET+0x0040060,0x00002000
+#define SRM_DP_COM_CONF_ASYNC0__DP_GAMMA_EN_ASYNC0              IPU_MEMORY_OFFSET+0x0040060,0x00001000
+#define SRM_DP_COM_CONF_ASYNC0__DP_CSC_YUV_SAT_MODE_ASYNC0      IPU_MEMORY_OFFSET+0x0040060,0x00000800
+#define SRM_DP_COM_CONF_ASYNC0__DP_CSC_GAMUT_SAT_EN_ASYNC0      IPU_MEMORY_OFFSET+0x0040060,0x00000400
+#define SRM_DP_COM_CONF_ASYNC0__DP_CSC_DEF_ASYNC0               IPU_MEMORY_OFFSET+0x0040060,0x00000300
+#define SRM_DP_COM_CONF_ASYNC0__DP_COC_ASYNC0                   IPU_MEMORY_OFFSET+0x0040060,0x00000070
+#define SRM_DP_COM_CONF_ASYNC0__DP_GWCKE_ASYNC0                 IPU_MEMORY_OFFSET+0x0040060,0x00000008
+#define SRM_DP_COM_CONF_ASYNC0__DP_GWAM_ASYNC0                  IPU_MEMORY_OFFSET+0x0040060,0x00000004
+#define SRM_DP_COM_CONF_ASYNC0__DP_GWSEL_ASYNC0                 IPU_MEMORY_OFFSET+0x0040060,0x00000002
+
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC0__ADDR                     IPU_MEMORY_OFFSET+0x0040064
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC0__EMPTY                    IPU_MEMORY_OFFSET+0x0040064,0x00000000
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC0__FULL                     IPU_MEMORY_OFFSET+0x0040064,0xffffffff
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWAV_ASYNC0           IPU_MEMORY_OFFSET+0x0040064,0xFF000000
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWCKR_ASYNC0          IPU_MEMORY_OFFSET+0x0040064,0x00FF0000
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWCKG_ASYNC0          IPU_MEMORY_OFFSET+0x0040064,0x0000FF00
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWCKB_ASYNC0          IPU_MEMORY_OFFSET+0x0040064,0x000000FF
+
+#define SRM_DP_FG_POS_ASYNC0__ADDR                              IPU_MEMORY_OFFSET+0x0040068
+#define SRM_DP_FG_POS_ASYNC0__EMPTY                             IPU_MEMORY_OFFSET+0x0040068,0x00000000
+#define SRM_DP_FG_POS_ASYNC0__FULL                              IPU_MEMORY_OFFSET+0x0040068,0xffffffff
+#define SRM_DP_FG_POS_ASYNC0__DP_FGXP_ASYNC0                    IPU_MEMORY_OFFSET+0x0040068,0x07FF0000
+#define SRM_DP_FG_POS_ASYNC0__DP_FGYP_ASYNC0                    IPU_MEMORY_OFFSET+0x0040068,0x000007FF
+
+#define SRM_DP_CUR_POS_ASYNC0__ADDR                             IPU_MEMORY_OFFSET+0x004006C
+#define SRM_DP_CUR_POS_ASYNC0__EMPTY                            IPU_MEMORY_OFFSET+0x004006C,0x00000000
+#define SRM_DP_CUR_POS_ASYNC0__FULL                             IPU_MEMORY_OFFSET+0x004006C,0xffffffff
+#define SRM_DP_CUR_POS_ASYNC0__DP_CXW_ASYNC0                    IPU_MEMORY_OFFSET+0x004006C,0xF8000000
+#define SRM_DP_CUR_POS_ASYNC0__DP_CXP_ASYNC0                    IPU_MEMORY_OFFSET+0x004006C,0x07FF0000
+#define SRM_DP_CUR_POS_ASYNC0__DP_CYH_ASYNC0                    IPU_MEMORY_OFFSET+0x004006C,0x0000F800
+#define SRM_DP_CUR_POS_ASYNC0__DP_CYP_ASYNC0                    IPU_MEMORY_OFFSET+0x004006C,0x000007FF
+
+#define SRM_DP_CUR_MAP_ASYNC0__ADDR                             IPU_MEMORY_OFFSET+0x0040070
+#define SRM_DP_CUR_MAP_ASYNC0__EMPTY                            IPU_MEMORY_OFFSET+0x0040070,0x00000000
+#define SRM_DP_CUR_MAP_ASYNC0__FULL                             IPU_MEMORY_OFFSET+0x0040070,0xffffffff
+#define SRM_DP_CUR_MAP_ASYNC0__CUR_COL_R_ASYNC0                 IPU_MEMORY_OFFSET+0x0040070,0x00FF0000
+#define SRM_DP_CUR_MAP_ASYNC0__CUR_COL_G_ASYNC0                 IPU_MEMORY_OFFSET+0x0040070,0x0000FF00
+#define SRM_DP_CUR_MAP_ASYNC0__CUR_COL_B_ASYNC0                 IPU_MEMORY_OFFSET+0x0040070,0x000000FF
+
+#define SRM_DP_GAMMA_C_ASYNC0_0__ADDR                           IPU_MEMORY_OFFSET+0x0040074
+#define SRM_DP_GAMMA_C_ASYNC0_0__EMPTY                          IPU_MEMORY_OFFSET+0x0040074,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC0_0__FULL                           IPU_MEMORY_OFFSET+0x0040074,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC0_0__DP_GAMMA_C_ASYNC0_1            IPU_MEMORY_OFFSET+0x0040074,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC0_0__DP_GAMMA_C_ASYNC0_0            IPU_MEMORY_OFFSET+0x0040074,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC0_1__ADDR                           IPU_MEMORY_OFFSET+0x0040078
+#define SRM_DP_GAMMA_C_ASYNC0_1__EMPTY                          IPU_MEMORY_OFFSET+0x0040078,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC0_1__FULL                           IPU_MEMORY_OFFSET+0x0040078,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC0_1__DP_GAMMA_C_ASYNC0_3            IPU_MEMORY_OFFSET+0x0040078,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC0_1__DP_GAMMA_C_ASYNC0_2            IPU_MEMORY_OFFSET+0x0040078,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC0_2__ADDR                           IPU_MEMORY_OFFSET+0x004007C
+#define SRM_DP_GAMMA_C_ASYNC0_2__EMPTY                          IPU_MEMORY_OFFSET+0x004007C,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC0_2__FULL                           IPU_MEMORY_OFFSET+0x004007C,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC0_2__DP_GAMMA_C_ASYNC0_5            IPU_MEMORY_OFFSET+0x004007C,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC0_2__DP_GAMMA_C_ASYNC0_4            IPU_MEMORY_OFFSET+0x004007C,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC0_3__ADDR                           IPU_MEMORY_OFFSET+0x0040080
+#define SRM_DP_GAMMA_C_ASYNC0_3__EMPTY                          IPU_MEMORY_OFFSET+0x0040080,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC0_3__FULL                           IPU_MEMORY_OFFSET+0x0040080,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC0_3__DP_GAMMA_C_ASYNC0_7            IPU_MEMORY_OFFSET+0x0040080,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC0_3__DP_GAMMA_C_ASYNC0_6            IPU_MEMORY_OFFSET+0x0040080,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC0_4__ADDR                           IPU_MEMORY_OFFSET+0x0040084
+#define SRM_DP_GAMMA_C_ASYNC0_4__EMPTY                          IPU_MEMORY_OFFSET+0x0040084,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC0_4__FULL                           IPU_MEMORY_OFFSET+0x0040084,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC0_4__DP_GAMMA_C_ASYNC0_9            IPU_MEMORY_OFFSET+0x0040084,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC0_4__DP_GAMMA_C_ASYNC0_8            IPU_MEMORY_OFFSET+0x0040084,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC0_5__ADDR                           IPU_MEMORY_OFFSET+0x0040088
+#define SRM_DP_GAMMA_C_ASYNC0_5__EMPTY                          IPU_MEMORY_OFFSET+0x0040088,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC0_5__FULL                           IPU_MEMORY_OFFSET+0x0040088,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC0_5__DP_GAMMA_C_ASYNC0_11           IPU_MEMORY_OFFSET+0x0040088,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC0_5__DP_GAMMA_C_ASYNC0_10           IPU_MEMORY_OFFSET+0x0040088,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC0_6__ADDR                           IPU_MEMORY_OFFSET+0x004008C
+#define SRM_DP_GAMMA_C_ASYNC0_6__EMPTY                          IPU_MEMORY_OFFSET+0x004008C,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC0_6__FULL                           IPU_MEMORY_OFFSET+0x004008C,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC0_6__DP_GAMMA_C_ASYNC0_13           IPU_MEMORY_OFFSET+0x004008C,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC0_6__DP_GAMMA_C_ASYNC0_12           IPU_MEMORY_OFFSET+0x004008C,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC0_7__ADDR                           IPU_MEMORY_OFFSET+0x0040090
+#define SRM_DP_GAMMA_C_ASYNC0_7__EMPTY                          IPU_MEMORY_OFFSET+0x0040090,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC0_7__FULL                           IPU_MEMORY_OFFSET+0x0040090,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC0_7__DP_GAMMA_C_ASYNC0_15           IPU_MEMORY_OFFSET+0x0040090,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC0_7__DP_GAMMA_C_ASYNC0_14           IPU_MEMORY_OFFSET+0x0040090,0x000001FF
+
+#define SRM_DP_GAMMA_S_ASYNC0_0__ADDR                           IPU_MEMORY_OFFSET+0x0040094
+#define SRM_DP_GAMMA_S_ASYNC0_0__EMPTY                          IPU_MEMORY_OFFSET+0x0040094,0x00000000
+#define SRM_DP_GAMMA_S_ASYNC0_0__FULL                           IPU_MEMORY_OFFSET+0x0040094,0xffffffff
+#define SRM_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_3            IPU_MEMORY_OFFSET+0x0040094,0xFF000000
+#define SRM_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_2            IPU_MEMORY_OFFSET+0x0040094,0x00FF0000
+#define SRM_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_1            IPU_MEMORY_OFFSET+0x0040094,0x0000FF00
+#define SRM_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_0            IPU_MEMORY_OFFSET+0x0040094,0x000000FF
+
+#define SRM_DP_GAMMA_S_ASYNC0_1__ADDR                           IPU_MEMORY_OFFSET+0x0040098
+#define SRM_DP_GAMMA_S_ASYNC0_1__EMPTY                          IPU_MEMORY_OFFSET+0x0040098,0x00000000
+#define SRM_DP_GAMMA_S_ASYNC0_1__FULL                           IPU_MEMORY_OFFSET+0x0040098,0xffffffff
+#define SRM_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_7            IPU_MEMORY_OFFSET+0x0040098,0xFF000000
+#define SRM_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_6            IPU_MEMORY_OFFSET+0x0040098,0x00FF0000
+#define SRM_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_5            IPU_MEMORY_OFFSET+0x0040098,0x0000FF00
+#define SRM_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_4            IPU_MEMORY_OFFSET+0x0040098,0x000000FF
+
+#define SRM_DP_GAMMA_S_ASYNC0_2__ADDR                           IPU_MEMORY_OFFSET+0x004009C
+#define SRM_DP_GAMMA_S_ASYNC0_2__EMPTY                          IPU_MEMORY_OFFSET+0x004009C,0x00000000
+#define SRM_DP_GAMMA_S_ASYNC0_2__FULL                           IPU_MEMORY_OFFSET+0x004009C,0xffffffff
+#define SRM_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_11           IPU_MEMORY_OFFSET+0x004009C,0xFF000000
+#define SRM_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_10           IPU_MEMORY_OFFSET+0x004009C,0x00FF0000
+#define SRM_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_9            IPU_MEMORY_OFFSET+0x004009C,0x0000FF00
+#define SRM_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_8            IPU_MEMORY_OFFSET+0x004009C,0x000000FF
+
+#define SRM_DP_GAMMA_S_ASYNC0_3__ADDR                           IPU_MEMORY_OFFSET+0x00400A0
+#define SRM_DP_GAMMA_S_ASYNC0_3__EMPTY                          IPU_MEMORY_OFFSET+0x00400A0,0x00000000
+#define SRM_DP_GAMMA_S_ASYNC0_3__FULL                           IPU_MEMORY_OFFSET+0x00400A0,0xffffffff
+#define SRM_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_15           IPU_MEMORY_OFFSET+0x00400A0,0xFF000000
+#define SRM_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_14           IPU_MEMORY_OFFSET+0x00400A0,0x00FF0000
+#define SRM_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_13           IPU_MEMORY_OFFSET+0x00400A0,0x0000FF00
+#define SRM_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_12           IPU_MEMORY_OFFSET+0x00400A0,0x000000FF
+
+#define SRM_DP_CSCA_ASYNC0_0__ADDR                              IPU_MEMORY_OFFSET+0x00400A4
+#define SRM_DP_CSCA_ASYNC0_0__EMPTY                             IPU_MEMORY_OFFSET+0x00400A4,0x00000000
+#define SRM_DP_CSCA_ASYNC0_0__FULL                              IPU_MEMORY_OFFSET+0x00400A4,0xffffffff
+#define SRM_DP_CSCA_ASYNC0_0__DP_CSC_A_ASYNC0_1                 IPU_MEMORY_OFFSET+0x00400A4,0x03FF0000
+#define SRM_DP_CSCA_ASYNC0_0__DP_CSC_A_ASYNC0_0                 IPU_MEMORY_OFFSET+0x00400A4,0x000003FF
+
+#define SRM_DP_CSCA_ASYNC0_1__ADDR                              IPU_MEMORY_OFFSET+0x00400A8
+#define SRM_DP_CSCA_ASYNC0_1__EMPTY                             IPU_MEMORY_OFFSET+0x00400A8,0x00000000
+#define SRM_DP_CSCA_ASYNC0_1__FULL                              IPU_MEMORY_OFFSET+0x00400A8,0xffffffff
+#define SRM_DP_CSCA_ASYNC0_1__DP_CSC_A_ASYNC0_3                 IPU_MEMORY_OFFSET+0x00400A8,0x03FF0000
+#define SRM_DP_CSCA_ASYNC0_1__DP_CSC_A_ASYNC0_2                 IPU_MEMORY_OFFSET+0x00400A8,0x000003FF
+
+#define SRM_DP_CSCA_ASYNC0_2__ADDR                              IPU_MEMORY_OFFSET+0x00400AC
+#define SRM_DP_CSCA_ASYNC0_2__EMPTY                             IPU_MEMORY_OFFSET+0x00400AC,0x00000000
+#define SRM_DP_CSCA_ASYNC0_2__FULL                              IPU_MEMORY_OFFSET+0x00400AC,0xffffffff
+#define SRM_DP_CSCA_ASYNC0_2__DP_CSC_A_ASYNC0_5                 IPU_MEMORY_OFFSET+0x00400AC,0x03FF0000
+#define SRM_DP_CSCA_ASYNC0_2__DP_CSC_A_ASYNC0_4                 IPU_MEMORY_OFFSET+0x00400AC,0x000003FF
+
+#define SRM_DP_CSCA_ASYNC0_3__ADDR                              IPU_MEMORY_OFFSET+0x00400B0
+#define SRM_DP_CSCA_ASYNC0_3__EMPTY                             IPU_MEMORY_OFFSET+0x00400B0,0x00000000
+#define SRM_DP_CSCA_ASYNC0_3__FULL                              IPU_MEMORY_OFFSET+0x00400B0,0xffffffff
+#define SRM_DP_CSCA_ASYNC0_3__DP_CSC_A_ASYNC0_7                 IPU_MEMORY_OFFSET+0x00400B0,0x03FF0000
+#define SRM_DP_CSCA_ASYNC0_3__DP_CSC_A_ASYNC0_6                 IPU_MEMORY_OFFSET+0x00400B0,0x000003FF
+
+#define SRM_DP_CSC_ASYNC0_0__ADDR                               IPU_MEMORY_OFFSET+0x00400B4
+#define SRM_DP_CSC_ASYNC0_0__EMPTY                              IPU_MEMORY_OFFSET+0x00400B4,0x00000000
+#define SRM_DP_CSC_ASYNC0_0__FULL                               IPU_MEMORY_OFFSET+0x00400B4,0xffffffff
+#define SRM_DP_CSC_ASYNC0_0__DP_CSC_S0_ASYNC0                   IPU_MEMORY_OFFSET+0x00400B4,0xC0000000
+#define SRM_DP_CSC_ASYNC0_0__DP_CSC_B0_ASYNC0                   IPU_MEMORY_OFFSET+0x00400B4,0x3FFF0000
+#define SRM_DP_CSC_ASYNC0_0__DP_CSC_A8_ASYNC0                   IPU_MEMORY_OFFSET+0x00400B4,0x000003FF
+
+#define SRM_DP_CSC_ASYNC0_1__ADDR                               IPU_MEMORY_OFFSET+0x00400B8
+#define SRM_DP_CSC_ASYNC0_1__EMPTY                              IPU_MEMORY_OFFSET+0x00400B8,0x00000000
+#define SRM_DP_CSC_ASYNC0_1__FULL                               IPU_MEMORY_OFFSET+0x00400B8,0xffffffff
+#define SRM_DP_CSC_ASYNC0_1__DP_CSC_S2_ASYNC0                   IPU_MEMORY_OFFSET+0x00400B8,0xC0000000
+#define SRM_DP_CSC_ASYNC0_1__DP_CSC_B2_ASYNC0                   IPU_MEMORY_OFFSET+0x00400B8,0x3FFF0000
+#define SRM_DP_CSC_ASYNC0_1__DP_CSC_S1_ASYNC0                   IPU_MEMORY_OFFSET+0x00400B8,0x0000C000
+#define SRM_DP_CSC_ASYNC0_1__DP_CSC_B1_ASYNC0                   IPU_MEMORY_OFFSET+0x00400B8,0x00003FFF
+
+#define SRM_DP_COM_CONF_ASYNC1__ADDR                            IPU_MEMORY_OFFSET+0x00400BC
+#define SRM_DP_COM_CONF_ASYNC1__EMPTY                           IPU_MEMORY_OFFSET+0x00400BC,0x00000000
+#define SRM_DP_COM_CONF_ASYNC1__FULL                            IPU_MEMORY_OFFSET+0x00400BC,0xffffffff
+#define SRM_DP_COM_CONF_ASYNC1__DP_GAMMA_YUV_EN_ASYNC1          IPU_MEMORY_OFFSET+0x00400BC,0x00002000
+#define SRM_DP_COM_CONF_ASYNC1__DP_GAMMA_EN_ASYNC1              IPU_MEMORY_OFFSET+0x00400BC,0x00001000
+#define SRM_DP_COM_CONF_ASYNC1__DP_CSC_YUV_SAT_MODE_ASYNC1      IPU_MEMORY_OFFSET+0x00400BC,0x00000800
+#define SRM_DP_COM_CONF_ASYNC1__DP_CSC_GAMUT_SAT_EN_ASYNC1      IPU_MEMORY_OFFSET+0x00400BC,0x00000400
+#define SRM_DP_COM_CONF_ASYNC1__DP_CSC_DEF_ASYNC1               IPU_MEMORY_OFFSET+0x00400BC,0x00000300
+#define SRM_DP_COM_CONF_ASYNC1__DP_COC_ASYNC1                   IPU_MEMORY_OFFSET+0x00400BC,0x00000070
+#define SRM_DP_COM_CONF_ASYNC1__DP_GWCKE_ASYNC1                 IPU_MEMORY_OFFSET+0x00400BC,0x00000008
+#define SRM_DP_COM_CONF_ASYNC1__DP_GWAM_ASYNC1                  IPU_MEMORY_OFFSET+0x00400BC,0x00000004
+#define SRM_DP_COM_CONF_ASYNC1__DP_GWSEL_ASYNC1                 IPU_MEMORY_OFFSET+0x00400BC,0x00000002
+
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC1__ADDR                     IPU_MEMORY_OFFSET+0x00400C0
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC1__EMPTY                    IPU_MEMORY_OFFSET+0x00400C0,0x00000000
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC1__FULL                     IPU_MEMORY_OFFSET+0x00400C0,0xffffffff
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWAV_ASYNC1           IPU_MEMORY_OFFSET+0x00400C0,0xFF000000
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWCKR_ASYNC1          IPU_MEMORY_OFFSET+0x00400C0,0x00FF0000
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWCKG_ASYNC1          IPU_MEMORY_OFFSET+0x00400C0,0x0000FF00
+#define SRM_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWCKB_ASYNC1          IPU_MEMORY_OFFSET+0x00400C0,0x000000FF
+
+#define SRM_DP_FG_POS_ASYNC1__ADDR                              IPU_MEMORY_OFFSET+0x00400C4
+#define SRM_DP_FG_POS_ASYNC1__EMPTY                             IPU_MEMORY_OFFSET+0x00400C4,0x00000000
+#define SRM_DP_FG_POS_ASYNC1__FULL                              IPU_MEMORY_OFFSET+0x00400C4,0xffffffff
+#define SRM_DP_FG_POS_ASYNC1__DP_FGXP_ASYNC1                    IPU_MEMORY_OFFSET+0x00400C4,0x07FF0000
+#define SRM_DP_FG_POS_ASYNC1__DP_FGYP_ASYNC1                    IPU_MEMORY_OFFSET+0x00400C4,0x000007FF
+
+#define SRM_DP_CUR_POS_ASYNC1__ADDR                             IPU_MEMORY_OFFSET+0x00400C8
+#define SRM_DP_CUR_POS_ASYNC1__EMPTY                            IPU_MEMORY_OFFSET+0x00400C8,0x00000000
+#define SRM_DP_CUR_POS_ASYNC1__FULL                             IPU_MEMORY_OFFSET+0x00400C8,0xffffffff
+#define SRM_DP_CUR_POS_ASYNC1__DP_CXW_ASYNC1                    IPU_MEMORY_OFFSET+0x00400C8,0xF8000000
+#define SRM_DP_CUR_POS_ASYNC1__DP_CXP_ASYNC1                    IPU_MEMORY_OFFSET+0x00400C8,0x07FF0000
+#define SRM_DP_CUR_POS_ASYNC1__DP_CYH_ASYNC1                    IPU_MEMORY_OFFSET+0x00400C8,0x0000F800
+#define SRM_DP_CUR_POS_ASYNC1__DP_CYP_ASYNC1                    IPU_MEMORY_OFFSET+0x00400C8,0x000007FF
+
+#define SRM_DP_CUR_MAP_ASYNC1__ADDR                             IPU_MEMORY_OFFSET+0x00400CC
+#define SRM_DP_CUR_MAP_ASYNC1__EMPTY                            IPU_MEMORY_OFFSET+0x00400CC,0x00000000
+#define SRM_DP_CUR_MAP_ASYNC1__FULL                             IPU_MEMORY_OFFSET+0x00400CC,0xffffffff
+#define SRM_DP_CUR_MAP_ASYNC1__CUR_COL_R_ASYNC1                 IPU_MEMORY_OFFSET+0x00400CC,0x00FF0000
+#define SRM_DP_CUR_MAP_ASYNC1__CUR_COL_G_ASYNC1                 IPU_MEMORY_OFFSET+0x00400CC,0x0000FF00
+#define SRM_DP_CUR_MAP_ASYNC1__CUR_COL_B_ASYNC1                 IPU_MEMORY_OFFSET+0x00400CC,0x000000FF
+
+#define SRM_DP_GAMMA_C_ASYNC1_0__ADDR                           IPU_MEMORY_OFFSET+0x00400D0
+#define SRM_DP_GAMMA_C_ASYNC1_0__EMPTY                          IPU_MEMORY_OFFSET+0x00400D0,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC1_0__FULL                           IPU_MEMORY_OFFSET+0x00400D0,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC1_0__DP_GAMMA_C_ASYNC1_1            IPU_MEMORY_OFFSET+0x00400D0,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC1_0__DP_GAMMA_C_ASYNC1_0            IPU_MEMORY_OFFSET+0x00400D0,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC1_1__ADDR                           IPU_MEMORY_OFFSET+0x00400D4
+#define SRM_DP_GAMMA_C_ASYNC1_1__EMPTY                          IPU_MEMORY_OFFSET+0x00400D4,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC1_1__FULL                           IPU_MEMORY_OFFSET+0x00400D4,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC1_1__DP_GAMMA_C_ASYNC1_3            IPU_MEMORY_OFFSET+0x00400D4,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC1_1__DP_GAMMA_C_ASYNC1_2            IPU_MEMORY_OFFSET+0x00400D4,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC1_2__ADDR                           IPU_MEMORY_OFFSET+0x00400D8
+#define SRM_DP_GAMMA_C_ASYNC1_2__EMPTY                          IPU_MEMORY_OFFSET+0x00400D8,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC1_2__FULL                           IPU_MEMORY_OFFSET+0x00400D8,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC1_2__DP_GAMMA_C_ASYNC1_5            IPU_MEMORY_OFFSET+0x00400D8,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC1_2__DP_GAMMA_C_ASYNC1_4            IPU_MEMORY_OFFSET+0x00400D8,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC1_3__ADDR                           IPU_MEMORY_OFFSET+0x00400DC
+#define SRM_DP_GAMMA_C_ASYNC1_3__EMPTY                          IPU_MEMORY_OFFSET+0x00400DC,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC1_3__FULL                           IPU_MEMORY_OFFSET+0x00400DC,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC1_3__DP_GAMMA_C_ASYNC1_7            IPU_MEMORY_OFFSET+0x00400DC,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC1_3__DP_GAMMA_C_ASYNC1_6            IPU_MEMORY_OFFSET+0x00400DC,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC1_4__ADDR                           IPU_MEMORY_OFFSET+0x00400E0
+#define SRM_DP_GAMMA_C_ASYNC1_4__EMPTY                          IPU_MEMORY_OFFSET+0x00400E0,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC1_4__FULL                           IPU_MEMORY_OFFSET+0x00400E0,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC1_4__DP_GAMMA_C_ASYNC1_9            IPU_MEMORY_OFFSET+0x00400E0,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC1_4__DP_GAMMA_C_ASYNC1_8            IPU_MEMORY_OFFSET+0x00400E0,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC1_5__ADDR                           IPU_MEMORY_OFFSET+0x00400E4
+#define SRM_DP_GAMMA_C_ASYNC1_5__EMPTY                          IPU_MEMORY_OFFSET+0x00400E4,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC1_5__FULL                           IPU_MEMORY_OFFSET+0x00400E4,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC1_5__DP_GAMMA_C_ASYNC1_11           IPU_MEMORY_OFFSET+0x00400E4,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC1_5__DP_GAMMA_C_ASYNC1_10           IPU_MEMORY_OFFSET+0x00400E4,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC1_6__ADDR                           IPU_MEMORY_OFFSET+0x00400E8
+#define SRM_DP_GAMMA_C_ASYNC1_6__EMPTY                          IPU_MEMORY_OFFSET+0x00400E8,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC1_6__FULL                           IPU_MEMORY_OFFSET+0x00400E8,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC1_6__DP_GAMMA_C_ASYNC1_13           IPU_MEMORY_OFFSET+0x00400E8,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC1_6__DP_GAMMA_C_ASYNC1_12           IPU_MEMORY_OFFSET+0x00400E8,0x000001FF
+
+#define SRM_DP_GAMMA_C_ASYNC1_7__ADDR                           IPU_MEMORY_OFFSET+0x00400EC
+#define SRM_DP_GAMMA_C_ASYNC1_7__EMPTY                          IPU_MEMORY_OFFSET+0x00400EC,0x00000000
+#define SRM_DP_GAMMA_C_ASYNC1_7__FULL                           IPU_MEMORY_OFFSET+0x00400EC,0xffffffff
+#define SRM_DP_GAMMA_C_ASYNC1_7__DP_GAMMA_C_ASYNC1_15           IPU_MEMORY_OFFSET+0x00400EC,0x01FF0000
+#define SRM_DP_GAMMA_C_ASYNC1_7__DP_GAMMA_C_ASYNC1_14           IPU_MEMORY_OFFSET+0x00400EC,0x000001FF
+
+#define SRM_DP_GAMMA_S_ASYNC1_0__ADDR                           IPU_MEMORY_OFFSET+0x00400F0
+#define SRM_DP_GAMMA_S_ASYNC1_0__EMPTY                          IPU_MEMORY_OFFSET+0x00400F0,0x00000000
+#define SRM_DP_GAMMA_S_ASYNC1_0__FULL                           IPU_MEMORY_OFFSET+0x00400F0,0xffffffff
+#define SRM_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_3            IPU_MEMORY_OFFSET+0x00400F0,0xFF000000
+#define SRM_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_2            IPU_MEMORY_OFFSET+0x00400F0,0x00FF0000
+#define SRM_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_1            IPU_MEMORY_OFFSET+0x00400F0,0x0000FF00
+#define SRM_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_0            IPU_MEMORY_OFFSET+0x00400F0,0x000000FF
+
+#define SRM_DP_GAMMA_S_ASYNC1_1__ADDR                           IPU_MEMORY_OFFSET+0x00400F4
+#define SRM_DP_GAMMA_S_ASYNC1_1__EMPTY                          IPU_MEMORY_OFFSET+0x00400F4,0x00000000
+#define SRM_DP_GAMMA_S_ASYNC1_1__FULL                           IPU_MEMORY_OFFSET+0x00400F4,0xffffffff
+#define SRM_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_7            IPU_MEMORY_OFFSET+0x00400F4,0xFF000000
+#define SRM_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_6            IPU_MEMORY_OFFSET+0x00400F4,0x00FF0000
+#define SRM_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_5            IPU_MEMORY_OFFSET+0x00400F4,0x0000FF00
+#define SRM_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_4            IPU_MEMORY_OFFSET+0x00400F4,0x000000FF
+
+#define SRM_DP_GAMMA_S_ASYNC1_2__ADDR                           IPU_MEMORY_OFFSET+0x00400F8
+#define SRM_DP_GAMMA_S_ASYNC1_2__EMPTY                          IPU_MEMORY_OFFSET+0x00400F8,0x00000000
+#define SRM_DP_GAMMA_S_ASYNC1_2__FULL                           IPU_MEMORY_OFFSET+0x00400F8,0xffffffff
+#define SRM_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_11           IPU_MEMORY_OFFSET+0x00400F8,0xFF000000
+#define SRM_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_10           IPU_MEMORY_OFFSET+0x00400F8,0x00FF0000
+#define SRM_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_9            IPU_MEMORY_OFFSET+0x00400F8,0x0000FF00
+#define SRM_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_8            IPU_MEMORY_OFFSET+0x00400F8,0x000000FF
+
+#define SRM_DP_GAMMA_S_ASYNC1_3__ADDR                           IPU_MEMORY_OFFSET+0x00400FC
+#define SRM_DP_GAMMA_S_ASYNC1_3__EMPTY                          IPU_MEMORY_OFFSET+0x00400FC,0x00000000
+#define SRM_DP_GAMMA_S_ASYNC1_3__FULL                           IPU_MEMORY_OFFSET+0x00400FC,0xffffffff
+#define SRM_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_15           IPU_MEMORY_OFFSET+0x00400FC,0xFF000000
+#define SRM_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_14           IPU_MEMORY_OFFSET+0x00400FC,0x00FF0000
+#define SRM_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_13           IPU_MEMORY_OFFSET+0x00400FC,0x0000FF00
+#define SRM_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_12           IPU_MEMORY_OFFSET+0x00400FC,0x000000FF
+
+#define SRM_DP_CSCA_ASYNC1_0__ADDR                              IPU_MEMORY_OFFSET+0x0040100
+#define SRM_DP_CSCA_ASYNC1_0__EMPTY                             IPU_MEMORY_OFFSET+0x0040100,0x00000000
+#define SRM_DP_CSCA_ASYNC1_0__FULL                              IPU_MEMORY_OFFSET+0x0040100,0xffffffff
+#define SRM_DP_CSCA_ASYNC1_0__DP_CSC_A_ASYNC1_1                 IPU_MEMORY_OFFSET+0x0040100,0x03FF0000
+#define SRM_DP_CSCA_ASYNC1_0__DP_CSC_A_ASYNC1_0                 IPU_MEMORY_OFFSET+0x0040100,0x000003FF
+
+#define SRM_DP_CSCA_ASYNC1_1__ADDR                              IPU_MEMORY_OFFSET+0x0040104
+#define SRM_DP_CSCA_ASYNC1_1__EMPTY                             IPU_MEMORY_OFFSET+0x0040104,0x00000000
+#define SRM_DP_CSCA_ASYNC1_1__FULL                              IPU_MEMORY_OFFSET+0x0040104,0xffffffff
+#define SRM_DP_CSCA_ASYNC1_1__DP_CSC_A_ASYNC1_3                 IPU_MEMORY_OFFSET+0x0040104,0x03FF0000
+#define SRM_DP_CSCA_ASYNC1_1__DP_CSC_A_ASYNC1_2                 IPU_MEMORY_OFFSET+0x0040104,0x000003FF
+
+#define SRM_DP_CSCA_ASYNC1_2__ADDR                              IPU_MEMORY_OFFSET+0x0040108
+#define SRM_DP_CSCA_ASYNC1_2__EMPTY                             IPU_MEMORY_OFFSET+0x0040108,0x00000000
+#define SRM_DP_CSCA_ASYNC1_2__FULL                              IPU_MEMORY_OFFSET+0x0040108,0xffffffff
+#define SRM_DP_CSCA_ASYNC1_2__DP_CSC_A_ASYNC1_5                 IPU_MEMORY_OFFSET+0x0040108,0x03FF0000
+#define SRM_DP_CSCA_ASYNC1_2__DP_CSC_A_ASYNC1_4                 IPU_MEMORY_OFFSET+0x0040108,0x000003FF
+
+#define SRM_DP_CSCA_ASYNC1_3__ADDR                              IPU_MEMORY_OFFSET+0x004010C
+#define SRM_DP_CSCA_ASYNC1_3__EMPTY                             IPU_MEMORY_OFFSET+0x004010C,0x00000000
+#define SRM_DP_CSCA_ASYNC1_3__FULL                              IPU_MEMORY_OFFSET+0x004010C,0xffffffff
+#define SRM_DP_CSCA_ASYNC1_3__DP_CSC_A_ASYNC1_7                 IPU_MEMORY_OFFSET+0x004010C,0x03FF0000
+#define SRM_DP_CSCA_ASYNC1_3__DP_CSC_A_ASYNC1_6                 IPU_MEMORY_OFFSET+0x004010C,0x000003FF
+
+#define SRM_DP_CSC_ASYNC1_0__ADDR                               IPU_MEMORY_OFFSET+0x0040110
+#define SRM_DP_CSC_ASYNC1_0__EMPTY                              IPU_MEMORY_OFFSET+0x0040110,0x00000000
+#define SRM_DP_CSC_ASYNC1_0__FULL                               IPU_MEMORY_OFFSET+0x0040110,0xffffffff
+#define SRM_DP_CSC_ASYNC1_0__DP_CSC_S0_ASYNC1                   IPU_MEMORY_OFFSET+0x0040110,0xC0000000
+#define SRM_DP_CSC_ASYNC1_0__DP_CSC_B0_ASYNC1                   IPU_MEMORY_OFFSET+0x0040110,0x3FFF0000
+#define SRM_DP_CSC_ASYNC1_0__DP_CSC_A8_ASYNC1                   IPU_MEMORY_OFFSET+0x0040110,0x000003FF
+
+#define SRM_DP_CSC_ASYNC1_1__ADDR                               IPU_MEMORY_OFFSET+0x0040114
+#define SRM_DP_CSC_ASYNC1_1__EMPTY                              IPU_MEMORY_OFFSET+0x0040114,0x00000000
+#define SRM_DP_CSC_ASYNC1_1__FULL                               IPU_MEMORY_OFFSET+0x0040114,0xffffffff
+#define SRM_DP_CSC_ASYNC1_1__DP_CSC_S2_ASYNC1                   IPU_MEMORY_OFFSET+0x0040114,0xC0000000
+#define SRM_DP_CSC_ASYNC1_1__DP_CSC_B2_ASYNC1                   IPU_MEMORY_OFFSET+0x0040114,0x3FFF0000
+#define SRM_DP_CSC_ASYNC1_1__DP_CSC_S1_ASYNC1                   IPU_MEMORY_OFFSET+0x0040114,0x0000C000
+#define SRM_DP_CSC_ASYNC1_1__DP_CSC_B1_ASYNC1                   IPU_MEMORY_OFFSET+0x0040114,0x00003FFF
+
+#define SRM_CSI0_CPD_CTRL__ADDR                                 IPU_MEMORY_OFFSET+0x0040314
+#define SRM_CSI0_CPD_CTRL__EMPTY                                IPU_MEMORY_OFFSET+0x0040314,0x00000000
+#define SRM_CSI0_CPD_CTRL__FULL                                 IPU_MEMORY_OFFSET+0x0040314,0xffffffff
+#define SRM_CSI0_CPD_CTRL__CSI0_CPD                             IPU_MEMORY_OFFSET+0x0040314,0x0000001C
+#define SRM_CSI0_CPD_CTRL__CSI0_RED_ROW_BEGIN                   IPU_MEMORY_OFFSET+0x0040314,0x00000002
+#define SRM_CSI0_CPD_CTRL__CSI0_GREEN_P_BEGIN                   IPU_MEMORY_OFFSET+0x0040314,0x00000001
+
+#define SRM_CSI0_CPD_RC_0__ADDR                                 IPU_MEMORY_OFFSET+0x0040318
+#define SRM_CSI0_CPD_RC_0__EMPTY                                IPU_MEMORY_OFFSET+0x0040318,0x00000000
+#define SRM_CSI0_CPD_RC_0__FULL                                 IPU_MEMORY_OFFSET+0x0040318,0xffffffff
+#define SRM_CSI0_CPD_RC_0__CSI0_CPD_RC_1                        IPU_MEMORY_OFFSET+0x0040318,0x01FF0000
+#define SRM_CSI0_CPD_RC_0__CSI0_CPD_RC_0                        IPU_MEMORY_OFFSET+0x0040318,0x000001FF
+
+#define SRM_CSI0_CPD_RC_1__ADDR                                 IPU_MEMORY_OFFSET+0x004031C
+#define SRM_CSI0_CPD_RC_1__EMPTY                                IPU_MEMORY_OFFSET+0x004031C,0x00000000
+#define SRM_CSI0_CPD_RC_1__FULL                                 IPU_MEMORY_OFFSET+0x004031C,0xffffffff
+#define SRM_CSI0_CPD_RC_1__CSI0_CPD_RC_3                        IPU_MEMORY_OFFSET+0x004031C,0x01FF0000
+#define SRM_CSI0_CPD_RC_1__CSI0_CPD_RC_2                        IPU_MEMORY_OFFSET+0x004031C,0x000001FF
+
+#define SRM_CSI0_CPD_RC_2__ADDR                                 IPU_MEMORY_OFFSET+0x0040320
+#define SRM_CSI0_CPD_RC_2__EMPTY                                IPU_MEMORY_OFFSET+0x0040320,0x00000000
+#define SRM_CSI0_CPD_RC_2__FULL                                 IPU_MEMORY_OFFSET+0x0040320,0xffffffff
+#define SRM_CSI0_CPD_RC_2__CSI0_CPD_RC_5                        IPU_MEMORY_OFFSET+0x0040320,0x01FF0000
+#define SRM_CSI0_CPD_RC_2__CSI0_CPD_RC_4                        IPU_MEMORY_OFFSET+0x0040320,0x000001FF
+
+#define SRM_CSI0_CPD_RC_3__ADDR                                 IPU_MEMORY_OFFSET+0x0040324
+#define SRM_CSI0_CPD_RC_3__EMPTY                                IPU_MEMORY_OFFSET+0x0040324,0x00000000
+#define SRM_CSI0_CPD_RC_3__FULL                                 IPU_MEMORY_OFFSET+0x0040324,0xffffffff
+#define SRM_CSI0_CPD_RC_3__CSI0_CPD_RC_7                        IPU_MEMORY_OFFSET+0x0040324,0x01FF0000
+#define SRM_CSI0_CPD_RC_3__CSI0_CPD_RC_6                        IPU_MEMORY_OFFSET+0x0040324,0x000001FF
+
+#define SRM_CSI0_CPD_RC_4__ADDR                                 IPU_MEMORY_OFFSET+0x0040328
+#define SRM_CSI0_CPD_RC_4__EMPTY                                IPU_MEMORY_OFFSET+0x0040328,0x00000000
+#define SRM_CSI0_CPD_RC_4__FULL                                 IPU_MEMORY_OFFSET+0x0040328,0xffffffff
+#define SRM_CSI0_CPD_RC_4__CSI0_CPD_RC_9                        IPU_MEMORY_OFFSET+0x0040328,0x01FF0000
+#define SRM_CSI0_CPD_RC_4__CSI0_CPD_RC_8                        IPU_MEMORY_OFFSET+0x0040328,0x000001FF
+
+#define SRM_CSI0_CPD_RC_5__ADDR                                 IPU_MEMORY_OFFSET+0x004032C
+#define SRM_CSI0_CPD_RC_5__EMPTY                                IPU_MEMORY_OFFSET+0x004032C,0x00000000
+#define SRM_CSI0_CPD_RC_5__FULL                                 IPU_MEMORY_OFFSET+0x004032C,0xffffffff
+#define SRM_CSI0_CPD_RC_5__CSI0_CPD_RC_11                       IPU_MEMORY_OFFSET+0x004032C,0x01FF0000
+#define SRM_CSI0_CPD_RC_5__CSI0_CPD_RC_10                       IPU_MEMORY_OFFSET+0x004032C,0x000001FF
+
+#define SRM_CSI0_CPD_RC_6__ADDR                                 IPU_MEMORY_OFFSET+0x0040330
+#define SRM_CSI0_CPD_RC_6__EMPTY                                IPU_MEMORY_OFFSET+0x0040330,0x00000000
+#define SRM_CSI0_CPD_RC_6__FULL                                 IPU_MEMORY_OFFSET+0x0040330,0xffffffff
+#define SRM_CSI0_CPD_RC_6__CSI0_CPD_RC_13                       IPU_MEMORY_OFFSET+0x0040330,0x01FF0000
+#define SRM_CSI0_CPD_RC_6__CSI0_CPD_RC_12                       IPU_MEMORY_OFFSET+0x0040330,0x000001FF
+
+#define SRM_CSI0_CPD_RC_7__ADDR                                 IPU_MEMORY_OFFSET+0x0040334
+#define SRM_CSI0_CPD_RC_7__EMPTY                                IPU_MEMORY_OFFSET+0x0040334,0x00000000
+#define SRM_CSI0_CPD_RC_7__FULL                                 IPU_MEMORY_OFFSET+0x0040334,0xffffffff
+#define SRM_CSI0_CPD_RC_7__CSI0_CPD_RC_15                       IPU_MEMORY_OFFSET+0x0040334,0x01FF0000
+#define SRM_CSI0_CPD_RC_7__CSI0_CPD_RC_14                       IPU_MEMORY_OFFSET+0x0040334,0x000001FF
+
+#define SRM_CSI0_CPD_RS_0__ADDR                                 IPU_MEMORY_OFFSET+0x0040338
+#define SRM_CSI0_CPD_RS_0__EMPTY                                IPU_MEMORY_OFFSET+0x0040338,0x00000000
+#define SRM_CSI0_CPD_RS_0__FULL                                 IPU_MEMORY_OFFSET+0x0040338,0xffffffff
+#define SRM_CSI0_CPD_RS_0__CSI0_CPD_RS3                         IPU_MEMORY_OFFSET+0x0040338,0xFF000000
+#define SRM_CSI0_CPD_RS_0__CSI0_CPD_RS2                         IPU_MEMORY_OFFSET+0x0040338,0x00FF0000
+#define SRM_CSI0_CPD_RS_0__CSI0_CPD_RS1                         IPU_MEMORY_OFFSET+0x0040338,0x0000FF00
+#define SRM_CSI0_CPD_RS_0__CSI0_CPD_RS0                         IPU_MEMORY_OFFSET+0x0040338,0x000000FF
+
+#define SRM_CSI0_CPD_RS_1__ADDR                                 IPU_MEMORY_OFFSET+0x004033C
+#define SRM_CSI0_CPD_RS_1__EMPTY                                IPU_MEMORY_OFFSET+0x004033C,0x00000000
+#define SRM_CSI0_CPD_RS_1__FULL                                 IPU_MEMORY_OFFSET+0x004033C,0xffffffff
+#define SRM_CSI0_CPD_RS_1__CSI0_CPD_RS7                         IPU_MEMORY_OFFSET+0x004033C,0xFF000000
+#define SRM_CSI0_CPD_RS_1__CSI0_CPD_RS6                         IPU_MEMORY_OFFSET+0x004033C,0x00FF0000
+#define SRM_CSI0_CPD_RS_1__CSI0_CPD_RS5                         IPU_MEMORY_OFFSET+0x004033C,0x0000FF00
+#define SRM_CSI0_CPD_RS_1__CSI0_CPD_RS4                         IPU_MEMORY_OFFSET+0x004033C,0x000000FF
+
+#define SRM_CSI0_CPD_RS_2__ADDR                                 IPU_MEMORY_OFFSET+0x0040340
+#define SRM_CSI0_CPD_RS_2__EMPTY                                IPU_MEMORY_OFFSET+0x0040340,0x00000000
+#define SRM_CSI0_CPD_RS_2__FULL                                 IPU_MEMORY_OFFSET+0x0040340,0xffffffff
+#define SRM_CSI0_CPD_RS_2__CSI0_CPD_RS11                        IPU_MEMORY_OFFSET+0x0040340,0xFF000000
+#define SRM_CSI0_CPD_RS_2__CSI0_CPD_RS10                        IPU_MEMORY_OFFSET+0x0040340,0x00FF0000
+#define SRM_CSI0_CPD_RS_2__CSI0_CPD_RS9                         IPU_MEMORY_OFFSET+0x0040340,0x0000FF00
+#define SRM_CSI0_CPD_RS_2__CSI0_CPD_RS8                         IPU_MEMORY_OFFSET+0x0040340,0x000000FF
+
+#define SRM_CSI0_CPD_RS_3__ADDR                                 IPU_MEMORY_OFFSET+0x0040344
+#define SRM_CSI0_CPD_RS_3__EMPTY                                IPU_MEMORY_OFFSET+0x0040344,0x00000000
+#define SRM_CSI0_CPD_RS_3__FULL                                 IPU_MEMORY_OFFSET+0x0040344,0xffffffff
+#define SRM_CSI0_CPD_RS_3__CSI0_CPD_RS15                        IPU_MEMORY_OFFSET+0x0040344,0xFF000000
+#define SRM_CSI0_CPD_RS_3__CSI0_CPD_RS14                        IPU_MEMORY_OFFSET+0x0040344,0x00FF0000
+#define SRM_CSI0_CPD_RS_3__CSI0_CPD_RS13                        IPU_MEMORY_OFFSET+0x0040344,0x0000FF00
+#define SRM_CSI0_CPD_RS_3__CSI0_CPD_RS12                        IPU_MEMORY_OFFSET+0x0040344,0x000000FF
+
+#define SRM_CSI0_CPD_GRC_0__ADDR                                IPU_MEMORY_OFFSET+0x0040348
+#define SRM_CSI0_CPD_GRC_0__EMPTY                               IPU_MEMORY_OFFSET+0x0040348,0x00000000
+#define SRM_CSI0_CPD_GRC_0__FULL                                IPU_MEMORY_OFFSET+0x0040348,0xffffffff
+#define SRM_CSI0_CPD_GRC_0__CSI0_CPD_GRC1                       IPU_MEMORY_OFFSET+0x0040348,0x01FF0000
+#define SRM_CSI0_CPD_GRC_0__CSI0_CPD_GRC0                       IPU_MEMORY_OFFSET+0x0040348,0x000001FF
+
+#define SRM_CSI0_CPD_GRC_1__ADDR                                IPU_MEMORY_OFFSET+0x004034C
+#define SRM_CSI0_CPD_GRC_1__EMPTY                               IPU_MEMORY_OFFSET+0x004034C,0x00000000
+#define SRM_CSI0_CPD_GRC_1__FULL                                IPU_MEMORY_OFFSET+0x004034C,0xffffffff
+#define SRM_CSI0_CPD_GRC_1__CSI0_CPD_GRC3                       IPU_MEMORY_OFFSET+0x004034C,0x01FF0000
+#define SRM_CSI0_CPD_GRC_1__CSI0_CPD_GRC2                       IPU_MEMORY_OFFSET+0x004034C,0x000001FF
+
+#define SRM_CSI0_CPD_GRC_2__ADDR                                IPU_MEMORY_OFFSET+0x0040350
+#define SRM_CSI0_CPD_GRC_2__EMPTY                               IPU_MEMORY_OFFSET+0x0040350,0x00000000
+#define SRM_CSI0_CPD_GRC_2__FULL                                IPU_MEMORY_OFFSET+0x0040350,0xffffffff
+#define SRM_CSI0_CPD_GRC_2__CSI0_CPD_GRC5                       IPU_MEMORY_OFFSET+0x0040350,0x01FF0000
+#define SRM_CSI0_CPD_GRC_2__CSI0_CPD_GRC4                       IPU_MEMORY_OFFSET+0x0040350,0x000001FF
+
+#define SRM_CSI0_CPD_GRC_3__ADDR                                IPU_MEMORY_OFFSET+0x0040354
+#define SRM_CSI0_CPD_GRC_3__EMPTY                               IPU_MEMORY_OFFSET+0x0040354,0x00000000
+#define SRM_CSI0_CPD_GRC_3__FULL                                IPU_MEMORY_OFFSET+0x0040354,0xffffffff
+#define SRM_CSI0_CPD_GRC_3__CSI0_CPD_GRC7                       IPU_MEMORY_OFFSET+0x0040354,0x01FF0000
+#define SRM_CSI0_CPD_GRC_3__CSI0_CPD_GRC6                       IPU_MEMORY_OFFSET+0x0040354,0x000001FF
+
+#define SRM_CSI0_CPD_GRC_4__ADDR                                IPU_MEMORY_OFFSET+0x0040358
+#define SRM_CSI0_CPD_GRC_4__EMPTY                               IPU_MEMORY_OFFSET+0x0040358,0x00000000
+#define SRM_CSI0_CPD_GRC_4__FULL                                IPU_MEMORY_OFFSET+0x0040358,0xffffffff
+#define SRM_CSI0_CPD_GRC_4__CSI0_CPD_GRC9                       IPU_MEMORY_OFFSET+0x0040358,0x01FF0000
+#define SRM_CSI0_CPD_GRC_4__CSI0_CPD_GRC8                       IPU_MEMORY_OFFSET+0x0040358,0x000001FF
+
+#define SRM_CSI0_CPD_GRC_5__ADDR                                IPU_MEMORY_OFFSET+0x004035C
+#define SRM_CSI0_CPD_GRC_5__EMPTY                               IPU_MEMORY_OFFSET+0x004035C,0x00000000
+#define SRM_CSI0_CPD_GRC_5__FULL                                IPU_MEMORY_OFFSET+0x004035C,0xffffffff
+#define SRM_CSI0_CPD_GRC_5__CSI0_CPD_GRC11                      IPU_MEMORY_OFFSET+0x004035C,0x01FF0000
+#define SRM_CSI0_CPD_GRC_5__CSI0_CPD_GRC10                      IPU_MEMORY_OFFSET+0x004035C,0x000001FF
+
+#define SRM_CSI0_CPD_GRC_6__ADDR                                IPU_MEMORY_OFFSET+0x0040360
+#define SRM_CSI0_CPD_GRC_6__EMPTY                               IPU_MEMORY_OFFSET+0x0040360,0x00000000
+#define SRM_CSI0_CPD_GRC_6__FULL                                IPU_MEMORY_OFFSET+0x0040360,0xffffffff
+#define SRM_CSI0_CPD_GRC_6__CSI0_CPD_GRC13                      IPU_MEMORY_OFFSET+0x0040360,0x01FF0000
+#define SRM_CSI0_CPD_GRC_6__CSI0_CPD_GRC12                      IPU_MEMORY_OFFSET+0x0040360,0x000001FF
+
+#define SRM_CSI0_CPD_GRC_7__ADDR                                IPU_MEMORY_OFFSET+0x0040364
+#define SRM_CSI0_CPD_GRC_7__EMPTY                               IPU_MEMORY_OFFSET+0x0040364,0x00000000
+#define SRM_CSI0_CPD_GRC_7__FULL                                IPU_MEMORY_OFFSET+0x0040364,0xffffffff
+#define SRM_CSI0_CPD_GRC_7__CSI0_CPD_GRC15                      IPU_MEMORY_OFFSET+0x0040364,0x01FF0000
+#define SRM_CSI0_CPD_GRC_7__CSI0_CPD_GRC14                      IPU_MEMORY_OFFSET+0x0040364,0x000001FF
+
+#define SRM_CSI0_CPD_GRS_0__ADDR                                IPU_MEMORY_OFFSET+0x0040368
+#define SRM_CSI0_CPD_GRS_0__EMPTY                               IPU_MEMORY_OFFSET+0x0040368,0x00000000
+#define SRM_CSI0_CPD_GRS_0__FULL                                IPU_MEMORY_OFFSET+0x0040368,0xffffffff
+#define SRM_CSI0_CPD_GRS_0__CSI0_CPD_GRS3                       IPU_MEMORY_OFFSET+0x0040368,0xFF000000
+#define SRM_CSI0_CPD_GRS_0__CSI0_CPD_GRS2                       IPU_MEMORY_OFFSET+0x0040368,0x00FF0000
+#define SRM_CSI0_CPD_GRS_0__CSI0_CPD_GRS1                       IPU_MEMORY_OFFSET+0x0040368,0x0000FF00
+#define SRM_CSI0_CPD_GRS_0__CSI0_CPD_GRS0                       IPU_MEMORY_OFFSET+0x0040368,0x000000FF
+
+#define SRM_CSI0_CPD_GRS_1__ADDR                                IPU_MEMORY_OFFSET+0x004036C
+#define SRM_CSI0_CPD_GRS_1__EMPTY                               IPU_MEMORY_OFFSET+0x004036C,0x00000000
+#define SRM_CSI0_CPD_GRS_1__FULL                                IPU_MEMORY_OFFSET+0x004036C,0xffffffff
+#define SRM_CSI0_CPD_GRS_1__CSI0_CPD_GRS7                       IPU_MEMORY_OFFSET+0x004036C,0xFF000000
+#define SRM_CSI0_CPD_GRS_1__CSI0_CPD_GRS6                       IPU_MEMORY_OFFSET+0x004036C,0x00FF0000
+#define SRM_CSI0_CPD_GRS_1__CSI0_CPD_GRS5                       IPU_MEMORY_OFFSET+0x004036C,0x0000FF00
+#define SRM_CSI0_CPD_GRS_1__CSI0_CPD_GRS4                       IPU_MEMORY_OFFSET+0x004036C,0x000000FF
+
+#define SRM_CSI0_CPD_GRS_2__ADDR                                IPU_MEMORY_OFFSET+0x0040370
+#define SRM_CSI0_CPD_GRS_2__EMPTY                               IPU_MEMORY_OFFSET+0x0040370,0x00000000
+#define SRM_CSI0_CPD_GRS_2__FULL                                IPU_MEMORY_OFFSET+0x0040370,0xffffffff
+#define SRM_CSI0_CPD_GRS_2__CSI0_CPD_GRS11                      IPU_MEMORY_OFFSET+0x0040370,0xFF000000
+#define SRM_CSI0_CPD_GRS_2__CSI0_CPD_GRS10                      IPU_MEMORY_OFFSET+0x0040370,0x00FF0000
+#define SRM_CSI0_CPD_GRS_2__CSI0_CPD_GRS9                       IPU_MEMORY_OFFSET+0x0040370,0x0000FF00
+#define SRM_CSI0_CPD_GRS_2__CSI0_CPD_GRS8                       IPU_MEMORY_OFFSET+0x0040370,0x000000FF
+
+#define SRM_CSI0_CPD_GRS_3__ADDR                                IPU_MEMORY_OFFSET+0x0040374
+#define SRM_CSI0_CPD_GRS_3__EMPTY                               IPU_MEMORY_OFFSET+0x0040374,0x00000000
+#define SRM_CSI0_CPD_GRS_3__FULL                                IPU_MEMORY_OFFSET+0x0040374,0xffffffff
+#define SRM_CSI0_CPD_GRS_3__CSI0_CPD_GRS15                      IPU_MEMORY_OFFSET+0x0040374,0xFF000000
+#define SRM_CSI0_CPD_GRS_3__CSI0_CPD_GRS14                      IPU_MEMORY_OFFSET+0x0040374,0x00FF0000
+#define SRM_CSI0_CPD_GRS_3__CSI0_CPD_GRS13                      IPU_MEMORY_OFFSET+0x0040374,0x0000FF00
+#define SRM_CSI0_CPD_GRS_3__CSI0_CPD_GRS12                      IPU_MEMORY_OFFSET+0x0040374,0x000000FF
+
+#define SRM_CSI0_CPD_GBC_0__ADDR                                IPU_MEMORY_OFFSET+0x0040378
+#define SRM_CSI0_CPD_GBC_0__EMPTY                               IPU_MEMORY_OFFSET+0x0040378,0x00000000
+#define SRM_CSI0_CPD_GBC_0__FULL                                IPU_MEMORY_OFFSET+0x0040378,0xffffffff
+#define SRM_CSI0_CPD_GBC_0__CSI0_CPD_GBC1                       IPU_MEMORY_OFFSET+0x0040378,0x01FF0000
+#define SRM_CSI0_CPD_GBC_0__CSI0_CPD_GBC0                       IPU_MEMORY_OFFSET+0x0040378,0x000001FF
+
+#define SRM_CSI0_CPD_GBC_1__ADDR                                IPU_MEMORY_OFFSET+0x004037C
+#define SRM_CSI0_CPD_GBC_1__EMPTY                               IPU_MEMORY_OFFSET+0x004037C,0x00000000
+#define SRM_CSI0_CPD_GBC_1__FULL                                IPU_MEMORY_OFFSET+0x004037C,0xffffffff
+#define SRM_CSI0_CPD_GBC_1__CSI0_CPD_GBC3                       IPU_MEMORY_OFFSET+0x004037C,0x01FF0000
+#define SRM_CSI0_CPD_GBC_1__CSI0_CPD_GBC2                       IPU_MEMORY_OFFSET+0x004037C,0x000001FF
+
+#define SRM_CSI0_CPD_GBC_2__ADDR                                IPU_MEMORY_OFFSET+0x0040380
+#define SRM_CSI0_CPD_GBC_2__EMPTY                               IPU_MEMORY_OFFSET+0x0040380,0x00000000
+#define SRM_CSI0_CPD_GBC_2__FULL                                IPU_MEMORY_OFFSET+0x0040380,0xffffffff
+#define SRM_CSI0_CPD_GBC_2__CSI0_CPD_GBC5                       IPU_MEMORY_OFFSET+0x0040380,0x01FF0000
+#define SRM_CSI0_CPD_GBC_2__CSI0_CPD_GBC4                       IPU_MEMORY_OFFSET+0x0040380,0x000001FF
+
+#define SRM_CSI0_CPD_GBC_3__ADDR                                IPU_MEMORY_OFFSET+0x0040384
+#define SRM_CSI0_CPD_GBC_3__EMPTY                               IPU_MEMORY_OFFSET+0x0040384,0x00000000
+#define SRM_CSI0_CPD_GBC_3__FULL                                IPU_MEMORY_OFFSET+0x0040384,0xffffffff
+#define SRM_CSI0_CPD_GBC_3__CSI0_CPD_GBC7                       IPU_MEMORY_OFFSET+0x0040384,0x01FF0000
+#define SRM_CSI0_CPD_GBC_3__CSI0_CPD_GBC6                       IPU_MEMORY_OFFSET+0x0040384,0x000001FF
+
+#define SRM_CSI0_CPD_GBC_4__ADDR                                IPU_MEMORY_OFFSET+0x0040388
+#define SRM_CSI0_CPD_GBC_4__EMPTY                               IPU_MEMORY_OFFSET+0x0040388,0x00000000
+#define SRM_CSI0_CPD_GBC_4__FULL                                IPU_MEMORY_OFFSET+0x0040388,0xffffffff
+#define SRM_CSI0_CPD_GBC_4__CSI0_CPD_GBC9                       IPU_MEMORY_OFFSET+0x0040388,0x01FF0000
+#define SRM_CSI0_CPD_GBC_4__CSI0_CPD_GBC8                       IPU_MEMORY_OFFSET+0x0040388,0x000001FF
+
+#define SRM_CSI0_CPD_GBC_5__ADDR                                IPU_MEMORY_OFFSET+0x004038C
+#define SRM_CSI0_CPD_GBC_5__EMPTY                               IPU_MEMORY_OFFSET+0x004038C,0x00000000
+#define SRM_CSI0_CPD_GBC_5__FULL                                IPU_MEMORY_OFFSET+0x004038C,0xffffffff
+#define SRM_CSI0_CPD_GBC_5__CSI0_CPD_GBC11                      IPU_MEMORY_OFFSET+0x004038C,0x01FF0000
+#define SRM_CSI0_CPD_GBC_5__CSI0_CPD_GBC10                      IPU_MEMORY_OFFSET+0x004038C,0x000001FF
+
+#define SRM_CSI0_CPD_GBC_6__ADDR                                IPU_MEMORY_OFFSET+0x0040390
+#define SRM_CSI0_CPD_GBC_6__EMPTY                               IPU_MEMORY_OFFSET+0x0040390,0x00000000
+#define SRM_CSI0_CPD_GBC_6__FULL                                IPU_MEMORY_OFFSET+0x0040390,0xffffffff
+#define SRM_CSI0_CPD_GBC_6__CSI0_CPD_GBC13                      IPU_MEMORY_OFFSET+0x0040390,0x01FF0000
+#define SRM_CSI0_CPD_GBC_6__CSI0_CPD_GBC12                      IPU_MEMORY_OFFSET+0x0040390,0x000001FF
+
+#define SRM_CSI0_CPD_GBC_7__ADDR                                IPU_MEMORY_OFFSET+0x0040394
+#define SRM_CSI0_CPD_GBC_7__EMPTY                               IPU_MEMORY_OFFSET+0x0040394,0x00000000
+#define SRM_CSI0_CPD_GBC_7__FULL                                IPU_MEMORY_OFFSET+0x0040394,0xffffffff
+#define SRM_CSI0_CPD_GBC_7__CSI0_CPD_GBC15                      IPU_MEMORY_OFFSET+0x0040394,0x01FF0000
+#define SRM_CSI0_CPD_GBC_7__CSI0_CPD_GBC14                      IPU_MEMORY_OFFSET+0x0040394,0x000001FF
+
+#define SRM_CSI0_CPD_GBS_0__ADDR                                IPU_MEMORY_OFFSET+0x0040398
+#define SRM_CSI0_CPD_GBS_0__EMPTY                               IPU_MEMORY_OFFSET+0x0040398,0x00000000
+#define SRM_CSI0_CPD_GBS_0__FULL                                IPU_MEMORY_OFFSET+0x0040398,0xffffffff
+#define SRM_CSI0_CPD_GBS_0__CSI0_CPD_GBS3                       IPU_MEMORY_OFFSET+0x0040398,0xFF000000
+#define SRM_CSI0_CPD_GBS_0__CSI0_CPD_GBS2                       IPU_MEMORY_OFFSET+0x0040398,0x00FF0000
+#define SRM_CSI0_CPD_GBS_0__CSI0_CPD_GBS1                       IPU_MEMORY_OFFSET+0x0040398,0x0000FF00
+#define SRM_CSI0_CPD_GBS_0__CSI0_CPD_GBS0                       IPU_MEMORY_OFFSET+0x0040398,0x000000FF
+
+#define SRM_CSI0_CPD_GBS_1__ADDR                                IPU_MEMORY_OFFSET+0x004039C
+#define SRM_CSI0_CPD_GBS_1__EMPTY                               IPU_MEMORY_OFFSET+0x004039C,0x00000000
+#define SRM_CSI0_CPD_GBS_1__FULL                                IPU_MEMORY_OFFSET+0x004039C,0xffffffff
+#define SRM_CSI0_CPD_GBS_1__CSI0_CPD_GBS7                       IPU_MEMORY_OFFSET+0x004039C,0xFF000000
+#define SRM_CSI0_CPD_GBS_1__CSI0_CPD_GBS6                       IPU_MEMORY_OFFSET+0x004039C,0x00FF0000
+#define SRM_CSI0_CPD_GBS_1__CSI0_CPD_GBS5                       IPU_MEMORY_OFFSET+0x004039C,0x0000FF00
+#define SRM_CSI0_CPD_GBS_1__CSI0_CPD_GBS4                       IPU_MEMORY_OFFSET+0x004039C,0x000000FF
+
+#define SRM_CSI0_CPD_GBS_2__ADDR                                IPU_MEMORY_OFFSET+0x00403A0
+#define SRM_CSI0_CPD_GBS_2__EMPTY                               IPU_MEMORY_OFFSET+0x00403A0,0x00000000
+#define SRM_CSI0_CPD_GBS_2__FULL                                IPU_MEMORY_OFFSET+0x00403A0,0xffffffff
+#define SRM_CSI0_CPD_GBS_2__CSI0_CPD_GBS11                      IPU_MEMORY_OFFSET+0x00403A0,0xFF000000
+#define SRM_CSI0_CPD_GBS_2__CSI0_CPD_GBS10                      IPU_MEMORY_OFFSET+0x00403A0,0x00FF0000
+#define SRM_CSI0_CPD_GBS_2__CSI0_CPD_GBS9                       IPU_MEMORY_OFFSET+0x00403A0,0x0000FF00
+#define SRM_CSI0_CPD_GBS_2__CSI0_CPD_GBS8                       IPU_MEMORY_OFFSET+0x00403A0,0x000000FF
+
+#define SRM_CSI0_CPD_GBS_3__ADDR                                IPU_MEMORY_OFFSET+0x00403A4
+#define SRM_CSI0_CPD_GBS_3__EMPTY                               IPU_MEMORY_OFFSET+0x00403A4,0x00000000
+#define SRM_CSI0_CPD_GBS_3__FULL                                IPU_MEMORY_OFFSET+0x00403A4,0xffffffff
+#define SRM_CSI0_CPD_GBS_3__CSI0_CPD_GBS15                      IPU_MEMORY_OFFSET+0x00403A4,0xFF000000
+#define SRM_CSI0_CPD_GBS_3__CSI0_CPD_GBS14                      IPU_MEMORY_OFFSET+0x00403A4,0x00FF0000
+#define SRM_CSI0_CPD_GBS_3__CSI0_CPD_GBS13                      IPU_MEMORY_OFFSET+0x00403A4,0x0000FF00
+#define SRM_CSI0_CPD_GBS_3__CSI0_CPD_GBS12                      IPU_MEMORY_OFFSET+0x00403A4,0x000000FF
+
+#define SRM_CSI0_CPD_BC_0__ADDR                                 IPU_MEMORY_OFFSET+0x00403A8
+#define SRM_CSI0_CPD_BC_0__EMPTY                                IPU_MEMORY_OFFSET+0x00403A8,0x00000000
+#define SRM_CSI0_CPD_BC_0__FULL                                 IPU_MEMORY_OFFSET+0x00403A8,0xffffffff
+#define SRM_CSI0_CPD_BC_0__CSI0_CPD_BC1                         IPU_MEMORY_OFFSET+0x00403A8,0x01FF0000
+#define SRM_CSI0_CPD_BC_0__CSI0_CPD_BC0                         IPU_MEMORY_OFFSET+0x00403A8,0x000001FF
+
+#define SRM_CSI0_CPD_BC_1__ADDR                                 IPU_MEMORY_OFFSET+0x00403AC
+#define SRM_CSI0_CPD_BC_1__EMPTY                                IPU_MEMORY_OFFSET+0x00403AC,0x00000000
+#define SRM_CSI0_CPD_BC_1__FULL                                 IPU_MEMORY_OFFSET+0x00403AC,0xffffffff
+#define SRM_CSI0_CPD_BC_1__CSI0_CPD_BC3                         IPU_MEMORY_OFFSET+0x00403AC,0x01FF0000
+#define SRM_CSI0_CPD_BC_1__CSI0_CPD_BC2                         IPU_MEMORY_OFFSET+0x00403AC,0x000001FF
+
+#define SRM_CSI0_CPD_BC_2__ADDR                                 IPU_MEMORY_OFFSET+0x00403B0
+#define SRM_CSI0_CPD_BC_2__EMPTY                                IPU_MEMORY_OFFSET+0x00403B0,0x00000000
+#define SRM_CSI0_CPD_BC_2__FULL                                 IPU_MEMORY_OFFSET+0x00403B0,0xffffffff
+#define SRM_CSI0_CPD_BC_2__CSI0_CPD_BC5                         IPU_MEMORY_OFFSET+0x00403B0,0x01FF0000
+#define SRM_CSI0_CPD_BC_2__CSI0_CPD_BC4                         IPU_MEMORY_OFFSET+0x00403B0,0x000001FF
+
+#define SRM_CSI0_CPD_BC_3__ADDR                                 IPU_MEMORY_OFFSET+0x00403B4
+#define SRM_CSI0_CPD_BC_3__EMPTY                                IPU_MEMORY_OFFSET+0x00403B4,0x00000000
+#define SRM_CSI0_CPD_BC_3__FULL                                 IPU_MEMORY_OFFSET+0x00403B4,0xffffffff
+#define SRM_CSI0_CPD_BC_3__CSI0_CPD_BC7                         IPU_MEMORY_OFFSET+0x00403B4,0x01FF0000
+#define SRM_CSI0_CPD_BC_3__CSI0_CPD_BC6                         IPU_MEMORY_OFFSET+0x00403B4,0x000001FF
+
+#define SRM_CSI0_CPD_BC_4__ADDR                                 IPU_MEMORY_OFFSET+0x00403B8
+#define SRM_CSI0_CPD_BC_4__EMPTY                                IPU_MEMORY_OFFSET+0x00403B8,0x00000000
+#define SRM_CSI0_CPD_BC_4__FULL                                 IPU_MEMORY_OFFSET+0x00403B8,0xffffffff
+#define SRM_CSI0_CPD_BC_4__CSI0_CPD_BC9                         IPU_MEMORY_OFFSET+0x00403B8,0x01FF0000
+#define SRM_CSI0_CPD_BC_4__CSI0_CPD_BC8                         IPU_MEMORY_OFFSET+0x00403B8,0x000001FF
+
+#define SRM_CSI0_CPD_BC_5__ADDR                                 IPU_MEMORY_OFFSET+0x00403BC
+#define SRM_CSI0_CPD_BC_5__EMPTY                                IPU_MEMORY_OFFSET+0x00403BC,0x00000000
+#define SRM_CSI0_CPD_BC_5__FULL                                 IPU_MEMORY_OFFSET+0x00403BC,0xffffffff
+#define SRM_CSI0_CPD_BC_5__CSI0_CPD_BC11                        IPU_MEMORY_OFFSET+0x00403BC,0x01FF0000
+#define SRM_CSI0_CPD_BC_5__CSI0_CPD_BC10                        IPU_MEMORY_OFFSET+0x00403BC,0x000001FF
+
+#define SRM_CSI0_CPD_BC_6__ADDR                                 IPU_MEMORY_OFFSET+0x00403C0
+#define SRM_CSI0_CPD_BC_6__EMPTY                                IPU_MEMORY_OFFSET+0x00403C0,0x00000000
+#define SRM_CSI0_CPD_BC_6__FULL                                 IPU_MEMORY_OFFSET+0x00403C0,0xffffffff
+#define SRM_CSI0_CPD_BC_6__CSI0_CPD_BC13                        IPU_MEMORY_OFFSET+0x00403C0,0x01FF0000
+#define SRM_CSI0_CPD_BC_6__CSI0_CPD_BC12                        IPU_MEMORY_OFFSET+0x00403C0,0x000001FF
+
+#define SRM_CSI0_CPD_BC_7__ADDR                                 IPU_MEMORY_OFFSET+0x00403C4
+#define SRM_CSI0_CPD_BC_7__EMPTY                                IPU_MEMORY_OFFSET+0x00403C4,0x00000000
+#define SRM_CSI0_CPD_BC_7__FULL                                 IPU_MEMORY_OFFSET+0x00403C4,0xffffffff
+#define SRM_CSI0_CPD_BC_7__CSI0_CPD_BC15                        IPU_MEMORY_OFFSET+0x00403C4,0x01FF0000
+#define SRM_CSI0_CPD_BC_7__CSI0_CPD_BC14                        IPU_MEMORY_OFFSET+0x00403C4,0x000001FF
+
+#define SRM_CSI0_CPD_BS_0__ADDR                                 IPU_MEMORY_OFFSET+0x00403C8
+#define SRM_CSI0_CPD_BS_0__EMPTY                                IPU_MEMORY_OFFSET+0x00403C8,0x00000000
+#define SRM_CSI0_CPD_BS_0__FULL                                 IPU_MEMORY_OFFSET+0x00403C8,0xffffffff
+#define SRM_CSI0_CPD_BS_0__CSI0_CPD_BS3                         IPU_MEMORY_OFFSET+0x00403C8,0xFF000000
+#define SRM_CSI0_CPD_BS_0__CSI0_CPD_BS2                         IPU_MEMORY_OFFSET+0x00403C8,0x00FF0000
+#define SRM_CSI0_CPD_BS_0__CSI0_CPD_BS1                         IPU_MEMORY_OFFSET+0x00403C8,0x0000FF00
+#define SRM_CSI0_CPD_BS_0__CSI0_CPD_BS0                         IPU_MEMORY_OFFSET+0x00403C8,0x000000FF
+
+#define SRM_CSI0_CPD_BS_1__ADDR                                 IPU_MEMORY_OFFSET+0x00403CC
+#define SRM_CSI0_CPD_BS_1__EMPTY                                IPU_MEMORY_OFFSET+0x00403CC,0x00000000
+#define SRM_CSI0_CPD_BS_1__FULL                                 IPU_MEMORY_OFFSET+0x00403CC,0xffffffff
+#define SRM_CSI0_CPD_BS_1__CSI0_CPD_BS7                         IPU_MEMORY_OFFSET+0x00403CC,0xFF000000
+#define SRM_CSI0_CPD_BS_1__CSI0_CPD_BS6                         IPU_MEMORY_OFFSET+0x00403CC,0x00FF0000
+#define SRM_CSI0_CPD_BS_1__CSI0_CPD_BS5                         IPU_MEMORY_OFFSET+0x00403CC,0x0000FF00
+#define SRM_CSI0_CPD_BS_1__CSI0_CPD_BS4                         IPU_MEMORY_OFFSET+0x00403CC,0x000000FF
+
+#define SRM_CSI0_CPD_BS_2__ADDR                                 IPU_MEMORY_OFFSET+0x00403D0
+#define SRM_CSI0_CPD_BS_2__EMPTY                                IPU_MEMORY_OFFSET+0x00403D0,0x00000000
+#define SRM_CSI0_CPD_BS_2__FULL                                 IPU_MEMORY_OFFSET+0x00403D0,0xffffffff
+#define SRM_CSI0_CPD_BS_2__CSI0_CPD_BS11                        IPU_MEMORY_OFFSET+0x00403D0,0xFF000000
+#define SRM_CSI0_CPD_BS_2__CSI0_CPD_BS10                        IPU_MEMORY_OFFSET+0x00403D0,0x00FF0000
+#define SRM_CSI0_CPD_BS_2__CSI0_CPD_BS9                         IPU_MEMORY_OFFSET+0x00403D0,0x0000FF00
+#define SRM_CSI0_CPD_BS_2__CSI0_CPD_BS8                         IPU_MEMORY_OFFSET+0x00403D0,0x000000FF
+
+#define SRM_CSI0_CPD_BS_3__ADDR                                 IPU_MEMORY_OFFSET+0x00403D4
+#define SRM_CSI0_CPD_BS_3__EMPTY                                IPU_MEMORY_OFFSET+0x00403D4,0x00000000
+#define SRM_CSI0_CPD_BS_3__FULL                                 IPU_MEMORY_OFFSET+0x00403D4,0xffffffff
+#define SRM_CSI0_CPD_BS_3__CSI0_CPD_BS15                        IPU_MEMORY_OFFSET+0x00403D4,0xFF000000
+#define SRM_CSI0_CPD_BS_3__CSI0_CPD_BS14                        IPU_MEMORY_OFFSET+0x00403D4,0x00FF0000
+#define SRM_CSI0_CPD_BS_3__CSI0_CPD_BS13                        IPU_MEMORY_OFFSET+0x00403D4,0x0000FF00
+#define SRM_CSI0_CPD_BS_3__CSI0_CPD_BS12                        IPU_MEMORY_OFFSET+0x00403D4,0x000000FF
+
+#define SRM_CSI0_CPD_OFFSET1__ADDR                              IPU_MEMORY_OFFSET+0x00403D8
+#define SRM_CSI0_CPD_OFFSET1__EMPTY                             IPU_MEMORY_OFFSET+0x00403D8,0x00000000
+#define SRM_CSI0_CPD_OFFSET1__FULL                              IPU_MEMORY_OFFSET+0x00403D8,0xffffffff
+#define SRM_CSI0_CPD_OFFSET1__CSI0_CPD_B_OFFSET                 IPU_MEMORY_OFFSET+0x00403D8,0x3FF00000
+#define SRM_CSI0_CPD_OFFSET1__CSI0_CPD_GB_OFFSET                IPU_MEMORY_OFFSET+0x00403D8,0x000FFC00
+#define SRM_CSI0_CPD_OFFSET1__CSI0_CPD_GR_OFFSET                IPU_MEMORY_OFFSET+0x00403D8,0x000003FF
+
+#define SRM_CSI0_CPD_OFFSET2__ADDR                              IPU_MEMORY_OFFSET+0x00403DC
+#define SRM_CSI0_CPD_OFFSET2__EMPTY                             IPU_MEMORY_OFFSET+0x00403DC,0x00000000
+#define SRM_CSI0_CPD_OFFSET2__FULL                              IPU_MEMORY_OFFSET+0x00403DC,0xffffffff
+#define SRM_CSI0_CPD_OFFSET2__CSI0_CPD_R_OFFSET                 IPU_MEMORY_OFFSET+0x00403DC,0x000003FF
+
+#define SRM_CSI1_CPD_CTRL__ADDR                                 IPU_MEMORY_OFFSET+0x00403E0
+#define SRM_CSI1_CPD_CTRL__EMPTY                                IPU_MEMORY_OFFSET+0x00403E0,0x00000000
+#define SRM_CSI1_CPD_CTRL__FULL                                 IPU_MEMORY_OFFSET+0x00403E0,0xffffffff
+#define SRM_CSI1_CPD_CTRL__CSI1_CPD                             IPU_MEMORY_OFFSET+0x00403E0,0x0000001C
+#define SRM_CSI1_CPD_CTRL__CSI1_RED_ROW_BEGIN                   IPU_MEMORY_OFFSET+0x00403E0,0x00000002
+#define SRM_CSI1_CPD_CTRL__CSI1_GREEN_P_BEGIN                   IPU_MEMORY_OFFSET+0x00403E0,0x00000001
+
+#define SRM_CSI1_CPD_RC_0__ADDR                                 IPU_MEMORY_OFFSET+0x00403E4
+#define SRM_CSI1_CPD_RC_0__EMPTY                                IPU_MEMORY_OFFSET+0x00403E4,0x00000000
+#define SRM_CSI1_CPD_RC_0__FULL                                 IPU_MEMORY_OFFSET+0x00403E4,0xffffffff
+#define SRM_CSI1_CPD_RC_0__CSI1_CPD_RC_1                        IPU_MEMORY_OFFSET+0x00403E4,0x01FF0000
+#define SRM_CSI1_CPD_RC_0__CSI1_CPD_RC_0                        IPU_MEMORY_OFFSET+0x00403E4,0x000001FF
+
+#define SRM_CSI1_CPD_RC_1__ADDR                                 IPU_MEMORY_OFFSET+0x00403E8
+#define SRM_CSI1_CPD_RC_1__EMPTY                                IPU_MEMORY_OFFSET+0x00403E8,0x00000000
+#define SRM_CSI1_CPD_RC_1__FULL                                 IPU_MEMORY_OFFSET+0x00403E8,0xffffffff
+#define SRM_CSI1_CPD_RC_1__CSI1_CPD_RC_3                        IPU_MEMORY_OFFSET+0x00403E8,0x01FF0000
+#define SRM_CSI1_CPD_RC_1__CSI1_CPD_RC_2                        IPU_MEMORY_OFFSET+0x00403E8,0x000001FF
+
+#define SRM_CSI1_CPD_RC_2__ADDR                                 IPU_MEMORY_OFFSET+0x00403EC
+#define SRM_CSI1_CPD_RC_2__EMPTY                                IPU_MEMORY_OFFSET+0x00403EC,0x00000000
+#define SRM_CSI1_CPD_RC_2__FULL                                 IPU_MEMORY_OFFSET+0x00403EC,0xffffffff
+#define SRM_CSI1_CPD_RC_2__CSI1_CPD_RC_5                        IPU_MEMORY_OFFSET+0x00403EC,0x01FF0000
+#define SRM_CSI1_CPD_RC_2__CSI1_CPD_RC_4                        IPU_MEMORY_OFFSET+0x00403EC,0x000001FF
+
+#define SRM_CSI1_CPD_RC_3__ADDR                                 IPU_MEMORY_OFFSET+0x00403F0
+#define SRM_CSI1_CPD_RC_3__EMPTY                                IPU_MEMORY_OFFSET+0x00403F0,0x00000000
+#define SRM_CSI1_CPD_RC_3__FULL                                 IPU_MEMORY_OFFSET+0x00403F0,0xffffffff
+#define SRM_CSI1_CPD_RC_3__CSI1_CPD_RC_7                        IPU_MEMORY_OFFSET+0x00403F0,0x01FF0000
+#define SRM_CSI1_CPD_RC_3__CSI1_CPD_RC_6                        IPU_MEMORY_OFFSET+0x00403F0,0x000001FF
+
+#define SRM_CSI1_CPD_RC_4__ADDR                                 IPU_MEMORY_OFFSET+0x00403F4
+#define SRM_CSI1_CPD_RC_4__EMPTY                                IPU_MEMORY_OFFSET+0x00403F4,0x00000000
+#define SRM_CSI1_CPD_RC_4__FULL                                 IPU_MEMORY_OFFSET+0x00403F4,0xffffffff
+#define SRM_CSI1_CPD_RC_4__CSI1_CPD_RC_9                        IPU_MEMORY_OFFSET+0x00403F4,0x01FF0000
+#define SRM_CSI1_CPD_RC_4__CSI1_CPD_RC_8                        IPU_MEMORY_OFFSET+0x00403F4,0x000001FF
+
+#define SRM_CSI1_CPD_RC_5__ADDR                                 IPU_MEMORY_OFFSET+0x00403F8
+#define SRM_CSI1_CPD_RC_5__EMPTY                                IPU_MEMORY_OFFSET+0x00403F8,0x00000000
+#define SRM_CSI1_CPD_RC_5__FULL                                 IPU_MEMORY_OFFSET+0x00403F8,0xffffffff
+#define SRM_CSI1_CPD_RC_5__CSI1_CPD_RC_11                       IPU_MEMORY_OFFSET+0x00403F8,0x01FF0000
+#define SRM_CSI1_CPD_RC_5__CSI1_CPD_RC_10                       IPU_MEMORY_OFFSET+0x00403F8,0x000001FF
+
+#define SRM_CSI1_CPD_RC_6__ADDR                                 IPU_MEMORY_OFFSET+0x00403FC
+#define SRM_CSI1_CPD_RC_6__EMPTY                                IPU_MEMORY_OFFSET+0x00403FC,0x00000000
+#define SRM_CSI1_CPD_RC_6__FULL                                 IPU_MEMORY_OFFSET+0x00403FC,0xffffffff
+#define SRM_CSI1_CPD_RC_6__CSI1_CPD_RC_13                       IPU_MEMORY_OFFSET+0x00403FC,0x01FF0000
+#define SRM_CSI1_CPD_RC_6__CSI1_CPD_RC_12                       IPU_MEMORY_OFFSET+0x00403FC,0x000001FF
+
+#define SRM_CSI1_CPD_RC_7__ADDR                                 IPU_MEMORY_OFFSET+0x0040400
+#define SRM_CSI1_CPD_RC_7__EMPTY                                IPU_MEMORY_OFFSET+0x0040400,0x00000000
+#define SRM_CSI1_CPD_RC_7__FULL                                 IPU_MEMORY_OFFSET+0x0040400,0xffffffff
+#define SRM_CSI1_CPD_RC_7__CSI1_CPD_RC_15                       IPU_MEMORY_OFFSET+0x0040400,0x01FF0000
+#define SRM_CSI1_CPD_RC_7__CSI1_CPD_RC_14                       IPU_MEMORY_OFFSET+0x0040400,0x000001FF
+
+#define SRM_CSI1_CPD_RS_0__ADDR                                 IPU_MEMORY_OFFSET+0x0040404
+#define SRM_CSI1_CPD_RS_0__EMPTY                                IPU_MEMORY_OFFSET+0x0040404,0x00000000
+#define SRM_CSI1_CPD_RS_0__FULL                                 IPU_MEMORY_OFFSET+0x0040404,0xffffffff
+#define SRM_CSI1_CPD_RS_0__CSI1_CPD_RS3                         IPU_MEMORY_OFFSET+0x0040404,0xFF000000
+#define SRM_CSI1_CPD_RS_0__CSI1_CPD_RS2                         IPU_MEMORY_OFFSET+0x0040404,0x00FF0000
+#define SRM_CSI1_CPD_RS_0__CSI1_CPD_RS1                         IPU_MEMORY_OFFSET+0x0040404,0x0000FF00
+#define SRM_CSI1_CPD_RS_0__CSI1_CPD_RS0                         IPU_MEMORY_OFFSET+0x0040404,0x000000FF
+
+#define SRM_CSI1_CPD_RS_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040408
+#define SRM_CSI1_CPD_RS_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040408,0x00000000
+#define SRM_CSI1_CPD_RS_1__FULL                                 IPU_MEMORY_OFFSET+0x0040408,0xffffffff
+#define SRM_CSI1_CPD_RS_1__CSI1_CPD_RS7                         IPU_MEMORY_OFFSET+0x0040408,0xFF000000
+#define SRM_CSI1_CPD_RS_1__CSI1_CPD_RS6                         IPU_MEMORY_OFFSET+0x0040408,0x00FF0000
+#define SRM_CSI1_CPD_RS_1__CSI1_CPD_RS5                         IPU_MEMORY_OFFSET+0x0040408,0x0000FF00
+#define SRM_CSI1_CPD_RS_1__CSI1_CPD_RS4                         IPU_MEMORY_OFFSET+0x0040408,0x000000FF
+
+#define SRM_CSI1_CPD_RS_2__ADDR                                 IPU_MEMORY_OFFSET+0x004040C
+#define SRM_CSI1_CPD_RS_2__EMPTY                                IPU_MEMORY_OFFSET+0x004040C,0x00000000
+#define SRM_CSI1_CPD_RS_2__FULL                                 IPU_MEMORY_OFFSET+0x004040C,0xffffffff
+#define SRM_CSI1_CPD_RS_2__CSI1_CPD_RS11                        IPU_MEMORY_OFFSET+0x004040C,0xFF000000
+#define SRM_CSI1_CPD_RS_2__CSI1_CPD_RS10                        IPU_MEMORY_OFFSET+0x004040C,0x00FF0000
+#define SRM_CSI1_CPD_RS_2__CSI1_CPD_RS9                         IPU_MEMORY_OFFSET+0x004040C,0x0000FF00
+#define SRM_CSI1_CPD_RS_2__CSI1_CPD_RS8                         IPU_MEMORY_OFFSET+0x004040C,0x000000FF
+
+#define SRM_CSI1_CPD_RS_3__ADDR                                 IPU_MEMORY_OFFSET+0x0040410
+#define SRM_CSI1_CPD_RS_3__EMPTY                                IPU_MEMORY_OFFSET+0x0040410,0x00000000
+#define SRM_CSI1_CPD_RS_3__FULL                                 IPU_MEMORY_OFFSET+0x0040410,0xffffffff
+#define SRM_CSI1_CPD_RS_3__CSI1_CPD_RS15                        IPU_MEMORY_OFFSET+0x0040410,0xFF000000
+#define SRM_CSI1_CPD_RS_3__CSI1_CPD_RS14                        IPU_MEMORY_OFFSET+0x0040410,0x00FF0000
+#define SRM_CSI1_CPD_RS_3__CSI1_CPD_RS13                        IPU_MEMORY_OFFSET+0x0040410,0x0000FF00
+#define SRM_CSI1_CPD_RS_3__CSI1_CPD_RS12                        IPU_MEMORY_OFFSET+0x0040410,0x000000FF
+
+#define SRM_CSI1_CPD_GRC_0__ADDR                                IPU_MEMORY_OFFSET+0x0040414
+#define SRM_CSI1_CPD_GRC_0__EMPTY                               IPU_MEMORY_OFFSET+0x0040414,0x00000000
+#define SRM_CSI1_CPD_GRC_0__FULL                                IPU_MEMORY_OFFSET+0x0040414,0xffffffff
+#define SRM_CSI1_CPD_GRC_0__CSI1_CPD_GRC1                       IPU_MEMORY_OFFSET+0x0040414,0x01FF0000
+#define SRM_CSI1_CPD_GRC_0__CSI1_CPD_GRC0                       IPU_MEMORY_OFFSET+0x0040414,0x000001FF
+
+#define SRM_CSI1_CPD_GRC_1__ADDR                                IPU_MEMORY_OFFSET+0x0040418
+#define SRM_CSI1_CPD_GRC_1__EMPTY                               IPU_MEMORY_OFFSET+0x0040418,0x00000000
+#define SRM_CSI1_CPD_GRC_1__FULL                                IPU_MEMORY_OFFSET+0x0040418,0xffffffff
+#define SRM_CSI1_CPD_GRC_1__CSI1_CPD_GRC3                       IPU_MEMORY_OFFSET+0x0040418,0x01FF0000
+#define SRM_CSI1_CPD_GRC_1__CSI1_CPD_GRC2                       IPU_MEMORY_OFFSET+0x0040418,0x000001FF
+
+#define SRM_CSI1_CPD_GRC_2__ADDR                                IPU_MEMORY_OFFSET+0x004041C
+#define SRM_CSI1_CPD_GRC_2__EMPTY                               IPU_MEMORY_OFFSET+0x004041C,0x00000000
+#define SRM_CSI1_CPD_GRC_2__FULL                                IPU_MEMORY_OFFSET+0x004041C,0xffffffff
+#define SRM_CSI1_CPD_GRC_2__CSI1_CPD_GRC5                       IPU_MEMORY_OFFSET+0x004041C,0x01FF0000
+#define SRM_CSI1_CPD_GRC_2__CSI1_CPD_GRC4                       IPU_MEMORY_OFFSET+0x004041C,0x000001FF
+
+#define SRM_CSI1_CPD_GRC_3__ADDR                                IPU_MEMORY_OFFSET+0x0040420
+#define SRM_CSI1_CPD_GRC_3__EMPTY                               IPU_MEMORY_OFFSET+0x0040420,0x00000000
+#define SRM_CSI1_CPD_GRC_3__FULL                                IPU_MEMORY_OFFSET+0x0040420,0xffffffff
+#define SRM_CSI1_CPD_GRC_3__CSI1_CPD_GRC7                       IPU_MEMORY_OFFSET+0x0040420,0x01FF0000
+#define SRM_CSI1_CPD_GRC_3__CSI1_CPD_GRC6                       IPU_MEMORY_OFFSET+0x0040420,0x000001FF
+
+#define SRM_CSI1_CPD_GRC_4__ADDR                                IPU_MEMORY_OFFSET+0x0040424
+#define SRM_CSI1_CPD_GRC_4__EMPTY                               IPU_MEMORY_OFFSET+0x0040424,0x00000000
+#define SRM_CSI1_CPD_GRC_4__FULL                                IPU_MEMORY_OFFSET+0x0040424,0xffffffff
+#define SRM_CSI1_CPD_GRC_4__CSI1_CPD_GRC9                       IPU_MEMORY_OFFSET+0x0040424,0x01FF0000
+#define SRM_CSI1_CPD_GRC_4__CSI1_CPD_GRC8                       IPU_MEMORY_OFFSET+0x0040424,0x000001FF
+
+#define SRM_CSI1_CPD_GRC_5__ADDR                                IPU_MEMORY_OFFSET+0x0040428
+#define SRM_CSI1_CPD_GRC_5__EMPTY                               IPU_MEMORY_OFFSET+0x0040428,0x00000000
+#define SRM_CSI1_CPD_GRC_5__FULL                                IPU_MEMORY_OFFSET+0x0040428,0xffffffff
+#define SRM_CSI1_CPD_GRC_5__CSI1_CPD_GRC11                      IPU_MEMORY_OFFSET+0x0040428,0x01FF0000
+#define SRM_CSI1_CPD_GRC_5__CSI1_CPD_GRC10                      IPU_MEMORY_OFFSET+0x0040428,0x000001FF
+
+#define SRM_CSI1_CPD_GRC_6__ADDR                                IPU_MEMORY_OFFSET+0x004042C
+#define SRM_CSI1_CPD_GRC_6__EMPTY                               IPU_MEMORY_OFFSET+0x004042C,0x00000000
+#define SRM_CSI1_CPD_GRC_6__FULL                                IPU_MEMORY_OFFSET+0x004042C,0xffffffff
+#define SRM_CSI1_CPD_GRC_6__CSI1_CPD_GRC13                      IPU_MEMORY_OFFSET+0x004042C,0x01FF0000
+#define SRM_CSI1_CPD_GRC_6__CSI1_CPD_GRC12                      IPU_MEMORY_OFFSET+0x004042C,0x000001FF
+
+#define SRM_CSI1_CPD_GRC_7__ADDR                                IPU_MEMORY_OFFSET+0x0040430
+#define SRM_CSI1_CPD_GRC_7__EMPTY                               IPU_MEMORY_OFFSET+0x0040430,0x00000000
+#define SRM_CSI1_CPD_GRC_7__FULL                                IPU_MEMORY_OFFSET+0x0040430,0xffffffff
+#define SRM_CSI1_CPD_GRC_7__CSI1_CPD_GRC15                      IPU_MEMORY_OFFSET+0x0040430,0x01FF0000
+#define SRM_CSI1_CPD_GRC_7__CSI1_CPD_GRC14                      IPU_MEMORY_OFFSET+0x0040430,0x000001FF
+
+#define SRM_CSI1_CPD_GRS_0__ADDR                                IPU_MEMORY_OFFSET+0x0040434
+#define SRM_CSI1_CPD_GRS_0__EMPTY                               IPU_MEMORY_OFFSET+0x0040434,0x00000000
+#define SRM_CSI1_CPD_GRS_0__FULL                                IPU_MEMORY_OFFSET+0x0040434,0xffffffff
+#define SRM_CSI1_CPD_GRS_0__CSI1_CPD_GRS3                       IPU_MEMORY_OFFSET+0x0040434,0xFF000000
+#define SRM_CSI1_CPD_GRS_0__CSI1_CPD_GRS2                       IPU_MEMORY_OFFSET+0x0040434,0x00FF0000
+#define SRM_CSI1_CPD_GRS_0__CSI1_CPD_GRS1                       IPU_MEMORY_OFFSET+0x0040434,0x0000FF00
+#define SRM_CSI1_CPD_GRS_0__CSI1_CPD_GRS0                       IPU_MEMORY_OFFSET+0x0040434,0x000000FF
+
+#define SRM_CSI1_CPD_GRS_1__ADDR                                IPU_MEMORY_OFFSET+0x0040438
+#define SRM_CSI1_CPD_GRS_1__EMPTY                               IPU_MEMORY_OFFSET+0x0040438,0x00000000
+#define SRM_CSI1_CPD_GRS_1__FULL                                IPU_MEMORY_OFFSET+0x0040438,0xffffffff
+#define SRM_CSI1_CPD_GRS_1__CSI1_CPD_GRS7                       IPU_MEMORY_OFFSET+0x0040438,0xFF000000
+#define SRM_CSI1_CPD_GRS_1__CSI1_CPD_GRS6                       IPU_MEMORY_OFFSET+0x0040438,0x00FF0000
+#define SRM_CSI1_CPD_GRS_1__CSI1_CPD_GRS5                       IPU_MEMORY_OFFSET+0x0040438,0x0000FF00
+#define SRM_CSI1_CPD_GRS_1__CSI1_CPD_GRS4                       IPU_MEMORY_OFFSET+0x0040438,0x000000FF
+
+#define SRM_CSI1_CPD_GRS_2__ADDR                                IPU_MEMORY_OFFSET+0x004043C
+#define SRM_CSI1_CPD_GRS_2__EMPTY                               IPU_MEMORY_OFFSET+0x004043C,0x00000000
+#define SRM_CSI1_CPD_GRS_2__FULL                                IPU_MEMORY_OFFSET+0x004043C,0xffffffff
+#define SRM_CSI1_CPD_GRS_2__CSI1_CPD_GRS11                      IPU_MEMORY_OFFSET+0x004043C,0xFF000000
+#define SRM_CSI1_CPD_GRS_2__CSI1_CPD_GRS10                      IPU_MEMORY_OFFSET+0x004043C,0x00FF0000
+#define SRM_CSI1_CPD_GRS_2__CSI1_CPD_GRS9                       IPU_MEMORY_OFFSET+0x004043C,0x0000FF00
+#define SRM_CSI1_CPD_GRS_2__CSI1_CPD_GRS8                       IPU_MEMORY_OFFSET+0x004043C,0x000000FF
+
+#define SRM_CSI1_CPD_GRS_3__ADDR                                IPU_MEMORY_OFFSET+0x0040440
+#define SRM_CSI1_CPD_GRS_3__EMPTY                               IPU_MEMORY_OFFSET+0x0040440,0x00000000
+#define SRM_CSI1_CPD_GRS_3__FULL                                IPU_MEMORY_OFFSET+0x0040440,0xffffffff
+#define SRM_CSI1_CPD_GRS_3__CSI1_CPD_GRS15                      IPU_MEMORY_OFFSET+0x0040440,0xFF000000
+#define SRM_CSI1_CPD_GRS_3__CSI1_CPD_GRS14                      IPU_MEMORY_OFFSET+0x0040440,0x00FF0000
+#define SRM_CSI1_CPD_GRS_3__CSI1_CPD_GRS13                      IPU_MEMORY_OFFSET+0x0040440,0x0000FF00
+#define SRM_CSI1_CPD_GRS_3__CSI1_CPD_GRS12                      IPU_MEMORY_OFFSET+0x0040440,0x000000FF
+
+#define SRM_CSI1_CPD_GBC_0__ADDR                                IPU_MEMORY_OFFSET+0x0040444
+#define SRM_CSI1_CPD_GBC_0__EMPTY                               IPU_MEMORY_OFFSET+0x0040444,0x00000000
+#define SRM_CSI1_CPD_GBC_0__FULL                                IPU_MEMORY_OFFSET+0x0040444,0xffffffff
+#define SRM_CSI1_CPD_GBC_0__CSI1_CPD_GBC1                       IPU_MEMORY_OFFSET+0x0040444,0x01FF0000
+#define SRM_CSI1_CPD_GBC_0__CSI1_CPD_GBC0                       IPU_MEMORY_OFFSET+0x0040444,0x000001FF
+
+#define SRM_CSI1_CPD_GBC_1__ADDR                                IPU_MEMORY_OFFSET+0x0040448
+#define SRM_CSI1_CPD_GBC_1__EMPTY                               IPU_MEMORY_OFFSET+0x0040448,0x00000000
+#define SRM_CSI1_CPD_GBC_1__FULL                                IPU_MEMORY_OFFSET+0x0040448,0xffffffff
+#define SRM_CSI1_CPD_GBC_1__CSI1_CPD_GBC3                       IPU_MEMORY_OFFSET+0x0040448,0x01FF0000
+#define SRM_CSI1_CPD_GBC_1__CSI1_CPD_GBC2                       IPU_MEMORY_OFFSET+0x0040448,0x000001FF
+
+#define SRM_CSI1_CPD_GBC_2__ADDR                                IPU_MEMORY_OFFSET+0x004044C
+#define SRM_CSI1_CPD_GBC_2__EMPTY                               IPU_MEMORY_OFFSET+0x004044C,0x00000000
+#define SRM_CSI1_CPD_GBC_2__FULL                                IPU_MEMORY_OFFSET+0x004044C,0xffffffff
+#define SRM_CSI1_CPD_GBC_2__CSI1_CPD_GBC5                       IPU_MEMORY_OFFSET+0x004044C,0x01FF0000
+#define SRM_CSI1_CPD_GBC_2__CSI1_CPD_GBC4                       IPU_MEMORY_OFFSET+0x004044C,0x000001FF
+
+#define SRM_CSI1_CPD_GBC_3__ADDR                                IPU_MEMORY_OFFSET+0x0040450
+#define SRM_CSI1_CPD_GBC_3__EMPTY                               IPU_MEMORY_OFFSET+0x0040450,0x00000000
+#define SRM_CSI1_CPD_GBC_3__FULL                                IPU_MEMORY_OFFSET+0x0040450,0xffffffff
+#define SRM_CSI1_CPD_GBC_3__CSI1_CPD_GBC7                       IPU_MEMORY_OFFSET+0x0040450,0x01FF0000
+#define SRM_CSI1_CPD_GBC_3__CSI1_CPD_GBC6                       IPU_MEMORY_OFFSET+0x0040450,0x000001FF
+
+#define SRM_CSI1_CPD_GBC_4__ADDR                                IPU_MEMORY_OFFSET+0x0040454
+#define SRM_CSI1_CPD_GBC_4__EMPTY                               IPU_MEMORY_OFFSET+0x0040454,0x00000000
+#define SRM_CSI1_CPD_GBC_4__FULL                                IPU_MEMORY_OFFSET+0x0040454,0xffffffff
+#define SRM_CSI1_CPD_GBC_4__CSI1_CPD_GBC9                       IPU_MEMORY_OFFSET+0x0040454,0x01FF0000
+#define SRM_CSI1_CPD_GBC_4__CSI1_CPD_GBC8                       IPU_MEMORY_OFFSET+0x0040454,0x000001FF
+
+#define SRM_CSI1_CPD_GBC_5__ADDR                                IPU_MEMORY_OFFSET+0x0040458
+#define SRM_CSI1_CPD_GBC_5__EMPTY                               IPU_MEMORY_OFFSET+0x0040458,0x00000000
+#define SRM_CSI1_CPD_GBC_5__FULL                                IPU_MEMORY_OFFSET+0x0040458,0xffffffff
+#define SRM_CSI1_CPD_GBC_5__CSI1_CPD_GBC11                      IPU_MEMORY_OFFSET+0x0040458,0x01FF0000
+#define SRM_CSI1_CPD_GBC_5__CSI1_CPD_GBC10                      IPU_MEMORY_OFFSET+0x0040458,0x000001FF
+
+#define SRM_CSI1_CPD_GBC_6__ADDR                                IPU_MEMORY_OFFSET+0x004045C
+#define SRM_CSI1_CPD_GBC_6__EMPTY                               IPU_MEMORY_OFFSET+0x004045C,0x00000000
+#define SRM_CSI1_CPD_GBC_6__FULL                                IPU_MEMORY_OFFSET+0x004045C,0xffffffff
+#define SRM_CSI1_CPD_GBC_6__CSI1_CPD_GBC13                      IPU_MEMORY_OFFSET+0x004045C,0x01FF0000
+#define SRM_CSI1_CPD_GBC_6__CSI1_CPD_GBC12                      IPU_MEMORY_OFFSET+0x004045C,0x000001FF
+
+#define SRM_CSI1_CPD_GBC_7__ADDR                                IPU_MEMORY_OFFSET+0x0040460
+#define SRM_CSI1_CPD_GBC_7__EMPTY                               IPU_MEMORY_OFFSET+0x0040460,0x00000000
+#define SRM_CSI1_CPD_GBC_7__FULL                                IPU_MEMORY_OFFSET+0x0040460,0xffffffff
+#define SRM_CSI1_CPD_GBC_7__CSI1_CPD_GBC15                      IPU_MEMORY_OFFSET+0x0040460,0x01FF0000
+#define SRM_CSI1_CPD_GBC_7__CSI1_CPD_GBC14                      IPU_MEMORY_OFFSET+0x0040460,0x000001FF
+
+#define SRM_CSI1_CPD_GBS_0__ADDR                                IPU_MEMORY_OFFSET+0x0040464
+#define SRM_CSI1_CPD_GBS_0__EMPTY                               IPU_MEMORY_OFFSET+0x0040464,0x00000000
+#define SRM_CSI1_CPD_GBS_0__FULL                                IPU_MEMORY_OFFSET+0x0040464,0xffffffff
+#define SRM_CSI1_CPD_GBS_0__CSI1_CPD_GBS3                       IPU_MEMORY_OFFSET+0x0040464,0xFF000000
+#define SRM_CSI1_CPD_GBS_0__CSI1_CPD_GBS2                       IPU_MEMORY_OFFSET+0x0040464,0x00FF0000
+#define SRM_CSI1_CPD_GBS_0__CSI1_CPD_GBS1                       IPU_MEMORY_OFFSET+0x0040464,0x0000FF00
+#define SRM_CSI1_CPD_GBS_0__CSI1_CPD_GBS0                       IPU_MEMORY_OFFSET+0x0040464,0x000000FF
+
+#define SRM_CSI1_CPD_GBS_1__ADDR                                IPU_MEMORY_OFFSET+0x0040468
+#define SRM_CSI1_CPD_GBS_1__EMPTY                               IPU_MEMORY_OFFSET+0x0040468,0x00000000
+#define SRM_CSI1_CPD_GBS_1__FULL                                IPU_MEMORY_OFFSET+0x0040468,0xffffffff
+#define SRM_CSI1_CPD_GBS_1__CSI1_CPD_GBS7                       IPU_MEMORY_OFFSET+0x0040468,0xFF000000
+#define SRM_CSI1_CPD_GBS_1__CSI1_CPD_GBS6                       IPU_MEMORY_OFFSET+0x0040468,0x00FF0000
+#define SRM_CSI1_CPD_GBS_1__CSI1_CPD_GBS5                       IPU_MEMORY_OFFSET+0x0040468,0x0000FF00
+#define SRM_CSI1_CPD_GBS_1__CSI1_CPD_GBS4                       IPU_MEMORY_OFFSET+0x0040468,0x000000FF
+
+#define SRM_CSI1_CPD_GBS_2__ADDR                                IPU_MEMORY_OFFSET+0x004046C
+#define SRM_CSI1_CPD_GBS_2__EMPTY                               IPU_MEMORY_OFFSET+0x004046C,0x00000000
+#define SRM_CSI1_CPD_GBS_2__FULL                                IPU_MEMORY_OFFSET+0x004046C,0xffffffff
+#define SRM_CSI1_CPD_GBS_2__CSI1_CPD_GBS11                      IPU_MEMORY_OFFSET+0x004046C,0xFF000000
+#define SRM_CSI1_CPD_GBS_2__CSI1_CPD_GBS10                      IPU_MEMORY_OFFSET+0x004046C,0x00FF0000
+#define SRM_CSI1_CPD_GBS_2__CSI1_CPD_GBS9                       IPU_MEMORY_OFFSET+0x004046C,0x0000FF00
+#define SRM_CSI1_CPD_GBS_2__CSI1_CPD_GBS8                       IPU_MEMORY_OFFSET+0x004046C,0x000000FF
+
+#define SRM_CSI1_CPD_GBS_3__ADDR                                IPU_MEMORY_OFFSET+0x0040470
+#define SRM_CSI1_CPD_GBS_3__EMPTY                               IPU_MEMORY_OFFSET+0x0040470,0x00000000
+#define SRM_CSI1_CPD_GBS_3__FULL                                IPU_MEMORY_OFFSET+0x0040470,0xffffffff
+#define SRM_CSI1_CPD_GBS_3__CSI1_CPD_GBS15                      IPU_MEMORY_OFFSET+0x0040470,0xFF000000
+#define SRM_CSI1_CPD_GBS_3__CSI1_CPD_GBS14                      IPU_MEMORY_OFFSET+0x0040470,0x00FF0000
+#define SRM_CSI1_CPD_GBS_3__CSI1_CPD_GBS13                      IPU_MEMORY_OFFSET+0x0040470,0x0000FF00
+#define SRM_CSI1_CPD_GBS_3__CSI1_CPD_GBS12                      IPU_MEMORY_OFFSET+0x0040470,0x000000FF
+
+#define SRM_CSI1_CPD_BC_0__ADDR                                 IPU_MEMORY_OFFSET+0x0040474
+#define SRM_CSI1_CPD_BC_0__EMPTY                                IPU_MEMORY_OFFSET+0x0040474,0x00000000
+#define SRM_CSI1_CPD_BC_0__FULL                                 IPU_MEMORY_OFFSET+0x0040474,0xffffffff
+#define SRM_CSI1_CPD_BC_0__CSI1_CPD_BC1                         IPU_MEMORY_OFFSET+0x0040474,0x01FF0000
+#define SRM_CSI1_CPD_BC_0__CSI1_CPD_BC0                         IPU_MEMORY_OFFSET+0x0040474,0x000001FF
+
+#define SRM_CSI1_CPD_BC_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040478
+#define SRM_CSI1_CPD_BC_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040478,0x00000000
+#define SRM_CSI1_CPD_BC_1__FULL                                 IPU_MEMORY_OFFSET+0x0040478,0xffffffff
+#define SRM_CSI1_CPD_BC_1__CSI1_CPD_BC3                         IPU_MEMORY_OFFSET+0x0040478,0x01FF0000
+#define SRM_CSI1_CPD_BC_1__CSI1_CPD_BC2                         IPU_MEMORY_OFFSET+0x0040478,0x000001FF
+
+#define SRM_CSI1_CPD_BC_2__ADDR                                 IPU_MEMORY_OFFSET+0x004047C
+#define SRM_CSI1_CPD_BC_2__EMPTY                                IPU_MEMORY_OFFSET+0x004047C,0x00000000
+#define SRM_CSI1_CPD_BC_2__FULL                                 IPU_MEMORY_OFFSET+0x004047C,0xffffffff
+#define SRM_CSI1_CPD_BC_2__CSI1_CPD_BC5                         IPU_MEMORY_OFFSET+0x004047C,0x01FF0000
+#define SRM_CSI1_CPD_BC_2__CSI1_CPD_BC4                         IPU_MEMORY_OFFSET+0x004047C,0x000001FF
+
+#define SRM_CSI1_CPD_BC_3__ADDR                                 IPU_MEMORY_OFFSET+0x0040480
+#define SRM_CSI1_CPD_BC_3__EMPTY                                IPU_MEMORY_OFFSET+0x0040480,0x00000000
+#define SRM_CSI1_CPD_BC_3__FULL                                 IPU_MEMORY_OFFSET+0x0040480,0xffffffff
+#define SRM_CSI1_CPD_BC_3__CSI1_CPD_BC7                         IPU_MEMORY_OFFSET+0x0040480,0x01FF0000
+#define SRM_CSI1_CPD_BC_3__CSI1_CPD_BC6                         IPU_MEMORY_OFFSET+0x0040480,0x000001FF
+
+#define SRM_CSI1_CPD_BC_4__ADDR                                 IPU_MEMORY_OFFSET+0x0040484
+#define SRM_CSI1_CPD_BC_4__EMPTY                                IPU_MEMORY_OFFSET+0x0040484,0x00000000
+#define SRM_CSI1_CPD_BC_4__FULL                                 IPU_MEMORY_OFFSET+0x0040484,0xffffffff
+#define SRM_CSI1_CPD_BC_4__CSI1_CPD_BC9                         IPU_MEMORY_OFFSET+0x0040484,0x01FF0000
+#define SRM_CSI1_CPD_BC_4__CSI1_CPD_BC8                         IPU_MEMORY_OFFSET+0x0040484,0x000001FF
+
+#define SRM_CSI1_CPD_BC_5__ADDR                                 IPU_MEMORY_OFFSET+0x0040488
+#define SRM_CSI1_CPD_BC_5__EMPTY                                IPU_MEMORY_OFFSET+0x0040488,0x00000000
+#define SRM_CSI1_CPD_BC_5__FULL                                 IPU_MEMORY_OFFSET+0x0040488,0xffffffff
+#define SRM_CSI1_CPD_BC_5__CSI1_CPD_BC11                        IPU_MEMORY_OFFSET+0x0040488,0x01FF0000
+#define SRM_CSI1_CPD_BC_5__CSI1_CPD_BC10                        IPU_MEMORY_OFFSET+0x0040488,0x000001FF
+
+#define SRM_CSI1_CPD_BC_6__ADDR                                 IPU_MEMORY_OFFSET+0x004048C
+#define SRM_CSI1_CPD_BC_6__EMPTY                                IPU_MEMORY_OFFSET+0x004048C,0x00000000
+#define SRM_CSI1_CPD_BC_6__FULL                                 IPU_MEMORY_OFFSET+0x004048C,0xffffffff
+#define SRM_CSI1_CPD_BC_6__CSI1_CPD_BC13                        IPU_MEMORY_OFFSET+0x004048C,0x01FF0000
+#define SRM_CSI1_CPD_BC_6__CSI1_CPD_BC12                        IPU_MEMORY_OFFSET+0x004048C,0x000001FF
+
+#define SRM_CSI1_CPD_BC_7__ADDR                                 IPU_MEMORY_OFFSET+0x0040490
+#define SRM_CSI1_CPD_BC_7__EMPTY                                IPU_MEMORY_OFFSET+0x0040490,0x00000000
+#define SRM_CSI1_CPD_BC_7__FULL                                 IPU_MEMORY_OFFSET+0x0040490,0xffffffff
+#define SRM_CSI1_CPD_BC_7__CSI1_CPD_BC15                        IPU_MEMORY_OFFSET+0x0040490,0x01FF0000
+#define SRM_CSI1_CPD_BC_7__CSI1_CPD_BC14                        IPU_MEMORY_OFFSET+0x0040490,0x000001FF
+
+#define SRM_CSI1_CPD_BS_0__ADDR                                 IPU_MEMORY_OFFSET+0x0040494
+#define SRM_CSI1_CPD_BS_0__EMPTY                                IPU_MEMORY_OFFSET+0x0040494,0x00000000
+#define SRM_CSI1_CPD_BS_0__FULL                                 IPU_MEMORY_OFFSET+0x0040494,0xffffffff
+#define SRM_CSI1_CPD_BS_0__CSI1_CPD_BS3                         IPU_MEMORY_OFFSET+0x0040494,0xFF000000
+#define SRM_CSI1_CPD_BS_0__CSI1_CPD_BS2                         IPU_MEMORY_OFFSET+0x0040494,0x00FF0000
+#define SRM_CSI1_CPD_BS_0__CSI1_CPD_BS1                         IPU_MEMORY_OFFSET+0x0040494,0x0000FF00
+#define SRM_CSI1_CPD_BS_0__CSI1_CPD_BS0                         IPU_MEMORY_OFFSET+0x0040494,0x000000FF
+
+#define SRM_CSI1_CPD_BS_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040498
+#define SRM_CSI1_CPD_BS_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040498,0x00000000
+#define SRM_CSI1_CPD_BS_1__FULL                                 IPU_MEMORY_OFFSET+0x0040498,0xffffffff
+#define SRM_CSI1_CPD_BS_1__CSI1_CPD_BS7                         IPU_MEMORY_OFFSET+0x0040498,0xFF000000
+#define SRM_CSI1_CPD_BS_1__CSI1_CPD_BS6                         IPU_MEMORY_OFFSET+0x0040498,0x00FF0000
+#define SRM_CSI1_CPD_BS_1__CSI1_CPD_BS5                         IPU_MEMORY_OFFSET+0x0040498,0x0000FF00
+#define SRM_CSI1_CPD_BS_1__CSI1_CPD_BS4                         IPU_MEMORY_OFFSET+0x0040498,0x000000FF
+
+#define SRM_CSI1_CPD_BS_2__ADDR                                 IPU_MEMORY_OFFSET+0x004049C
+#define SRM_CSI1_CPD_BS_2__EMPTY                                IPU_MEMORY_OFFSET+0x004049C,0x00000000
+#define SRM_CSI1_CPD_BS_2__FULL                                 IPU_MEMORY_OFFSET+0x004049C,0xffffffff
+#define SRM_CSI1_CPD_BS_2__CSI1_CPD_BS11                        IPU_MEMORY_OFFSET+0x004049C,0xFF000000
+#define SRM_CSI1_CPD_BS_2__CSI1_CPD_BS10                        IPU_MEMORY_OFFSET+0x004049C,0x00FF0000
+#define SRM_CSI1_CPD_BS_2__CSI1_CPD_BS9                         IPU_MEMORY_OFFSET+0x004049C,0x0000FF00
+#define SRM_CSI1_CPD_BS_2__CSI1_CPD_BS8                         IPU_MEMORY_OFFSET+0x004049C,0x000000FF
+
+#define SRM_CSI1_CPD_BS_3__ADDR                                 IPU_MEMORY_OFFSET+0x00404A0
+#define SRM_CSI1_CPD_BS_3__EMPTY                                IPU_MEMORY_OFFSET+0x00404A0,0x00000000
+#define SRM_CSI1_CPD_BS_3__FULL                                 IPU_MEMORY_OFFSET+0x00404A0,0xffffffff
+#define SRM_CSI1_CPD_BS_3__CSI1_CPD_BS15                        IPU_MEMORY_OFFSET+0x00404A0,0xFF000000
+#define SRM_CSI1_CPD_BS_3__CSI1_CPD_BS14                        IPU_MEMORY_OFFSET+0x00404A0,0x00FF0000
+#define SRM_CSI1_CPD_BS_3__CSI1_CPD_BS13                        IPU_MEMORY_OFFSET+0x00404A0,0x0000FF00
+#define SRM_CSI1_CPD_BS_3__CSI1_CPD_BS12                        IPU_MEMORY_OFFSET+0x00404A0,0x000000FF
+
+#define SRM_CSI1_CPD_OFFSET1__ADDR                              IPU_MEMORY_OFFSET+0x00404A4
+#define SRM_CSI1_CPD_OFFSET1__EMPTY                             IPU_MEMORY_OFFSET+0x00404A4,0x00000000
+#define SRM_CSI1_CPD_OFFSET1__FULL                              IPU_MEMORY_OFFSET+0x00404A4,0xffffffff
+#define SRM_CSI1_CPD_OFFSET1__CSI1_CPD_B_OFFSET                 IPU_MEMORY_OFFSET+0x00404A4,0x3FF00000
+#define SRM_CSI1_CPD_OFFSET1__CSI1_CPD_GB_OFFSET                IPU_MEMORY_OFFSET+0x00404A4,0x000FFC00
+#define SRM_CSI1_CPD_OFFSET1__CSI1_CPD_GR_OFFSET                IPU_MEMORY_OFFSET+0x00404A4,0x000003FF
+
+#define SRM_CSI1_CPD_OFFSET2__ADDR                              IPU_MEMORY_OFFSET+0x00404A8
+#define SRM_CSI1_CPD_OFFSET2__EMPTY                             IPU_MEMORY_OFFSET+0x00404A8,0x00000000
+#define SRM_CSI1_CPD_OFFSET2__FULL                              IPU_MEMORY_OFFSET+0x00404A8,0xffffffff
+#define SRM_CSI1_CPD_OFFSET2__CSI1_CPD_R_OFFSET                 IPU_MEMORY_OFFSET+0x00404A8,0x000003FF
+
+#define SRM_DI0_GENERAL__ADDR                                   IPU_MEMORY_OFFSET+0x00404E4
+#define SRM_DI0_GENERAL__EMPTY                                  IPU_MEMORY_OFFSET+0x00404E4,0x00000000
+#define SRM_DI0_GENERAL__FULL                                   IPU_MEMORY_OFFSET+0x00404E4,0xffffffff
+#define SRM_DI0_GENERAL__DI0_PIN8_PIN15_SEL                     IPU_MEMORY_OFFSET+0x00404E4,0x80000000
+#define SRM_DI0_GENERAL__DI0_DISP_Y_SEL                         IPU_MEMORY_OFFSET+0x00404E4,0x70000000
+#define SRM_DI0_GENERAL__DI0_CLOCK_STOP_MODE                    IPU_MEMORY_OFFSET+0x00404E4,0x0F000000
+#define SRM_DI0_GENERAL__DI0_DISP_CLOCK_INIT                    IPU_MEMORY_OFFSET+0x00404E4,0x00800000
+#define SRM_DI0_GENERAL__DI0_MASK_SEL                           IPU_MEMORY_OFFSET+0x00404E4,0x00400000
+#define SRM_DI0_GENERAL__DI0_VSYNC_EXT                          IPU_MEMORY_OFFSET+0x00404E4,0x00200000
+#define SRM_DI0_GENERAL__DI0_CLK_EXT                            IPU_MEMORY_OFFSET+0x00404E4,0x00100000
+#define SRM_DI0_GENERAL__DI0_WATCHDOG_MODE                      IPU_MEMORY_OFFSET+0x00404E4,0x000C0000
+#define SRM_DI0_GENERAL__DI0_POLARITY_DISP_CLK                  IPU_MEMORY_OFFSET+0x00404E4,0x00020000
+#define SRM_DI0_GENERAL__DI0_SYNC_COUNT_SEL                     IPU_MEMORY_OFFSET+0x00404E4,0x0000F000
+#define SRM_DI0_GENERAL__DI0_ERR_TREATMENT                      IPU_MEMORY_OFFSET+0x00404E4,0x00000800
+#define SRM_DI0_GENERAL__DI0_ERM_VSYNC_SEL                      IPU_MEMORY_OFFSET+0x00404E4,0x00000400
+#define SRM_DI0_GENERAL__DI0_POLARITY_CS1                       IPU_MEMORY_OFFSET+0x00404E4,0x00000200
+#define SRM_DI0_GENERAL__DI0_POLARITY_CS0                       IPU_MEMORY_OFFSET+0x00404E4,0x00000100
+#define SRM_DI0_GENERAL__DI0_POLARITY_8                         IPU_MEMORY_OFFSET+0x00404E4,0x00000080
+#define SRM_DI0_GENERAL__DI0_POLARITY_7                         IPU_MEMORY_OFFSET+0x00404E4,0x00000040
+#define SRM_DI0_GENERAL__DI0_POLARITY_6                         IPU_MEMORY_OFFSET+0x00404E4,0x00000020
+#define SRM_DI0_GENERAL__DI0_POLARITY_5                         IPU_MEMORY_OFFSET+0x00404E4,0x00000010
+#define SRM_DI0_GENERAL__DI0_POLARITY_4                         IPU_MEMORY_OFFSET+0x00404E4,0x00000008
+#define SRM_DI0_GENERAL__DI0_POLARITY_3                         IPU_MEMORY_OFFSET+0x00404E4,0x00000004
+#define SRM_DI0_GENERAL__DI0_POLARITY_2                         IPU_MEMORY_OFFSET+0x00404E4,0x00000002
+#define SRM_DI0_GENERAL__DI0_POLARITY_1                         IPU_MEMORY_OFFSET+0x00404E4,0x00000001
+
+#define SRM_DI0_BS_CLKGEN0__ADDR                                IPU_MEMORY_OFFSET+0x00404E8
+#define SRM_DI0_BS_CLKGEN0__EMPTY                               IPU_MEMORY_OFFSET+0x00404E8,0x00000000
+#define SRM_DI0_BS_CLKGEN0__FULL                                IPU_MEMORY_OFFSET+0x00404E8,0xffffffff
+#define SRM_DI0_BS_CLKGEN0__DI0_DISP_CLK_OFFSET                 IPU_MEMORY_OFFSET+0x00404E8,0x01FF0000
+#define SRM_DI0_BS_CLKGEN0__DI0_DISP_CLK_PERIOD                 IPU_MEMORY_OFFSET+0x00404E8,0x00000FFF
+
+#define SRM_DI0_BS_CLKGEN1__ADDR                                IPU_MEMORY_OFFSET+0x00404EC
+#define SRM_DI0_BS_CLKGEN1__EMPTY                               IPU_MEMORY_OFFSET+0x00404EC,0x00000000
+#define SRM_DI0_BS_CLKGEN1__FULL                                IPU_MEMORY_OFFSET+0x00404EC,0xffffffff
+#define SRM_DI0_BS_CLKGEN1__DI0_DISP_CLK_DOWN                   IPU_MEMORY_OFFSET+0x00404EC,0x01FF0000
+#define SRM_DI0_BS_CLKGEN1__DI0_DISP_CLK_UP                     IPU_MEMORY_OFFSET+0x00404EC,0x000001FF
+
+#define SRM_DI0_SW_GEN0_1__ADDR                                 IPU_MEMORY_OFFSET+0x00404F0
+#define SRM_DI0_SW_GEN0_1__EMPTY                                IPU_MEMORY_OFFSET+0x00404F0,0x00000000
+#define SRM_DI0_SW_GEN0_1__FULL                                 IPU_MEMORY_OFFSET+0x00404F0,0xffffffff
+#define SRM_DI0_SW_GEN0_1__DI0_RUN_VALUE_M1_1                   IPU_MEMORY_OFFSET+0x00404F0,0x7FF80000
+#define SRM_DI0_SW_GEN0_1__DI0_RUN_RESOLUTION_1                 IPU_MEMORY_OFFSET+0x00404F0,0x00070000
+#define SRM_DI0_SW_GEN0_1__DI0_OFFSET_VALUE_1                   IPU_MEMORY_OFFSET+0x00404F0,0x00007FF8
+#define SRM_DI0_SW_GEN0_1__DI0_OFFSET_RESOLUTION_1              IPU_MEMORY_OFFSET+0x00404F0,0x00000007
+
+#define SRM_DI0_SW_GEN0_2__ADDR                                 IPU_MEMORY_OFFSET+0x00404F4
+#define SRM_DI0_SW_GEN0_2__EMPTY                                IPU_MEMORY_OFFSET+0x00404F4,0x00000000
+#define SRM_DI0_SW_GEN0_2__FULL                                 IPU_MEMORY_OFFSET+0x00404F4,0xffffffff
+#define SRM_DI0_SW_GEN0_2__DI0_RUN_VALUE_M1_2                   IPU_MEMORY_OFFSET+0x00404F4,0x7FF80000
+#define SRM_DI0_SW_GEN0_2__DI0_RUN_RESOLUTION_2                 IPU_MEMORY_OFFSET+0x00404F4,0x00070000
+#define SRM_DI0_SW_GEN0_2__DI0_OFFSET_VALUE_2                   IPU_MEMORY_OFFSET+0x00404F4,0x00007FF8
+#define SRM_DI0_SW_GEN0_2__DI0_OFFSET_RESOLUTION_2              IPU_MEMORY_OFFSET+0x00404F4,0x00000007
+
+#define SRM_DI0_SW_GEN0_3__ADDR                                 IPU_MEMORY_OFFSET+0x00404F8
+#define SRM_DI0_SW_GEN0_3__EMPTY                                IPU_MEMORY_OFFSET+0x00404F8,0x00000000
+#define SRM_DI0_SW_GEN0_3__FULL                                 IPU_MEMORY_OFFSET+0x00404F8,0xffffffff
+#define SRM_DI0_SW_GEN0_3__DI0_RUN_VALUE_M1_3                   IPU_MEMORY_OFFSET+0x00404F8,0x7FF80000
+#define SRM_DI0_SW_GEN0_3__DI0_RUN_RESOLUTION_3                 IPU_MEMORY_OFFSET+0x00404F8,0x00070000
+#define SRM_DI0_SW_GEN0_3__DI0_OFFSET_VALUE_3                   IPU_MEMORY_OFFSET+0x00404F8,0x00007FF8
+#define SRM_DI0_SW_GEN0_3__DI0_OFFSET_RESOLUTION_3              IPU_MEMORY_OFFSET+0x00404F8,0x00000007
+
+#define SRM_DI0_SW_GEN0_4__ADDR                                 IPU_MEMORY_OFFSET+0x00404FC
+#define SRM_DI0_SW_GEN0_4__EMPTY                                IPU_MEMORY_OFFSET+0x00404FC,0x00000000
+#define SRM_DI0_SW_GEN0_4__FULL                                 IPU_MEMORY_OFFSET+0x00404FC,0xffffffff
+#define SRM_DI0_SW_GEN0_4__DI0_RUN_VALUE_M1_4                   IPU_MEMORY_OFFSET+0x00404FC,0x7FF80000
+#define SRM_DI0_SW_GEN0_4__DI0_RUN_RESOLUTION_4                 IPU_MEMORY_OFFSET+0x00404FC,0x00070000
+#define SRM_DI0_SW_GEN0_4__DI0_OFFSET_VALUE_4                   IPU_MEMORY_OFFSET+0x00404FC,0x00007FF8
+#define SRM_DI0_SW_GEN0_4__DI0_OFFSET_RESOLUTION_4              IPU_MEMORY_OFFSET+0x00404FC,0x00000007
+
+#define SRM_DI0_SW_GEN0_5__ADDR                                 IPU_MEMORY_OFFSET+0x0040500
+#define SRM_DI0_SW_GEN0_5__EMPTY                                IPU_MEMORY_OFFSET+0x0040500,0x00000000
+#define SRM_DI0_SW_GEN0_5__FULL                                 IPU_MEMORY_OFFSET+0x0040500,0xffffffff
+#define SRM_DI0_SW_GEN0_5__DI0_RUN_VALUE_M1_5                   IPU_MEMORY_OFFSET+0x0040500,0x7FF80000
+#define SRM_DI0_SW_GEN0_5__DI0_RUN_RESOLUTION_5                 IPU_MEMORY_OFFSET+0x0040500,0x00070000
+#define SRM_DI0_SW_GEN0_5__DI0_OFFSET_VALUE_5                   IPU_MEMORY_OFFSET+0x0040500,0x00007FF8
+#define SRM_DI0_SW_GEN0_5__DI0_OFFSET_RESOLUTION_5              IPU_MEMORY_OFFSET+0x0040500,0x00000007
+
+#define SRM_DI0_SW_GEN0_6__ADDR                                 IPU_MEMORY_OFFSET+0x0040504
+#define SRM_DI0_SW_GEN0_6__EMPTY                                IPU_MEMORY_OFFSET+0x0040504,0x00000000
+#define SRM_DI0_SW_GEN0_6__FULL                                 IPU_MEMORY_OFFSET+0x0040504,0xffffffff
+#define SRM_DI0_SW_GEN0_6__DI0_RUN_VALUE_M1_6                   IPU_MEMORY_OFFSET+0x0040504,0x7FF80000
+#define SRM_DI0_SW_GEN0_6__DI0_RUN_RESOLUTION_6                 IPU_MEMORY_OFFSET+0x0040504,0x00070000
+#define SRM_DI0_SW_GEN0_6__DI0_OFFSET_VALUE_6                   IPU_MEMORY_OFFSET+0x0040504,0x00007FF8
+#define SRM_DI0_SW_GEN0_6__DI0_OFFSET_RESOLUTION_6              IPU_MEMORY_OFFSET+0x0040504,0x00000007
+
+#define SRM_DI0_SW_GEN0_7__ADDR                                 IPU_MEMORY_OFFSET+0x0040508
+#define SRM_DI0_SW_GEN0_7__EMPTY                                IPU_MEMORY_OFFSET+0x0040508,0x00000000
+#define SRM_DI0_SW_GEN0_7__FULL                                 IPU_MEMORY_OFFSET+0x0040508,0xffffffff
+#define SRM_DI0_SW_GEN0_7__DI0_RUN_VALUE_M1_7                   IPU_MEMORY_OFFSET+0x0040508,0x7FF80000
+#define SRM_DI0_SW_GEN0_7__DI0_RUN_RESOLUTION_7                 IPU_MEMORY_OFFSET+0x0040508,0x00070000
+#define SRM_DI0_SW_GEN0_7__DI0_OFFSET_VALUE_7                   IPU_MEMORY_OFFSET+0x0040508,0x00007FF8
+#define SRM_DI0_SW_GEN0_7__DI0_OFFSET_RESOLUTION_7              IPU_MEMORY_OFFSET+0x0040508,0x00000007
+
+#define SRM_DI0_SW_GEN0_8__ADDR                                 IPU_MEMORY_OFFSET+0x004050C
+#define SRM_DI0_SW_GEN0_8__EMPTY                                IPU_MEMORY_OFFSET+0x004050C,0x00000000
+#define SRM_DI0_SW_GEN0_8__FULL                                 IPU_MEMORY_OFFSET+0x004050C,0xffffffff
+#define SRM_DI0_SW_GEN0_8__DI0_RUN_VALUE_M1_8                   IPU_MEMORY_OFFSET+0x004050C,0x7FF80000
+#define SRM_DI0_SW_GEN0_8__DI0_RUN_RESOLUTION_8                 IPU_MEMORY_OFFSET+0x004050C,0x00070000
+#define SRM_DI0_SW_GEN0_8__DI0_OFFSET_VALUE_8                   IPU_MEMORY_OFFSET+0x004050C,0x00007FF8
+#define SRM_DI0_SW_GEN0_8__DI0_OFFSET_RESOLUTION_8              IPU_MEMORY_OFFSET+0x004050C,0x00000007
+
+#define SRM_DI0_SW_GEN0_9__ADDR                                 IPU_MEMORY_OFFSET+0x0040510
+#define SRM_DI0_SW_GEN0_9__EMPTY                                IPU_MEMORY_OFFSET+0x0040510,0x00000000
+#define SRM_DI0_SW_GEN0_9__FULL                                 IPU_MEMORY_OFFSET+0x0040510,0xffffffff
+#define SRM_DI0_SW_GEN0_9__DI0_RUN_VALUE_M1_9                   IPU_MEMORY_OFFSET+0x0040510,0x7FF80000
+#define SRM_DI0_SW_GEN0_9__DI0_RUN_RESOLUTION_9                 IPU_MEMORY_OFFSET+0x0040510,0x00070000
+#define SRM_DI0_SW_GEN0_9__DI0_OFFSET_VALUE_9                   IPU_MEMORY_OFFSET+0x0040510,0x00007FF8
+#define SRM_DI0_SW_GEN0_9__DI0_OFFSET_RESOLUTION_9              IPU_MEMORY_OFFSET+0x0040510,0x00000007
+
+#define SRM_DI0_SW_GEN1_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040514
+#define SRM_DI0_SW_GEN1_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040514,0x00000000
+#define SRM_DI0_SW_GEN1_1__FULL                                 IPU_MEMORY_OFFSET+0x0040514,0xffffffff
+#define SRM_DI0_SW_GEN1_1__DI0_CNT_POLARITY_GEN_EN_1            IPU_MEMORY_OFFSET+0x0040514,0x60000000
+#define SRM_DI0_SW_GEN1_1__DI0_CNT_AUTO_RELOAD_1                IPU_MEMORY_OFFSET+0x0040514,0x10000000
+#define SRM_DI0_SW_GEN1_1__DI0_CNT_CLR_SEL_1                    IPU_MEMORY_OFFSET+0x0040514,0x0E000000
+#define SRM_DI0_SW_GEN1_1__DI0_CNT_DOWN_1                       IPU_MEMORY_OFFSET+0x0040514,0x01FF0000
+#define SRM_DI0_SW_GEN1_1__DI0_CNT_POLARITY_TRIGGER_SEL_1       IPU_MEMORY_OFFSET+0x0040514,0x00007000
+#define SRM_DI0_SW_GEN1_1__DI0_CNT_POLARITY_CLR_SEL_1           IPU_MEMORY_OFFSET+0x0040514,0x00000E00
+#define SRM_DI0_SW_GEN1_1__DI0_CNT_UP_1                         IPU_MEMORY_OFFSET+0x0040514,0x000001FF
+
+#define SRM_DI0_SW_GEN1_2__ADDR                                 IPU_MEMORY_OFFSET+0x0040518
+#define SRM_DI0_SW_GEN1_2__EMPTY                                IPU_MEMORY_OFFSET+0x0040518,0x00000000
+#define SRM_DI0_SW_GEN1_2__FULL                                 IPU_MEMORY_OFFSET+0x0040518,0xffffffff
+#define SRM_DI0_SW_GEN1_2__DI0_CNT_POLARITY_GEN_EN_2            IPU_MEMORY_OFFSET+0x0040518,0x60000000
+#define SRM_DI0_SW_GEN1_2__DI0_CNT_AUTO_RELOAD_2                IPU_MEMORY_OFFSET+0x0040518,0x10000000
+#define SRM_DI0_SW_GEN1_2__DI0_CNT_CLR_SEL_2                    IPU_MEMORY_OFFSET+0x0040518,0x0E000000
+#define SRM_DI0_SW_GEN1_2__DI0_CNT_DOWN_2                       IPU_MEMORY_OFFSET+0x0040518,0x01FF0000
+#define SRM_DI0_SW_GEN1_2__DI0_CNT_POLARITY_TRIGGER_SEL_2       IPU_MEMORY_OFFSET+0x0040518,0x00007000
+#define SRM_DI0_SW_GEN1_2__DI0_CNT_POLARITY_CLR_SEL_2           IPU_MEMORY_OFFSET+0x0040518,0x00000E00
+#define SRM_DI0_SW_GEN1_2__DI0_CNT_UP_2                         IPU_MEMORY_OFFSET+0x0040518,0x000001FF
+
+#define SRM_DI0_SW_GEN1_3__ADDR                                 IPU_MEMORY_OFFSET+0x004051C
+#define SRM_DI0_SW_GEN1_3__EMPTY                                IPU_MEMORY_OFFSET+0x004051C,0x00000000
+#define SRM_DI0_SW_GEN1_3__FULL                                 IPU_MEMORY_OFFSET+0x004051C,0xffffffff
+#define SRM_DI0_SW_GEN1_3__DI0_CNT_POLARITY_GEN_EN_3            IPU_MEMORY_OFFSET+0x004051C,0x60000000
+#define SRM_DI0_SW_GEN1_3__DI0_CNT_AUTO_RELOAD_3                IPU_MEMORY_OFFSET+0x004051C,0x10000000
+#define SRM_DI0_SW_GEN1_3__DI0_CNT_CLR_SEL_3                    IPU_MEMORY_OFFSET+0x004051C,0x0E000000
+#define SRM_DI0_SW_GEN1_3__DI0_CNT_DOWN_3                       IPU_MEMORY_OFFSET+0x004051C,0x01FF0000
+#define SRM_DI0_SW_GEN1_3__DI0_CNT_POLARITY_TRIGGER_SEL_3       IPU_MEMORY_OFFSET+0x004051C,0x00007000
+#define SRM_DI0_SW_GEN1_3__DI0_CNT_POLARITY_CLR_SEL_3           IPU_MEMORY_OFFSET+0x004051C,0x00000E00
+#define SRM_DI0_SW_GEN1_3__DI0_CNT_UP_3                         IPU_MEMORY_OFFSET+0x004051C,0x000001FF
+
+#define SRM_DI0_SW_GEN1_4__ADDR                                 IPU_MEMORY_OFFSET+0x0040520
+#define SRM_DI0_SW_GEN1_4__EMPTY                                IPU_MEMORY_OFFSET+0x0040520,0x00000000
+#define SRM_DI0_SW_GEN1_4__FULL                                 IPU_MEMORY_OFFSET+0x0040520,0xffffffff
+#define SRM_DI0_SW_GEN1_4__DI0_CNT_POLARITY_GEN_EN_4            IPU_MEMORY_OFFSET+0x0040520,0x60000000
+#define SRM_DI0_SW_GEN1_4__DI0_CNT_AUTO_RELOAD_4                IPU_MEMORY_OFFSET+0x0040520,0x10000000
+#define SRM_DI0_SW_GEN1_4__DI0_CNT_CLR_SEL_4                    IPU_MEMORY_OFFSET+0x0040520,0x0E000000
+#define SRM_DI0_SW_GEN1_4__DI0_CNT_DOWN_4                       IPU_MEMORY_OFFSET+0x0040520,0x01FF0000
+#define SRM_DI0_SW_GEN1_4__DI0_CNT_POLARITY_TRIGGER_SEL_4       IPU_MEMORY_OFFSET+0x0040520,0x00007000
+#define SRM_DI0_SW_GEN1_4__DI0_CNT_POLARITY_CLR_SEL_4           IPU_MEMORY_OFFSET+0x0040520,0x00000E00
+#define SRM_DI0_SW_GEN1_4__DI0_CNT_UP_4                         IPU_MEMORY_OFFSET+0x0040520,0x000001FF
+
+#define SRM_DI0_SW_GEN1_5__ADDR                                 IPU_MEMORY_OFFSET+0x0040524
+#define SRM_DI0_SW_GEN1_5__EMPTY                                IPU_MEMORY_OFFSET+0x0040524,0x00000000
+#define SRM_DI0_SW_GEN1_5__FULL                                 IPU_MEMORY_OFFSET+0x0040524,0xffffffff
+#define SRM_DI0_SW_GEN1_5__DI0_CNT_POLARITY_GEN_EN_5            IPU_MEMORY_OFFSET+0x0040524,0x60000000
+#define SRM_DI0_SW_GEN1_5__DI0_CNT_AUTO_RELOAD_5                IPU_MEMORY_OFFSET+0x0040524,0x10000000
+#define SRM_DI0_SW_GEN1_5__DI0_CNT_CLR_SEL_5                    IPU_MEMORY_OFFSET+0x0040524,0x0E000000
+#define SRM_DI0_SW_GEN1_5__DI0_CNT_DOWN_5                       IPU_MEMORY_OFFSET+0x0040524,0x01FF0000
+#define SRM_DI0_SW_GEN1_5__DI0_CNT_POLARITY_TRIGGER_SEL_5       IPU_MEMORY_OFFSET+0x0040524,0x00007000
+#define SRM_DI0_SW_GEN1_5__DI0_CNT_POLARITY_CLR_SEL_5           IPU_MEMORY_OFFSET+0x0040524,0x00000E00
+#define SRM_DI0_SW_GEN1_5__DI0_CNT_UP_5                         IPU_MEMORY_OFFSET+0x0040524,0x000001FF
+
+#define SRM_DI0_SW_GEN1_6__ADDR                                 IPU_MEMORY_OFFSET+0x0040528
+#define SRM_DI0_SW_GEN1_6__EMPTY                                IPU_MEMORY_OFFSET+0x0040528,0x00000000
+#define SRM_DI0_SW_GEN1_6__FULL                                 IPU_MEMORY_OFFSET+0x0040528,0xffffffff
+#define SRM_DI0_SW_GEN1_6__DI0_CNT_POLARITY_GEN_EN_6            IPU_MEMORY_OFFSET+0x0040528,0x60000000
+#define SRM_DI0_SW_GEN1_6__DI0_CNT_AUTO_RELOAD_6                IPU_MEMORY_OFFSET+0x0040528,0x10000000
+#define SRM_DI0_SW_GEN1_6__DI0_CNT_CLR_SEL_6                    IPU_MEMORY_OFFSET+0x0040528,0x0E000000
+#define SRM_DI0_SW_GEN1_6__DI0_CNT_DOWN_6                       IPU_MEMORY_OFFSET+0x0040528,0x01FF0000
+#define SRM_DI0_SW_GEN1_6__DI0_CNT_POLARITY_TRIGGER_SEL_6       IPU_MEMORY_OFFSET+0x0040528,0x00007000
+#define SRM_DI0_SW_GEN1_6__DI0_CNT_POLARITY_CLR_SEL_6           IPU_MEMORY_OFFSET+0x0040528,0x00000E00
+#define SRM_DI0_SW_GEN1_6__DI0_CNT_UP_6                         IPU_MEMORY_OFFSET+0x0040528,0x000001FF
+
+#define SRM_DI0_SW_GEN1_7__ADDR                                 IPU_MEMORY_OFFSET+0x004052C
+#define SRM_DI0_SW_GEN1_7__EMPTY                                IPU_MEMORY_OFFSET+0x004052C,0x00000000
+#define SRM_DI0_SW_GEN1_7__FULL                                 IPU_MEMORY_OFFSET+0x004052C,0xffffffff
+#define SRM_DI0_SW_GEN1_7__DI0_CNT_POLARITY_GEN_EN_7            IPU_MEMORY_OFFSET+0x004052C,0x60000000
+#define SRM_DI0_SW_GEN1_7__DI0_CNT_AUTO_RELOAD_7                IPU_MEMORY_OFFSET+0x004052C,0x10000000
+#define SRM_DI0_SW_GEN1_7__DI0_CNT_CLR_SEL_7                    IPU_MEMORY_OFFSET+0x004052C,0x0E000000
+#define SRM_DI0_SW_GEN1_7__DI0_CNT_DOWN_7                       IPU_MEMORY_OFFSET+0x004052C,0x01FF0000
+#define SRM_DI0_SW_GEN1_7__DI0_CNT_POLARITY_TRIGGER_SEL_7       IPU_MEMORY_OFFSET+0x004052C,0x00007000
+#define SRM_DI0_SW_GEN1_7__DI0_CNT_POLARITY_CLR_SEL_7           IPU_MEMORY_OFFSET+0x004052C,0x00000E00
+#define SRM_DI0_SW_GEN1_7__DI0_CNT_UP_7                         IPU_MEMORY_OFFSET+0x004052C,0x000001FF
+
+#define SRM_DI0_SW_GEN1_8__ADDR                                 IPU_MEMORY_OFFSET+0x0040530
+#define SRM_DI0_SW_GEN1_8__EMPTY                                IPU_MEMORY_OFFSET+0x0040530,0x00000000
+#define SRM_DI0_SW_GEN1_8__FULL                                 IPU_MEMORY_OFFSET+0x0040530,0xffffffff
+#define SRM_DI0_SW_GEN1_8__DI0_CNT_POLARITY_GEN_EN_8            IPU_MEMORY_OFFSET+0x0040530,0x60000000
+#define SRM_DI0_SW_GEN1_8__DI0_CNT_AUTO_RELOAD_8                IPU_MEMORY_OFFSET+0x0040530,0x10000000
+#define SRM_DI0_SW_GEN1_8__DI0_CNT_CLR_SEL_8                    IPU_MEMORY_OFFSET+0x0040530,0x0E000000
+#define SRM_DI0_SW_GEN1_8__DI0_CNT_DOWN_8                       IPU_MEMORY_OFFSET+0x0040530,0x01FF0000
+#define SRM_DI0_SW_GEN1_8__DI0_CNT_POLARITY_TRIGGER_SEL_8       IPU_MEMORY_OFFSET+0x0040530,0x00007000
+#define SRM_DI0_SW_GEN1_8__DI0_CNT_POLARITY_CLR_SEL_8           IPU_MEMORY_OFFSET+0x0040530,0x00000E00
+#define SRM_DI0_SW_GEN1_8__DI0_CNT_UP_8                         IPU_MEMORY_OFFSET+0x0040530,0x000001FF
+
+#define SRM_DI0_SW_GEN1_9__ADDR                                 IPU_MEMORY_OFFSET+0x0040534
+#define SRM_DI0_SW_GEN1_9__EMPTY                                IPU_MEMORY_OFFSET+0x0040534,0x00000000
+#define SRM_DI0_SW_GEN1_9__FULL                                 IPU_MEMORY_OFFSET+0x0040534,0xffffffff
+#define SRM_DI0_SW_GEN1_9__DI0_GENTIME_SEL_9                    IPU_MEMORY_OFFSET+0x0040534,0xE0000000
+#define SRM_DI0_SW_GEN1_9__DI0_CNT_AUTO_RELOAD_9                IPU_MEMORY_OFFSET+0x0040534,0x10000000
+#define SRM_DI0_SW_GEN1_9__DI0_CNT_CLR_SEL_9                    IPU_MEMORY_OFFSET+0x0040534,0x0E000000
+#define SRM_DI0_SW_GEN1_9__DI0_CNT_DOWN_9                       IPU_MEMORY_OFFSET+0x0040534,0x01FF0000
+#define SRM_DI0_SW_GEN1_9__DI0_TAG_SEL_9                        IPU_MEMORY_OFFSET+0x0040534,0x00008000
+#define SRM_DI0_SW_GEN1_9__DI0_CNT_UP_9                         IPU_MEMORY_OFFSET+0x0040534,0x000001FF
+
+#define SRM_DI0_SYNC_AS_GEN__ADDR                               IPU_MEMORY_OFFSET+0x0040538
+#define SRM_DI0_SYNC_AS_GEN__EMPTY                              IPU_MEMORY_OFFSET+0x0040538,0x00000000
+#define SRM_DI0_SYNC_AS_GEN__FULL                               IPU_MEMORY_OFFSET+0x0040538,0xffffffff
+#define SRM_DI0_SYNC_AS_GEN__DI0_SYNC_START_EN                  IPU_MEMORY_OFFSET+0x0040538,0x10000000
+#define SRM_DI0_SYNC_AS_GEN__DI0_VSYNC_SEL                      IPU_MEMORY_OFFSET+0x0040538,0x0000E000
+#define SRM_DI0_SYNC_AS_GEN__DI0_SYNC_START                     IPU_MEMORY_OFFSET+0x0040538,0x00000FFF
+
+#define SRM_DI0_DW_GEN_0__ADDR                                  IPU_MEMORY_OFFSET+0x004053C
+#define SRM_DI0_DW_GEN_0__EMPTY                                 IPU_MEMORY_OFFSET+0x004053C,0x00000000
+#define SRM_DI0_DW_GEN_0__FULL                                  IPU_MEMORY_OFFSET+0x004053C,0xffffffff
+#define SRM_DI0_DW_GEN_0__DI0_ACCESS_SIZE_0                     IPU_MEMORY_OFFSET+0x004053C,0xFF000000
+#define SRM_DI0_DW_GEN_0__DI0_COMPONNENT_SIZE_0                 IPU_MEMORY_OFFSET+0x004053C,0x00FF0000
+#define SRM_DI0_DW_GEN_0__DI0_CST_0                             IPU_MEMORY_OFFSET+0x004053C,0x0000C000
+#define SRM_DI0_DW_GEN_0__DI0_PT_6_0                            IPU_MEMORY_OFFSET+0x004053C,0x00003000
+#define SRM_DI0_DW_GEN_0__DI0_PT_5_0                            IPU_MEMORY_OFFSET+0x004053C,0x00000C00
+#define SRM_DI0_DW_GEN_0__DI0_PT_4_0                            IPU_MEMORY_OFFSET+0x004053C,0x00000300
+#define SRM_DI0_DW_GEN_0__DI0_PT_3_0                            IPU_MEMORY_OFFSET+0x004053C,0x000000C0
+#define SRM_DI0_DW_GEN_0__DI0_PT_2_0                            IPU_MEMORY_OFFSET+0x004053C,0x00000030
+#define SRM_DI0_DW_GEN_0__DI0_PT_1_0                            IPU_MEMORY_OFFSET+0x004053C,0x0000000C
+#define SRM_DI0_DW_GEN_0__DI0_PT_0_0                            IPU_MEMORY_OFFSET+0x004053C,0x00000003
+
+#define SRM_DI0_DW_GEN_1__ADDR                                  IPU_MEMORY_OFFSET+0x0040540
+#define SRM_DI0_DW_GEN_1__EMPTY                                 IPU_MEMORY_OFFSET+0x0040540,0x00000000
+#define SRM_DI0_DW_GEN_1__FULL                                  IPU_MEMORY_OFFSET+0x0040540,0xffffffff
+#define SRM_DI0_DW_GEN_1__DI0_ACCESS_SIZE_1                     IPU_MEMORY_OFFSET+0x0040540,0xFF000000
+#define SRM_DI0_DW_GEN_1__DI0_COMPONNENT_SIZE_1                 IPU_MEMORY_OFFSET+0x0040540,0x00FF0000
+#define SRM_DI0_DW_GEN_1__DI0_CST_1                             IPU_MEMORY_OFFSET+0x0040540,0x0000C000
+#define SRM_DI0_DW_GEN_1__DI0_PT_6_1                            IPU_MEMORY_OFFSET+0x0040540,0x00003000
+#define SRM_DI0_DW_GEN_1__DI0_PT_5_1                            IPU_MEMORY_OFFSET+0x0040540,0x00000C00
+#define SRM_DI0_DW_GEN_1__DI0_PT_4_1                            IPU_MEMORY_OFFSET+0x0040540,0x00000300
+#define SRM_DI0_DW_GEN_1__DI0_PT_3_1                            IPU_MEMORY_OFFSET+0x0040540,0x000000C0
+#define SRM_DI0_DW_GEN_1__DI0_PT_2_1                            IPU_MEMORY_OFFSET+0x0040540,0x00000030
+#define SRM_DI0_DW_GEN_1__DI0_PT_1_1                            IPU_MEMORY_OFFSET+0x0040540,0x0000000C
+#define SRM_DI0_DW_GEN_1__DI0_PT_0_1                            IPU_MEMORY_OFFSET+0x0040540,0x00000003
+
+#define SRM_DI0_DW_GEN_2__ADDR                                  IPU_MEMORY_OFFSET+0x0040544
+#define SRM_DI0_DW_GEN_2__EMPTY                                 IPU_MEMORY_OFFSET+0x0040544,0x00000000
+#define SRM_DI0_DW_GEN_2__FULL                                  IPU_MEMORY_OFFSET+0x0040544,0xffffffff
+#define SRM_DI0_DW_GEN_2__DI0_ACCESS_SIZE_2                     IPU_MEMORY_OFFSET+0x0040544,0xFF000000
+#define SRM_DI0_DW_GEN_2__DI0_COMPONNENT_SIZE_2                 IPU_MEMORY_OFFSET+0x0040544,0x00FF0000
+#define SRM_DI0_DW_GEN_2__DI0_CST_2                             IPU_MEMORY_OFFSET+0x0040544,0x0000C000
+#define SRM_DI0_DW_GEN_2__DI0_PT_6_2                            IPU_MEMORY_OFFSET+0x0040544,0x00003000
+#define SRM_DI0_DW_GEN_2__DI0_PT_5_2                            IPU_MEMORY_OFFSET+0x0040544,0x00000C00
+#define SRM_DI0_DW_GEN_2__DI0_PT_4_2                            IPU_MEMORY_OFFSET+0x0040544,0x00000300
+#define SRM_DI0_DW_GEN_2__DI0_PT_3_2                            IPU_MEMORY_OFFSET+0x0040544,0x000000C0
+#define SRM_DI0_DW_GEN_2__DI0_PT_2_2                            IPU_MEMORY_OFFSET+0x0040544,0x00000030
+#define SRM_DI0_DW_GEN_2__DI0_PT_1_2                            IPU_MEMORY_OFFSET+0x0040544,0x0000000C
+#define SRM_DI0_DW_GEN_2__DI0_PT_0_2                            IPU_MEMORY_OFFSET+0x0040544,0x00000003
+
+#define SRM_DI0_DW_GEN_3__ADDR                                  IPU_MEMORY_OFFSET+0x0040548
+#define SRM_DI0_DW_GEN_3__EMPTY                                 IPU_MEMORY_OFFSET+0x0040548,0x00000000
+#define SRM_DI0_DW_GEN_3__FULL                                  IPU_MEMORY_OFFSET+0x0040548,0xffffffff
+#define SRM_DI0_DW_GEN_3__DI0_ACCESS_SIZE_3                     IPU_MEMORY_OFFSET+0x0040548,0xFF000000
+#define SRM_DI0_DW_GEN_3__DI0_COMPONNENT_SIZE_3                 IPU_MEMORY_OFFSET+0x0040548,0x00FF0000
+#define SRM_DI0_DW_GEN_3__DI0_CST_3                             IPU_MEMORY_OFFSET+0x0040548,0x0000C000
+#define SRM_DI0_DW_GEN_3__DI0_PT_6_3                            IPU_MEMORY_OFFSET+0x0040548,0x00003000
+#define SRM_DI0_DW_GEN_3__DI0_PT_5_3                            IPU_MEMORY_OFFSET+0x0040548,0x00000C00
+#define SRM_DI0_DW_GEN_3__DI0_PT_4_3                            IPU_MEMORY_OFFSET+0x0040548,0x00000300
+#define SRM_DI0_DW_GEN_3__DI0_PT_3_3                            IPU_MEMORY_OFFSET+0x0040548,0x000000C0
+#define SRM_DI0_DW_GEN_3__DI0_PT_2_3                            IPU_MEMORY_OFFSET+0x0040548,0x00000030
+#define SRM_DI0_DW_GEN_3__DI0_PT_1_3                            IPU_MEMORY_OFFSET+0x0040548,0x0000000C
+#define SRM_DI0_DW_GEN_3__DI0_PT_0_3                            IPU_MEMORY_OFFSET+0x0040548,0x00000003
+
+#define SRM_DI0_DW_GEN_4__ADDR                                  IPU_MEMORY_OFFSET+0x004054C
+#define SRM_DI0_DW_GEN_4__EMPTY                                 IPU_MEMORY_OFFSET+0x004054C,0x00000000
+#define SRM_DI0_DW_GEN_4__FULL                                  IPU_MEMORY_OFFSET+0x004054C,0xffffffff
+#define SRM_DI0_DW_GEN_4__DI0_ACCESS_SIZE_4                     IPU_MEMORY_OFFSET+0x004054C,0xFF000000
+#define SRM_DI0_DW_GEN_4__DI0_COMPONNENT_SIZE_4                 IPU_MEMORY_OFFSET+0x004054C,0x00FF0000
+#define SRM_DI0_DW_GEN_4__DI0_CST_4                             IPU_MEMORY_OFFSET+0x004054C,0x0000C000
+#define SRM_DI0_DW_GEN_4__DI0_PT_6_4                            IPU_MEMORY_OFFSET+0x004054C,0x00003000
+#define SRM_DI0_DW_GEN_4__DI0_PT_5_4                            IPU_MEMORY_OFFSET+0x004054C,0x00000C00
+#define SRM_DI0_DW_GEN_4__DI0_PT_4_4                            IPU_MEMORY_OFFSET+0x004054C,0x00000300
+#define SRM_DI0_DW_GEN_4__DI0_PT_3_4                            IPU_MEMORY_OFFSET+0x004054C,0x000000C0
+#define SRM_DI0_DW_GEN_4__DI0_PT_2_4                            IPU_MEMORY_OFFSET+0x004054C,0x00000030
+#define SRM_DI0_DW_GEN_4__DI0_PT_1_4                            IPU_MEMORY_OFFSET+0x004054C,0x0000000C
+#define SRM_DI0_DW_GEN_4__DI0_PT_0_4                            IPU_MEMORY_OFFSET+0x004054C,0x00000003
+
+#define SRM_DI0_DW_GEN_5__ADDR                                  IPU_MEMORY_OFFSET+0x0040550
+#define SRM_DI0_DW_GEN_5__EMPTY                                 IPU_MEMORY_OFFSET+0x0040550,0x00000000
+#define SRM_DI0_DW_GEN_5__FULL                                  IPU_MEMORY_OFFSET+0x0040550,0xffffffff
+#define SRM_DI0_DW_GEN_5__DI0_ACCESS_SIZE_5                     IPU_MEMORY_OFFSET+0x0040550,0xFF000000
+#define SRM_DI0_DW_GEN_5__DI0_COMPONNENT_SIZE_5                 IPU_MEMORY_OFFSET+0x0040550,0x00FF0000
+#define SRM_DI0_DW_GEN_5__DI0_CST_5                             IPU_MEMORY_OFFSET+0x0040550,0x0000C000
+#define SRM_DI0_DW_GEN_5__DI0_PT_6_5                            IPU_MEMORY_OFFSET+0x0040550,0x00003000
+#define SRM_DI0_DW_GEN_5__DI0_PT_5_5                            IPU_MEMORY_OFFSET+0x0040550,0x00000C00
+#define SRM_DI0_DW_GEN_5__DI0_PT_4_5                            IPU_MEMORY_OFFSET+0x0040550,0x00000300
+#define SRM_DI0_DW_GEN_5__DI0_PT_3_5                            IPU_MEMORY_OFFSET+0x0040550,0x000000C0
+#define SRM_DI0_DW_GEN_5__DI0_PT_2_5                            IPU_MEMORY_OFFSET+0x0040550,0x00000030
+#define SRM_DI0_DW_GEN_5__DI0_PT_1_5                            IPU_MEMORY_OFFSET+0x0040550,0x0000000C
+#define SRM_DI0_DW_GEN_5__DI0_PT_0_5                            IPU_MEMORY_OFFSET+0x0040550,0x00000003
+
+#define SRM_DI0_DW_GEN_6__ADDR                                  IPU_MEMORY_OFFSET+0x0040554
+#define SRM_DI0_DW_GEN_6__EMPTY                                 IPU_MEMORY_OFFSET+0x0040554,0x00000000
+#define SRM_DI0_DW_GEN_6__FULL                                  IPU_MEMORY_OFFSET+0x0040554,0xffffffff
+#define SRM_DI0_DW_GEN_6__DI0_ACCESS_SIZE_6                     IPU_MEMORY_OFFSET+0x0040554,0xFF000000
+#define SRM_DI0_DW_GEN_6__DI0_COMPONNENT_SIZE_6                 IPU_MEMORY_OFFSET+0x0040554,0x00FF0000
+#define SRM_DI0_DW_GEN_6__DI0_CST_6                             IPU_MEMORY_OFFSET+0x0040554,0x0000C000
+#define SRM_DI0_DW_GEN_6__DI0_PT_6_6                            IPU_MEMORY_OFFSET+0x0040554,0x00003000
+#define SRM_DI0_DW_GEN_6__DI0_PT_5_6                            IPU_MEMORY_OFFSET+0x0040554,0x00000C00
+#define SRM_DI0_DW_GEN_6__DI0_PT_4_6                            IPU_MEMORY_OFFSET+0x0040554,0x00000300
+#define SRM_DI0_DW_GEN_6__DI0_PT_3_6                            IPU_MEMORY_OFFSET+0x0040554,0x000000C0
+#define SRM_DI0_DW_GEN_6__DI0_PT_2_6                            IPU_MEMORY_OFFSET+0x0040554,0x00000030
+#define SRM_DI0_DW_GEN_6__DI0_PT_1_6                            IPU_MEMORY_OFFSET+0x0040554,0x0000000C
+#define SRM_DI0_DW_GEN_6__DI0_PT_0_6                            IPU_MEMORY_OFFSET+0x0040554,0x00000003
+
+#define SRM_DI0_DW_GEN_7__ADDR                                  IPU_MEMORY_OFFSET+0x0040558
+#define SRM_DI0_DW_GEN_7__EMPTY                                 IPU_MEMORY_OFFSET+0x0040558,0x00000000
+#define SRM_DI0_DW_GEN_7__FULL                                  IPU_MEMORY_OFFSET+0x0040558,0xffffffff
+#define SRM_DI0_DW_GEN_7__DI0_ACCESS_SIZE_7                     IPU_MEMORY_OFFSET+0x0040558,0xFF000000
+#define SRM_DI0_DW_GEN_7__DI0_COMPONNENT_SIZE_7                 IPU_MEMORY_OFFSET+0x0040558,0x00FF0000
+#define SRM_DI0_DW_GEN_7__DI0_CST_7                             IPU_MEMORY_OFFSET+0x0040558,0x0000C000
+#define SRM_DI0_DW_GEN_7__DI0_PT_6_7                            IPU_MEMORY_OFFSET+0x0040558,0x00003000
+#define SRM_DI0_DW_GEN_7__DI0_PT_5_7                            IPU_MEMORY_OFFSET+0x0040558,0x00000C00
+#define SRM_DI0_DW_GEN_7__DI0_PT_4_7                            IPU_MEMORY_OFFSET+0x0040558,0x00000300
+#define SRM_DI0_DW_GEN_7__DI0_PT_3_7                            IPU_MEMORY_OFFSET+0x0040558,0x000000C0
+#define SRM_DI0_DW_GEN_7__DI0_PT_2_7                            IPU_MEMORY_OFFSET+0x0040558,0x00000030
+#define SRM_DI0_DW_GEN_7__DI0_PT_1_7                            IPU_MEMORY_OFFSET+0x0040558,0x0000000C
+#define SRM_DI0_DW_GEN_7__DI0_PT_0_7                            IPU_MEMORY_OFFSET+0x0040558,0x00000003
+
+#define SRM_DI0_DW_GEN_8__ADDR                                  IPU_MEMORY_OFFSET+0x004055C
+#define SRM_DI0_DW_GEN_8__EMPTY                                 IPU_MEMORY_OFFSET+0x004055C,0x00000000
+#define SRM_DI0_DW_GEN_8__FULL                                  IPU_MEMORY_OFFSET+0x004055C,0xffffffff
+#define SRM_DI0_DW_GEN_8__DI0_ACCESS_SIZE_8                     IPU_MEMORY_OFFSET+0x004055C,0xFF000000
+#define SRM_DI0_DW_GEN_8__DI0_COMPONNENT_SIZE_8                 IPU_MEMORY_OFFSET+0x004055C,0x00FF0000
+#define SRM_DI0_DW_GEN_8__DI0_CST_8                             IPU_MEMORY_OFFSET+0x004055C,0x0000C000
+#define SRM_DI0_DW_GEN_8__DI0_PT_6_8                            IPU_MEMORY_OFFSET+0x004055C,0x00003000
+#define SRM_DI0_DW_GEN_8__DI0_PT_5_8                            IPU_MEMORY_OFFSET+0x004055C,0x00000C00
+#define SRM_DI0_DW_GEN_8__DI0_PT_4_8                            IPU_MEMORY_OFFSET+0x004055C,0x00000300
+#define SRM_DI0_DW_GEN_8__DI0_PT_3_8                            IPU_MEMORY_OFFSET+0x004055C,0x000000C0
+#define SRM_DI0_DW_GEN_8__DI0_PT_2_8                            IPU_MEMORY_OFFSET+0x004055C,0x00000030
+#define SRM_DI0_DW_GEN_8__DI0_PT_1_8                            IPU_MEMORY_OFFSET+0x004055C,0x0000000C
+#define SRM_DI0_DW_GEN_8__DI0_PT_0_8                            IPU_MEMORY_OFFSET+0x004055C,0x00000003
+
+#define SRM_DI0_DW_GEN_9__ADDR                                  IPU_MEMORY_OFFSET+0x0040560
+#define SRM_DI0_DW_GEN_9__EMPTY                                 IPU_MEMORY_OFFSET+0x0040560,0x00000000
+#define SRM_DI0_DW_GEN_9__FULL                                  IPU_MEMORY_OFFSET+0x0040560,0xffffffff
+#define SRM_DI0_DW_GEN_9__DI0_ACCESS_SIZE_9                     IPU_MEMORY_OFFSET+0x0040560,0xFF000000
+#define SRM_DI0_DW_GEN_9__DI0_COMPONNENT_SIZE_9                 IPU_MEMORY_OFFSET+0x0040560,0x00FF0000
+#define SRM_DI0_DW_GEN_9__DI0_CST_9                             IPU_MEMORY_OFFSET+0x0040560,0x0000C000
+#define SRM_DI0_DW_GEN_9__DI0_PT_6_9                            IPU_MEMORY_OFFSET+0x0040560,0x00003000
+#define SRM_DI0_DW_GEN_9__DI0_PT_5_9                            IPU_MEMORY_OFFSET+0x0040560,0x00000C00
+#define SRM_DI0_DW_GEN_9__DI0_PT_4_9                            IPU_MEMORY_OFFSET+0x0040560,0x00000300
+#define SRM_DI0_DW_GEN_9__DI0_PT_3_9                            IPU_MEMORY_OFFSET+0x0040560,0x000000C0
+#define SRM_DI0_DW_GEN_9__DI0_PT_2_9                            IPU_MEMORY_OFFSET+0x0040560,0x00000030
+#define SRM_DI0_DW_GEN_9__DI0_PT_1_9                            IPU_MEMORY_OFFSET+0x0040560,0x0000000C
+#define SRM_DI0_DW_GEN_9__DI0_PT_0_9                            IPU_MEMORY_OFFSET+0x0040560,0x00000003
+
+#define SRM_DI0_DW_GEN_10__ADDR                                 IPU_MEMORY_OFFSET+0x0040564
+#define SRM_DI0_DW_GEN_10__EMPTY                                IPU_MEMORY_OFFSET+0x0040564,0x00000000
+#define SRM_DI0_DW_GEN_10__FULL                                 IPU_MEMORY_OFFSET+0x0040564,0xffffffff
+#define SRM_DI0_DW_GEN_10__DI0_ACCESS_SIZE_10                   IPU_MEMORY_OFFSET+0x0040564,0xFF000000
+#define SRM_DI0_DW_GEN_10__DI0_COMPONNENT_SIZE_10               IPU_MEMORY_OFFSET+0x0040564,0x00FF0000
+#define SRM_DI0_DW_GEN_10__DI0_CST_10                           IPU_MEMORY_OFFSET+0x0040564,0x0000C000
+#define SRM_DI0_DW_GEN_10__DI0_PT_6_10                          IPU_MEMORY_OFFSET+0x0040564,0x00003000
+#define SRM_DI0_DW_GEN_10__DI0_PT_5_10                          IPU_MEMORY_OFFSET+0x0040564,0x00000C00
+#define SRM_DI0_DW_GEN_10__DI0_PT_4_10                          IPU_MEMORY_OFFSET+0x0040564,0x00000300
+#define SRM_DI0_DW_GEN_10__DI0_PT_3_10                          IPU_MEMORY_OFFSET+0x0040564,0x000000C0
+#define SRM_DI0_DW_GEN_10__DI0_PT_2_10                          IPU_MEMORY_OFFSET+0x0040564,0x00000030
+#define SRM_DI0_DW_GEN_10__DI0_PT_1_10                          IPU_MEMORY_OFFSET+0x0040564,0x0000000C
+#define SRM_DI0_DW_GEN_10__DI0_PT_0_10                          IPU_MEMORY_OFFSET+0x0040564,0x00000003
+
+#define SRM_DI0_DW_GEN_11__ADDR                                 IPU_MEMORY_OFFSET+0x0040568
+#define SRM_DI0_DW_GEN_11__EMPTY                                IPU_MEMORY_OFFSET+0x0040568,0x00000000
+#define SRM_DI0_DW_GEN_11__FULL                                 IPU_MEMORY_OFFSET+0x0040568,0xffffffff
+#define SRM_DI0_DW_GEN_11__DI0_ACCESS_SIZE_11                   IPU_MEMORY_OFFSET+0x0040568,0xFF000000
+#define SRM_DI0_DW_GEN_11__DI0_COMPONNENT_SIZE_11               IPU_MEMORY_OFFSET+0x0040568,0x00FF0000
+#define SRM_DI0_DW_GEN_11__DI0_CST_11                           IPU_MEMORY_OFFSET+0x0040568,0x0000C000
+#define SRM_DI0_DW_GEN_11__DI0_PT_6_11                          IPU_MEMORY_OFFSET+0x0040568,0x00003000
+#define SRM_DI0_DW_GEN_11__DI0_PT_5_11                          IPU_MEMORY_OFFSET+0x0040568,0x00000C00
+#define SRM_DI0_DW_GEN_11__DI0_PT_4_11                          IPU_MEMORY_OFFSET+0x0040568,0x00000300
+#define SRM_DI0_DW_GEN_11__DI0_PT_3_11                          IPU_MEMORY_OFFSET+0x0040568,0x000000C0
+#define SRM_DI0_DW_GEN_11__DI0_PT_2_11                          IPU_MEMORY_OFFSET+0x0040568,0x00000030
+#define SRM_DI0_DW_GEN_11__DI0_PT_1_11                          IPU_MEMORY_OFFSET+0x0040568,0x0000000C
+#define SRM_DI0_DW_GEN_11__DI0_PT_0_11                          IPU_MEMORY_OFFSET+0x0040568,0x00000003
+
+#define SRM_DI0_DW_SET0_0__ADDR                                 IPU_MEMORY_OFFSET+0x004056C
+#define SRM_DI0_DW_SET0_0__EMPTY                                IPU_MEMORY_OFFSET+0x004056C,0x00000000
+#define SRM_DI0_DW_SET0_0__FULL                                 IPU_MEMORY_OFFSET+0x004056C,0xffffffff
+#define SRM_DI0_DW_SET0_0__DI0_DATA_CNT_DOWN0_0                 IPU_MEMORY_OFFSET+0x004056C,0x01FF0000
+#define SRM_DI0_DW_SET0_0__DI0_DATA_CNT_UP0_0                   IPU_MEMORY_OFFSET+0x004056C,0x000001FF
+
+#define SRM_DI0_DW_SET0_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040570
+#define SRM_DI0_DW_SET0_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040570,0x00000000
+#define SRM_DI0_DW_SET0_1__FULL                                 IPU_MEMORY_OFFSET+0x0040570,0xffffffff
+#define SRM_DI0_DW_SET0_1__DI0_DATA_CNT_DOWN0_1                 IPU_MEMORY_OFFSET+0x0040570,0x01FF0000
+#define SRM_DI0_DW_SET0_1__DI0_DATA_CNT_UP0_1                   IPU_MEMORY_OFFSET+0x0040570,0x000001FF
+
+#define SRM_DI0_DW_SET0_2__ADDR                                 IPU_MEMORY_OFFSET+0x0040574
+#define SRM_DI0_DW_SET0_2__EMPTY                                IPU_MEMORY_OFFSET+0x0040574,0x00000000
+#define SRM_DI0_DW_SET0_2__FULL                                 IPU_MEMORY_OFFSET+0x0040574,0xffffffff
+#define SRM_DI0_DW_SET0_2__DI0_DATA_CNT_DOWN0_2                 IPU_MEMORY_OFFSET+0x0040574,0x01FF0000
+#define SRM_DI0_DW_SET0_2__DI0_DATA_CNT_UP0_2                   IPU_MEMORY_OFFSET+0x0040574,0x000001FF
+
+#define SRM_DI0_DW_SET0_3__ADDR                                 IPU_MEMORY_OFFSET+0x0040578
+#define SRM_DI0_DW_SET0_3__EMPTY                                IPU_MEMORY_OFFSET+0x0040578,0x00000000
+#define SRM_DI0_DW_SET0_3__FULL                                 IPU_MEMORY_OFFSET+0x0040578,0xffffffff
+#define SRM_DI0_DW_SET0_3__DI0_DATA_CNT_DOWN0_3                 IPU_MEMORY_OFFSET+0x0040578,0x01FF0000
+#define SRM_DI0_DW_SET0_3__DI0_DATA_CNT_UP0_3                   IPU_MEMORY_OFFSET+0x0040578,0x000001FF
+
+#define SRM_DI0_DW_SET0_4__ADDR                                 IPU_MEMORY_OFFSET+0x004057C
+#define SRM_DI0_DW_SET0_4__EMPTY                                IPU_MEMORY_OFFSET+0x004057C,0x00000000
+#define SRM_DI0_DW_SET0_4__FULL                                 IPU_MEMORY_OFFSET+0x004057C,0xffffffff
+#define SRM_DI0_DW_SET0_4__DI0_DATA_CNT_DOWN0_4                 IPU_MEMORY_OFFSET+0x004057C,0x01FF0000
+#define SRM_DI0_DW_SET0_4__DI0_DATA_CNT_UP0_4                   IPU_MEMORY_OFFSET+0x004057C,0x000001FF
+
+#define SRM_DI0_DW_SET0_5__ADDR                                 IPU_MEMORY_OFFSET+0x0040580
+#define SRM_DI0_DW_SET0_5__EMPTY                                IPU_MEMORY_OFFSET+0x0040580,0x00000000
+#define SRM_DI0_DW_SET0_5__FULL                                 IPU_MEMORY_OFFSET+0x0040580,0xffffffff
+#define SRM_DI0_DW_SET0_5__DI0_DATA_CNT_DOWN0_5                 IPU_MEMORY_OFFSET+0x0040580,0x01FF0000
+#define SRM_DI0_DW_SET0_5__DI0_DATA_CNT_UP0_5                   IPU_MEMORY_OFFSET+0x0040580,0x000001FF
+
+#define SRM_DI0_DW_SET0_6__ADDR                                 IPU_MEMORY_OFFSET+0x0040584
+#define SRM_DI0_DW_SET0_6__EMPTY                                IPU_MEMORY_OFFSET+0x0040584,0x00000000
+#define SRM_DI0_DW_SET0_6__FULL                                 IPU_MEMORY_OFFSET+0x0040584,0xffffffff
+#define SRM_DI0_DW_SET0_6__DI0_DATA_CNT_DOWN0_6                 IPU_MEMORY_OFFSET+0x0040584,0x01FF0000
+#define SRM_DI0_DW_SET0_6__DI0_DATA_CNT_UP0_6                   IPU_MEMORY_OFFSET+0x0040584,0x000001FF
+
+#define SRM_DI0_DW_SET0_7__ADDR                                 IPU_MEMORY_OFFSET+0x0040588
+#define SRM_DI0_DW_SET0_7__EMPTY                                IPU_MEMORY_OFFSET+0x0040588,0x00000000
+#define SRM_DI0_DW_SET0_7__FULL                                 IPU_MEMORY_OFFSET+0x0040588,0xffffffff
+#define SRM_DI0_DW_SET0_7__DI0_DATA_CNT_DOWN0_7                 IPU_MEMORY_OFFSET+0x0040588,0x01FF0000
+#define SRM_DI0_DW_SET0_7__DI0_DATA_CNT_UP0_7                   IPU_MEMORY_OFFSET+0x0040588,0x000001FF
+
+#define SRM_DI0_DW_SET0_8__ADDR                                 IPU_MEMORY_OFFSET+0x004058C
+#define SRM_DI0_DW_SET0_8__EMPTY                                IPU_MEMORY_OFFSET+0x004058C,0x00000000
+#define SRM_DI0_DW_SET0_8__FULL                                 IPU_MEMORY_OFFSET+0x004058C,0xffffffff
+#define SRM_DI0_DW_SET0_8__DI0_DATA_CNT_DOWN0_8                 IPU_MEMORY_OFFSET+0x004058C,0x01FF0000
+#define SRM_DI0_DW_SET0_8__DI0_DATA_CNT_UP0_8                   IPU_MEMORY_OFFSET+0x004058C,0x000001FF
+
+#define SRM_DI0_DW_SET0_9__ADDR                                 IPU_MEMORY_OFFSET+0x0040590
+#define SRM_DI0_DW_SET0_9__EMPTY                                IPU_MEMORY_OFFSET+0x0040590,0x00000000
+#define SRM_DI0_DW_SET0_9__FULL                                 IPU_MEMORY_OFFSET+0x0040590,0xffffffff
+#define SRM_DI0_DW_SET0_9__DI0_DATA_CNT_DOWN0_9                 IPU_MEMORY_OFFSET+0x0040590,0x01FF0000
+#define SRM_DI0_DW_SET0_9__DI0_DATA_CNT_UP0_9                   IPU_MEMORY_OFFSET+0x0040590,0x000001FF
+
+#define SRM_DI0_DW_SET0_10__ADDR                                IPU_MEMORY_OFFSET+0x0040594
+#define SRM_DI0_DW_SET0_10__EMPTY                               IPU_MEMORY_OFFSET+0x0040594,0x00000000
+#define SRM_DI0_DW_SET0_10__FULL                                IPU_MEMORY_OFFSET+0x0040594,0xffffffff
+#define SRM_DI0_DW_SET0_10__DI0_DATA_CNT_DOWN0_10               IPU_MEMORY_OFFSET+0x0040594,0x01FF0000
+#define SRM_DI0_DW_SET0_10__DI0_DATA_CNT_UP0_10                 IPU_MEMORY_OFFSET+0x0040594,0x000001FF
+
+#define SRM_DI0_DW_SET0_11__ADDR                                IPU_MEMORY_OFFSET+0x0040598
+#define SRM_DI0_DW_SET0_11__EMPTY                               IPU_MEMORY_OFFSET+0x0040598,0x00000000
+#define SRM_DI0_DW_SET0_11__FULL                                IPU_MEMORY_OFFSET+0x0040598,0xffffffff
+#define SRM_DI0_DW_SET0_11__DI0_DATA_CNT_DOWN0_11               IPU_MEMORY_OFFSET+0x0040598,0x01FF0000
+#define SRM_DI0_DW_SET0_11__DI0_DATA_CNT_UP0_11                 IPU_MEMORY_OFFSET+0x0040598,0x000001FF
+
+#define SRM_DI0_DW_SET1_0__ADDR                                 IPU_MEMORY_OFFSET+0x004059C
+#define SRM_DI0_DW_SET1_0__EMPTY                                IPU_MEMORY_OFFSET+0x004059C,0x00000000
+#define SRM_DI0_DW_SET1_0__FULL                                 IPU_MEMORY_OFFSET+0x004059C,0xffffffff
+#define SRM_DI0_DW_SET1_0__DI0_DATA_CNT_DOWN1_0                 IPU_MEMORY_OFFSET+0x004059C,0x01FF0000
+#define SRM_DI0_DW_SET1_0__DI0_DATA_CNT_UP1_0                   IPU_MEMORY_OFFSET+0x004059C,0x000001FF
+
+#define SRM_DI0_DW_SET1_1__ADDR                                 IPU_MEMORY_OFFSET+0x00405A0
+#define SRM_DI0_DW_SET1_1__EMPTY                                IPU_MEMORY_OFFSET+0x00405A0,0x00000000
+#define SRM_DI0_DW_SET1_1__FULL                                 IPU_MEMORY_OFFSET+0x00405A0,0xffffffff
+#define SRM_DI0_DW_SET1_1__DI0_DATA_CNT_DOWN1_1                 IPU_MEMORY_OFFSET+0x00405A0,0x01FF0000
+#define SRM_DI0_DW_SET1_1__DI0_DATA_CNT_UP1_1                   IPU_MEMORY_OFFSET+0x00405A0,0x000001FF
+
+#define SRM_DI0_DW_SET1_2__ADDR                                 IPU_MEMORY_OFFSET+0x00405A4
+#define SRM_DI0_DW_SET1_2__EMPTY                                IPU_MEMORY_OFFSET+0x00405A4,0x00000000
+#define SRM_DI0_DW_SET1_2__FULL                                 IPU_MEMORY_OFFSET+0x00405A4,0xffffffff
+#define SRM_DI0_DW_SET1_2__DI0_DATA_CNT_DOWN1_2                 IPU_MEMORY_OFFSET+0x00405A4,0x01FF0000
+#define SRM_DI0_DW_SET1_2__DI0_DATA_CNT_UP1_2                   IPU_MEMORY_OFFSET+0x00405A4,0x000001FF
+
+#define SRM_DI0_DW_SET1_3__ADDR                                 IPU_MEMORY_OFFSET+0x00405A8
+#define SRM_DI0_DW_SET1_3__EMPTY                                IPU_MEMORY_OFFSET+0x00405A8,0x00000000
+#define SRM_DI0_DW_SET1_3__FULL                                 IPU_MEMORY_OFFSET+0x00405A8,0xffffffff
+#define SRM_DI0_DW_SET1_3__DI0_DATA_CNT_DOWN1_3                 IPU_MEMORY_OFFSET+0x00405A8,0x01FF0000
+#define SRM_DI0_DW_SET1_3__DI0_DATA_CNT_UP1_3                   IPU_MEMORY_OFFSET+0x00405A8,0x000001FF
+
+#define SRM_DI0_DW_SET1_4__ADDR                                 IPU_MEMORY_OFFSET+0x00405AC
+#define SRM_DI0_DW_SET1_4__EMPTY                                IPU_MEMORY_OFFSET+0x00405AC,0x00000000
+#define SRM_DI0_DW_SET1_4__FULL                                 IPU_MEMORY_OFFSET+0x00405AC,0xffffffff
+#define SRM_DI0_DW_SET1_4__DI0_DATA_CNT_DOWN1_4                 IPU_MEMORY_OFFSET+0x00405AC,0x01FF0000
+#define SRM_DI0_DW_SET1_4__DI0_DATA_CNT_UP1_4                   IPU_MEMORY_OFFSET+0x00405AC,0x000001FF
+
+#define SRM_DI0_DW_SET1_5__ADDR                                 IPU_MEMORY_OFFSET+0x00405B0
+#define SRM_DI0_DW_SET1_5__EMPTY                                IPU_MEMORY_OFFSET+0x00405B0,0x00000000
+#define SRM_DI0_DW_SET1_5__FULL                                 IPU_MEMORY_OFFSET+0x00405B0,0xffffffff
+#define SRM_DI0_DW_SET1_5__DI0_DATA_CNT_DOWN1_5                 IPU_MEMORY_OFFSET+0x00405B0,0x01FF0000
+#define SRM_DI0_DW_SET1_5__DI0_DATA_CNT_UP1_5                   IPU_MEMORY_OFFSET+0x00405B0,0x000001FF
+
+#define SRM_DI0_DW_SET1_6__ADDR                                 IPU_MEMORY_OFFSET+0x00405B4
+#define SRM_DI0_DW_SET1_6__EMPTY                                IPU_MEMORY_OFFSET+0x00405B4,0x00000000
+#define SRM_DI0_DW_SET1_6__FULL                                 IPU_MEMORY_OFFSET+0x00405B4,0xffffffff
+#define SRM_DI0_DW_SET1_6__DI0_DATA_CNT_DOWN1_6                 IPU_MEMORY_OFFSET+0x00405B4,0x01FF0000
+#define SRM_DI0_DW_SET1_6__DI0_DATA_CNT_UP1_6                   IPU_MEMORY_OFFSET+0x00405B4,0x000001FF
+
+#define SRM_DI0_DW_SET1_7__ADDR                                 IPU_MEMORY_OFFSET+0x00405B8
+#define SRM_DI0_DW_SET1_7__EMPTY                                IPU_MEMORY_OFFSET+0x00405B8,0x00000000
+#define SRM_DI0_DW_SET1_7__FULL                                 IPU_MEMORY_OFFSET+0x00405B8,0xffffffff
+#define SRM_DI0_DW_SET1_7__DI0_DATA_CNT_DOWN1_7                 IPU_MEMORY_OFFSET+0x00405B8,0x01FF0000
+#define SRM_DI0_DW_SET1_7__DI0_DATA_CNT_UP1_7                   IPU_MEMORY_OFFSET+0x00405B8,0x000001FF
+
+#define SRM_DI0_DW_SET1_8__ADDR                                 IPU_MEMORY_OFFSET+0x00405BC
+#define SRM_DI0_DW_SET1_8__EMPTY                                IPU_MEMORY_OFFSET+0x00405BC,0x00000000
+#define SRM_DI0_DW_SET1_8__FULL                                 IPU_MEMORY_OFFSET+0x00405BC,0xffffffff
+#define SRM_DI0_DW_SET1_8__DI0_DATA_CNT_DOWN1_8                 IPU_MEMORY_OFFSET+0x00405BC,0x01FF0000
+#define SRM_DI0_DW_SET1_8__DI0_DATA_CNT_UP1_8                   IPU_MEMORY_OFFSET+0x00405BC,0x000001FF
+
+#define SRM_DI0_DW_SET1_9__ADDR                                 IPU_MEMORY_OFFSET+0x00405C0
+#define SRM_DI0_DW_SET1_9__EMPTY                                IPU_MEMORY_OFFSET+0x00405C0,0x00000000
+#define SRM_DI0_DW_SET1_9__FULL                                 IPU_MEMORY_OFFSET+0x00405C0,0xffffffff
+#define SRM_DI0_DW_SET1_9__DI0_DATA_CNT_DOWN1_9                 IPU_MEMORY_OFFSET+0x00405C0,0x01FF0000
+#define SRM_DI0_DW_SET1_9__DI0_DATA_CNT_UP1_9                   IPU_MEMORY_OFFSET+0x00405C0,0x000001FF
+
+#define SRM_DI0_DW_SET1_10__ADDR                                IPU_MEMORY_OFFSET+0x00405C4
+#define SRM_DI0_DW_SET1_10__EMPTY                               IPU_MEMORY_OFFSET+0x00405C4,0x00000000
+#define SRM_DI0_DW_SET1_10__FULL                                IPU_MEMORY_OFFSET+0x00405C4,0xffffffff
+#define SRM_DI0_DW_SET1_10__DI0_DATA_CNT_DOWN1_10               IPU_MEMORY_OFFSET+0x00405C4,0x01FF0000
+#define SRM_DI0_DW_SET1_10__DI0_DATA_CNT_UP1_10                 IPU_MEMORY_OFFSET+0x00405C4,0x000001FF
+
+#define SRM_DI0_DW_SET1_11__ADDR                                IPU_MEMORY_OFFSET+0x00405C8
+#define SRM_DI0_DW_SET1_11__EMPTY                               IPU_MEMORY_OFFSET+0x00405C8,0x00000000
+#define SRM_DI0_DW_SET1_11__FULL                                IPU_MEMORY_OFFSET+0x00405C8,0xffffffff
+#define SRM_DI0_DW_SET1_11__DI0_DATA_CNT_DOWN1_11               IPU_MEMORY_OFFSET+0x00405C8,0x01FF0000
+#define SRM_DI0_DW_SET1_11__DI0_DATA_CNT_UP1_11                 IPU_MEMORY_OFFSET+0x00405C8,0x000001FF
+
+#define SRM_DI0_DW_SET2_0__ADDR                                 IPU_MEMORY_OFFSET+0x00405CC
+#define SRM_DI0_DW_SET2_0__EMPTY                                IPU_MEMORY_OFFSET+0x00405CC,0x00000000
+#define SRM_DI0_DW_SET2_0__FULL                                 IPU_MEMORY_OFFSET+0x00405CC,0xffffffff
+#define SRM_DI0_DW_SET2_0__DI0_DATA_CNT_DOWN2_0                 IPU_MEMORY_OFFSET+0x00405CC,0x01FF0000
+#define SRM_DI0_DW_SET2_0__DI0_DATA_CNT_UP2_0                   IPU_MEMORY_OFFSET+0x00405CC,0x000001FF
+
+#define SRM_DI0_DW_SET2_1__ADDR                                 IPU_MEMORY_OFFSET+0x00405D0
+#define SRM_DI0_DW_SET2_1__EMPTY                                IPU_MEMORY_OFFSET+0x00405D0,0x00000000
+#define SRM_DI0_DW_SET2_1__FULL                                 IPU_MEMORY_OFFSET+0x00405D0,0xffffffff
+#define SRM_DI0_DW_SET2_1__DI0_DATA_CNT_DOWN2_1                 IPU_MEMORY_OFFSET+0x00405D0,0x01FF0000
+#define SRM_DI0_DW_SET2_1__DI0_DATA_CNT_UP2_1                   IPU_MEMORY_OFFSET+0x00405D0,0x000001FF
+
+#define SRM_DI0_DW_SET2_2__ADDR                                 IPU_MEMORY_OFFSET+0x00405D4
+#define SRM_DI0_DW_SET2_2__EMPTY                                IPU_MEMORY_OFFSET+0x00405D4,0x00000000
+#define SRM_DI0_DW_SET2_2__FULL                                 IPU_MEMORY_OFFSET+0x00405D4,0xffffffff
+#define SRM_DI0_DW_SET2_2__DI0_DATA_CNT_DOWN2_2                 IPU_MEMORY_OFFSET+0x00405D4,0x01FF0000
+#define SRM_DI0_DW_SET2_2__DI0_DATA_CNT_UP2_2                   IPU_MEMORY_OFFSET+0x00405D4,0x000001FF
+
+#define SRM_DI0_DW_SET2_3__ADDR                                 IPU_MEMORY_OFFSET+0x00405D8
+#define SRM_DI0_DW_SET2_3__EMPTY                                IPU_MEMORY_OFFSET+0x00405D8,0x00000000
+#define SRM_DI0_DW_SET2_3__FULL                                 IPU_MEMORY_OFFSET+0x00405D8,0xffffffff
+#define SRM_DI0_DW_SET2_3__DI0_DATA_CNT_DOWN2_3                 IPU_MEMORY_OFFSET+0x00405D8,0x01FF0000
+#define SRM_DI0_DW_SET2_3__DI0_DATA_CNT_UP2_3                   IPU_MEMORY_OFFSET+0x00405D8,0x000001FF
+
+#define SRM_DI0_DW_SET2_4__ADDR                                 IPU_MEMORY_OFFSET+0x00405DC
+#define SRM_DI0_DW_SET2_4__EMPTY                                IPU_MEMORY_OFFSET+0x00405DC,0x00000000
+#define SRM_DI0_DW_SET2_4__FULL                                 IPU_MEMORY_OFFSET+0x00405DC,0xffffffff
+#define SRM_DI0_DW_SET2_4__DI0_DATA_CNT_DOWN2_4                 IPU_MEMORY_OFFSET+0x00405DC,0x01FF0000
+#define SRM_DI0_DW_SET2_4__DI0_DATA_CNT_UP2_4                   IPU_MEMORY_OFFSET+0x00405DC,0x000001FF
+
+#define SRM_DI0_DW_SET2_5__ADDR                                 IPU_MEMORY_OFFSET+0x00405E0
+#define SRM_DI0_DW_SET2_5__EMPTY                                IPU_MEMORY_OFFSET+0x00405E0,0x00000000
+#define SRM_DI0_DW_SET2_5__FULL                                 IPU_MEMORY_OFFSET+0x00405E0,0xffffffff
+#define SRM_DI0_DW_SET2_5__DI0_DATA_CNT_DOWN2_5                 IPU_MEMORY_OFFSET+0x00405E0,0x01FF0000
+#define SRM_DI0_DW_SET2_5__DI0_DATA_CNT_UP2_5                   IPU_MEMORY_OFFSET+0x00405E0,0x000001FF
+
+#define SRM_DI0_DW_SET2_6__ADDR                                 IPU_MEMORY_OFFSET+0x00405E4
+#define SRM_DI0_DW_SET2_6__EMPTY                                IPU_MEMORY_OFFSET+0x00405E4,0x00000000
+#define SRM_DI0_DW_SET2_6__FULL                                 IPU_MEMORY_OFFSET+0x00405E4,0xffffffff
+#define SRM_DI0_DW_SET2_6__DI0_DATA_CNT_DOWN2_6                 IPU_MEMORY_OFFSET+0x00405E4,0x01FF0000
+#define SRM_DI0_DW_SET2_6__DI0_DATA_CNT_UP2_6                   IPU_MEMORY_OFFSET+0x00405E4,0x000001FF
+
+#define SRM_DI0_DW_SET2_7__ADDR                                 IPU_MEMORY_OFFSET+0x00405E8
+#define SRM_DI0_DW_SET2_7__EMPTY                                IPU_MEMORY_OFFSET+0x00405E8,0x00000000
+#define SRM_DI0_DW_SET2_7__FULL                                 IPU_MEMORY_OFFSET+0x00405E8,0xffffffff
+#define SRM_DI0_DW_SET2_7__DI0_DATA_CNT_DOWN2_7                 IPU_MEMORY_OFFSET+0x00405E8,0x01FF0000
+#define SRM_DI0_DW_SET2_7__DI0_DATA_CNT_UP2_7                   IPU_MEMORY_OFFSET+0x00405E8,0x000001FF
+
+#define SRM_DI0_DW_SET2_8__ADDR                                 IPU_MEMORY_OFFSET+0x00405EC
+#define SRM_DI0_DW_SET2_8__EMPTY                                IPU_MEMORY_OFFSET+0x00405EC,0x00000000
+#define SRM_DI0_DW_SET2_8__FULL                                 IPU_MEMORY_OFFSET+0x00405EC,0xffffffff
+#define SRM_DI0_DW_SET2_8__DI0_DATA_CNT_DOWN2_8                 IPU_MEMORY_OFFSET+0x00405EC,0x01FF0000
+#define SRM_DI0_DW_SET2_8__DI0_DATA_CNT_UP2_8                   IPU_MEMORY_OFFSET+0x00405EC,0x000001FF
+
+#define SRM_DI0_DW_SET2_9__ADDR                                 IPU_MEMORY_OFFSET+0x00405F0
+#define SRM_DI0_DW_SET2_9__EMPTY                                IPU_MEMORY_OFFSET+0x00405F0,0x00000000
+#define SRM_DI0_DW_SET2_9__FULL                                 IPU_MEMORY_OFFSET+0x00405F0,0xffffffff
+#define SRM_DI0_DW_SET2_9__DI0_DATA_CNT_DOWN2_9                 IPU_MEMORY_OFFSET+0x00405F0,0x01FF0000
+#define SRM_DI0_DW_SET2_9__DI0_DATA_CNT_UP2_9                   IPU_MEMORY_OFFSET+0x00405F0,0x000001FF
+
+#define SRM_DI0_DW_SET2_10__ADDR                                IPU_MEMORY_OFFSET+0x00405F4
+#define SRM_DI0_DW_SET2_10__EMPTY                               IPU_MEMORY_OFFSET+0x00405F4,0x00000000
+#define SRM_DI0_DW_SET2_10__FULL                                IPU_MEMORY_OFFSET+0x00405F4,0xffffffff
+#define SRM_DI0_DW_SET2_10__DI0_DATA_CNT_DOWN2_10               IPU_MEMORY_OFFSET+0x00405F4,0x01FF0000
+#define SRM_DI0_DW_SET2_10__DI0_DATA_CNT_UP2_10                 IPU_MEMORY_OFFSET+0x00405F4,0x000001FF
+
+#define SRM_DI0_DW_SET2_11__ADDR                                IPU_MEMORY_OFFSET+0x00405F8
+#define SRM_DI0_DW_SET2_11__EMPTY                               IPU_MEMORY_OFFSET+0x00405F8,0x00000000
+#define SRM_DI0_DW_SET2_11__FULL                                IPU_MEMORY_OFFSET+0x00405F8,0xffffffff
+#define SRM_DI0_DW_SET2_11__DI0_DATA_CNT_DOWN2_11               IPU_MEMORY_OFFSET+0x00405F8,0x01FF0000
+#define SRM_DI0_DW_SET2_11__DI0_DATA_CNT_UP2_11                 IPU_MEMORY_OFFSET+0x00405F8,0x000001FF
+
+#define SRM_DI0_DW_SET3_0__ADDR                                 IPU_MEMORY_OFFSET+0x00405FC
+#define SRM_DI0_DW_SET3_0__EMPTY                                IPU_MEMORY_OFFSET+0x00405FC,0x00000000
+#define SRM_DI0_DW_SET3_0__FULL                                 IPU_MEMORY_OFFSET+0x00405FC,0xffffffff
+#define SRM_DI0_DW_SET3_0__DI0_DATA_CNT_DOWN3_0                 IPU_MEMORY_OFFSET+0x00405FC,0x01FF0000
+#define SRM_DI0_DW_SET3_0__DI0_DATA_CNT_UP3_0                   IPU_MEMORY_OFFSET+0x00405FC,0x000001FF
+
+#define SRM_DI0_DW_SET3_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040600
+#define SRM_DI0_DW_SET3_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040600,0x00000000
+#define SRM_DI0_DW_SET3_1__FULL                                 IPU_MEMORY_OFFSET+0x0040600,0xffffffff
+#define SRM_DI0_DW_SET3_1__DI0_DATA_CNT_DOWN3_1                 IPU_MEMORY_OFFSET+0x0040600,0x01FF0000
+#define SRM_DI0_DW_SET3_1__DI0_DATA_CNT_UP3_1                   IPU_MEMORY_OFFSET+0x0040600,0x000001FF
+
+#define SRM_DI0_DW_SET3_2__ADDR                                 IPU_MEMORY_OFFSET+0x0040604
+#define SRM_DI0_DW_SET3_2__EMPTY                                IPU_MEMORY_OFFSET+0x0040604,0x00000000
+#define SRM_DI0_DW_SET3_2__FULL                                 IPU_MEMORY_OFFSET+0x0040604,0xffffffff
+#define SRM_DI0_DW_SET3_2__DI0_DATA_CNT_DOWN3_2                 IPU_MEMORY_OFFSET+0x0040604,0x01FF0000
+#define SRM_DI0_DW_SET3_2__DI0_DATA_CNT_UP3_2                   IPU_MEMORY_OFFSET+0x0040604,0x000001FF
+
+#define SRM_DI0_DW_SET3_3__ADDR                                 IPU_MEMORY_OFFSET+0x0040608
+#define SRM_DI0_DW_SET3_3__EMPTY                                IPU_MEMORY_OFFSET+0x0040608,0x00000000
+#define SRM_DI0_DW_SET3_3__FULL                                 IPU_MEMORY_OFFSET+0x0040608,0xffffffff
+#define SRM_DI0_DW_SET3_3__DI0_DATA_CNT_DOWN3_3                 IPU_MEMORY_OFFSET+0x0040608,0x01FF0000
+#define SRM_DI0_DW_SET3_3__DI0_DATA_CNT_UP3_3                   IPU_MEMORY_OFFSET+0x0040608,0x000001FF
+
+#define SRM_DI0_DW_SET3_4__ADDR                                 IPU_MEMORY_OFFSET+0x004060C
+#define SRM_DI0_DW_SET3_4__EMPTY                                IPU_MEMORY_OFFSET+0x004060C,0x00000000
+#define SRM_DI0_DW_SET3_4__FULL                                 IPU_MEMORY_OFFSET+0x004060C,0xffffffff
+#define SRM_DI0_DW_SET3_4__DI0_DATA_CNT_DOWN3_4                 IPU_MEMORY_OFFSET+0x004060C,0x01FF0000
+#define SRM_DI0_DW_SET3_4__DI0_DATA_CNT_UP3_4                   IPU_MEMORY_OFFSET+0x004060C,0x000001FF
+
+#define SRM_DI0_DW_SET3_5__ADDR                                 IPU_MEMORY_OFFSET+0x0040610
+#define SRM_DI0_DW_SET3_5__EMPTY                                IPU_MEMORY_OFFSET+0x0040610,0x00000000
+#define SRM_DI0_DW_SET3_5__FULL                                 IPU_MEMORY_OFFSET+0x0040610,0xffffffff
+#define SRM_DI0_DW_SET3_5__DI0_DATA_CNT_DOWN3_5                 IPU_MEMORY_OFFSET+0x0040610,0x01FF0000
+#define SRM_DI0_DW_SET3_5__DI0_DATA_CNT_UP3_5                   IPU_MEMORY_OFFSET+0x0040610,0x000001FF
+
+#define SRM_DI0_DW_SET3_6__ADDR                                 IPU_MEMORY_OFFSET+0x0040614
+#define SRM_DI0_DW_SET3_6__EMPTY                                IPU_MEMORY_OFFSET+0x0040614,0x00000000
+#define SRM_DI0_DW_SET3_6__FULL                                 IPU_MEMORY_OFFSET+0x0040614,0xffffffff
+#define SRM_DI0_DW_SET3_6__DI0_DATA_CNT_DOWN3_6                 IPU_MEMORY_OFFSET+0x0040614,0x01FF0000
+#define SRM_DI0_DW_SET3_6__DI0_DATA_CNT_UP3_6                   IPU_MEMORY_OFFSET+0x0040614,0x000001FF
+
+#define SRM_DI0_DW_SET3_7__ADDR                                 IPU_MEMORY_OFFSET+0x0040618
+#define SRM_DI0_DW_SET3_7__EMPTY                                IPU_MEMORY_OFFSET+0x0040618,0x00000000
+#define SRM_DI0_DW_SET3_7__FULL                                 IPU_MEMORY_OFFSET+0x0040618,0xffffffff
+#define SRM_DI0_DW_SET3_7__DI0_DATA_CNT_DOWN3_7                 IPU_MEMORY_OFFSET+0x0040618,0x01FF0000
+#define SRM_DI0_DW_SET3_7__DI0_DATA_CNT_UP3_7                   IPU_MEMORY_OFFSET+0x0040618,0x000001FF
+
+#define SRM_DI0_DW_SET3_8__ADDR                                 IPU_MEMORY_OFFSET+0x004061C
+#define SRM_DI0_DW_SET3_8__EMPTY                                IPU_MEMORY_OFFSET+0x004061C,0x00000000
+#define SRM_DI0_DW_SET3_8__FULL                                 IPU_MEMORY_OFFSET+0x004061C,0xffffffff
+#define SRM_DI0_DW_SET3_8__DI0_DATA_CNT_DOWN3_8                 IPU_MEMORY_OFFSET+0x004061C,0x01FF0000
+#define SRM_DI0_DW_SET3_8__DI0_DATA_CNT_UP3_8                   IPU_MEMORY_OFFSET+0x004061C,0x000001FF
+
+#define SRM_DI0_DW_SET3_9__ADDR                                 IPU_MEMORY_OFFSET+0x0040620
+#define SRM_DI0_DW_SET3_9__EMPTY                                IPU_MEMORY_OFFSET+0x0040620,0x00000000
+#define SRM_DI0_DW_SET3_9__FULL                                 IPU_MEMORY_OFFSET+0x0040620,0xffffffff
+#define SRM_DI0_DW_SET3_9__DI0_DATA_CNT_DOWN3_9                 IPU_MEMORY_OFFSET+0x0040620,0x01FF0000
+#define SRM_DI0_DW_SET3_9__DI0_DATA_CNT_UP3_9                   IPU_MEMORY_OFFSET+0x0040620,0x000001FF
+
+#define SRM_DI0_DW_SET3_10__ADDR                                IPU_MEMORY_OFFSET+0x0040624
+#define SRM_DI0_DW_SET3_10__EMPTY                               IPU_MEMORY_OFFSET+0x0040624,0x00000000
+#define SRM_DI0_DW_SET3_10__FULL                                IPU_MEMORY_OFFSET+0x0040624,0xffffffff
+#define SRM_DI0_DW_SET3_10__DI0_DATA_CNT_DOWN3_10               IPU_MEMORY_OFFSET+0x0040624,0x01FF0000
+#define SRM_DI0_DW_SET3_10__DI0_DATA_CNT_UP3_10                 IPU_MEMORY_OFFSET+0x0040624,0x000001FF
+
+#define SRM_DI0_DW_SET3_11__ADDR                                IPU_MEMORY_OFFSET+0x0040628
+#define SRM_DI0_DW_SET3_11__EMPTY                               IPU_MEMORY_OFFSET+0x0040628,0x00000000
+#define SRM_DI0_DW_SET3_11__FULL                                IPU_MEMORY_OFFSET+0x0040628,0xffffffff
+#define SRM_DI0_DW_SET3_11__DI0_DATA_CNT_DOWN3_11               IPU_MEMORY_OFFSET+0x0040628,0x01FF0000
+#define SRM_DI0_DW_SET3_11__DI0_DATA_CNT_UP3_11                 IPU_MEMORY_OFFSET+0x0040628,0x000001FF
+
+#define SRM_DI0_STP_REP_1__ADDR                                 IPU_MEMORY_OFFSET+0x004062C
+#define SRM_DI0_STP_REP_1__EMPTY                                IPU_MEMORY_OFFSET+0x004062C,0x00000000
+#define SRM_DI0_STP_REP_1__FULL                                 IPU_MEMORY_OFFSET+0x004062C,0xffffffff
+#define SRM_DI0_STP_REP_1__DI0_STEP_REPEAT_2                    IPU_MEMORY_OFFSET+0x004062C,0x0FFF0000
+#define SRM_DI0_STP_REP_1__DI0_STEP_REPEAT_1                    IPU_MEMORY_OFFSET+0x004062C,0x00000FFF
+
+#define SRM_DI0_STP_REP_2__ADDR                                 IPU_MEMORY_OFFSET+0x0040630
+#define SRM_DI0_STP_REP_2__EMPTY                                IPU_MEMORY_OFFSET+0x0040630,0x00000000
+#define SRM_DI0_STP_REP_2__FULL                                 IPU_MEMORY_OFFSET+0x0040630,0xffffffff
+#define SRM_DI0_STP_REP_2__DI0_STEP_REPEAT_4                    IPU_MEMORY_OFFSET+0x0040630,0x0FFF0000
+#define SRM_DI0_STP_REP_2__DI0_STEP_REPEAT_3                    IPU_MEMORY_OFFSET+0x0040630,0x00000FFF
+
+#define SRM_DI0_STP_REP_3__ADDR                                 IPU_MEMORY_OFFSET+0x0040634
+#define SRM_DI0_STP_REP_3__EMPTY                                IPU_MEMORY_OFFSET+0x0040634,0x00000000
+#define SRM_DI0_STP_REP_3__FULL                                 IPU_MEMORY_OFFSET+0x0040634,0xffffffff
+#define SRM_DI0_STP_REP_3__DI0_STEP_REPEAT_6                    IPU_MEMORY_OFFSET+0x0040634,0x0FFF0000
+#define SRM_DI0_STP_REP_3__DI0_STEP_REPEAT_5                    IPU_MEMORY_OFFSET+0x0040634,0x00000FFF
+
+#define SRM_DI0_STP_REP_4__ADDR                                 IPU_MEMORY_OFFSET+0x0040638
+#define SRM_DI0_STP_REP_4__EMPTY                                IPU_MEMORY_OFFSET+0x0040638,0x00000000
+#define SRM_DI0_STP_REP_4__FULL                                 IPU_MEMORY_OFFSET+0x0040638,0xffffffff
+#define SRM_DI0_STP_REP_4__DI0_STEP_REPEAT_8                    IPU_MEMORY_OFFSET+0x0040638,0x0FFF0000
+#define SRM_DI0_STP_REP_4__DI0_STEP_REPEAT_7                    IPU_MEMORY_OFFSET+0x0040638,0x00000FFF
+
+#define SRM_DI0_STP_REP_9__ADDR                                 IPU_MEMORY_OFFSET+0x004063C
+#define SRM_DI0_STP_REP_9__EMPTY                                IPU_MEMORY_OFFSET+0x004063C,0x00000000
+#define SRM_DI0_STP_REP_9__FULL                                 IPU_MEMORY_OFFSET+0x004063C,0xffffffff
+#define SRM_DI0_STP_REP_9__DI0_STEP_REPEAT_9                    IPU_MEMORY_OFFSET+0x004063C,0x00000FFF
+
+#define SRM_DI0_SER_CONF__ADDR                                  IPU_MEMORY_OFFSET+0x0040640
+#define SRM_DI0_SER_CONF__EMPTY                                 IPU_MEMORY_OFFSET+0x0040640,0x00000000
+#define SRM_DI0_SER_CONF__FULL                                  IPU_MEMORY_OFFSET+0x0040640,0xffffffff
+#define SRM_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_R_1            IPU_MEMORY_OFFSET+0x0040640,0xF0000000
+#define SRM_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_R_0            IPU_MEMORY_OFFSET+0x0040640,0x0F000000
+#define SRM_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_W_1            IPU_MEMORY_OFFSET+0x0040640,0x00F00000
+#define SRM_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_W_0            IPU_MEMORY_OFFSET+0x0040640,0x000F0000
+#define SRM_DI0_SER_CONF__DI0_SERIAL_LATCH                      IPU_MEMORY_OFFSET+0x0040640,0x0000FF00
+#define SRM_DI0_SER_CONF__DI0_LLA_SER_ACCESS                    IPU_MEMORY_OFFSET+0x0040640,0x00000020
+#define SRM_DI0_SER_CONF__DI0_SER_CLK_POLARITY                  IPU_MEMORY_OFFSET+0x0040640,0x00000010
+#define SRM_DI0_SER_CONF__DI0_SERIAL_DATA_POLARITY              IPU_MEMORY_OFFSET+0x0040640,0x00000008
+#define SRM_DI0_SER_CONF__DI0_SERIAL_RS_POLARITY                IPU_MEMORY_OFFSET+0x0040640,0x00000004
+#define SRM_DI0_SER_CONF__DI0_SERIAL_CS_POLARITY                IPU_MEMORY_OFFSET+0x0040640,0x00000002
+#define SRM_DI0_SER_CONF__DI0_WAIT4SERIAL                       IPU_MEMORY_OFFSET+0x0040640,0x00000001
+
+#define SRM_DI0_SSC__ADDR                                       IPU_MEMORY_OFFSET+0x0040644
+#define SRM_DI0_SSC__EMPTY                                      IPU_MEMORY_OFFSET+0x0040644,0x00000000
+#define SRM_DI0_SSC__FULL                                       IPU_MEMORY_OFFSET+0x0040644,0xffffffff
+#define SRM_DI0_SSC__DI0_PIN17_ERM                              IPU_MEMORY_OFFSET+0x0040644,0x00800000
+#define SRM_DI0_SSC__DI0_PIN16_ERM                              IPU_MEMORY_OFFSET+0x0040644,0x00400000
+#define SRM_DI0_SSC__DI0_PIN15_ERM                              IPU_MEMORY_OFFSET+0x0040644,0x00200000
+#define SRM_DI0_SSC__DI0_PIN14_ERM                              IPU_MEMORY_OFFSET+0x0040644,0x00100000
+#define SRM_DI0_SSC__DI0_PIN13_ERM                              IPU_MEMORY_OFFSET+0x0040644,0x00080000
+#define SRM_DI0_SSC__DI0_PIN12_ERM                              IPU_MEMORY_OFFSET+0x0040644,0x00040000
+#define SRM_DI0_SSC__DI0_PIN11_ERM                              IPU_MEMORY_OFFSET+0x0040644,0x00020000
+#define SRM_DI0_SSC__DI0_CS_ERM                                 IPU_MEMORY_OFFSET+0x0040644,0x00010000
+#define SRM_DI0_SSC__DI0_WAIT_ON                                IPU_MEMORY_OFFSET+0x0040644,0x00000020
+#define SRM_DI0_SSC__DI0_BYTE_EN_RD_IN                          IPU_MEMORY_OFFSET+0x0040644,0x00000008
+#define SRM_DI0_SSC__DI0_BYTE_EN_PNTR                           IPU_MEMORY_OFFSET+0x0040644,0x00000007
+
+#define SRM_DI0_POL__ADDR                                       IPU_MEMORY_OFFSET+0x0040648
+#define SRM_DI0_POL__EMPTY                                      IPU_MEMORY_OFFSET+0x0040648,0x00000000
+#define SRM_DI0_POL__FULL                                       IPU_MEMORY_OFFSET+0x0040648,0xffffffff
+#define SRM_DI0_POL__DI0_WAIT_POLARITY                          IPU_MEMORY_OFFSET+0x0040648,0x04000000
+#define SRM_DI0_POL__DI0_CS1_BYTE_EN_POLARITY                   IPU_MEMORY_OFFSET+0x0040648,0x02000000
+#define SRM_DI0_POL__DI0_CS0_BYTE_EN_POLARITY                   IPU_MEMORY_OFFSET+0x0040648,0x01000000
+#define SRM_DI0_POL__DI0_CS1_DATA_POLARITY                      IPU_MEMORY_OFFSET+0x0040648,0x00800000
+#define SRM_DI0_POL__DI0_CS1_POLARITY_17                        IPU_MEMORY_OFFSET+0x0040648,0x00400000
+#define SRM_DI0_POL__DI0_CS1_POLARITY_16                        IPU_MEMORY_OFFSET+0x0040648,0x00200000
+#define SRM_DI0_POL__DI0_CS1_POLARITY_15                        IPU_MEMORY_OFFSET+0x0040648,0x00100000
+#define SRM_DI0_POL__DI0_CS1_POLARITY_14                        IPU_MEMORY_OFFSET+0x0040648,0x00080000
+#define SRM_DI0_POL__DI0_CS1_POLARITY_13                        IPU_MEMORY_OFFSET+0x0040648,0x00040000
+#define SRM_DI0_POL__DI0_CS1_POLARITY_12                        IPU_MEMORY_OFFSET+0x0040648,0x00020000
+#define SRM_DI0_POL__DI0_CS1_POLARITY_11                        IPU_MEMORY_OFFSET+0x0040648,0x00010000
+#define SRM_DI0_POL__DI0_CS0_DATA_POLARITY                      IPU_MEMORY_OFFSET+0x0040648,0x00008000
+#define SRM_DI0_POL__DI0_CS0_POLARITY_17                        IPU_MEMORY_OFFSET+0x0040648,0x00004000
+#define SRM_DI0_POL__DI0_CS0_POLARITY_16                        IPU_MEMORY_OFFSET+0x0040648,0x00002000
+#define SRM_DI0_POL__DI0_CS0_POLARITY_15                        IPU_MEMORY_OFFSET+0x0040648,0x00001000
+#define SRM_DI0_POL__DI0_CS0_POLARITY_14                        IPU_MEMORY_OFFSET+0x0040648,0x00000800
+#define SRM_DI0_POL__DI0_CS0_POLARITY_13                        IPU_MEMORY_OFFSET+0x0040648,0x00000400
+#define SRM_DI0_POL__DI0_CS0_POLARITY_12                        IPU_MEMORY_OFFSET+0x0040648,0x00000200
+#define SRM_DI0_POL__DI0_CS0_POLARITY_11                        IPU_MEMORY_OFFSET+0x0040648,0x00000100
+#define SRM_DI0_POL__DI0_DRDY_DATA_POLARITY                     IPU_MEMORY_OFFSET+0x0040648,0x00000080
+#define SRM_DI0_POL__DI0_DRDY_POLARITY_17                       IPU_MEMORY_OFFSET+0x0040648,0x00000040
+#define SRM_DI0_POL__DI0_DRDY_POLARITY_16                       IPU_MEMORY_OFFSET+0x0040648,0x00000020
+#define SRM_DI0_POL__DI0_DRDY_POLARITY_15                       IPU_MEMORY_OFFSET+0x0040648,0x00000010
+#define SRM_DI0_POL__DI0_DRDY_POLARITY_14                       IPU_MEMORY_OFFSET+0x0040648,0x00000008
+#define SRM_DI0_POL__DI0_DRDY_POLARITY_13                       IPU_MEMORY_OFFSET+0x0040648,0x00000004
+#define SRM_DI0_POL__DI0_DRDY_POLARITY_12                       IPU_MEMORY_OFFSET+0x0040648,0x00000002
+#define SRM_DI0_POL__DI0_DRDY_POLARITY_11                       IPU_MEMORY_OFFSET+0x0040648,0x00000001
+
+#define SRM_DI0_AW0__ADDR                                       IPU_MEMORY_OFFSET+0x004064C
+#define SRM_DI0_AW0__EMPTY                                      IPU_MEMORY_OFFSET+0x004064C,0x00000000
+#define SRM_DI0_AW0__FULL                                       IPU_MEMORY_OFFSET+0x004064C,0xffffffff
+#define SRM_DI0_AW0__DI0_AW_TRIG_SEL                            IPU_MEMORY_OFFSET+0x004064C,0xF0000000
+#define SRM_DI0_AW0__DI0_AW_HEND                                IPU_MEMORY_OFFSET+0x004064C,0x0FFF0000
+#define SRM_DI0_AW0__DI0_AW_HCOUNT_SEL                          IPU_MEMORY_OFFSET+0x004064C,0x0000F000
+#define SRM_DI0_AW0__DI0_AW_HSTART                              IPU_MEMORY_OFFSET+0x004064C,0x00000FFF
+
+#define SRM_DI0_AW1__ADDR                                       IPU_MEMORY_OFFSET+0x0040650
+#define SRM_DI0_AW1__EMPTY                                      IPU_MEMORY_OFFSET+0x0040650,0x00000000
+#define SRM_DI0_AW1__FULL                                       IPU_MEMORY_OFFSET+0x0040650,0xffffffff
+#define SRM_DI0_AW1__DI0_AW_VEND                                IPU_MEMORY_OFFSET+0x0040650,0x0FFF0000
+#define SRM_DI0_AW1__DI0_AW_VCOUNT_SEL                          IPU_MEMORY_OFFSET+0x0040650,0x0000F000
+#define SRM_DI0_AW1__DI0_AW_VSTART                              IPU_MEMORY_OFFSET+0x0040650,0x00000FFF
+
+#define SRM_DI0_SCR_CONF__ADDR                                  IPU_MEMORY_OFFSET+0x0040654
+#define SRM_DI0_SCR_CONF__EMPTY                                 IPU_MEMORY_OFFSET+0x0040654,0x00000000
+#define SRM_DI0_SCR_CONF__FULL                                  IPU_MEMORY_OFFSET+0x0040654,0xffffffff
+#define SRM_DI0_SCR_CONF__DI0_SCREEN_HEIGHT                     IPU_MEMORY_OFFSET+0x0040654,0x00000FFF
+
+#define SRM_DI1_GENERAL__ADDR                                   IPU_MEMORY_OFFSET+0x0040658
+#define SRM_DI1_GENERAL__EMPTY                                  IPU_MEMORY_OFFSET+0x0040658,0x00000000
+#define SRM_DI1_GENERAL__FULL                                   IPU_MEMORY_OFFSET+0x0040658,0xffffffff
+#define SRM_DI1_GENERAL__DI1_PIN8_PIN15_SEL                     IPU_MEMORY_OFFSET+0x0040658,0x80000000
+#define SRM_DI1_GENERAL__DI1_DISP_Y_SEL                         IPU_MEMORY_OFFSET+0x0040658,0x70000000
+#define SRM_DI1_GENERAL__DI1_CLOCK_STOP_MODE                    IPU_MEMORY_OFFSET+0x0040658,0x0F000000
+#define SRM_DI1_GENERAL__DI1_DISP_CLOCK_INIT                    IPU_MEMORY_OFFSET+0x0040658,0x00800000
+#define SRM_DI1_GENERAL__DI1_MASK_SEL                           IPU_MEMORY_OFFSET+0x0040658,0x00400000
+#define SRM_DI1_GENERAL__DI1_VSYNC_EXT                          IPU_MEMORY_OFFSET+0x0040658,0x00200000
+#define SRM_DI1_GENERAL__DI1_CLK_EXT                            IPU_MEMORY_OFFSET+0x0040658,0x00100000
+#define SRM_DI1_GENERAL__DI1_WATCHDOG_MODE                      IPU_MEMORY_OFFSET+0x0040658,0x000C0000
+#define SRM_DI1_GENERAL__DI1_POLARITY_DISP_CLK                  IPU_MEMORY_OFFSET+0x0040658,0x00020000
+#define SRM_DI1_GENERAL__DI1_SYNC_COUNT_SEL                     IPU_MEMORY_OFFSET+0x0040658,0x0000F000
+#define SRM_DI1_GENERAL__DI1_ERR_TREATMENT                      IPU_MEMORY_OFFSET+0x0040658,0x00000800
+#define SRM_DI1_GENERAL__DI1_ERM_VSYNC_SEL                      IPU_MEMORY_OFFSET+0x0040658,0x00000400
+#define SRM_DI1_GENERAL__DI1_POLARITY_CS1                       IPU_MEMORY_OFFSET+0x0040658,0x00000200
+#define SRM_DI1_GENERAL__DI1_POLARITY_CS0                       IPU_MEMORY_OFFSET+0x0040658,0x00000100
+#define SRM_DI1_GENERAL__DI1_POLARITY_8                         IPU_MEMORY_OFFSET+0x0040658,0x00000080
+#define SRM_DI1_GENERAL__DI1_POLARITY_7                         IPU_MEMORY_OFFSET+0x0040658,0x00000040
+#define SRM_DI1_GENERAL__DI1_POLARITY_6                         IPU_MEMORY_OFFSET+0x0040658,0x00000020
+#define SRM_DI1_GENERAL__DI1_POLARITY_5                         IPU_MEMORY_OFFSET+0x0040658,0x00000010
+#define SRM_DI1_GENERAL__DI1_POLARITY_4                         IPU_MEMORY_OFFSET+0x0040658,0x00000008
+#define SRM_DI1_GENERAL__DI1_POLARITY_3                         IPU_MEMORY_OFFSET+0x0040658,0x00000004
+#define SRM_DI1_GENERAL__DI1_POLARITY_2                         IPU_MEMORY_OFFSET+0x0040658,0x00000002
+#define SRM_DI1_GENERAL__DI1_POLARITY_1                         IPU_MEMORY_OFFSET+0x0040658,0x00000001
+
+#define SRM_DI1_BS_CLKGEN0__ADDR                                IPU_MEMORY_OFFSET+0x004065C
+#define SRM_DI1_BS_CLKGEN0__EMPTY                               IPU_MEMORY_OFFSET+0x004065C,0x00000000
+#define SRM_DI1_BS_CLKGEN0__FULL                                IPU_MEMORY_OFFSET+0x004065C,0xffffffff
+#define SRM_DI1_BS_CLKGEN0__DI1_DISP_CLK_OFFSET                 IPU_MEMORY_OFFSET+0x004065C,0x01FF0000
+#define SRM_DI1_BS_CLKGEN0__DI1_DISP_CLK_PERIOD                 IPU_MEMORY_OFFSET+0x004065C,0x00000FFF
+
+#define SRM_DI1_BS_CLKGEN1__ADDR                                IPU_MEMORY_OFFSET+0x0040660
+#define SRM_DI1_BS_CLKGEN1__EMPTY                               IPU_MEMORY_OFFSET+0x0040660,0x00000000
+#define SRM_DI1_BS_CLKGEN1__FULL                                IPU_MEMORY_OFFSET+0x0040660,0xffffffff
+#define SRM_DI1_BS_CLKGEN1__DI1_DISP_CLK_DOWN                   IPU_MEMORY_OFFSET+0x0040660,0x01FF0000
+#define SRM_DI1_BS_CLKGEN1__DI1_DISP_CLK_UP                     IPU_MEMORY_OFFSET+0x0040660,0x000001FF
+
+#define SRM_DI1_SW_GEN0_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040664
+#define SRM_DI1_SW_GEN0_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040664,0x00000000
+#define SRM_DI1_SW_GEN0_1__FULL                                 IPU_MEMORY_OFFSET+0x0040664,0xffffffff
+#define SRM_DI1_SW_GEN0_1__DI1_RUN_VALUE_M1_1                   IPU_MEMORY_OFFSET+0x0040664,0x7FF80000
+#define SRM_DI1_SW_GEN0_1__DI1_RUN_RESOLUTION_1                 IPU_MEMORY_OFFSET+0x0040664,0x00070000
+#define SRM_DI1_SW_GEN0_1__DI1_OFFSET_VALUE_1                   IPU_MEMORY_OFFSET+0x0040664,0x00007FF8
+#define SRM_DI1_SW_GEN0_1__DI1_OFFSET_RESOLUTION_1              IPU_MEMORY_OFFSET+0x0040664,0x00000007
+
+#define SRM_DI1_SW_GEN0_2__ADDR                                 IPU_MEMORY_OFFSET+0x0040668
+#define SRM_DI1_SW_GEN0_2__EMPTY                                IPU_MEMORY_OFFSET+0x0040668,0x00000000
+#define SRM_DI1_SW_GEN0_2__FULL                                 IPU_MEMORY_OFFSET+0x0040668,0xffffffff
+#define SRM_DI1_SW_GEN0_2__DI1_RUN_VALUE_M1_2                   IPU_MEMORY_OFFSET+0x0040668,0x7FF80000
+#define SRM_DI1_SW_GEN0_2__DI1_RUN_RESOLUTION_2                 IPU_MEMORY_OFFSET+0x0040668,0x00070000
+#define SRM_DI1_SW_GEN0_2__DI1_OFFSET_VALUE_2                   IPU_MEMORY_OFFSET+0x0040668,0x00007FF8
+#define SRM_DI1_SW_GEN0_2__DI1_OFFSET_RESOLUTION_2              IPU_MEMORY_OFFSET+0x0040668,0x00000007
+
+#define SRM_DI1_SW_GEN0_3__ADDR                                 IPU_MEMORY_OFFSET+0x004066C
+#define SRM_DI1_SW_GEN0_3__EMPTY                                IPU_MEMORY_OFFSET+0x004066C,0x00000000
+#define SRM_DI1_SW_GEN0_3__FULL                                 IPU_MEMORY_OFFSET+0x004066C,0xffffffff
+#define SRM_DI1_SW_GEN0_3__DI1_RUN_VALUE_M1_3                   IPU_MEMORY_OFFSET+0x004066C,0x7FF80000
+#define SRM_DI1_SW_GEN0_3__DI1_RUN_RESOLUTION_3                 IPU_MEMORY_OFFSET+0x004066C,0x00070000
+#define SRM_DI1_SW_GEN0_3__DI1_OFFSET_VALUE_3                   IPU_MEMORY_OFFSET+0x004066C,0x00007FF8
+#define SRM_DI1_SW_GEN0_3__DI1_OFFSET_RESOLUTION_3              IPU_MEMORY_OFFSET+0x004066C,0x00000007
+
+#define SRM_DI1_SW_GEN0_4__ADDR                                 IPU_MEMORY_OFFSET+0x0040670
+#define SRM_DI1_SW_GEN0_4__EMPTY                                IPU_MEMORY_OFFSET+0x0040670,0x00000000
+#define SRM_DI1_SW_GEN0_4__FULL                                 IPU_MEMORY_OFFSET+0x0040670,0xffffffff
+#define SRM_DI1_SW_GEN0_4__DI1_RUN_VALUE_M1_4                   IPU_MEMORY_OFFSET+0x0040670,0x7FF80000
+#define SRM_DI1_SW_GEN0_4__DI1_RUN_RESOLUTION_4                 IPU_MEMORY_OFFSET+0x0040670,0x00070000
+#define SRM_DI1_SW_GEN0_4__DI1_OFFSET_VALUE_4                   IPU_MEMORY_OFFSET+0x0040670,0x00007FF8
+#define SRM_DI1_SW_GEN0_4__DI1_OFFSET_RESOLUTION_4              IPU_MEMORY_OFFSET+0x0040670,0x00000007
+
+#define SRM_DI1_SW_GEN0_5__ADDR                                 IPU_MEMORY_OFFSET+0x0040674
+#define SRM_DI1_SW_GEN0_5__EMPTY                                IPU_MEMORY_OFFSET+0x0040674,0x00000000
+#define SRM_DI1_SW_GEN0_5__FULL                                 IPU_MEMORY_OFFSET+0x0040674,0xffffffff
+#define SRM_DI1_SW_GEN0_5__DI1_RUN_VALUE_M1_5                   IPU_MEMORY_OFFSET+0x0040674,0x7FF80000
+#define SRM_DI1_SW_GEN0_5__DI1_RUN_RESOLUTION_5                 IPU_MEMORY_OFFSET+0x0040674,0x00070000
+#define SRM_DI1_SW_GEN0_5__DI1_OFFSET_VALUE_5                   IPU_MEMORY_OFFSET+0x0040674,0x00007FF8
+#define SRM_DI1_SW_GEN0_5__DI1_OFFSET_RESOLUTION_5              IPU_MEMORY_OFFSET+0x0040674,0x00000007
+
+#define SRM_DI1_SW_GEN0_6__ADDR                                 IPU_MEMORY_OFFSET+0x0040678
+#define SRM_DI1_SW_GEN0_6__EMPTY                                IPU_MEMORY_OFFSET+0x0040678,0x00000000
+#define SRM_DI1_SW_GEN0_6__FULL                                 IPU_MEMORY_OFFSET+0x0040678,0xffffffff
+#define SRM_DI1_SW_GEN0_6__DI1_RUN_VALUE_M1_6                   IPU_MEMORY_OFFSET+0x0040678,0x7FF80000
+#define SRM_DI1_SW_GEN0_6__DI1_RUN_RESOLUTION_6                 IPU_MEMORY_OFFSET+0x0040678,0x00070000
+#define SRM_DI1_SW_GEN0_6__DI1_OFFSET_VALUE_6                   IPU_MEMORY_OFFSET+0x0040678,0x00007FF8
+#define SRM_DI1_SW_GEN0_6__DI1_OFFSET_RESOLUTION_6              IPU_MEMORY_OFFSET+0x0040678,0x00000007
+
+#define SRM_DI1_SW_GEN0_7__ADDR                                 IPU_MEMORY_OFFSET+0x004067C
+#define SRM_DI1_SW_GEN0_7__EMPTY                                IPU_MEMORY_OFFSET+0x004067C,0x00000000
+#define SRM_DI1_SW_GEN0_7__FULL                                 IPU_MEMORY_OFFSET+0x004067C,0xffffffff
+#define SRM_DI1_SW_GEN0_7__DI1_RUN_VALUE_M1_7                   IPU_MEMORY_OFFSET+0x004067C,0x7FF80000
+#define SRM_DI1_SW_GEN0_7__DI1_RUN_RESOLUTION_7                 IPU_MEMORY_OFFSET+0x004067C,0x00070000
+#define SRM_DI1_SW_GEN0_7__DI1_OFFSET_VALUE_7                   IPU_MEMORY_OFFSET+0x004067C,0x00007FF8
+#define SRM_DI1_SW_GEN0_7__DI1_OFFSET_RESOLUTION_7              IPU_MEMORY_OFFSET+0x004067C,0x00000007
+
+#define SRM_DI1_SW_GEN0_8__ADDR                                 IPU_MEMORY_OFFSET+0x0040680
+#define SRM_DI1_SW_GEN0_8__EMPTY                                IPU_MEMORY_OFFSET+0x0040680,0x00000000
+#define SRM_DI1_SW_GEN0_8__FULL                                 IPU_MEMORY_OFFSET+0x0040680,0xffffffff
+#define SRM_DI1_SW_GEN0_8__DI1_RUN_VALUE_M1_8                   IPU_MEMORY_OFFSET+0x0040680,0x7FF80000
+#define SRM_DI1_SW_GEN0_8__DI1_RUN_RESOLUTION_8                 IPU_MEMORY_OFFSET+0x0040680,0x00070000
+#define SRM_DI1_SW_GEN0_8__DI1_OFFSET_VALUE_8                   IPU_MEMORY_OFFSET+0x0040680,0x00007FF8
+#define SRM_DI1_SW_GEN0_8__DI1_OFFSET_RESOLUTION_8              IPU_MEMORY_OFFSET+0x0040680,0x00000007
+
+#define SRM_DI1_SW_GEN0_9__ADDR                                 IPU_MEMORY_OFFSET+0x0040684
+#define SRM_DI1_SW_GEN0_9__EMPTY                                IPU_MEMORY_OFFSET+0x0040684,0x00000000
+#define SRM_DI1_SW_GEN0_9__FULL                                 IPU_MEMORY_OFFSET+0x0040684,0xffffffff
+#define SRM_DI1_SW_GEN0_9__DI1_RUN_VALUE_M1_9                   IPU_MEMORY_OFFSET+0x0040684,0x7FF80000
+#define SRM_DI1_SW_GEN0_9__DI1_RUN_RESOLUTION_9                 IPU_MEMORY_OFFSET+0x0040684,0x00070000
+#define SRM_DI1_SW_GEN0_9__DI1_OFFSET_VALUE_9                   IPU_MEMORY_OFFSET+0x0040684,0x00007FF8
+#define SRM_DI1_SW_GEN0_9__DI1_OFFSET_RESOLUTION_9              IPU_MEMORY_OFFSET+0x0040684,0x00000007
+
+#define SRM_DI1_SW_GEN1_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040688
+#define SRM_DI1_SW_GEN1_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040688,0x00000000
+#define SRM_DI1_SW_GEN1_1__FULL                                 IPU_MEMORY_OFFSET+0x0040688,0xffffffff
+#define SRM_DI1_SW_GEN1_1__DI1_CNT_POLARITY_GEN_EN_1            IPU_MEMORY_OFFSET+0x0040688,0x60000000
+#define SRM_DI1_SW_GEN1_1__DI1_CNT_AUTO_RELOAD_1                IPU_MEMORY_OFFSET+0x0040688,0x10000000
+#define SRM_DI1_SW_GEN1_1__DI1_CNT_CLR_SEL_1                    IPU_MEMORY_OFFSET+0x0040688,0x0E000000
+#define SRM_DI1_SW_GEN1_1__DI1_CNT_DOWN_1                       IPU_MEMORY_OFFSET+0x0040688,0x01FF0000
+#define SRM_DI1_SW_GEN1_1__DI1_CNT_POLARITY_TRIGGER_SEL_1       IPU_MEMORY_OFFSET+0x0040688,0x00007000
+#define SRM_DI1_SW_GEN1_1__DI1_CNT_POLARITY_CLR_SEL_1           IPU_MEMORY_OFFSET+0x0040688,0x00000E00
+#define SRM_DI1_SW_GEN1_1__DI1_CNT_UP_1                         IPU_MEMORY_OFFSET+0x0040688,0x000001FF
+
+#define SRM_DI1_SW_GEN1_2__ADDR                                 IPU_MEMORY_OFFSET+0x004068C
+#define SRM_DI1_SW_GEN1_2__EMPTY                                IPU_MEMORY_OFFSET+0x004068C,0x00000000
+#define SRM_DI1_SW_GEN1_2__FULL                                 IPU_MEMORY_OFFSET+0x004068C,0xffffffff
+#define SRM_DI1_SW_GEN1_2__DI1_CNT_POLARITY_GEN_EN_2            IPU_MEMORY_OFFSET+0x004068C,0x60000000
+#define SRM_DI1_SW_GEN1_2__DI1_CNT_AUTO_RELOAD_2                IPU_MEMORY_OFFSET+0x004068C,0x10000000
+#define SRM_DI1_SW_GEN1_2__DI1_CNT_CLR_SEL_2                    IPU_MEMORY_OFFSET+0x004068C,0x0E000000
+#define SRM_DI1_SW_GEN1_2__DI1_CNT_DOWN_2                       IPU_MEMORY_OFFSET+0x004068C,0x01FF0000
+#define SRM_DI1_SW_GEN1_2__DI1_CNT_POLARITY_TRIGGER_SEL_2       IPU_MEMORY_OFFSET+0x004068C,0x00007000
+#define SRM_DI1_SW_GEN1_2__DI1_CNT_POLARITY_CLR_SEL_2           IPU_MEMORY_OFFSET+0x004068C,0x00000E00
+#define SRM_DI1_SW_GEN1_2__DI1_CNT_UP_2                         IPU_MEMORY_OFFSET+0x004068C,0x000001FF
+
+#define SRM_DI1_SW_GEN1_3__ADDR                                 IPU_MEMORY_OFFSET+0x0040690
+#define SRM_DI1_SW_GEN1_3__EMPTY                                IPU_MEMORY_OFFSET+0x0040690,0x00000000
+#define SRM_DI1_SW_GEN1_3__FULL                                 IPU_MEMORY_OFFSET+0x0040690,0xffffffff
+#define SRM_DI1_SW_GEN1_3__DI1_CNT_POLARITY_GEN_EN_3            IPU_MEMORY_OFFSET+0x0040690,0x60000000
+#define SRM_DI1_SW_GEN1_3__DI1_CNT_AUTO_RELOAD_3                IPU_MEMORY_OFFSET+0x0040690,0x10000000
+#define SRM_DI1_SW_GEN1_3__DI1_CNT_CLR_SEL_3                    IPU_MEMORY_OFFSET+0x0040690,0x0E000000
+#define SRM_DI1_SW_GEN1_3__DI1_CNT_DOWN_3                       IPU_MEMORY_OFFSET+0x0040690,0x01FF0000
+#define SRM_DI1_SW_GEN1_3__DI1_CNT_POLARITY_TRIGGER_SEL_3       IPU_MEMORY_OFFSET+0x0040690,0x00007000
+#define SRM_DI1_SW_GEN1_3__DI1_CNT_POLARITY_CLR_SEL_3           IPU_MEMORY_OFFSET+0x0040690,0x00000E00
+#define SRM_DI1_SW_GEN1_3__DI1_CNT_UP_3                         IPU_MEMORY_OFFSET+0x0040690,0x000001FF
+
+#define SRM_DI1_SW_GEN1_4__ADDR                                 IPU_MEMORY_OFFSET+0x0040694
+#define SRM_DI1_SW_GEN1_4__EMPTY                                IPU_MEMORY_OFFSET+0x0040694,0x00000000
+#define SRM_DI1_SW_GEN1_4__FULL                                 IPU_MEMORY_OFFSET+0x0040694,0xffffffff
+#define SRM_DI1_SW_GEN1_4__DI1_CNT_POLARITY_GEN_EN_4            IPU_MEMORY_OFFSET+0x0040694,0x60000000
+#define SRM_DI1_SW_GEN1_4__DI1_CNT_AUTO_RELOAD_4                IPU_MEMORY_OFFSET+0x0040694,0x10000000
+#define SRM_DI1_SW_GEN1_4__DI1_CNT_CLR_SEL_4                    IPU_MEMORY_OFFSET+0x0040694,0x0E000000
+#define SRM_DI1_SW_GEN1_4__DI1_CNT_DOWN_4                       IPU_MEMORY_OFFSET+0x0040694,0x01FF0000
+#define SRM_DI1_SW_GEN1_4__DI1_CNT_POLARITY_TRIGGER_SEL_4       IPU_MEMORY_OFFSET+0x0040694,0x00007000
+#define SRM_DI1_SW_GEN1_4__DI1_CNT_POLARITY_CLR_SEL_4           IPU_MEMORY_OFFSET+0x0040694,0x00000E00
+#define SRM_DI1_SW_GEN1_4__DI1_CNT_UP_4                         IPU_MEMORY_OFFSET+0x0040694,0x000001FF
+
+#define SRM_DI1_SW_GEN1_5__ADDR                                 IPU_MEMORY_OFFSET+0x0040698
+#define SRM_DI1_SW_GEN1_5__EMPTY                                IPU_MEMORY_OFFSET+0x0040698,0x00000000
+#define SRM_DI1_SW_GEN1_5__FULL                                 IPU_MEMORY_OFFSET+0x0040698,0xffffffff
+#define SRM_DI1_SW_GEN1_5__DI1_CNT_POLARITY_GEN_EN_5            IPU_MEMORY_OFFSET+0x0040698,0x60000000
+#define SRM_DI1_SW_GEN1_5__DI1_CNT_AUTO_RELOAD_5                IPU_MEMORY_OFFSET+0x0040698,0x10000000
+#define SRM_DI1_SW_GEN1_5__DI1_CNT_CLR_SEL_5                    IPU_MEMORY_OFFSET+0x0040698,0x0E000000
+#define SRM_DI1_SW_GEN1_5__DI1_CNT_DOWN_5                       IPU_MEMORY_OFFSET+0x0040698,0x01FF0000
+#define SRM_DI1_SW_GEN1_5__DI1_CNT_POLARITY_TRIGGER_SEL_5       IPU_MEMORY_OFFSET+0x0040698,0x00007000
+#define SRM_DI1_SW_GEN1_5__DI1_CNT_POLARITY_CLR_SEL_5           IPU_MEMORY_OFFSET+0x0040698,0x00000E00
+#define SRM_DI1_SW_GEN1_5__DI1_CNT_UP_5                         IPU_MEMORY_OFFSET+0x0040698,0x000001FF
+
+#define SRM_DI1_SW_GEN1_6__ADDR                                 IPU_MEMORY_OFFSET+0x004069C
+#define SRM_DI1_SW_GEN1_6__EMPTY                                IPU_MEMORY_OFFSET+0x004069C,0x00000000
+#define SRM_DI1_SW_GEN1_6__FULL                                 IPU_MEMORY_OFFSET+0x004069C,0xffffffff
+#define SRM_DI1_SW_GEN1_6__DI1_CNT_POLARITY_GEN_EN_6            IPU_MEMORY_OFFSET+0x004069C,0x60000000
+#define SRM_DI1_SW_GEN1_6__DI1_CNT_AUTO_RELOAD_6                IPU_MEMORY_OFFSET+0x004069C,0x10000000
+#define SRM_DI1_SW_GEN1_6__DI1_CNT_CLR_SEL_6                    IPU_MEMORY_OFFSET+0x004069C,0x0E000000
+#define SRM_DI1_SW_GEN1_6__DI1_CNT_DOWN_6                       IPU_MEMORY_OFFSET+0x004069C,0x01FF0000
+#define SRM_DI1_SW_GEN1_6__DI1_CNT_POLARITY_TRIGGER_SEL_6       IPU_MEMORY_OFFSET+0x004069C,0x00007000
+#define SRM_DI1_SW_GEN1_6__DI1_CNT_POLARITY_CLR_SEL_6           IPU_MEMORY_OFFSET+0x004069C,0x00000E00
+#define SRM_DI1_SW_GEN1_6__DI1_CNT_UP_6                         IPU_MEMORY_OFFSET+0x004069C,0x000001FF
+
+#define SRM_DI1_SW_GEN1_7__ADDR                                 IPU_MEMORY_OFFSET+0x00406A0
+#define SRM_DI1_SW_GEN1_7__EMPTY                                IPU_MEMORY_OFFSET+0x00406A0,0x00000000
+#define SRM_DI1_SW_GEN1_7__FULL                                 IPU_MEMORY_OFFSET+0x00406A0,0xffffffff
+#define SRM_DI1_SW_GEN1_7__DI1_CNT_POLARITY_GEN_EN_7            IPU_MEMORY_OFFSET+0x00406A0,0x60000000
+#define SRM_DI1_SW_GEN1_7__DI1_CNT_AUTO_RELOAD_7                IPU_MEMORY_OFFSET+0x00406A0,0x10000000
+#define SRM_DI1_SW_GEN1_7__DI1_CNT_CLR_SEL_7                    IPU_MEMORY_OFFSET+0x00406A0,0x0E000000
+#define SRM_DI1_SW_GEN1_7__DI1_CNT_DOWN_7                       IPU_MEMORY_OFFSET+0x00406A0,0x01FF0000
+#define SRM_DI1_SW_GEN1_7__DI1_CNT_POLARITY_TRIGGER_SEL_7       IPU_MEMORY_OFFSET+0x00406A0,0x00007000
+#define SRM_DI1_SW_GEN1_7__DI1_CNT_POLARITY_CLR_SEL_7           IPU_MEMORY_OFFSET+0x00406A0,0x00000E00
+#define SRM_DI1_SW_GEN1_7__DI1_CNT_UP_7                         IPU_MEMORY_OFFSET+0x00406A0,0x000001FF
+
+#define SRM_DI1_SW_GEN1_8__ADDR                                 IPU_MEMORY_OFFSET+0x00406A4
+#define SRM_DI1_SW_GEN1_8__EMPTY                                IPU_MEMORY_OFFSET+0x00406A4,0x00000000
+#define SRM_DI1_SW_GEN1_8__FULL                                 IPU_MEMORY_OFFSET+0x00406A4,0xffffffff
+#define SRM_DI1_SW_GEN1_8__DI1_CNT_POLARITY_GEN_EN_8            IPU_MEMORY_OFFSET+0x00406A4,0x60000000
+#define SRM_DI1_SW_GEN1_8__DI1_CNT_AUTO_RELOAD_8                IPU_MEMORY_OFFSET+0x00406A4,0x10000000
+#define SRM_DI1_SW_GEN1_8__DI1_CNT_CLR_SEL_8                    IPU_MEMORY_OFFSET+0x00406A4,0x0E000000
+#define SRM_DI1_SW_GEN1_8__DI1_CNT_DOWN_8                       IPU_MEMORY_OFFSET+0x00406A4,0x01FF0000
+#define SRM_DI1_SW_GEN1_8__DI1_CNT_POLARITY_TRIGGER_SEL_8       IPU_MEMORY_OFFSET+0x00406A4,0x00007000
+#define SRM_DI1_SW_GEN1_8__DI1_CNT_POLARITY_CLR_SEL_8           IPU_MEMORY_OFFSET+0x00406A4,0x00000E00
+#define SRM_DI1_SW_GEN1_8__DI1_CNT_UP_8                         IPU_MEMORY_OFFSET+0x00406A4,0x000001FF
+
+#define SRM_DI1_SW_GEN1_9__ADDR                                 IPU_MEMORY_OFFSET+0x00406A8
+#define SRM_DI1_SW_GEN1_9__EMPTY                                IPU_MEMORY_OFFSET+0x00406A8,0x00000000
+#define SRM_DI1_SW_GEN1_9__FULL                                 IPU_MEMORY_OFFSET+0x00406A8,0xffffffff
+#define SRM_DI1_SW_GEN1_9__DI1_GENTIME_SEL_9                    IPU_MEMORY_OFFSET+0x00406A8,0xE0000000
+#define SRM_DI1_SW_GEN1_9__DI1_CNT_AUTO_RELOAD_9                IPU_MEMORY_OFFSET+0x00406A8,0x10000000
+#define SRM_DI1_SW_GEN1_9__DI1_CNT_CLR_SEL_9                    IPU_MEMORY_OFFSET+0x00406A8,0x0E000000
+#define SRM_DI1_SW_GEN1_9__DI1_CNT_DOWN_9                       IPU_MEMORY_OFFSET+0x00406A8,0x01FF0000
+#define SRM_DI1_SW_GEN1_9__DI1_TAG_SEL_9                        IPU_MEMORY_OFFSET+0x00406A8,0x00008000
+#define SRM_DI1_SW_GEN1_9__DI1_CNT_UP_9                         IPU_MEMORY_OFFSET+0x00406A8,0x000001FF
+
+#define SRM_DI1_SYNC_AS_GEN__ADDR                               IPU_MEMORY_OFFSET+0x00406AC
+#define SRM_DI1_SYNC_AS_GEN__EMPTY                              IPU_MEMORY_OFFSET+0x00406AC,0x00000000
+#define SRM_DI1_SYNC_AS_GEN__FULL                               IPU_MEMORY_OFFSET+0x00406AC,0xffffffff
+#define SRM_DI1_SYNC_AS_GEN__DI1_SYNC_START_EN                  IPU_MEMORY_OFFSET+0x00406AC,0x10000000
+#define SRM_DI1_SYNC_AS_GEN__DI1_VSYNC_SEL                      IPU_MEMORY_OFFSET+0x00406AC,0x0000E000
+#define SRM_DI1_SYNC_AS_GEN__DI1_SYNC_START                     IPU_MEMORY_OFFSET+0x00406AC,0x00000FFF
+
+#define SRM_DI1_DW_GEN_0__ADDR                                  IPU_MEMORY_OFFSET+0x00406B0
+#define SRM_DI1_DW_GEN_0__EMPTY                                 IPU_MEMORY_OFFSET+0x00406B0,0x00000000
+#define SRM_DI1_DW_GEN_0__FULL                                  IPU_MEMORY_OFFSET+0x00406B0,0xffffffff
+#define SRM_DI1_DW_GEN_0__DI1_ACCESS_SIZE_0                     IPU_MEMORY_OFFSET+0x00406B0,0xFF000000
+#define SRM_DI1_DW_GEN_0__DI1_COMPONNENT_SIZE_0                 IPU_MEMORY_OFFSET+0x00406B0,0x00FF0000
+#define SRM_DI1_DW_GEN_0__DI1_CST_0                             IPU_MEMORY_OFFSET+0x00406B0,0x0000C000
+#define SRM_DI1_DW_GEN_0__DI1_PT_6_0                            IPU_MEMORY_OFFSET+0x00406B0,0x00003000
+#define SRM_DI1_DW_GEN_0__DI1_PT_5_0                            IPU_MEMORY_OFFSET+0x00406B0,0x00000C00
+#define SRM_DI1_DW_GEN_0__DI1_PT_4_0                            IPU_MEMORY_OFFSET+0x00406B0,0x00000300
+#define SRM_DI1_DW_GEN_0__DI1_PT_3_0                            IPU_MEMORY_OFFSET+0x00406B0,0x000000C0
+#define SRM_DI1_DW_GEN_0__DI1_PT_2_0                            IPU_MEMORY_OFFSET+0x00406B0,0x00000030
+#define SRM_DI1_DW_GEN_0__DI1_PT_1_0                            IPU_MEMORY_OFFSET+0x00406B0,0x0000000C
+#define SRM_DI1_DW_GEN_0__DI1_PT_0_0                            IPU_MEMORY_OFFSET+0x00406B0,0x00000003
+
+#define SRM_DI1_DW_GEN_1__ADDR                                  IPU_MEMORY_OFFSET+0x00406B4
+#define SRM_DI1_DW_GEN_1__EMPTY                                 IPU_MEMORY_OFFSET+0x00406B4,0x00000000
+#define SRM_DI1_DW_GEN_1__FULL                                  IPU_MEMORY_OFFSET+0x00406B4,0xffffffff
+#define SRM_DI1_DW_GEN_1__DI1_ACCESS_SIZE_1                     IPU_MEMORY_OFFSET+0x00406B4,0xFF000000
+#define SRM_DI1_DW_GEN_1__DI1_COMPONNENT_SIZE_1                 IPU_MEMORY_OFFSET+0x00406B4,0x00FF0000
+#define SRM_DI1_DW_GEN_1__DI1_CST_1                             IPU_MEMORY_OFFSET+0x00406B4,0x0000C000
+#define SRM_DI1_DW_GEN_1__DI1_PT_6_1                            IPU_MEMORY_OFFSET+0x00406B4,0x00003000
+#define SRM_DI1_DW_GEN_1__DI1_PT_5_1                            IPU_MEMORY_OFFSET+0x00406B4,0x00000C00
+#define SRM_DI1_DW_GEN_1__DI1_PT_4_1                            IPU_MEMORY_OFFSET+0x00406B4,0x00000300
+#define SRM_DI1_DW_GEN_1__DI1_PT_3_1                            IPU_MEMORY_OFFSET+0x00406B4,0x000000C0
+#define SRM_DI1_DW_GEN_1__DI1_PT_2_1                            IPU_MEMORY_OFFSET+0x00406B4,0x00000030
+#define SRM_DI1_DW_GEN_1__DI1_PT_1_1                            IPU_MEMORY_OFFSET+0x00406B4,0x0000000C
+#define SRM_DI1_DW_GEN_1__DI1_PT_0_1                            IPU_MEMORY_OFFSET+0x00406B4,0x00000003
+
+#define SRM_DI1_DW_GEN_2__ADDR                                  IPU_MEMORY_OFFSET+0x00406B8
+#define SRM_DI1_DW_GEN_2__EMPTY                                 IPU_MEMORY_OFFSET+0x00406B8,0x00000000
+#define SRM_DI1_DW_GEN_2__FULL                                  IPU_MEMORY_OFFSET+0x00406B8,0xffffffff
+#define SRM_DI1_DW_GEN_2__DI1_ACCESS_SIZE_2                     IPU_MEMORY_OFFSET+0x00406B8,0xFF000000
+#define SRM_DI1_DW_GEN_2__DI1_COMPONNENT_SIZE_2                 IPU_MEMORY_OFFSET+0x00406B8,0x00FF0000
+#define SRM_DI1_DW_GEN_2__DI1_CST_2                             IPU_MEMORY_OFFSET+0x00406B8,0x0000C000
+#define SRM_DI1_DW_GEN_2__DI1_PT_6_2                            IPU_MEMORY_OFFSET+0x00406B8,0x00003000
+#define SRM_DI1_DW_GEN_2__DI1_PT_5_2                            IPU_MEMORY_OFFSET+0x00406B8,0x00000C00
+#define SRM_DI1_DW_GEN_2__DI1_PT_4_2                            IPU_MEMORY_OFFSET+0x00406B8,0x00000300
+#define SRM_DI1_DW_GEN_2__DI1_PT_3_2                            IPU_MEMORY_OFFSET+0x00406B8,0x000000C0
+#define SRM_DI1_DW_GEN_2__DI1_PT_2_2                            IPU_MEMORY_OFFSET+0x00406B8,0x00000030
+#define SRM_DI1_DW_GEN_2__DI1_PT_1_2                            IPU_MEMORY_OFFSET+0x00406B8,0x0000000C
+#define SRM_DI1_DW_GEN_2__DI1_PT_0_2                            IPU_MEMORY_OFFSET+0x00406B8,0x00000003
+
+#define SRM_DI1_DW_GEN_3__ADDR                                  IPU_MEMORY_OFFSET+0x00406BC
+#define SRM_DI1_DW_GEN_3__EMPTY                                 IPU_MEMORY_OFFSET+0x00406BC,0x00000000
+#define SRM_DI1_DW_GEN_3__FULL                                  IPU_MEMORY_OFFSET+0x00406BC,0xffffffff
+#define SRM_DI1_DW_GEN_3__DI1_ACCESS_SIZE_3                     IPU_MEMORY_OFFSET+0x00406BC,0xFF000000
+#define SRM_DI1_DW_GEN_3__DI1_COMPONNENT_SIZE_3                 IPU_MEMORY_OFFSET+0x00406BC,0x00FF0000
+#define SRM_DI1_DW_GEN_3__DI1_CST_3                             IPU_MEMORY_OFFSET+0x00406BC,0x0000C000
+#define SRM_DI1_DW_GEN_3__DI1_PT_6_3                            IPU_MEMORY_OFFSET+0x00406BC,0x00003000
+#define SRM_DI1_DW_GEN_3__DI1_PT_5_3                            IPU_MEMORY_OFFSET+0x00406BC,0x00000C00
+#define SRM_DI1_DW_GEN_3__DI1_PT_4_3                            IPU_MEMORY_OFFSET+0x00406BC,0x00000300
+#define SRM_DI1_DW_GEN_3__DI1_PT_3_3                            IPU_MEMORY_OFFSET+0x00406BC,0x000000C0
+#define SRM_DI1_DW_GEN_3__DI1_PT_2_3                            IPU_MEMORY_OFFSET+0x00406BC,0x00000030
+#define SRM_DI1_DW_GEN_3__DI1_PT_1_3                            IPU_MEMORY_OFFSET+0x00406BC,0x0000000C
+#define SRM_DI1_DW_GEN_3__DI1_PT_0_3                            IPU_MEMORY_OFFSET+0x00406BC,0x00000003
+
+#define SRM_DI1_DW_GEN_4__ADDR                                  IPU_MEMORY_OFFSET+0x00406C0
+#define SRM_DI1_DW_GEN_4__EMPTY                                 IPU_MEMORY_OFFSET+0x00406C0,0x00000000
+#define SRM_DI1_DW_GEN_4__FULL                                  IPU_MEMORY_OFFSET+0x00406C0,0xffffffff
+#define SRM_DI1_DW_GEN_4__DI1_ACCESS_SIZE_4                     IPU_MEMORY_OFFSET+0x00406C0,0xFF000000
+#define SRM_DI1_DW_GEN_4__DI1_COMPONNENT_SIZE_4                 IPU_MEMORY_OFFSET+0x00406C0,0x00FF0000
+#define SRM_DI1_DW_GEN_4__DI1_CST_4                             IPU_MEMORY_OFFSET+0x00406C0,0x0000C000
+#define SRM_DI1_DW_GEN_4__DI1_PT_6_4                            IPU_MEMORY_OFFSET+0x00406C0,0x00003000
+#define SRM_DI1_DW_GEN_4__DI1_PT_5_4                            IPU_MEMORY_OFFSET+0x00406C0,0x00000C00
+#define SRM_DI1_DW_GEN_4__DI1_PT_4_4                            IPU_MEMORY_OFFSET+0x00406C0,0x00000300
+#define SRM_DI1_DW_GEN_4__DI1_PT_3_4                            IPU_MEMORY_OFFSET+0x00406C0,0x000000C0
+#define SRM_DI1_DW_GEN_4__DI1_PT_2_4                            IPU_MEMORY_OFFSET+0x00406C0,0x00000030
+#define SRM_DI1_DW_GEN_4__DI1_PT_1_4                            IPU_MEMORY_OFFSET+0x00406C0,0x0000000C
+#define SRM_DI1_DW_GEN_4__DI1_PT_0_4                            IPU_MEMORY_OFFSET+0x00406C0,0x00000003
+
+#define SRM_DI1_DW_GEN_5__ADDR                                  IPU_MEMORY_OFFSET+0x00406C4
+#define SRM_DI1_DW_GEN_5__EMPTY                                 IPU_MEMORY_OFFSET+0x00406C4,0x00000000
+#define SRM_DI1_DW_GEN_5__FULL                                  IPU_MEMORY_OFFSET+0x00406C4,0xffffffff
+#define SRM_DI1_DW_GEN_5__DI1_ACCESS_SIZE_5                     IPU_MEMORY_OFFSET+0x00406C4,0xFF000000
+#define SRM_DI1_DW_GEN_5__DI1_COMPONNENT_SIZE_5                 IPU_MEMORY_OFFSET+0x00406C4,0x00FF0000
+#define SRM_DI1_DW_GEN_5__DI1_CST_5                             IPU_MEMORY_OFFSET+0x00406C4,0x0000C000
+#define SRM_DI1_DW_GEN_5__DI1_PT_6_5                            IPU_MEMORY_OFFSET+0x00406C4,0x00003000
+#define SRM_DI1_DW_GEN_5__DI1_PT_5_5                            IPU_MEMORY_OFFSET+0x00406C4,0x00000C00
+#define SRM_DI1_DW_GEN_5__DI1_PT_4_5                            IPU_MEMORY_OFFSET+0x00406C4,0x00000300
+#define SRM_DI1_DW_GEN_5__DI1_PT_3_5                            IPU_MEMORY_OFFSET+0x00406C4,0x000000C0
+#define SRM_DI1_DW_GEN_5__DI1_PT_2_5                            IPU_MEMORY_OFFSET+0x00406C4,0x00000030
+#define SRM_DI1_DW_GEN_5__DI1_PT_1_5                            IPU_MEMORY_OFFSET+0x00406C4,0x0000000C
+#define SRM_DI1_DW_GEN_5__DI1_PT_0_5                            IPU_MEMORY_OFFSET+0x00406C4,0x00000003
+
+#define SRM_DI1_DW_GEN_6__ADDR                                  IPU_MEMORY_OFFSET+0x00406C8
+#define SRM_DI1_DW_GEN_6__EMPTY                                 IPU_MEMORY_OFFSET+0x00406C8,0x00000000
+#define SRM_DI1_DW_GEN_6__FULL                                  IPU_MEMORY_OFFSET+0x00406C8,0xffffffff
+#define SRM_DI1_DW_GEN_6__DI1_ACCESS_SIZE_6                     IPU_MEMORY_OFFSET+0x00406C8,0xFF000000
+#define SRM_DI1_DW_GEN_6__DI1_COMPONNENT_SIZE_6                 IPU_MEMORY_OFFSET+0x00406C8,0x00FF0000
+#define SRM_DI1_DW_GEN_6__DI1_CST_6                             IPU_MEMORY_OFFSET+0x00406C8,0x0000C000
+#define SRM_DI1_DW_GEN_6__DI1_PT_6_6                            IPU_MEMORY_OFFSET+0x00406C8,0x00003000
+#define SRM_DI1_DW_GEN_6__DI1_PT_5_6                            IPU_MEMORY_OFFSET+0x00406C8,0x00000C00
+#define SRM_DI1_DW_GEN_6__DI1_PT_4_6                            IPU_MEMORY_OFFSET+0x00406C8,0x00000300
+#define SRM_DI1_DW_GEN_6__DI1_PT_3_6                            IPU_MEMORY_OFFSET+0x00406C8,0x000000C0
+#define SRM_DI1_DW_GEN_6__DI1_PT_2_6                            IPU_MEMORY_OFFSET+0x00406C8,0x00000030
+#define SRM_DI1_DW_GEN_6__DI1_PT_1_6                            IPU_MEMORY_OFFSET+0x00406C8,0x0000000C
+#define SRM_DI1_DW_GEN_6__DI1_PT_0_6                            IPU_MEMORY_OFFSET+0x00406C8,0x00000003
+
+#define SRM_DI1_DW_GEN_7__ADDR                                  IPU_MEMORY_OFFSET+0x00406CC
+#define SRM_DI1_DW_GEN_7__EMPTY                                 IPU_MEMORY_OFFSET+0x00406CC,0x00000000
+#define SRM_DI1_DW_GEN_7__FULL                                  IPU_MEMORY_OFFSET+0x00406CC,0xffffffff
+#define SRM_DI1_DW_GEN_7__DI1_ACCESS_SIZE_7                     IPU_MEMORY_OFFSET+0x00406CC,0xFF000000
+#define SRM_DI1_DW_GEN_7__DI1_COMPONNENT_SIZE_7                 IPU_MEMORY_OFFSET+0x00406CC,0x00FF0000
+#define SRM_DI1_DW_GEN_7__DI1_CST_7                             IPU_MEMORY_OFFSET+0x00406CC,0x0000C000
+#define SRM_DI1_DW_GEN_7__DI1_PT_6_7                            IPU_MEMORY_OFFSET+0x00406CC,0x00003000
+#define SRM_DI1_DW_GEN_7__DI1_PT_5_7                            IPU_MEMORY_OFFSET+0x00406CC,0x00000C00
+#define SRM_DI1_DW_GEN_7__DI1_PT_4_7                            IPU_MEMORY_OFFSET+0x00406CC,0x00000300
+#define SRM_DI1_DW_GEN_7__DI1_PT_3_7                            IPU_MEMORY_OFFSET+0x00406CC,0x000000C0
+#define SRM_DI1_DW_GEN_7__DI1_PT_2_7                            IPU_MEMORY_OFFSET+0x00406CC,0x00000030
+#define SRM_DI1_DW_GEN_7__DI1_PT_1_7                            IPU_MEMORY_OFFSET+0x00406CC,0x0000000C
+#define SRM_DI1_DW_GEN_7__DI1_PT_0_7                            IPU_MEMORY_OFFSET+0x00406CC,0x00000003
+
+#define SRM_DI1_DW_GEN_8__ADDR                                  IPU_MEMORY_OFFSET+0x00406D0
+#define SRM_DI1_DW_GEN_8__EMPTY                                 IPU_MEMORY_OFFSET+0x00406D0,0x00000000
+#define SRM_DI1_DW_GEN_8__FULL                                  IPU_MEMORY_OFFSET+0x00406D0,0xffffffff
+#define SRM_DI1_DW_GEN_8__DI1_ACCESS_SIZE_8                     IPU_MEMORY_OFFSET+0x00406D0,0xFF000000
+#define SRM_DI1_DW_GEN_8__DI1_COMPONNENT_SIZE_8                 IPU_MEMORY_OFFSET+0x00406D0,0x00FF0000
+#define SRM_DI1_DW_GEN_8__DI1_CST_8                             IPU_MEMORY_OFFSET+0x00406D0,0x0000C000
+#define SRM_DI1_DW_GEN_8__DI1_PT_6_8                            IPU_MEMORY_OFFSET+0x00406D0,0x00003000
+#define SRM_DI1_DW_GEN_8__DI1_PT_5_8                            IPU_MEMORY_OFFSET+0x00406D0,0x00000C00
+#define SRM_DI1_DW_GEN_8__DI1_PT_4_8                            IPU_MEMORY_OFFSET+0x00406D0,0x00000300
+#define SRM_DI1_DW_GEN_8__DI1_PT_3_8                            IPU_MEMORY_OFFSET+0x00406D0,0x000000C0
+#define SRM_DI1_DW_GEN_8__DI1_PT_2_8                            IPU_MEMORY_OFFSET+0x00406D0,0x00000030
+#define SRM_DI1_DW_GEN_8__DI1_PT_1_8                            IPU_MEMORY_OFFSET+0x00406D0,0x0000000C
+#define SRM_DI1_DW_GEN_8__DI1_PT_0_8                            IPU_MEMORY_OFFSET+0x00406D0,0x00000003
+
+#define SRM_DI1_DW_GEN_9__ADDR                                  IPU_MEMORY_OFFSET+0x00406D4
+#define SRM_DI1_DW_GEN_9__EMPTY                                 IPU_MEMORY_OFFSET+0x00406D4,0x00000000
+#define SRM_DI1_DW_GEN_9__FULL                                  IPU_MEMORY_OFFSET+0x00406D4,0xffffffff
+#define SRM_DI1_DW_GEN_9__DI1_ACCESS_SIZE_9                     IPU_MEMORY_OFFSET+0x00406D4,0xFF000000
+#define SRM_DI1_DW_GEN_9__DI1_COMPONNENT_SIZE_9                 IPU_MEMORY_OFFSET+0x00406D4,0x00FF0000
+#define SRM_DI1_DW_GEN_9__DI1_CST_9                             IPU_MEMORY_OFFSET+0x00406D4,0x0000C000
+#define SRM_DI1_DW_GEN_9__DI1_PT_6_9                            IPU_MEMORY_OFFSET+0x00406D4,0x00003000
+#define SRM_DI1_DW_GEN_9__DI1_PT_5_9                            IPU_MEMORY_OFFSET+0x00406D4,0x00000C00
+#define SRM_DI1_DW_GEN_9__DI1_PT_4_9                            IPU_MEMORY_OFFSET+0x00406D4,0x00000300
+#define SRM_DI1_DW_GEN_9__DI1_PT_3_9                            IPU_MEMORY_OFFSET+0x00406D4,0x000000C0
+#define SRM_DI1_DW_GEN_9__DI1_PT_2_9                            IPU_MEMORY_OFFSET+0x00406D4,0x00000030
+#define SRM_DI1_DW_GEN_9__DI1_PT_1_9                            IPU_MEMORY_OFFSET+0x00406D4,0x0000000C
+#define SRM_DI1_DW_GEN_9__DI1_PT_0_9                            IPU_MEMORY_OFFSET+0x00406D4,0x00000003
+
+#define SRM_DI1_DW_GEN_10__ADDR                                 IPU_MEMORY_OFFSET+0x00406D8
+#define SRM_DI1_DW_GEN_10__EMPTY                                IPU_MEMORY_OFFSET+0x00406D8,0x00000000
+#define SRM_DI1_DW_GEN_10__FULL                                 IPU_MEMORY_OFFSET+0x00406D8,0xffffffff
+#define SRM_DI1_DW_GEN_10__DI1_ACCESS_SIZE_10                   IPU_MEMORY_OFFSET+0x00406D8,0xFF000000
+#define SRM_DI1_DW_GEN_10__DI1_COMPONNENT_SIZE_10               IPU_MEMORY_OFFSET+0x00406D8,0x00FF0000
+#define SRM_DI1_DW_GEN_10__DI1_CST_10                           IPU_MEMORY_OFFSET+0x00406D8,0x0000C000
+#define SRM_DI1_DW_GEN_10__DI1_PT_6_10                          IPU_MEMORY_OFFSET+0x00406D8,0x00003000
+#define SRM_DI1_DW_GEN_10__DI1_PT_5_10                          IPU_MEMORY_OFFSET+0x00406D8,0x00000C00
+#define SRM_DI1_DW_GEN_10__DI1_PT_4_10                          IPU_MEMORY_OFFSET+0x00406D8,0x00000300
+#define SRM_DI1_DW_GEN_10__DI1_PT_3_10                          IPU_MEMORY_OFFSET+0x00406D8,0x000000C0
+#define SRM_DI1_DW_GEN_10__DI1_PT_2_10                          IPU_MEMORY_OFFSET+0x00406D8,0x00000030
+#define SRM_DI1_DW_GEN_10__DI1_PT_1_10                          IPU_MEMORY_OFFSET+0x00406D8,0x0000000C
+#define SRM_DI1_DW_GEN_10__DI1_PT_0_10                          IPU_MEMORY_OFFSET+0x00406D8,0x00000003
+
+#define SRM_DI1_DW_GEN_11__ADDR                                 IPU_MEMORY_OFFSET+0x00406DC
+#define SRM_DI1_DW_GEN_11__EMPTY                                IPU_MEMORY_OFFSET+0x00406DC,0x00000000
+#define SRM_DI1_DW_GEN_11__FULL                                 IPU_MEMORY_OFFSET+0x00406DC,0xffffffff
+#define SRM_DI1_DW_GEN_11__DI1_ACCESS_SIZE_11                   IPU_MEMORY_OFFSET+0x00406DC,0xFF000000
+#define SRM_DI1_DW_GEN_11__DI1_COMPONNENT_SIZE_11               IPU_MEMORY_OFFSET+0x00406DC,0x00FF0000
+#define SRM_DI1_DW_GEN_11__DI1_CST_11                           IPU_MEMORY_OFFSET+0x00406DC,0x0000C000
+#define SRM_DI1_DW_GEN_11__DI1_PT_6_11                          IPU_MEMORY_OFFSET+0x00406DC,0x00003000
+#define SRM_DI1_DW_GEN_11__DI1_PT_5_11                          IPU_MEMORY_OFFSET+0x00406DC,0x00000C00
+#define SRM_DI1_DW_GEN_11__DI1_PT_4_11                          IPU_MEMORY_OFFSET+0x00406DC,0x00000300
+#define SRM_DI1_DW_GEN_11__DI1_PT_3_11                          IPU_MEMORY_OFFSET+0x00406DC,0x000000C0
+#define SRM_DI1_DW_GEN_11__DI1_PT_2_11                          IPU_MEMORY_OFFSET+0x00406DC,0x00000030
+#define SRM_DI1_DW_GEN_11__DI1_PT_1_11                          IPU_MEMORY_OFFSET+0x00406DC,0x0000000C
+#define SRM_DI1_DW_GEN_11__DI1_PT_0_11                          IPU_MEMORY_OFFSET+0x00406DC,0x00000003
+
+#define SRM_DI1_DW_SET0_0__ADDR                                 IPU_MEMORY_OFFSET+0x00406E0
+#define SRM_DI1_DW_SET0_0__EMPTY                                IPU_MEMORY_OFFSET+0x00406E0,0x00000000
+#define SRM_DI1_DW_SET0_0__FULL                                 IPU_MEMORY_OFFSET+0x00406E0,0xffffffff
+#define SRM_DI1_DW_SET0_0__DI1_DATA_CNT_DOWN0_0                 IPU_MEMORY_OFFSET+0x00406E0,0x01FF0000
+#define SRM_DI1_DW_SET0_0__DI1_DATA_CNT_UP0_0                   IPU_MEMORY_OFFSET+0x00406E0,0x000001FF
+
+#define SRM_DI1_DW_SET0_1__ADDR                                 IPU_MEMORY_OFFSET+0x00406E4
+#define SRM_DI1_DW_SET0_1__EMPTY                                IPU_MEMORY_OFFSET+0x00406E4,0x00000000
+#define SRM_DI1_DW_SET0_1__FULL                                 IPU_MEMORY_OFFSET+0x00406E4,0xffffffff
+#define SRM_DI1_DW_SET0_1__DI1_DATA_CNT_DOWN0_1                 IPU_MEMORY_OFFSET+0x00406E4,0x01FF0000
+#define SRM_DI1_DW_SET0_1__DI1_DATA_CNT_UP0_1                   IPU_MEMORY_OFFSET+0x00406E4,0x000001FF
+
+#define SRM_DI1_DW_SET0_2__ADDR                                 IPU_MEMORY_OFFSET+0x00406E8
+#define SRM_DI1_DW_SET0_2__EMPTY                                IPU_MEMORY_OFFSET+0x00406E8,0x00000000
+#define SRM_DI1_DW_SET0_2__FULL                                 IPU_MEMORY_OFFSET+0x00406E8,0xffffffff
+#define SRM_DI1_DW_SET0_2__DI1_DATA_CNT_DOWN0_2                 IPU_MEMORY_OFFSET+0x00406E8,0x01FF0000
+#define SRM_DI1_DW_SET0_2__DI1_DATA_CNT_UP0_2                   IPU_MEMORY_OFFSET+0x00406E8,0x000001FF
+
+#define SRM_DI1_DW_SET0_3__ADDR                                 IPU_MEMORY_OFFSET+0x00406EC
+#define SRM_DI1_DW_SET0_3__EMPTY                                IPU_MEMORY_OFFSET+0x00406EC,0x00000000
+#define SRM_DI1_DW_SET0_3__FULL                                 IPU_MEMORY_OFFSET+0x00406EC,0xffffffff
+#define SRM_DI1_DW_SET0_3__DI1_DATA_CNT_DOWN0_3                 IPU_MEMORY_OFFSET+0x00406EC,0x01FF0000
+#define SRM_DI1_DW_SET0_3__DI1_DATA_CNT_UP0_3                   IPU_MEMORY_OFFSET+0x00406EC,0x000001FF
+
+#define SRM_DI1_DW_SET0_4__ADDR                                 IPU_MEMORY_OFFSET+0x00406F0
+#define SRM_DI1_DW_SET0_4__EMPTY                                IPU_MEMORY_OFFSET+0x00406F0,0x00000000
+#define SRM_DI1_DW_SET0_4__FULL                                 IPU_MEMORY_OFFSET+0x00406F0,0xffffffff
+#define SRM_DI1_DW_SET0_4__DI1_DATA_CNT_DOWN0_4                 IPU_MEMORY_OFFSET+0x00406F0,0x01FF0000
+#define SRM_DI1_DW_SET0_4__DI1_DATA_CNT_UP0_4                   IPU_MEMORY_OFFSET+0x00406F0,0x000001FF
+
+#define SRM_DI1_DW_SET0_5__ADDR                                 IPU_MEMORY_OFFSET+0x00406F4
+#define SRM_DI1_DW_SET0_5__EMPTY                                IPU_MEMORY_OFFSET+0x00406F4,0x00000000
+#define SRM_DI1_DW_SET0_5__FULL                                 IPU_MEMORY_OFFSET+0x00406F4,0xffffffff
+#define SRM_DI1_DW_SET0_5__DI1_DATA_CNT_DOWN0_5                 IPU_MEMORY_OFFSET+0x00406F4,0x01FF0000
+#define SRM_DI1_DW_SET0_5__DI1_DATA_CNT_UP0_5                   IPU_MEMORY_OFFSET+0x00406F4,0x000001FF
+
+#define SRM_DI1_DW_SET0_6__ADDR                                 IPU_MEMORY_OFFSET+0x00406F8
+#define SRM_DI1_DW_SET0_6__EMPTY                                IPU_MEMORY_OFFSET+0x00406F8,0x00000000
+#define SRM_DI1_DW_SET0_6__FULL                                 IPU_MEMORY_OFFSET+0x00406F8,0xffffffff
+#define SRM_DI1_DW_SET0_6__DI1_DATA_CNT_DOWN0_6                 IPU_MEMORY_OFFSET+0x00406F8,0x01FF0000
+#define SRM_DI1_DW_SET0_6__DI1_DATA_CNT_UP0_6                   IPU_MEMORY_OFFSET+0x00406F8,0x000001FF
+
+#define SRM_DI1_DW_SET0_7__ADDR                                 IPU_MEMORY_OFFSET+0x00406FC
+#define SRM_DI1_DW_SET0_7__EMPTY                                IPU_MEMORY_OFFSET+0x00406FC,0x00000000
+#define SRM_DI1_DW_SET0_7__FULL                                 IPU_MEMORY_OFFSET+0x00406FC,0xffffffff
+#define SRM_DI1_DW_SET0_7__DI1_DATA_CNT_DOWN0_7                 IPU_MEMORY_OFFSET+0x00406FC,0x01FF0000
+#define SRM_DI1_DW_SET0_7__DI1_DATA_CNT_UP0_7                   IPU_MEMORY_OFFSET+0x00406FC,0x000001FF
+
+#define SRM_DI1_DW_SET0_8__ADDR                                 IPU_MEMORY_OFFSET+0x0040700
+#define SRM_DI1_DW_SET0_8__EMPTY                                IPU_MEMORY_OFFSET+0x0040700,0x00000000
+#define SRM_DI1_DW_SET0_8__FULL                                 IPU_MEMORY_OFFSET+0x0040700,0xffffffff
+#define SRM_DI1_DW_SET0_8__DI1_DATA_CNT_DOWN0_8                 IPU_MEMORY_OFFSET+0x0040700,0x01FF0000
+#define SRM_DI1_DW_SET0_8__DI1_DATA_CNT_UP0_8                   IPU_MEMORY_OFFSET+0x0040700,0x000001FF
+
+#define SRM_DI1_DW_SET0_9__ADDR                                 IPU_MEMORY_OFFSET+0x0040704
+#define SRM_DI1_DW_SET0_9__EMPTY                                IPU_MEMORY_OFFSET+0x0040704,0x00000000
+#define SRM_DI1_DW_SET0_9__FULL                                 IPU_MEMORY_OFFSET+0x0040704,0xffffffff
+#define SRM_DI1_DW_SET0_9__DI1_DATA_CNT_DOWN0_9                 IPU_MEMORY_OFFSET+0x0040704,0x01FF0000
+#define SRM_DI1_DW_SET0_9__DI1_DATA_CNT_UP0_9                   IPU_MEMORY_OFFSET+0x0040704,0x000001FF
+
+#define SRM_DI1_DW_SET0_10__ADDR                                IPU_MEMORY_OFFSET+0x0040708
+#define SRM_DI1_DW_SET0_10__EMPTY                               IPU_MEMORY_OFFSET+0x0040708,0x00000000
+#define SRM_DI1_DW_SET0_10__FULL                                IPU_MEMORY_OFFSET+0x0040708,0xffffffff
+#define SRM_DI1_DW_SET0_10__DI1_DATA_CNT_DOWN0_10               IPU_MEMORY_OFFSET+0x0040708,0x01FF0000
+#define SRM_DI1_DW_SET0_10__DI1_DATA_CNT_UP0_10                 IPU_MEMORY_OFFSET+0x0040708,0x000001FF
+
+#define SRM_DI1_DW_SET0_11__ADDR                                IPU_MEMORY_OFFSET+0x004070C
+#define SRM_DI1_DW_SET0_11__EMPTY                               IPU_MEMORY_OFFSET+0x004070C,0x00000000
+#define SRM_DI1_DW_SET0_11__FULL                                IPU_MEMORY_OFFSET+0x004070C,0xffffffff
+#define SRM_DI1_DW_SET0_11__DI1_DATA_CNT_DOWN0_11               IPU_MEMORY_OFFSET+0x004070C,0x01FF0000
+#define SRM_DI1_DW_SET0_11__DI1_DATA_CNT_UP0_11                 IPU_MEMORY_OFFSET+0x004070C,0x000001FF
+
+#define SRM_DI1_DW_SET1_0__ADDR                                 IPU_MEMORY_OFFSET+0x0040710
+#define SRM_DI1_DW_SET1_0__EMPTY                                IPU_MEMORY_OFFSET+0x0040710,0x00000000
+#define SRM_DI1_DW_SET1_0__FULL                                 IPU_MEMORY_OFFSET+0x0040710,0xffffffff
+#define SRM_DI1_DW_SET1_0__DI1_DATA_CNT_DOWN1_0                 IPU_MEMORY_OFFSET+0x0040710,0x01FF0000
+#define SRM_DI1_DW_SET1_0__DI1_DATA_CNT_UP1_0                   IPU_MEMORY_OFFSET+0x0040710,0x000001FF
+
+#define SRM_DI1_DW_SET1_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040714
+#define SRM_DI1_DW_SET1_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040714,0x00000000
+#define SRM_DI1_DW_SET1_1__FULL                                 IPU_MEMORY_OFFSET+0x0040714,0xffffffff
+#define SRM_DI1_DW_SET1_1__DI1_DATA_CNT_DOWN1_1                 IPU_MEMORY_OFFSET+0x0040714,0x01FF0000
+#define SRM_DI1_DW_SET1_1__DI1_DATA_CNT_UP1_1                   IPU_MEMORY_OFFSET+0x0040714,0x000001FF
+
+#define SRM_DI1_DW_SET1_2__ADDR                                 IPU_MEMORY_OFFSET+0x0040718
+#define SRM_DI1_DW_SET1_2__EMPTY                                IPU_MEMORY_OFFSET+0x0040718,0x00000000
+#define SRM_DI1_DW_SET1_2__FULL                                 IPU_MEMORY_OFFSET+0x0040718,0xffffffff
+#define SRM_DI1_DW_SET1_2__DI1_DATA_CNT_DOWN1_2                 IPU_MEMORY_OFFSET+0x0040718,0x01FF0000
+#define SRM_DI1_DW_SET1_2__DI1_DATA_CNT_UP1_2                   IPU_MEMORY_OFFSET+0x0040718,0x000001FF
+
+#define SRM_DI1_DW_SET1_3__ADDR                                 IPU_MEMORY_OFFSET+0x004071C
+#define SRM_DI1_DW_SET1_3__EMPTY                                IPU_MEMORY_OFFSET+0x004071C,0x00000000
+#define SRM_DI1_DW_SET1_3__FULL                                 IPU_MEMORY_OFFSET+0x004071C,0xffffffff
+#define SRM_DI1_DW_SET1_3__DI1_DATA_CNT_DOWN1_3                 IPU_MEMORY_OFFSET+0x004071C,0x01FF0000
+#define SRM_DI1_DW_SET1_3__DI1_DATA_CNT_UP1_3                   IPU_MEMORY_OFFSET+0x004071C,0x000001FF
+
+#define SRM_DI1_DW_SET1_4__ADDR                                 IPU_MEMORY_OFFSET+0x0040720
+#define SRM_DI1_DW_SET1_4__EMPTY                                IPU_MEMORY_OFFSET+0x0040720,0x00000000
+#define SRM_DI1_DW_SET1_4__FULL                                 IPU_MEMORY_OFFSET+0x0040720,0xffffffff
+#define SRM_DI1_DW_SET1_4__DI1_DATA_CNT_DOWN1_4                 IPU_MEMORY_OFFSET+0x0040720,0x01FF0000
+#define SRM_DI1_DW_SET1_4__DI1_DATA_CNT_UP1_4                   IPU_MEMORY_OFFSET+0x0040720,0x000001FF
+
+#define SRM_DI1_DW_SET1_5__ADDR                                 IPU_MEMORY_OFFSET+0x0040724
+#define SRM_DI1_DW_SET1_5__EMPTY                                IPU_MEMORY_OFFSET+0x0040724,0x00000000
+#define SRM_DI1_DW_SET1_5__FULL                                 IPU_MEMORY_OFFSET+0x0040724,0xffffffff
+#define SRM_DI1_DW_SET1_5__DI1_DATA_CNT_DOWN1_5                 IPU_MEMORY_OFFSET+0x0040724,0x01FF0000
+#define SRM_DI1_DW_SET1_5__DI1_DATA_CNT_UP1_5                   IPU_MEMORY_OFFSET+0x0040724,0x000001FF
+
+#define SRM_DI1_DW_SET1_6__ADDR                                 IPU_MEMORY_OFFSET+0x0040728
+#define SRM_DI1_DW_SET1_6__EMPTY                                IPU_MEMORY_OFFSET+0x0040728,0x00000000
+#define SRM_DI1_DW_SET1_6__FULL                                 IPU_MEMORY_OFFSET+0x0040728,0xffffffff
+#define SRM_DI1_DW_SET1_6__DI1_DATA_CNT_DOWN1_6                 IPU_MEMORY_OFFSET+0x0040728,0x01FF0000
+#define SRM_DI1_DW_SET1_6__DI1_DATA_CNT_UP1_6                   IPU_MEMORY_OFFSET+0x0040728,0x000001FF
+
+#define SRM_DI1_DW_SET1_7__ADDR                                 IPU_MEMORY_OFFSET+0x004072C
+#define SRM_DI1_DW_SET1_7__EMPTY                                IPU_MEMORY_OFFSET+0x004072C,0x00000000
+#define SRM_DI1_DW_SET1_7__FULL                                 IPU_MEMORY_OFFSET+0x004072C,0xffffffff
+#define SRM_DI1_DW_SET1_7__DI1_DATA_CNT_DOWN1_7                 IPU_MEMORY_OFFSET+0x004072C,0x01FF0000
+#define SRM_DI1_DW_SET1_7__DI1_DATA_CNT_UP1_7                   IPU_MEMORY_OFFSET+0x004072C,0x000001FF
+
+#define SRM_DI1_DW_SET1_8__ADDR                                 IPU_MEMORY_OFFSET+0x0040730
+#define SRM_DI1_DW_SET1_8__EMPTY                                IPU_MEMORY_OFFSET+0x0040730,0x00000000
+#define SRM_DI1_DW_SET1_8__FULL                                 IPU_MEMORY_OFFSET+0x0040730,0xffffffff
+#define SRM_DI1_DW_SET1_8__DI1_DATA_CNT_DOWN1_8                 IPU_MEMORY_OFFSET+0x0040730,0x01FF0000
+#define SRM_DI1_DW_SET1_8__DI1_DATA_CNT_UP1_8                   IPU_MEMORY_OFFSET+0x0040730,0x000001FF
+
+#define SRM_DI1_DW_SET1_9__ADDR                                 IPU_MEMORY_OFFSET+0x0040734
+#define SRM_DI1_DW_SET1_9__EMPTY                                IPU_MEMORY_OFFSET+0x0040734,0x00000000
+#define SRM_DI1_DW_SET1_9__FULL                                 IPU_MEMORY_OFFSET+0x0040734,0xffffffff
+#define SRM_DI1_DW_SET1_9__DI1_DATA_CNT_DOWN1_9                 IPU_MEMORY_OFFSET+0x0040734,0x01FF0000
+#define SRM_DI1_DW_SET1_9__DI1_DATA_CNT_UP1_9                   IPU_MEMORY_OFFSET+0x0040734,0x000001FF
+
+#define SRM_DI1_DW_SET1_10__ADDR                                IPU_MEMORY_OFFSET+0x0040738
+#define SRM_DI1_DW_SET1_10__EMPTY                               IPU_MEMORY_OFFSET+0x0040738,0x00000000
+#define SRM_DI1_DW_SET1_10__FULL                                IPU_MEMORY_OFFSET+0x0040738,0xffffffff
+#define SRM_DI1_DW_SET1_10__DI1_DATA_CNT_DOWN1_10               IPU_MEMORY_OFFSET+0x0040738,0x01FF0000
+#define SRM_DI1_DW_SET1_10__DI1_DATA_CNT_UP1_10                 IPU_MEMORY_OFFSET+0x0040738,0x000001FF
+
+#define SRM_DI1_DW_SET1_11__ADDR                                IPU_MEMORY_OFFSET+0x004073C
+#define SRM_DI1_DW_SET1_11__EMPTY                               IPU_MEMORY_OFFSET+0x004073C,0x00000000
+#define SRM_DI1_DW_SET1_11__FULL                                IPU_MEMORY_OFFSET+0x004073C,0xffffffff
+#define SRM_DI1_DW_SET1_11__DI1_DATA_CNT_DOWN1_11               IPU_MEMORY_OFFSET+0x004073C,0x01FF0000
+#define SRM_DI1_DW_SET1_11__DI1_DATA_CNT_UP1_11                 IPU_MEMORY_OFFSET+0x004073C,0x000001FF
+
+#define SRM_DI1_DW_SET2_0__ADDR                                 IPU_MEMORY_OFFSET+0x0040740
+#define SRM_DI1_DW_SET2_0__EMPTY                                IPU_MEMORY_OFFSET+0x0040740,0x00000000
+#define SRM_DI1_DW_SET2_0__FULL                                 IPU_MEMORY_OFFSET+0x0040740,0xffffffff
+#define SRM_DI1_DW_SET2_0__DI1_DATA_CNT_DOWN2_0                 IPU_MEMORY_OFFSET+0x0040740,0x01FF0000
+#define SRM_DI1_DW_SET2_0__DI1_DATA_CNT_UP2_0                   IPU_MEMORY_OFFSET+0x0040740,0x000001FF
+
+#define SRM_DI1_DW_SET2_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040744
+#define SRM_DI1_DW_SET2_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040744,0x00000000
+#define SRM_DI1_DW_SET2_1__FULL                                 IPU_MEMORY_OFFSET+0x0040744,0xffffffff
+#define SRM_DI1_DW_SET2_1__DI1_DATA_CNT_DOWN2_1                 IPU_MEMORY_OFFSET+0x0040744,0x01FF0000
+#define SRM_DI1_DW_SET2_1__DI1_DATA_CNT_UP2_1                   IPU_MEMORY_OFFSET+0x0040744,0x000001FF
+
+#define SRM_DI1_DW_SET2_2__ADDR                                 IPU_MEMORY_OFFSET+0x0040748
+#define SRM_DI1_DW_SET2_2__EMPTY                                IPU_MEMORY_OFFSET+0x0040748,0x00000000
+#define SRM_DI1_DW_SET2_2__FULL                                 IPU_MEMORY_OFFSET+0x0040748,0xffffffff
+#define SRM_DI1_DW_SET2_2__DI1_DATA_CNT_DOWN2_2                 IPU_MEMORY_OFFSET+0x0040748,0x01FF0000
+#define SRM_DI1_DW_SET2_2__DI1_DATA_CNT_UP2_2                   IPU_MEMORY_OFFSET+0x0040748,0x000001FF
+
+#define SRM_DI1_DW_SET2_3__ADDR                                 IPU_MEMORY_OFFSET+0x004074C
+#define SRM_DI1_DW_SET2_3__EMPTY                                IPU_MEMORY_OFFSET+0x004074C,0x00000000
+#define SRM_DI1_DW_SET2_3__FULL                                 IPU_MEMORY_OFFSET+0x004074C,0xffffffff
+#define SRM_DI1_DW_SET2_3__DI1_DATA_CNT_DOWN2_3                 IPU_MEMORY_OFFSET+0x004074C,0x01FF0000
+#define SRM_DI1_DW_SET2_3__DI1_DATA_CNT_UP2_3                   IPU_MEMORY_OFFSET+0x004074C,0x000001FF
+
+#define SRM_DI1_DW_SET2_4__ADDR                                 IPU_MEMORY_OFFSET+0x0040750
+#define SRM_DI1_DW_SET2_4__EMPTY                                IPU_MEMORY_OFFSET+0x0040750,0x00000000
+#define SRM_DI1_DW_SET2_4__FULL                                 IPU_MEMORY_OFFSET+0x0040750,0xffffffff
+#define SRM_DI1_DW_SET2_4__DI1_DATA_CNT_DOWN2_4                 IPU_MEMORY_OFFSET+0x0040750,0x01FF0000
+#define SRM_DI1_DW_SET2_4__DI1_DATA_CNT_UP2_4                   IPU_MEMORY_OFFSET+0x0040750,0x000001FF
+
+#define SRM_DI1_DW_SET2_5__ADDR                                 IPU_MEMORY_OFFSET+0x0040754
+#define SRM_DI1_DW_SET2_5__EMPTY                                IPU_MEMORY_OFFSET+0x0040754,0x00000000
+#define SRM_DI1_DW_SET2_5__FULL                                 IPU_MEMORY_OFFSET+0x0040754,0xffffffff
+#define SRM_DI1_DW_SET2_5__DI1_DATA_CNT_DOWN2_5                 IPU_MEMORY_OFFSET+0x0040754,0x01FF0000
+#define SRM_DI1_DW_SET2_5__DI1_DATA_CNT_UP2_5                   IPU_MEMORY_OFFSET+0x0040754,0x000001FF
+
+#define SRM_DI1_DW_SET2_6__ADDR                                 IPU_MEMORY_OFFSET+0x0040758
+#define SRM_DI1_DW_SET2_6__EMPTY                                IPU_MEMORY_OFFSET+0x0040758,0x00000000
+#define SRM_DI1_DW_SET2_6__FULL                                 IPU_MEMORY_OFFSET+0x0040758,0xffffffff
+#define SRM_DI1_DW_SET2_6__DI1_DATA_CNT_DOWN2_6                 IPU_MEMORY_OFFSET+0x0040758,0x01FF0000
+#define SRM_DI1_DW_SET2_6__DI1_DATA_CNT_UP2_6                   IPU_MEMORY_OFFSET+0x0040758,0x000001FF
+
+#define SRM_DI1_DW_SET2_7__ADDR                                 IPU_MEMORY_OFFSET+0x004075C
+#define SRM_DI1_DW_SET2_7__EMPTY                                IPU_MEMORY_OFFSET+0x004075C,0x00000000
+#define SRM_DI1_DW_SET2_7__FULL                                 IPU_MEMORY_OFFSET+0x004075C,0xffffffff
+#define SRM_DI1_DW_SET2_7__DI1_DATA_CNT_DOWN2_7                 IPU_MEMORY_OFFSET+0x004075C,0x01FF0000
+#define SRM_DI1_DW_SET2_7__DI1_DATA_CNT_UP2_7                   IPU_MEMORY_OFFSET+0x004075C,0x000001FF
+
+#define SRM_DI1_DW_SET2_8__ADDR                                 IPU_MEMORY_OFFSET+0x0040760
+#define SRM_DI1_DW_SET2_8__EMPTY                                IPU_MEMORY_OFFSET+0x0040760,0x00000000
+#define SRM_DI1_DW_SET2_8__FULL                                 IPU_MEMORY_OFFSET+0x0040760,0xffffffff
+#define SRM_DI1_DW_SET2_8__DI1_DATA_CNT_DOWN2_8                 IPU_MEMORY_OFFSET+0x0040760,0x01FF0000
+#define SRM_DI1_DW_SET2_8__DI1_DATA_CNT_UP2_8                   IPU_MEMORY_OFFSET+0x0040760,0x000001FF
+
+#define SRM_DI1_DW_SET2_9__ADDR                                 IPU_MEMORY_OFFSET+0x0040764
+#define SRM_DI1_DW_SET2_9__EMPTY                                IPU_MEMORY_OFFSET+0x0040764,0x00000000
+#define SRM_DI1_DW_SET2_9__FULL                                 IPU_MEMORY_OFFSET+0x0040764,0xffffffff
+#define SRM_DI1_DW_SET2_9__DI1_DATA_CNT_DOWN2_9                 IPU_MEMORY_OFFSET+0x0040764,0x01FF0000
+#define SRM_DI1_DW_SET2_9__DI1_DATA_CNT_UP2_9                   IPU_MEMORY_OFFSET+0x0040764,0x000001FF
+
+#define SRM_DI1_DW_SET2_10__ADDR                                IPU_MEMORY_OFFSET+0x0040768
+#define SRM_DI1_DW_SET2_10__EMPTY                               IPU_MEMORY_OFFSET+0x0040768,0x00000000
+#define SRM_DI1_DW_SET2_10__FULL                                IPU_MEMORY_OFFSET+0x0040768,0xffffffff
+#define SRM_DI1_DW_SET2_10__DI1_DATA_CNT_DOWN2_10               IPU_MEMORY_OFFSET+0x0040768,0x01FF0000
+#define SRM_DI1_DW_SET2_10__DI1_DATA_CNT_UP2_10                 IPU_MEMORY_OFFSET+0x0040768,0x000001FF
+
+#define SRM_DI1_DW_SET2_11__ADDR                                IPU_MEMORY_OFFSET+0x004076C
+#define SRM_DI1_DW_SET2_11__EMPTY                               IPU_MEMORY_OFFSET+0x004076C,0x00000000
+#define SRM_DI1_DW_SET2_11__FULL                                IPU_MEMORY_OFFSET+0x004076C,0xffffffff
+#define SRM_DI1_DW_SET2_11__DI1_DATA_CNT_DOWN2_11               IPU_MEMORY_OFFSET+0x004076C,0x01FF0000
+#define SRM_DI1_DW_SET2_11__DI1_DATA_CNT_UP2_11                 IPU_MEMORY_OFFSET+0x004076C,0x000001FF
+
+#define SRM_DI1_DW_SET3_0__ADDR                                 IPU_MEMORY_OFFSET+0x0040770
+#define SRM_DI1_DW_SET3_0__EMPTY                                IPU_MEMORY_OFFSET+0x0040770,0x00000000
+#define SRM_DI1_DW_SET3_0__FULL                                 IPU_MEMORY_OFFSET+0x0040770,0xffffffff
+#define SRM_DI1_DW_SET3_0__DI1_DATA_CNT_DOWN3_0                 IPU_MEMORY_OFFSET+0x0040770,0x01FF0000
+#define SRM_DI1_DW_SET3_0__DI1_DATA_CNT_UP3_0                   IPU_MEMORY_OFFSET+0x0040770,0x000001FF
+
+#define SRM_DI1_DW_SET3_1__ADDR                                 IPU_MEMORY_OFFSET+0x0040774
+#define SRM_DI1_DW_SET3_1__EMPTY                                IPU_MEMORY_OFFSET+0x0040774,0x00000000
+#define SRM_DI1_DW_SET3_1__FULL                                 IPU_MEMORY_OFFSET+0x0040774,0xffffffff
+#define SRM_DI1_DW_SET3_1__DI1_DATA_CNT_DOWN3_1                 IPU_MEMORY_OFFSET+0x0040774,0x01FF0000
+#define SRM_DI1_DW_SET3_1__DI1_DATA_CNT_UP3_1                   IPU_MEMORY_OFFSET+0x0040774,0x000001FF
+
+#define SRM_DI1_DW_SET3_2__ADDR                                 IPU_MEMORY_OFFSET+0x0040778
+#define SRM_DI1_DW_SET3_2__EMPTY                                IPU_MEMORY_OFFSET+0x0040778,0x00000000
+#define SRM_DI1_DW_SET3_2__FULL                                 IPU_MEMORY_OFFSET+0x0040778,0xffffffff
+#define SRM_DI1_DW_SET3_2__DI1_DATA_CNT_DOWN3_2                 IPU_MEMORY_OFFSET+0x0040778,0x01FF0000
+#define SRM_DI1_DW_SET3_2__DI1_DATA_CNT_UP3_2                   IPU_MEMORY_OFFSET+0x0040778,0x000001FF
+
+#define SRM_DI1_DW_SET3_3__ADDR                                 IPU_MEMORY_OFFSET+0x004077C
+#define SRM_DI1_DW_SET3_3__EMPTY                                IPU_MEMORY_OFFSET+0x004077C,0x00000000
+#define SRM_DI1_DW_SET3_3__FULL                                 IPU_MEMORY_OFFSET+0x004077C,0xffffffff
+#define SRM_DI1_DW_SET3_3__DI1_DATA_CNT_DOWN3_3                 IPU_MEMORY_OFFSET+0x004077C,0x01FF0000
+#define SRM_DI1_DW_SET3_3__DI1_DATA_CNT_UP3_3                   IPU_MEMORY_OFFSET+0x004077C,0x000001FF
+
+#define SRM_DI1_DW_SET3_4__ADDR                                 IPU_MEMORY_OFFSET+0x0040780
+#define SRM_DI1_DW_SET3_4__EMPTY                                IPU_MEMORY_OFFSET+0x0040780,0x00000000
+#define SRM_DI1_DW_SET3_4__FULL                                 IPU_MEMORY_OFFSET+0x0040780,0xffffffff
+#define SRM_DI1_DW_SET3_4__DI1_DATA_CNT_DOWN3_4                 IPU_MEMORY_OFFSET+0x0040780,0x01FF0000
+#define SRM_DI1_DW_SET3_4__DI1_DATA_CNT_UP3_4                   IPU_MEMORY_OFFSET+0x0040780,0x000001FF
+
+#define SRM_DI1_DW_SET3_5__ADDR                                 IPU_MEMORY_OFFSET+0x0040784
+#define SRM_DI1_DW_SET3_5__EMPTY                                IPU_MEMORY_OFFSET+0x0040784,0x00000000
+#define SRM_DI1_DW_SET3_5__FULL                                 IPU_MEMORY_OFFSET+0x0040784,0xffffffff
+#define SRM_DI1_DW_SET3_5__DI1_DATA_CNT_DOWN3_5                 IPU_MEMORY_OFFSET+0x0040784,0x01FF0000
+#define SRM_DI1_DW_SET3_5__DI1_DATA_CNT_UP3_5                   IPU_MEMORY_OFFSET+0x0040784,0x000001FF
+
+#define SRM_DI1_DW_SET3_6__ADDR                                 IPU_MEMORY_OFFSET+0x0040788
+#define SRM_DI1_DW_SET3_6__EMPTY                                IPU_MEMORY_OFFSET+0x0040788,0x00000000
+#define SRM_DI1_DW_SET3_6__FULL                                 IPU_MEMORY_OFFSET+0x0040788,0xffffffff
+#define SRM_DI1_DW_SET3_6__DI1_DATA_CNT_DOWN3_6                 IPU_MEMORY_OFFSET+0x0040788,0x01FF0000
+#define SRM_DI1_DW_SET3_6__DI1_DATA_CNT_UP3_6                   IPU_MEMORY_OFFSET+0x0040788,0x000001FF
+
+#define SRM_DI1_DW_SET3_7__ADDR                                 IPU_MEMORY_OFFSET+0x004078C
+#define SRM_DI1_DW_SET3_7__EMPTY                                IPU_MEMORY_OFFSET+0x004078C,0x00000000
+#define SRM_DI1_DW_SET3_7__FULL                                 IPU_MEMORY_OFFSET+0x004078C,0xffffffff
+#define SRM_DI1_DW_SET3_7__DI1_DATA_CNT_DOWN3_7                 IPU_MEMORY_OFFSET+0x004078C,0x01FF0000
+#define SRM_DI1_DW_SET3_7__DI1_DATA_CNT_UP3_7                   IPU_MEMORY_OFFSET+0x004078C,0x000001FF
+
+#define SRM_DI1_DW_SET3_8__ADDR                                 IPU_MEMORY_OFFSET+0x0040790
+#define SRM_DI1_DW_SET3_8__EMPTY                                IPU_MEMORY_OFFSET+0x0040790,0x00000000
+#define SRM_DI1_DW_SET3_8__FULL                                 IPU_MEMORY_OFFSET+0x0040790,0xffffffff
+#define SRM_DI1_DW_SET3_8__DI1_DATA_CNT_DOWN3_8                 IPU_MEMORY_OFFSET+0x0040790,0x01FF0000
+#define SRM_DI1_DW_SET3_8__DI1_DATA_CNT_UP3_8                   IPU_MEMORY_OFFSET+0x0040790,0x000001FF
+
+#define SRM_DI1_DW_SET3_9__ADDR                                 IPU_MEMORY_OFFSET+0x0040794
+#define SRM_DI1_DW_SET3_9__EMPTY                                IPU_MEMORY_OFFSET+0x0040794,0x00000000
+#define SRM_DI1_DW_SET3_9__FULL                                 IPU_MEMORY_OFFSET+0x0040794,0xffffffff
+#define SRM_DI1_DW_SET3_9__DI1_DATA_CNT_DOWN3_9                 IPU_MEMORY_OFFSET+0x0040794,0x01FF0000
+#define SRM_DI1_DW_SET3_9__DI1_DATA_CNT_UP3_9                   IPU_MEMORY_OFFSET+0x0040794,0x000001FF
+
+#define SRM_DI1_DW_SET3_10__ADDR                                IPU_MEMORY_OFFSET+0x0040798
+#define SRM_DI1_DW_SET3_10__EMPTY                               IPU_MEMORY_OFFSET+0x0040798,0x00000000
+#define SRM_DI1_DW_SET3_10__FULL                                IPU_MEMORY_OFFSET+0x0040798,0xffffffff
+#define SRM_DI1_DW_SET3_10__DI1_DATA_CNT_DOWN3_10               IPU_MEMORY_OFFSET+0x0040798,0x01FF0000
+#define SRM_DI1_DW_SET3_10__DI1_DATA_CNT_UP3_10                 IPU_MEMORY_OFFSET+0x0040798,0x000001FF
+
+#define SRM_DI1_DW_SET3_11__ADDR                                IPU_MEMORY_OFFSET+0x004079C
+#define SRM_DI1_DW_SET3_11__EMPTY                               IPU_MEMORY_OFFSET+0x004079C,0x00000000
+#define SRM_DI1_DW_SET3_11__FULL                                IPU_MEMORY_OFFSET+0x004079C,0xffffffff
+#define SRM_DI1_DW_SET3_11__DI1_DATA_CNT_DOWN3_11               IPU_MEMORY_OFFSET+0x004079C,0x01FF0000
+#define SRM_DI1_DW_SET3_11__DI1_DATA_CNT_UP3_11                 IPU_MEMORY_OFFSET+0x004079C,0x000001FF
+
+#define SRM_DI1_STP_REP_1__ADDR                                 IPU_MEMORY_OFFSET+0x00407A0
+#define SRM_DI1_STP_REP_1__EMPTY                                IPU_MEMORY_OFFSET+0x00407A0,0x00000000
+#define SRM_DI1_STP_REP_1__FULL                                 IPU_MEMORY_OFFSET+0x00407A0,0xffffffff
+#define SRM_DI1_STP_REP_1__DI1_STEP_REPEAT_2                    IPU_MEMORY_OFFSET+0x00407A0,0x0FFF0000
+#define SRM_DI1_STP_REP_1__DI1_STEP_REPEAT_1                    IPU_MEMORY_OFFSET+0x00407A0,0x00000FFF
+
+#define SRM_DI1_STP_REP_2__ADDR                                 IPU_MEMORY_OFFSET+0x00407A4
+#define SRM_DI1_STP_REP_2__EMPTY                                IPU_MEMORY_OFFSET+0x00407A4,0x00000000
+#define SRM_DI1_STP_REP_2__FULL                                 IPU_MEMORY_OFFSET+0x00407A4,0xffffffff
+#define SRM_DI1_STP_REP_2__DI1_STEP_REPEAT_4                    IPU_MEMORY_OFFSET+0x00407A4,0x0FFF0000
+#define SRM_DI1_STP_REP_2__DI1_STEP_REPEAT_3                    IPU_MEMORY_OFFSET+0x00407A4,0x00000FFF
+
+#define SRM_DI1_STP_REP_3__ADDR                                 IPU_MEMORY_OFFSET+0x00407A8
+#define SRM_DI1_STP_REP_3__EMPTY                                IPU_MEMORY_OFFSET+0x00407A8,0x00000000
+#define SRM_DI1_STP_REP_3__FULL                                 IPU_MEMORY_OFFSET+0x00407A8,0xffffffff
+#define SRM_DI1_STP_REP_3__DI1_STEP_REPEAT_6                    IPU_MEMORY_OFFSET+0x00407A8,0x0FFF0000
+#define SRM_DI1_STP_REP_3__DI1_STEP_REPEAT_5                    IPU_MEMORY_OFFSET+0x00407A8,0x00000FFF
+
+#define SRM_DI1_STP_REP_4__ADDR                                 IPU_MEMORY_OFFSET+0x00407AC
+#define SRM_DI1_STP_REP_4__EMPTY                                IPU_MEMORY_OFFSET+0x00407AC,0x00000000
+#define SRM_DI1_STP_REP_4__FULL                                 IPU_MEMORY_OFFSET+0x00407AC,0xffffffff
+#define SRM_DI1_STP_REP_4__DI1_STEP_REPEAT_8                    IPU_MEMORY_OFFSET+0x00407AC,0x0FFF0000
+#define SRM_DI1_STP_REP_4__DI1_STEP_REPEAT_7                    IPU_MEMORY_OFFSET+0x00407AC,0x00000FFF
+
+#define SRM_DI1_STP_REP_9__ADDR                                 IPU_MEMORY_OFFSET+0x00407B0
+#define SRM_DI1_STP_REP_9__EMPTY                                IPU_MEMORY_OFFSET+0x00407B0,0x00000000
+#define SRM_DI1_STP_REP_9__FULL                                 IPU_MEMORY_OFFSET+0x00407B0,0xffffffff
+#define SRM_DI1_STP_REP_9__DI1_STEP_REPEAT_9                    IPU_MEMORY_OFFSET+0x00407B0,0x00000FFF
+
+#define SRM_DI1_SER_CONF__ADDR                                  IPU_MEMORY_OFFSET+0x00407B4
+#define SRM_DI1_SER_CONF__EMPTY                                 IPU_MEMORY_OFFSET+0x00407B4,0x00000000
+#define SRM_DI1_SER_CONF__FULL                                  IPU_MEMORY_OFFSET+0x00407B4,0xffffffff
+#define SRM_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_R_1            IPU_MEMORY_OFFSET+0x00407B4,0xF0000000
+#define SRM_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_R_0            IPU_MEMORY_OFFSET+0x00407B4,0x0F000000
+#define SRM_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_W_1            IPU_MEMORY_OFFSET+0x00407B4,0x00F00000
+#define SRM_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_W_0            IPU_MEMORY_OFFSET+0x00407B4,0x000F0000
+#define SRM_DI1_SER_CONF__DI1_SERIAL_LATCH                      IPU_MEMORY_OFFSET+0x00407B4,0x0000FF00
+#define SRM_DI1_SER_CONF__DI1_LLA_SER_ACCESS                    IPU_MEMORY_OFFSET+0x00407B4,0x00000020
+#define SRM_DI1_SER_CONF__DI1_SER_CLK_POLARITY                  IPU_MEMORY_OFFSET+0x00407B4,0x00000010
+#define SRM_DI1_SER_CONF__DI1_SERIAL_DATA_POLARITY              IPU_MEMORY_OFFSET+0x00407B4,0x00000008
+#define SRM_DI1_SER_CONF__DI1_SERIAL_RS_POLARITY                IPU_MEMORY_OFFSET+0x00407B4,0x00000004
+#define SRM_DI1_SER_CONF__DI1_SERIAL_CS_POLARITY                IPU_MEMORY_OFFSET+0x00407B4,0x00000002
+#define SRM_DI1_SER_CONF__DI1_WAIT4SERIAL                       IPU_MEMORY_OFFSET+0x00407B4,0x00000001
+
+#define SRM_DI1_SSC__ADDR                                       IPU_MEMORY_OFFSET+0x00407B8
+#define SRM_DI1_SSC__EMPTY                                      IPU_MEMORY_OFFSET+0x00407B8,0x00000000
+#define SRM_DI1_SSC__FULL                                       IPU_MEMORY_OFFSET+0x00407B8,0xffffffff
+#define SRM_DI1_SSC__DI1_PIN17_ERM                              IPU_MEMORY_OFFSET+0x00407B8,0x00800000
+#define SRM_DI1_SSC__DI1_PIN16_ERM                              IPU_MEMORY_OFFSET+0x00407B8,0x00400000
+#define SRM_DI1_SSC__DI1_PIN15_ERM                              IPU_MEMORY_OFFSET+0x00407B8,0x00200000
+#define SRM_DI1_SSC__DI1_PIN14_ERM                              IPU_MEMORY_OFFSET+0x00407B8,0x00100000
+#define SRM_DI1_SSC__DI1_PIN13_ERM                              IPU_MEMORY_OFFSET+0x00407B8,0x00080000
+#define SRM_DI1_SSC__DI1_PIN12_ERM                              IPU_MEMORY_OFFSET+0x00407B8,0x00040000
+#define SRM_DI1_SSC__DI1_PIN11_ERM                              IPU_MEMORY_OFFSET+0x00407B8,0x00020000
+#define SRM_DI1_SSC__DI1_CS_ERM                                 IPU_MEMORY_OFFSET+0x00407B8,0x00010000
+#define SRM_DI1_SSC__DI1_WAIT_ON                                IPU_MEMORY_OFFSET+0x00407B8,0x00000020
+#define SRM_DI1_SSC__DI1_BYTE_EN_RD_IN                          IPU_MEMORY_OFFSET+0x00407B8,0x00000008
+#define SRM_DI1_SSC__DI1_BYTE_EN_PNTR                           IPU_MEMORY_OFFSET+0x00407B8,0x00000007
+
+#define SRM_DI1_POL__ADDR                                       IPU_MEMORY_OFFSET+0x00407BC
+#define SRM_DI1_POL__EMPTY                                      IPU_MEMORY_OFFSET+0x00407BC,0x00000000
+#define SRM_DI1_POL__FULL                                       IPU_MEMORY_OFFSET+0x00407BC,0xffffffff
+#define SRM_DI1_POL__DI1_WAIT_POLARITY                          IPU_MEMORY_OFFSET+0x00407BC,0x04000000
+#define SRM_DI1_POL__DI1_CS1_BYTE_EN_POLARITY                   IPU_MEMORY_OFFSET+0x00407BC,0x02000000
+#define SRM_DI1_POL__DI1_CS0_BYTE_EN_POLARITY                   IPU_MEMORY_OFFSET+0x00407BC,0x01000000
+#define SRM_DI1_POL__DI1_CS1_DATA_POLARITY                      IPU_MEMORY_OFFSET+0x00407BC,0x00800000
+#define SRM_DI1_POL__DI1_CS1_POLARITY_17                        IPU_MEMORY_OFFSET+0x00407BC,0x00400000
+#define SRM_DI1_POL__DI1_CS1_POLARITY_16                        IPU_MEMORY_OFFSET+0x00407BC,0x00200000
+#define SRM_DI1_POL__DI1_CS1_POLARITY_15                        IPU_MEMORY_OFFSET+0x00407BC,0x00100000
+#define SRM_DI1_POL__DI1_CS1_POLARITY_14                        IPU_MEMORY_OFFSET+0x00407BC,0x00080000
+#define SRM_DI1_POL__DI1_CS1_POLARITY_13                        IPU_MEMORY_OFFSET+0x00407BC,0x00040000
+#define SRM_DI1_POL__DI1_CS1_POLARITY_12                        IPU_MEMORY_OFFSET+0x00407BC,0x00020000
+#define SRM_DI1_POL__DI1_CS1_POLARITY_11                        IPU_MEMORY_OFFSET+0x00407BC,0x00010000
+#define SRM_DI1_POL__DI1_CS0_DATA_POLARITY                      IPU_MEMORY_OFFSET+0x00407BC,0x00008000
+#define SRM_DI1_POL__DI1_CS0_POLARITY_17                        IPU_MEMORY_OFFSET+0x00407BC,0x00004000
+#define SRM_DI1_POL__DI1_CS0_POLARITY_16                        IPU_MEMORY_OFFSET+0x00407BC,0x00002000
+#define SRM_DI1_POL__DI1_CS0_POLARITY_15                        IPU_MEMORY_OFFSET+0x00407BC,0x00001000
+#define SRM_DI1_POL__DI1_CS0_POLARITY_14                        IPU_MEMORY_OFFSET+0x00407BC,0x00000800
+#define SRM_DI1_POL__DI1_CS0_POLARITY_13                        IPU_MEMORY_OFFSET+0x00407BC,0x00000400
+#define SRM_DI1_POL__DI1_CS0_POLARITY_12                        IPU_MEMORY_OFFSET+0x00407BC,0x00000200
+#define SRM_DI1_POL__DI1_CS0_POLARITY_11                        IPU_MEMORY_OFFSET+0x00407BC,0x00000100
+#define SRM_DI1_POL__DI1_DRDY_DATA_POLARITY                     IPU_MEMORY_OFFSET+0x00407BC,0x00000080
+#define SRM_DI1_POL__DI1_DRDY_POLARITY_17                       IPU_MEMORY_OFFSET+0x00407BC,0x00000040
+#define SRM_DI1_POL__DI1_DRDY_POLARITY_16                       IPU_MEMORY_OFFSET+0x00407BC,0x00000020
+#define SRM_DI1_POL__DI1_DRDY_POLARITY_15                       IPU_MEMORY_OFFSET+0x00407BC,0x00000010
+#define SRM_DI1_POL__DI1_DRDY_POLARITY_14                       IPU_MEMORY_OFFSET+0x00407BC,0x00000008
+#define SRM_DI1_POL__DI1_DRDY_POLARITY_13                       IPU_MEMORY_OFFSET+0x00407BC,0x00000004
+#define SRM_DI1_POL__DI1_DRDY_POLARITY_12                       IPU_MEMORY_OFFSET+0x00407BC,0x00000002
+#define SRM_DI1_POL__DI1_DRDY_POLARITY_11                       IPU_MEMORY_OFFSET+0x00407BC,0x00000001
+
+#define SRM_DI1_AW0__ADDR                                       IPU_MEMORY_OFFSET+0x00407C0
+#define SRM_DI1_AW0__EMPTY                                      IPU_MEMORY_OFFSET+0x00407C0,0x00000000
+#define SRM_DI1_AW0__FULL                                       IPU_MEMORY_OFFSET+0x00407C0,0xffffffff
+#define SRM_DI1_AW0__DI1_AW_TRIG_SEL                            IPU_MEMORY_OFFSET+0x00407C0,0xF0000000
+#define SRM_DI1_AW0__DI1_AW_HEND                                IPU_MEMORY_OFFSET+0x00407C0,0x0FFF0000
+#define SRM_DI1_AW0__DI1_AW_HCOUNT_SEL                          IPU_MEMORY_OFFSET+0x00407C0,0x0000F000
+#define SRM_DI1_AW0__DI1_AW_HSTART                              IPU_MEMORY_OFFSET+0x00407C0,0x00000FFF
+
+#define SRM_DI1_AW1__ADDR                                       IPU_MEMORY_OFFSET+0x00407C4
+#define SRM_DI1_AW1__EMPTY                                      IPU_MEMORY_OFFSET+0x00407C4,0x00000000
+#define SRM_DI1_AW1__FULL                                       IPU_MEMORY_OFFSET+0x00407C4,0xffffffff
+#define SRM_DI1_AW1__DI1_AW_VEND                                IPU_MEMORY_OFFSET+0x00407C4,0x0FFF0000
+#define SRM_DI1_AW1__DI1_AW_VCOUNT_SEL                          IPU_MEMORY_OFFSET+0x00407C4,0x0000F000
+#define SRM_DI1_AW1__DI1_AW_VSTART                              IPU_MEMORY_OFFSET+0x00407C4,0x00000FFF
+
+#define SRM_DI1_SCR_CONF__ADDR                                  IPU_MEMORY_OFFSET+0x00407C8
+#define SRM_DI1_SCR_CONF__EMPTY                                 IPU_MEMORY_OFFSET+0x00407C8,0x00000000
+#define SRM_DI1_SCR_CONF__FULL                                  IPU_MEMORY_OFFSET+0x00407C8,0xffffffff
+#define SRM_DI1_SCR_CONF__DI1_SCREEN_HEIGHT                     IPU_MEMORY_OFFSET+0x00407C8,0x00000FFF
+
+#define SRM_DC_WR_CH_CONF_2__ADDR                               IPU_MEMORY_OFFSET+0x00404AC
+#define SRM_DC_WR_CH_CONF_2__EMPTY                              IPU_MEMORY_OFFSET+0x00404AC,0x00000000
+#define SRM_DC_WR_CH_CONF_2__FULL                               IPU_MEMORY_OFFSET+0x00404AC,0xffffffff
+#define SRM_DC_WR_CH_CONF_2__PROG_START_TIME_2                  IPU_MEMORY_OFFSET+0x00404AC,0x07FF0000
+#define SRM_DC_WR_CH_CONF_2__CHAN_MASK_DEFAULT_2                IPU_MEMORY_OFFSET+0x00404AC,0x00000100
+#define SRM_DC_WR_CH_CONF_2__PROG_CHAN_TYP_2                    IPU_MEMORY_OFFSET+0x00404AC,0x000000E0
+#define SRM_DC_WR_CH_CONF_2__PROG_DISP_ID_2                     IPU_MEMORY_OFFSET+0x00404AC,0x00000018
+#define SRM_DC_WR_CH_CONF_2__PROG_DI_ID_2                       IPU_MEMORY_OFFSET+0x00404AC,0x00000004
+#define SRM_DC_WR_CH_CONF_2__W_SIZE_2                           IPU_MEMORY_OFFSET+0x00404AC,0x00000003
+
+#define SRM_DC_WR_CH_ADDR_2__ADDR                               IPU_MEMORY_OFFSET+0x00404B0
+#define SRM_DC_WR_CH_ADDR_2__EMPTY                              IPU_MEMORY_OFFSET+0x00404B0,0x00000000
+#define SRM_DC_WR_CH_ADDR_2__FULL                               IPU_MEMORY_OFFSET+0x00404B0,0xffffffff
+#define SRM_DC_WR_CH_ADDR_2__ST_ADDR_2                          IPU_MEMORY_OFFSET+0x00404B0,0x1FFFFFFF
+
+#define SRM_DC_RL0_CH_2__ADDR                                   IPU_MEMORY_OFFSET+0x00404B4
+#define SRM_DC_RL0_CH_2__EMPTY                                  IPU_MEMORY_OFFSET+0x00404B4,0x00000000
+#define SRM_DC_RL0_CH_2__FULL                                   IPU_MEMORY_OFFSET+0x00404B4,0xffffffff
+#define SRM_DC_RL0_CH_2__COD_NL_START_CHAN_2                    IPU_MEMORY_OFFSET+0x00404B4,0xFF000000
+#define SRM_DC_RL0_CH_2__COD_NL_PRIORITY_CHAN_2                 IPU_MEMORY_OFFSET+0x00404B4,0x000F0000
+#define SRM_DC_RL0_CH_2__COD_NF_START_CHAN_2                    IPU_MEMORY_OFFSET+0x00404B4,0x0000FF00
+#define SRM_DC_RL0_CH_2__COD_NF_PRIORITY_CHAN_2                 IPU_MEMORY_OFFSET+0x00404B4,0x0000000F
+
+#define SRM_DC_RL1_CH_2__ADDR                                   IPU_MEMORY_OFFSET+0x00404B8
+#define SRM_DC_RL1_CH_2__EMPTY                                  IPU_MEMORY_OFFSET+0x00404B8,0x00000000
+#define SRM_DC_RL1_CH_2__FULL                                   IPU_MEMORY_OFFSET+0x00404B8,0xffffffff
+#define SRM_DC_RL1_CH_2__COD_NFIELD_START_CHAN_2                IPU_MEMORY_OFFSET+0x00404B8,0xFF000000
+#define SRM_DC_RL1_CH_2__COD_NFIELD_PRIORITY_CHAN_2             IPU_MEMORY_OFFSET+0x00404B8,0x000F0000
+#define SRM_DC_RL1_CH_2__COD_EOF_START_CHAN_2                   IPU_MEMORY_OFFSET+0x00404B8,0x0000FF00
+#define SRM_DC_RL1_CH_2__COD_EOF_PRIORITY_CHAN_2                IPU_MEMORY_OFFSET+0x00404B8,0x0000000F
+
+#define SRM_DC_RL2_CH_2__ADDR                                   IPU_MEMORY_OFFSET+0x00404BC
+#define SRM_DC_RL2_CH_2__EMPTY                                  IPU_MEMORY_OFFSET+0x00404BC,0x00000000
+#define SRM_DC_RL2_CH_2__FULL                                   IPU_MEMORY_OFFSET+0x00404BC,0xffffffff
+#define SRM_DC_RL2_CH_2__COD_EOFIELD_START_CHAN_2               IPU_MEMORY_OFFSET+0x00404BC,0xFF000000
+#define SRM_DC_RL2_CH_2__COD_EOFIELD_PRIORITY_CHAN_2            IPU_MEMORY_OFFSET+0x00404BC,0x000F0000
+#define SRM_DC_RL2_CH_2__COD_EOL_START_CHAN_2                   IPU_MEMORY_OFFSET+0x00404BC,0x0000FF00
+#define SRM_DC_RL2_CH_2__COD_EOL_PRIORITY_CHAN_2                IPU_MEMORY_OFFSET+0x00404BC,0x0000000F
+
+#define SRM_DC_RL3_CH_2__ADDR                                   IPU_MEMORY_OFFSET+0x00404C0
+#define SRM_DC_RL3_CH_2__EMPTY                                  IPU_MEMORY_OFFSET+0x00404C0,0x00000000
+#define SRM_DC_RL3_CH_2__FULL                                   IPU_MEMORY_OFFSET+0x00404C0,0xffffffff
+#define SRM_DC_RL3_CH_2__COD_NEW_CHAN_START_CHAN_2              IPU_MEMORY_OFFSET+0x00404C0,0xFF000000
+#define SRM_DC_RL3_CH_2__COD_NEW_CHAN_PRIORITY_CHAN_2           IPU_MEMORY_OFFSET+0x00404C0,0x000F0000
+#define SRM_DC_RL3_CH_2__COD_NEW_ADDR_START_CHAN_2              IPU_MEMORY_OFFSET+0x00404C0,0x0000FF00
+#define SRM_DC_RL3_CH_2__COD_NEW_ADDR_PRIORITY_CHAN_2           IPU_MEMORY_OFFSET+0x00404C0,0x0000000F
+
+#define SRM_DC_RL4_CH_2__ADDR                                   IPU_MEMORY_OFFSET+0x00404C4
+#define SRM_DC_RL4_CH_2__EMPTY                                  IPU_MEMORY_OFFSET+0x00404C4,0x00000000
+#define SRM_DC_RL4_CH_2__FULL                                   IPU_MEMORY_OFFSET+0x00404C4,0xffffffff
+#define SRM_DC_RL4_CH_2__COD_NEW_DATA_START_CHAN_2              IPU_MEMORY_OFFSET+0x00404C4,0x0000FF00
+#define SRM_DC_RL4_CH_2__COD_NEW_DATA_PRIORITY_CHAN_2           IPU_MEMORY_OFFSET+0x00404C4,0x0000000F
+
+#define SRM_DC_WR_CH_CONF_6__ADDR                               IPU_MEMORY_OFFSET+0x00404C8
+#define SRM_DC_WR_CH_CONF_6__EMPTY                              IPU_MEMORY_OFFSET+0x00404C8,0x00000000
+#define SRM_DC_WR_CH_CONF_6__FULL                               IPU_MEMORY_OFFSET+0x00404C8,0xffffffff
+#define SRM_DC_WR_CH_CONF_6__PROG_START_TIME_6                  IPU_MEMORY_OFFSET+0x00404C8,0x07FF0000
+#define SRM_DC_WR_CH_CONF_6__CHAN_MASK_DEFAULT_6                IPU_MEMORY_OFFSET+0x00404C8,0x00000100
+#define SRM_DC_WR_CH_CONF_6__PROG_CHAN_TYP_6                    IPU_MEMORY_OFFSET+0x00404C8,0x000000E0
+#define SRM_DC_WR_CH_CONF_6__PROG_DISP_ID_6                     IPU_MEMORY_OFFSET+0x00404C8,0x00000018
+#define SRM_DC_WR_CH_CONF_6__PROG_DI_ID_6                       IPU_MEMORY_OFFSET+0x00404C8,0x00000004
+#define SRM_DC_WR_CH_CONF_6__W_SIZE_6                           IPU_MEMORY_OFFSET+0x00404C8,0x00000003
+
+#define SRM_DC_WR_CH_ADDR_6__ADDR                               IPU_MEMORY_OFFSET+0x00404CC
+#define SRM_DC_WR_CH_ADDR_6__EMPTY                              IPU_MEMORY_OFFSET+0x00404CC,0x00000000
+#define SRM_DC_WR_CH_ADDR_6__FULL                               IPU_MEMORY_OFFSET+0x00404CC,0xffffffff
+#define SRM_DC_WR_CH_ADDR_6__ST_ADDR_6                          IPU_MEMORY_OFFSET+0x00404CC,0x1FFFFFFF
+
+#define SRM_DC_RL0_CH_6__ADDR                                   IPU_MEMORY_OFFSET+0x00404D0
+#define SRM_DC_RL0_CH_6__EMPTY                                  IPU_MEMORY_OFFSET+0x00404D0,0x00000000
+#define SRM_DC_RL0_CH_6__FULL                                   IPU_MEMORY_OFFSET+0x00404D0,0xffffffff
+#define SRM_DC_RL0_CH_6__COD_NL_START_CHAN_6                    IPU_MEMORY_OFFSET+0x00404D0,0xFF000000
+#define SRM_DC_RL0_CH_6__COD_NL_PRIORITY_CHAN_6                 IPU_MEMORY_OFFSET+0x00404D0,0x000F0000
+#define SRM_DC_RL0_CH_6__COD_NF_START_CHAN_6                    IPU_MEMORY_OFFSET+0x00404D0,0x0000FF00
+#define SRM_DC_RL0_CH_6__COD_NF_PRIORITY_CHAN_6                 IPU_MEMORY_OFFSET+0x00404D0,0x0000000F
+
+#define SRM_DC_RL1_CH_6__ADDR                                   IPU_MEMORY_OFFSET+0x00404D4
+#define SRM_DC_RL1_CH_6__EMPTY                                  IPU_MEMORY_OFFSET+0x00404D4,0x00000000
+#define SRM_DC_RL1_CH_6__FULL                                   IPU_MEMORY_OFFSET+0x00404D4,0xffffffff
+#define SRM_DC_RL1_CH_6__COD_NFIELD_START_CHAN_6                IPU_MEMORY_OFFSET+0x00404D4,0xFF000000
+#define SRM_DC_RL1_CH_6__COD_NFIELD_PRIORITY_CHAN_6             IPU_MEMORY_OFFSET+0x00404D4,0x000F0000
+#define SRM_DC_RL1_CH_6__COD_EOF_START_CHAN_6                   IPU_MEMORY_OFFSET+0x00404D4,0x0000FF00
+#define SRM_DC_RL1_CH_6__COD_EOF_PRIORITY_CHAN_6                IPU_MEMORY_OFFSET+0x00404D4,0x0000000F
+
+#define SRM_DC_RL2_CH_6__ADDR                                   IPU_MEMORY_OFFSET+0x00404D8
+#define SRM_DC_RL2_CH_6__EMPTY                                  IPU_MEMORY_OFFSET+0x00404D8,0x00000000
+#define SRM_DC_RL2_CH_6__FULL                                   IPU_MEMORY_OFFSET+0x00404D8,0xffffffff
+#define SRM_DC_RL2_CH_6__COD_EOFIELD_START_CHAN_6               IPU_MEMORY_OFFSET+0x00404D8,0xFF000000
+#define SRM_DC_RL2_CH_6__COD_EOFIELD_PRIORITY_CHAN_6            IPU_MEMORY_OFFSET+0x00404D8,0x000F0000
+#define SRM_DC_RL2_CH_6__COD_EOL_START_CHAN_6                   IPU_MEMORY_OFFSET+0x00404D8,0x0000FF00
+#define SRM_DC_RL2_CH_6__COD_EOL_PRIORITY_CHAN_6                IPU_MEMORY_OFFSET+0x00404D8,0x0000000F
+
+#define SRM_DC_RL3_CH_6__ADDR                                   IPU_MEMORY_OFFSET+0x00404DC
+#define SRM_DC_RL3_CH_6__EMPTY                                  IPU_MEMORY_OFFSET+0x00404DC,0x00000000
+#define SRM_DC_RL3_CH_6__FULL                                   IPU_MEMORY_OFFSET+0x00404DC,0xffffffff
+#define SRM_DC_RL3_CH_6__COD_NEW_CHAN_START_CHAN_6              IPU_MEMORY_OFFSET+0x00404DC,0xFF000000
+#define SRM_DC_RL3_CH_6__COD_NEW_CHAN_PRIORITY_CHAN_6           IPU_MEMORY_OFFSET+0x00404DC,0x000F0000
+#define SRM_DC_RL3_CH_6__COD_NEW_ADDR_START_CHAN_6              IPU_MEMORY_OFFSET+0x00404DC,0x0000FF00
+#define SRM_DC_RL3_CH_6__COD_NEW_ADDR_PRIORITY_CHAN_6           IPU_MEMORY_OFFSET+0x00404DC,0x0000000F
+
+#define SRM_DC_RL4_CH_6__ADDR                                   IPU_MEMORY_OFFSET+0x00404E0
+#define SRM_DC_RL4_CH_6__EMPTY                                  IPU_MEMORY_OFFSET+0x00404E0,0x00000000
+#define SRM_DC_RL4_CH_6__FULL                                   IPU_MEMORY_OFFSET+0x00404E0,0xffffffff
+#define SRM_DC_RL4_CH_6__COD_NEW_DATA_START_CHAN_6              IPU_MEMORY_OFFSET+0x00404E0,0x0000FF00
+#define SRM_DC_RL4_CH_6__COD_NEW_DATA_PRIORITY_CHAN_6           IPU_MEMORY_OFFSET+0x00404E0,0x0000000F
+
+
+#define IPU_MEM_DC_MICROCODE_BASE_ADDR IPU_MEMORY_OFFSET+0x0080000
+
+#define LPM_MEM_IPU_CONF__ADDR                                  IPU_MEMORY_OFFSET+0x0040834
+#define LPM_MEM_IPU_CONF__EMPTY                                 IPU_MEMORY_OFFSET+0x0040834,0x00000000
+#define LPM_MEM_IPU_CONF__IDMAC_DISABLE                         IPU_MEMORY_OFFSET+0x0040834,0x00400000
+#define LPM_MEM_IPU_CONF__IPU_DIAGBUS_ON                        IPU_MEMORY_OFFSET+0x0040834,0x00200000
+#define LPM_MEM_IPU_CONF__IPU_DIAGBUS_MODE                      IPU_MEMORY_OFFSET+0x0040834,0x001F0000
+#define LPM_MEM_IPU_CONF__VDI_EN                                IPU_MEMORY_OFFSET+0x0040834,0x00001000
+#define LPM_MEM_IPU_CONF__SISG_EN                               IPU_MEMORY_OFFSET+0x0040834,0x00000800
+#define LPM_MEM_IPU_CONF__DMFC_EN                               IPU_MEMORY_OFFSET+0x0040834,0x00000400
+#define LPM_MEM_IPU_CONF__DC_EN                                 IPU_MEMORY_OFFSET+0x0040834,0x00000200
+#define LPM_MEM_IPU_CONF__SMFC_EN                               IPU_MEMORY_OFFSET+0x0040834,0x00000100
+#define LPM_MEM_IPU_CONF__DI1_EN                                IPU_MEMORY_OFFSET+0x0040834,0x00000080
+#define LPM_MEM_IPU_CONF__DI0_EN                                IPU_MEMORY_OFFSET+0x0040834,0x00000040
+#define LPM_MEM_IPU_CONF__FULL                                  IPU_MEMORY_OFFSET+0x0040834,0xffffffff
+#define LPM_MEM_IPU_CONF__DP_EN                                 IPU_MEMORY_OFFSET+0x0040834,0x00000020
+#define LPM_MEM_IPU_CONF__IRT_EN                                IPU_MEMORY_OFFSET+0x0040834,0x00000008
+#define LPM_MEM_IPU_CONF__IC_EN                                 IPU_MEMORY_OFFSET+0x0040834,0x00000004
+#define LPM_MEM_IPU_CONF__CSI1_EN                               IPU_MEMORY_OFFSET+0x0040834,0x00000002
+#define LPM_MEM_IPU_CONF__CSI0_EN                               IPU_MEMORY_OFFSET+0x0040834,0x00000001
+#define LPM_MEM_IPU_CONF__CSI_SEL                               IPU_MEMORY_OFFSET+0x0040834,0x80000000
+#define LPM_MEM_IPU_CONF__IC_INPUT                              IPU_MEMORY_OFFSET+0x0040834,0x40000000
+#define LPM_MEM_IPU_CONF__CSI1_DATA_SOURCE                      IPU_MEMORY_OFFSET+0x0040834,0x20000000
+#define LPM_MEM_IPU_CONF__CSI0_DATA_SOURCE                      IPU_MEMORY_OFFSET+0x0040834,0x10000000
+#define LPM_MEM_IPU_CONF__VDI_DMFC_SYNC                         IPU_MEMORY_OFFSET+0x0040834,0x08000000
+#define LPM_MEM_IPU_CONF__IC_DMFC_SYNC                          IPU_MEMORY_OFFSET+0x0040834,0x04000000
+#define LPM_MEM_IPU_CONF__IC_DMFC_SEL                           IPU_MEMORY_OFFSET+0x0040834,0x02000000
+
+#define LPM_MEM_SISG_CTRL0__ADDR                                IPU_MEMORY_OFFSET+0x0040838
+#define LPM_MEM_SISG_CTRL0__EMPTY                               IPU_MEMORY_OFFSET+0x0040838,0x00000000
+#define LPM_MEM_SISG_CTRL0__FULL                                IPU_MEMORY_OFFSET+0x0040838,0xffffffff
+#define LPM_MEM_SISG_CTRL0__EXT_ACTV                            IPU_MEMORY_OFFSET+0x0040838,0x40000000
+#define LPM_MEM_SISG_CTRL0__MCU_ACTV_TRIG                       IPU_MEMORY_OFFSET+0x0040838,0x20000000
+#define LPM_MEM_SISG_CTRL0__VAL_STOP_SISG_COUNTER               IPU_MEMORY_OFFSET+0x0040838,0x1FFFFFF0
+#define LPM_MEM_SISG_CTRL0__NO_OF_VSYNC                         IPU_MEMORY_OFFSET+0x0040838,0x0000000E
+#define LPM_MEM_SISG_CTRL0__VSYNC_RESET_COUNTER                 IPU_MEMORY_OFFSET+0x0040838,0x00000001
+
+#define LPM_MEM_SISG_CTRL1__ADDR                                IPU_MEMORY_OFFSET+0x004083C
+#define LPM_MEM_SISG_CTRL1__EMPTY                               IPU_MEMORY_OFFSET+0x004083C,0x00000000
+#define LPM_MEM_SISG_CTRL1__FULL                                IPU_MEMORY_OFFSET+0x004083C,0xffffffff
+#define LPM_MEM_SISG_CTRL1__SISG_OUT_POL                        IPU_MEMORY_OFFSET+0x004083C,0x00003F00
+#define LPM_MEM_SISG_CTRL1__SISG_STROBE_CNT                     IPU_MEMORY_OFFSET+0x004083C,0x0000001F
+
+#define LPM_MEM_SISG_SET_1__ADDR                                IPU_MEMORY_OFFSET+0x0040840
+#define LPM_MEM_SISG_SET_1__EMPTY                               IPU_MEMORY_OFFSET+0x0040840,0x00000000
+#define LPM_MEM_SISG_SET_1__FULL                                IPU_MEMORY_OFFSET+0x0040840,0xffffffff
+#define LPM_MEM_SISG_SET_1__SISG_SET_1                          IPU_MEMORY_OFFSET+0x0040840,0x01FFFFFF
+
+#define LPM_MEM_SISG_SET_2__ADDR                                IPU_MEMORY_OFFSET+0x0040844
+#define LPM_MEM_SISG_SET_2__EMPTY                               IPU_MEMORY_OFFSET+0x0040844,0x00000000
+#define LPM_MEM_SISG_SET_2__FULL                                IPU_MEMORY_OFFSET+0x0040844,0xffffffff
+#define LPM_MEM_SISG_SET_2__SISG_SET_2                          IPU_MEMORY_OFFSET+0x0040844,0x01FFFFFF
+
+#define LPM_MEM_SISG_SET_3__ADDR                                IPU_MEMORY_OFFSET+0x0040848
+#define LPM_MEM_SISG_SET_3__EMPTY                               IPU_MEMORY_OFFSET+0x0040848,0x00000000
+#define LPM_MEM_SISG_SET_3__FULL                                IPU_MEMORY_OFFSET+0x0040848,0xffffffff
+#define LPM_MEM_SISG_SET_3__SISG_SET_3                          IPU_MEMORY_OFFSET+0x0040848,0x01FFFFFF
+
+#define LPM_MEM_SISG_SET_4__ADDR                                IPU_MEMORY_OFFSET+0x004084C
+#define LPM_MEM_SISG_SET_4__EMPTY                               IPU_MEMORY_OFFSET+0x004084C,0x00000000
+#define LPM_MEM_SISG_SET_4__FULL                                IPU_MEMORY_OFFSET+0x004084C,0xffffffff
+#define LPM_MEM_SISG_SET_4__SISG_SET_4                          IPU_MEMORY_OFFSET+0x004084C,0x01FFFFFF
+
+#define LPM_MEM_SISG_SET_5__ADDR                                IPU_MEMORY_OFFSET+0x0040850
+#define LPM_MEM_SISG_SET_5__EMPTY                               IPU_MEMORY_OFFSET+0x0040850,0x00000000
+#define LPM_MEM_SISG_SET_5__FULL                                IPU_MEMORY_OFFSET+0x0040850,0xffffffff
+#define LPM_MEM_SISG_SET_5__SISG_SET_5                          IPU_MEMORY_OFFSET+0x0040850,0x01FFFFFF
+
+#define LPM_MEM_SISG_SET_6__ADDR                                IPU_MEMORY_OFFSET+0x0040854
+#define LPM_MEM_SISG_SET_6__EMPTY                               IPU_MEMORY_OFFSET+0x0040854,0x00000000
+#define LPM_MEM_SISG_SET_6__FULL                                IPU_MEMORY_OFFSET+0x0040854,0xffffffff
+#define LPM_MEM_SISG_SET_6__SISG_SET_6                          IPU_MEMORY_OFFSET+0x0040854,0x01FFFFFF
+
+#define LPM_MEM_SISG_CLR_1__ADDR                                IPU_MEMORY_OFFSET+0x0040858
+#define LPM_MEM_SISG_CLR_1__EMPTY                               IPU_MEMORY_OFFSET+0x0040858,0x00000000
+#define LPM_MEM_SISG_CLR_1__FULL                                IPU_MEMORY_OFFSET+0x0040858,0xffffffff
+#define LPM_MEM_SISG_CLR_1__SISG_CLEAR_1                        IPU_MEMORY_OFFSET+0x0040858,0x01FFFFFF
+
+#define LPM_MEM_SISG_CLR_2__ADDR                                IPU_MEMORY_OFFSET+0x004085C
+#define LPM_MEM_SISG_CLR_2__EMPTY                               IPU_MEMORY_OFFSET+0x004085C,0x00000000
+#define LPM_MEM_SISG_CLR_2__FULL                                IPU_MEMORY_OFFSET+0x004085C,0xffffffff
+#define LPM_MEM_SISG_CLR_2__SISG_CLEAR_2                        IPU_MEMORY_OFFSET+0x004085C,0x01FFFFFF
+
+#define LPM_MEM_SISG_CLR_3__ADDR                                IPU_MEMORY_OFFSET+0x0040860
+#define LPM_MEM_SISG_CLR_3__EMPTY                               IPU_MEMORY_OFFSET+0x0040860,0x00000000
+#define LPM_MEM_SISG_CLR_3__FULL                                IPU_MEMORY_OFFSET+0x0040860,0xffffffff
+#define LPM_MEM_SISG_CLR_3__SISG_CLEAR_3                        IPU_MEMORY_OFFSET+0x0040860,0x01FFFFFF
+
+#define LPM_MEM_SISG_CLR_4__ADDR                                IPU_MEMORY_OFFSET+0x0040864
+#define LPM_MEM_SISG_CLR_4__EMPTY                               IPU_MEMORY_OFFSET+0x0040864,0x00000000
+#define LPM_MEM_SISG_CLR_4__FULL                                IPU_MEMORY_OFFSET+0x0040864,0xffffffff
+#define LPM_MEM_SISG_CLR_4__SISG_CLEAR_4                        IPU_MEMORY_OFFSET+0x0040864,0x01FFFFFF
+
+#define LPM_MEM_SISG_CLR_5__ADDR                                IPU_MEMORY_OFFSET+0x0040868
+#define LPM_MEM_SISG_CLR_5__EMPTY                               IPU_MEMORY_OFFSET+0x0040868,0x00000000
+#define LPM_MEM_SISG_CLR_5__FULL                                IPU_MEMORY_OFFSET+0x0040868,0xffffffff
+#define LPM_MEM_SISG_CLR_5__SISG_CLEAR_5                        IPU_MEMORY_OFFSET+0x0040868,0x01FFFFFF
+
+#define LPM_MEM_SISG_CLR_6__ADDR                                IPU_MEMORY_OFFSET+0x004086C
+#define LPM_MEM_SISG_CLR_6__EMPTY                               IPU_MEMORY_OFFSET+0x004086C,0x00000000
+#define LPM_MEM_SISG_CLR_6__FULL                                IPU_MEMORY_OFFSET+0x004086C,0xffffffff
+#define LPM_MEM_SISG_CLR_6__SISG_CLEAR_6                        IPU_MEMORY_OFFSET+0x004086C,0x01FFFFFF
+
+#define LPM_MEM_IPU_INT_CTRL_1__ADDR                            IPU_MEMORY_OFFSET+0x0040870
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_19                 IPU_MEMORY_OFFSET+0x0040870,0x00080000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_18                 IPU_MEMORY_OFFSET+0x0040870,0x00040000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_17                 IPU_MEMORY_OFFSET+0x0040870,0x00020000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_15                 IPU_MEMORY_OFFSET+0x0040870,0x00008000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_14                 IPU_MEMORY_OFFSET+0x0040870,0x00004000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_13                 IPU_MEMORY_OFFSET+0x0040870,0x00002000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_12                 IPU_MEMORY_OFFSET+0x0040870,0x00001000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_11                 IPU_MEMORY_OFFSET+0x0040870,0x00000800
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_10                 IPU_MEMORY_OFFSET+0x0040870,0x00000400
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_9                  IPU_MEMORY_OFFSET+0x0040870,0x00000200
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_8                  IPU_MEMORY_OFFSET+0x0040870,0x00000100
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_5                  IPU_MEMORY_OFFSET+0x0040870,0x00000020
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_3                  IPU_MEMORY_OFFSET+0x0040870,0x00000008
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_2                  IPU_MEMORY_OFFSET+0x0040870,0x00000004
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_1                  IPU_MEMORY_OFFSET+0x0040870,0x00000002
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_0                  IPU_MEMORY_OFFSET+0x0040870,0x00000001
+#define LPM_MEM_IPU_INT_CTRL_1__EMPTY                           IPU_MEMORY_OFFSET+0x0040870,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_1__FULL                            IPU_MEMORY_OFFSET+0x0040870,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_31                 IPU_MEMORY_OFFSET+0x0040870,0x80000000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_29                 IPU_MEMORY_OFFSET+0x0040870,0x20000000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_28                 IPU_MEMORY_OFFSET+0x0040870,0x10000000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_27                 IPU_MEMORY_OFFSET+0x0040870,0x08000000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_26                 IPU_MEMORY_OFFSET+0x0040870,0x04000000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_25                 IPU_MEMORY_OFFSET+0x0040870,0x02000000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_24                 IPU_MEMORY_OFFSET+0x0040870,0x01000000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_23                 IPU_MEMORY_OFFSET+0x0040870,0x00800000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_22                 IPU_MEMORY_OFFSET+0x0040870,0x00400000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_21                 IPU_MEMORY_OFFSET+0x0040870,0x00200000
+#define LPM_MEM_IPU_INT_CTRL_1__IDMAC_EOF_EN_20                 IPU_MEMORY_OFFSET+0x0040870,0x00100000
+
+#define LPM_MEM_IPU_INT_CTRL_2__ADDR                            IPU_MEMORY_OFFSET+0x0040874
+#define LPM_MEM_IPU_INT_CTRL_2__EMPTY                           IPU_MEMORY_OFFSET+0x0040874,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_2__FULL                            IPU_MEMORY_OFFSET+0x0040874,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_52                 IPU_MEMORY_OFFSET+0x0040874,0x00100000
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_51                 IPU_MEMORY_OFFSET+0x0040874,0x00080000
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_50                 IPU_MEMORY_OFFSET+0x0040874,0x00040000
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_49                 IPU_MEMORY_OFFSET+0x0040874,0x00020000
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_48                 IPU_MEMORY_OFFSET+0x0040874,0x00010000
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_47                 IPU_MEMORY_OFFSET+0x0040874,0x00008000
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_46                 IPU_MEMORY_OFFSET+0x0040874,0x00004000
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_45                 IPU_MEMORY_OFFSET+0x0040874,0x00002000
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_44                 IPU_MEMORY_OFFSET+0x0040874,0x00001000
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_43                 IPU_MEMORY_OFFSET+0x0040874,0x00000800
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_42                 IPU_MEMORY_OFFSET+0x0040874,0x00000400
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_41                 IPU_MEMORY_OFFSET+0x0040874,0x00000200
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_40                 IPU_MEMORY_OFFSET+0x0040874,0x00000100
+#define LPM_MEM_IPU_INT_CTRL_2__IDMAC_EOF_EN_33                 IPU_MEMORY_OFFSET+0x0040874,0x00000002
+
+#define LPM_MEM_IPU_INT_CTRL_3__ADDR                            IPU_MEMORY_OFFSET+0x0040878
+#define LPM_MEM_IPU_INT_CTRL_3__EMPTY                           IPU_MEMORY_OFFSET+0x0040878,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_3__FULL                            IPU_MEMORY_OFFSET+0x0040878,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_31               IPU_MEMORY_OFFSET+0x0040878,0x80000000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_29               IPU_MEMORY_OFFSET+0x0040878,0x20000000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_28               IPU_MEMORY_OFFSET+0x0040878,0x10000000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_27               IPU_MEMORY_OFFSET+0x0040878,0x08000000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_26               IPU_MEMORY_OFFSET+0x0040878,0x04000000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_25               IPU_MEMORY_OFFSET+0x0040878,0x02000000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_24               IPU_MEMORY_OFFSET+0x0040878,0x01000000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_23               IPU_MEMORY_OFFSET+0x0040878,0x00800000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_22               IPU_MEMORY_OFFSET+0x0040878,0x00400000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_21               IPU_MEMORY_OFFSET+0x0040878,0x00200000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_20               IPU_MEMORY_OFFSET+0x0040878,0x00100000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_19               IPU_MEMORY_OFFSET+0x0040878,0x00080000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_18               IPU_MEMORY_OFFSET+0x0040878,0x00040000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_17               IPU_MEMORY_OFFSET+0x0040878,0x00020000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_15               IPU_MEMORY_OFFSET+0x0040878,0x00008000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_14               IPU_MEMORY_OFFSET+0x0040878,0x00004000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_13               IPU_MEMORY_OFFSET+0x0040878,0x00002000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_12               IPU_MEMORY_OFFSET+0x0040878,0x00001000
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_11               IPU_MEMORY_OFFSET+0x0040878,0x00000800
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_10               IPU_MEMORY_OFFSET+0x0040878,0x00000400
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_9                IPU_MEMORY_OFFSET+0x0040878,0x00000200
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_8                IPU_MEMORY_OFFSET+0x0040878,0x00000100
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_5                IPU_MEMORY_OFFSET+0x0040878,0x00000020
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_3                IPU_MEMORY_OFFSET+0x0040878,0x00000008
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_2                IPU_MEMORY_OFFSET+0x0040878,0x00000004
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_1                IPU_MEMORY_OFFSET+0x0040878,0x00000002
+#define LPM_MEM_IPU_INT_CTRL_3__IDMAC_NFACK_EN_0                IPU_MEMORY_OFFSET+0x0040878,0x00000001
+
+#define LPM_MEM_IPU_INT_CTRL_4__ADDR                            IPU_MEMORY_OFFSET+0x004087C
+#define LPM_MEM_IPU_INT_CTRL_4__EMPTY                           IPU_MEMORY_OFFSET+0x004087C,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_4__FULL                            IPU_MEMORY_OFFSET+0x004087C,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_52               IPU_MEMORY_OFFSET+0x004087C,0x00100000
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_51               IPU_MEMORY_OFFSET+0x004087C,0x00080000
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_50               IPU_MEMORY_OFFSET+0x004087C,0x00040000
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_49               IPU_MEMORY_OFFSET+0x004087C,0x00020000
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_48               IPU_MEMORY_OFFSET+0x004087C,0x00010000
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_47               IPU_MEMORY_OFFSET+0x004087C,0x00008000
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_46               IPU_MEMORY_OFFSET+0x004087C,0x00004000
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_45               IPU_MEMORY_OFFSET+0x004087C,0x00002000
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_44               IPU_MEMORY_OFFSET+0x004087C,0x00001000
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_43               IPU_MEMORY_OFFSET+0x004087C,0x00000800
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_42               IPU_MEMORY_OFFSET+0x004087C,0x00000400
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_41               IPU_MEMORY_OFFSET+0x004087C,0x00000200
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_40               IPU_MEMORY_OFFSET+0x004087C,0x00000100
+#define LPM_MEM_IPU_INT_CTRL_4__IDMAC_NFACK_EN_33               IPU_MEMORY_OFFSET+0x004087C,0x00000002
+
+#define LPM_MEM_IPU_INT_CTRL_5__ADDR                            IPU_MEMORY_OFFSET+0x0040880
+#define LPM_MEM_IPU_INT_CTRL_5__EMPTY                           IPU_MEMORY_OFFSET+0x0040880,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_5__FULL                            IPU_MEMORY_OFFSET+0x0040880,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_31             IPU_MEMORY_OFFSET+0x0040880,0x80000000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_29             IPU_MEMORY_OFFSET+0x0040880,0x20000000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_28             IPU_MEMORY_OFFSET+0x0040880,0x10000000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_27             IPU_MEMORY_OFFSET+0x0040880,0x08000000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_26             IPU_MEMORY_OFFSET+0x0040880,0x04000000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_25             IPU_MEMORY_OFFSET+0x0040880,0x02000000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_24             IPU_MEMORY_OFFSET+0x0040880,0x01000000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_23             IPU_MEMORY_OFFSET+0x0040880,0x00800000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_22             IPU_MEMORY_OFFSET+0x0040880,0x00400000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_21             IPU_MEMORY_OFFSET+0x0040880,0x00200000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_20             IPU_MEMORY_OFFSET+0x0040880,0x00100000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_19             IPU_MEMORY_OFFSET+0x0040880,0x00080000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_18             IPU_MEMORY_OFFSET+0x0040880,0x00040000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_17             IPU_MEMORY_OFFSET+0x0040880,0x00020000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_15             IPU_MEMORY_OFFSET+0x0040880,0x00008000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_14             IPU_MEMORY_OFFSET+0x0040880,0x00004000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_13             IPU_MEMORY_OFFSET+0x0040880,0x00002000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_12             IPU_MEMORY_OFFSET+0x0040880,0x00001000
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_11             IPU_MEMORY_OFFSET+0x0040880,0x00000800
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_10             IPU_MEMORY_OFFSET+0x0040880,0x00000400
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_9              IPU_MEMORY_OFFSET+0x0040880,0x00000200
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_8              IPU_MEMORY_OFFSET+0x0040880,0x00000100
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_5              IPU_MEMORY_OFFSET+0x0040880,0x00000020
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_3              IPU_MEMORY_OFFSET+0x0040880,0x00000008
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_2              IPU_MEMORY_OFFSET+0x0040880,0x00000004
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_1              IPU_MEMORY_OFFSET+0x0040880,0x00000002
+#define LPM_MEM_IPU_INT_CTRL_5__IDMAC_NFB4EOF_EN_0              IPU_MEMORY_OFFSET+0x0040880,0x00000001
+
+#define LPM_MEM_IPU_INT_CTRL_6__ADDR                            IPU_MEMORY_OFFSET+0x0040884
+#define LPM_MEM_IPU_INT_CTRL_6__EMPTY                           IPU_MEMORY_OFFSET+0x0040884,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_6__FULL                            IPU_MEMORY_OFFSET+0x0040884,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_52             IPU_MEMORY_OFFSET+0x0040884,0x00100000
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_51             IPU_MEMORY_OFFSET+0x0040884,0x00080000
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_50             IPU_MEMORY_OFFSET+0x0040884,0x00040000
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_49             IPU_MEMORY_OFFSET+0x0040884,0x00020000
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_48             IPU_MEMORY_OFFSET+0x0040884,0x00010000
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_47             IPU_MEMORY_OFFSET+0x0040884,0x00008000
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_46             IPU_MEMORY_OFFSET+0x0040884,0x00004000
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_45             IPU_MEMORY_OFFSET+0x0040884,0x00002000
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_44             IPU_MEMORY_OFFSET+0x0040884,0x00001000
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_43             IPU_MEMORY_OFFSET+0x0040884,0x00000800
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_42             IPU_MEMORY_OFFSET+0x0040884,0x00000400
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_41             IPU_MEMORY_OFFSET+0x0040884,0x00000200
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_40             IPU_MEMORY_OFFSET+0x0040884,0x00000100
+#define LPM_MEM_IPU_INT_CTRL_6__IDMAC_NFB4EOF_EN_33             IPU_MEMORY_OFFSET+0x0040884,0x00000002
+
+#define LPM_MEM_IPU_INT_CTRL_7__ADDR                            IPU_MEMORY_OFFSET+0x0040888
+#define LPM_MEM_IPU_INT_CTRL_7__EMPTY                           IPU_MEMORY_OFFSET+0x0040888,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_7__FULL                            IPU_MEMORY_OFFSET+0x0040888,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_7__IDMAC_EOS_EN_31                 IPU_MEMORY_OFFSET+0x0040888,0x80000000
+#define LPM_MEM_IPU_INT_CTRL_7__IDMAC_EOS_EN_29                 IPU_MEMORY_OFFSET+0x0040888,0x20000000
+#define LPM_MEM_IPU_INT_CTRL_7__IDMAC_EOS_EN_28                 IPU_MEMORY_OFFSET+0x0040888,0x10000000
+#define LPM_MEM_IPU_INT_CTRL_7__IDMAC_EOS_EN_27                 IPU_MEMORY_OFFSET+0x0040888,0x08000000
+#define LPM_MEM_IPU_INT_CTRL_7__IDMAC_EOS_EN_26                 IPU_MEMORY_OFFSET+0x0040888,0x04000000
+#define LPM_MEM_IPU_INT_CTRL_7__IDMAC_EOS_EN_25                 IPU_MEMORY_OFFSET+0x0040888,0x02000000
+#define LPM_MEM_IPU_INT_CTRL_7__IDMAC_EOS_EN_24                 IPU_MEMORY_OFFSET+0x0040888,0x01000000
+#define LPM_MEM_IPU_INT_CTRL_7__IDMAC_EOS_EN_23                 IPU_MEMORY_OFFSET+0x0040888,0x00800000
+#define LPM_MEM_IPU_INT_CTRL_7__IDMAC_EOS_EN_19                 IPU_MEMORY_OFFSET+0x0040888,0x00080000
+
+#define LPM_MEM_IPU_INT_CTRL_8__ADDR                            IPU_MEMORY_OFFSET+0x004088C
+#define LPM_MEM_IPU_INT_CTRL_8__EMPTY                           IPU_MEMORY_OFFSET+0x004088C,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_8__FULL                            IPU_MEMORY_OFFSET+0x004088C,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_8__IDMAC_EOS_EN_52                 IPU_MEMORY_OFFSET+0x004088C,0x00100000
+#define LPM_MEM_IPU_INT_CTRL_8__IDMAC_EOS_EN_51                 IPU_MEMORY_OFFSET+0x004088C,0x00080000
+#define LPM_MEM_IPU_INT_CTRL_8__IDMAC_EOS_EN_44                 IPU_MEMORY_OFFSET+0x004088C,0x00001000
+#define LPM_MEM_IPU_INT_CTRL_8__IDMAC_EOS_EN_43                 IPU_MEMORY_OFFSET+0x004088C,0x00000800
+#define LPM_MEM_IPU_INT_CTRL_8__IDMAC_EOS_EN_42                 IPU_MEMORY_OFFSET+0x004088C,0x00000400
+#define LPM_MEM_IPU_INT_CTRL_8__IDMAC_EOS_EN_41                 IPU_MEMORY_OFFSET+0x004088C,0x00000200
+#define LPM_MEM_IPU_INT_CTRL_8__IDMAC_EOS_EN_33                 IPU_MEMORY_OFFSET+0x004088C,0x00000002
+
+#define LPM_MEM_IPU_INT_CTRL_9__ADDR                            IPU_MEMORY_OFFSET+0x0040890
+#define LPM_MEM_IPU_INT_CTRL_9__EMPTY                           IPU_MEMORY_OFFSET+0x0040890,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_9__FULL                            IPU_MEMORY_OFFSET+0x0040890,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_9__CSI1_PUPE_EN                    IPU_MEMORY_OFFSET+0x0040890,0x80000000
+#define LPM_MEM_IPU_INT_CTRL_9__CSI0_PUPE_EN                    IPU_MEMORY_OFFSET+0x0040890,0x40000000
+#define LPM_MEM_IPU_INT_CTRL_9__IC_VF_BUF_OVF_EN                IPU_MEMORY_OFFSET+0x0040890,0x10000000
+#define LPM_MEM_IPU_INT_CTRL_9__IC_ENC_BUF_OVF_EN               IPU_MEMORY_OFFSET+0x0040890,0x08000000
+#define LPM_MEM_IPU_INT_CTRL_9__IC_BAYER_BUF_OVF_EN             IPU_MEMORY_OFFSET+0x0040890,0x04000000
+#define LPM_MEM_IPU_INT_CTRL_9__VDI_FIFO1_OVF_EN                IPU_MEMORY_OFFSET+0x0040890,0x00000001
+
+#define LPM_MEM_IPU_INT_CTRL_10__ADDR                           IPU_MEMORY_OFFSET+0x0040894
+#define LPM_MEM_IPU_INT_CTRL_10__EMPTY                          IPU_MEMORY_OFFSET+0x0040894,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_10__FULL                           IPU_MEMORY_OFFSET+0x0040894,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_10__AXIR_ERR_EN                    IPU_MEMORY_OFFSET+0x0040894,0x40000000
+#define LPM_MEM_IPU_INT_CTRL_10__AXIW_ERR_EN                    IPU_MEMORY_OFFSET+0x0040894,0x20000000
+#define LPM_MEM_IPU_INT_CTRL_10__NON_PRIVILEGED_ACC_ERR_EN      IPU_MEMORY_OFFSET+0x0040894,0x10000000
+#define LPM_MEM_IPU_INT_CTRL_10__IC_BAYER_FRM_LOST_ERR_EN       IPU_MEMORY_OFFSET+0x0040894,0x04000000
+#define LPM_MEM_IPU_INT_CTRL_10__IC_ENC_FRM_LOST_ERR_EN         IPU_MEMORY_OFFSET+0x0040894,0x02000000
+#define LPM_MEM_IPU_INT_CTRL_10__IC_VF_FRM_LOST_ERR_EN          IPU_MEMORY_OFFSET+0x0040894,0x01000000
+#define LPM_MEM_IPU_INT_CTRL_10__DI1_TIME_OUT_ERR_EN            IPU_MEMORY_OFFSET+0x0040894,0x00400000
+#define LPM_MEM_IPU_INT_CTRL_10__DI0_TIME_OUT_ERR_EN            IPU_MEMORY_OFFSET+0x0040894,0x00200000
+#define LPM_MEM_IPU_INT_CTRL_10__DI1_SYNC_DISP_ERR_EN           IPU_MEMORY_OFFSET+0x0040894,0x00100000
+#define LPM_MEM_IPU_INT_CTRL_10__DI0_SYNC_DISP_ERR_EN           IPU_MEMORY_OFFSET+0x0040894,0x00080000
+#define LPM_MEM_IPU_INT_CTRL_10__DC_TEARING_ERR_6_EN            IPU_MEMORY_OFFSET+0x0040894,0x00040000
+#define LPM_MEM_IPU_INT_CTRL_10__DC_TEARING_ERR_2_EN            IPU_MEMORY_OFFSET+0x0040894,0x00020000
+#define LPM_MEM_IPU_INT_CTRL_10__DC_TEARING_ERR_1_EN            IPU_MEMORY_OFFSET+0x0040894,0x00010000
+#define LPM_MEM_IPU_INT_CTRL_10__SMFC3_FRM_LOST_EN              IPU_MEMORY_OFFSET+0x0040894,0x00000008
+#define LPM_MEM_IPU_INT_CTRL_10__SMFC2_FRM_LOST_EN              IPU_MEMORY_OFFSET+0x0040894,0x00000004
+#define LPM_MEM_IPU_INT_CTRL_10__SMFC1_FRM_LOST_EN              IPU_MEMORY_OFFSET+0x0040894,0x00000002
+#define LPM_MEM_IPU_INT_CTRL_10__SMFC0_FRM_LOST_EN              IPU_MEMORY_OFFSET+0x0040894,0x00000001
+
+#define LPM_MEM_IPU_INT_CTRL_11__ADDR                           IPU_MEMORY_OFFSET+0x0040898
+#define LPM_MEM_IPU_INT_CTRL_11__EMPTY                          IPU_MEMORY_OFFSET+0x0040898,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_11__FULL                           IPU_MEMORY_OFFSET+0x0040898,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_26              IPU_MEMORY_OFFSET+0x0040898,0x04000000
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_25              IPU_MEMORY_OFFSET+0x0040898,0x02000000
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_22              IPU_MEMORY_OFFSET+0x0040898,0x00400000
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_21              IPU_MEMORY_OFFSET+0x0040898,0x00200000
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_20              IPU_MEMORY_OFFSET+0x0040898,0x00100000
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_12              IPU_MEMORY_OFFSET+0x0040898,0x00001000
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_11              IPU_MEMORY_OFFSET+0x0040898,0x00000800
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_10              IPU_MEMORY_OFFSET+0x0040898,0x00000400
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_9               IPU_MEMORY_OFFSET+0x0040898,0x00000200
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_8               IPU_MEMORY_OFFSET+0x0040898,0x00000100
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_5               IPU_MEMORY_OFFSET+0x0040898,0x00000020
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_3               IPU_MEMORY_OFFSET+0x0040898,0x00000008
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_2               IPU_MEMORY_OFFSET+0x0040898,0x00000004
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_1               IPU_MEMORY_OFFSET+0x0040898,0x00000002
+#define LPM_MEM_IPU_INT_CTRL_11__IDMAC_EOBND_EN_0               IPU_MEMORY_OFFSET+0x0040898,0x00000001
+
+#define LPM_MEM_IPU_INT_CTRL_12__ADDR                           IPU_MEMORY_OFFSET+0x004089C
+#define LPM_MEM_IPU_INT_CTRL_12__EMPTY                          IPU_MEMORY_OFFSET+0x004089C,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_12__FULL                           IPU_MEMORY_OFFSET+0x004089C,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_12__IDMAC_EOBND_EN_50              IPU_MEMORY_OFFSET+0x004089C,0x00040000
+#define LPM_MEM_IPU_INT_CTRL_12__IDMAC_EOBND_EN_49              IPU_MEMORY_OFFSET+0x004089C,0x00020000
+#define LPM_MEM_IPU_INT_CTRL_12__IDMAC_EOBND_EN_48              IPU_MEMORY_OFFSET+0x004089C,0x00010000
+#define LPM_MEM_IPU_INT_CTRL_12__IDMAC_EOBND_EN_47              IPU_MEMORY_OFFSET+0x004089C,0x00008000
+#define LPM_MEM_IPU_INT_CTRL_12__IDMAC_EOBND_EN_46              IPU_MEMORY_OFFSET+0x004089C,0x00004000
+#define LPM_MEM_IPU_INT_CTRL_12__IDMAC_EOBND_EN_45              IPU_MEMORY_OFFSET+0x004089C,0x00002000
+
+#define LPM_MEM_IPU_INT_CTRL_13__ADDR                           IPU_MEMORY_OFFSET+0x00408A0
+#define LPM_MEM_IPU_INT_CTRL_13__EMPTY                          IPU_MEMORY_OFFSET+0x00408A0,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_13__FULL                           IPU_MEMORY_OFFSET+0x00408A0,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_31                 IPU_MEMORY_OFFSET+0x00408A0,0x80000000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_29                 IPU_MEMORY_OFFSET+0x00408A0,0x20000000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_28                 IPU_MEMORY_OFFSET+0x00408A0,0x10000000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_27                 IPU_MEMORY_OFFSET+0x00408A0,0x08000000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_26                 IPU_MEMORY_OFFSET+0x00408A0,0x04000000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_25                 IPU_MEMORY_OFFSET+0x00408A0,0x02000000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_24                 IPU_MEMORY_OFFSET+0x00408A0,0x01000000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_23                 IPU_MEMORY_OFFSET+0x00408A0,0x00800000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_22                 IPU_MEMORY_OFFSET+0x00408A0,0x00400000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_21                 IPU_MEMORY_OFFSET+0x00408A0,0x00200000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_20                 IPU_MEMORY_OFFSET+0x00408A0,0x00100000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_19                 IPU_MEMORY_OFFSET+0x00408A0,0x00080000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_18                 IPU_MEMORY_OFFSET+0x00408A0,0x00040000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_17                 IPU_MEMORY_OFFSET+0x00408A0,0x00020000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_15                 IPU_MEMORY_OFFSET+0x00408A0,0x00008000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_14                 IPU_MEMORY_OFFSET+0x00408A0,0x00004000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_13                 IPU_MEMORY_OFFSET+0x00408A0,0x00002000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_12                 IPU_MEMORY_OFFSET+0x00408A0,0x00001000
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_11                 IPU_MEMORY_OFFSET+0x00408A0,0x00000800
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_10                 IPU_MEMORY_OFFSET+0x00408A0,0x00000400
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_9                  IPU_MEMORY_OFFSET+0x00408A0,0x00000200
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_8                  IPU_MEMORY_OFFSET+0x00408A0,0x00000100
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_5                  IPU_MEMORY_OFFSET+0x00408A0,0x00000020
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_3                  IPU_MEMORY_OFFSET+0x00408A0,0x00000008
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_2                  IPU_MEMORY_OFFSET+0x00408A0,0x00000004
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_1                  IPU_MEMORY_OFFSET+0x00408A0,0x00000002
+#define LPM_MEM_IPU_INT_CTRL_13__IDMAC_TH_EN_0                  IPU_MEMORY_OFFSET+0x00408A0,0x00000001
+
+#define LPM_MEM_IPU_INT_CTRL_14__ADDR                           IPU_MEMORY_OFFSET+0x00408A4
+#define LPM_MEM_IPU_INT_CTRL_14__EMPTY                          IPU_MEMORY_OFFSET+0x00408A4,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_14__FULL                           IPU_MEMORY_OFFSET+0x00408A4,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_52                 IPU_MEMORY_OFFSET+0x00408A4,0x00100000
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_51                 IPU_MEMORY_OFFSET+0x00408A4,0x00080000
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_50                 IPU_MEMORY_OFFSET+0x00408A4,0x00040000
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_49                 IPU_MEMORY_OFFSET+0x00408A4,0x00020000
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_48                 IPU_MEMORY_OFFSET+0x00408A4,0x00010000
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_47                 IPU_MEMORY_OFFSET+0x00408A4,0x00008000
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_46                 IPU_MEMORY_OFFSET+0x00408A4,0x00004000
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_45                 IPU_MEMORY_OFFSET+0x00408A4,0x00002000
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_44                 IPU_MEMORY_OFFSET+0x00408A4,0x00001000
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_43                 IPU_MEMORY_OFFSET+0x00408A4,0x00000800
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_42                 IPU_MEMORY_OFFSET+0x00408A4,0x00000400
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_41                 IPU_MEMORY_OFFSET+0x00408A4,0x00000200
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_40                 IPU_MEMORY_OFFSET+0x00408A4,0x00000100
+#define LPM_MEM_IPU_INT_CTRL_14__IDMAC_TH_EN_33                 IPU_MEMORY_OFFSET+0x00408A4,0x00000002
+
+#define LPM_MEM_IPU_INT_CTRL_15__ADDR                           IPU_MEMORY_OFFSET+0x00408A8
+#define LPM_MEM_IPU_INT_CTRL_15__EMPTY                          IPU_MEMORY_OFFSET+0x00408A8,0x00000000
+#define LPM_MEM_IPU_INT_CTRL_15__FULL                           IPU_MEMORY_OFFSET+0x00408A8,0xffffffff
+#define LPM_MEM_IPU_INT_CTRL_15__DI1_CNT_EN_PRE_8_EN            IPU_MEMORY_OFFSET+0x00408A8,0x80000000
+#define LPM_MEM_IPU_INT_CTRL_15__DI1_CNT_EN_PRE_3_EN            IPU_MEMORY_OFFSET+0x00408A8,0x40000000
+#define LPM_MEM_IPU_INT_CTRL_15__DI1_DISP_CLK_EN_PRE_EN         IPU_MEMORY_OFFSET+0x00408A8,0x20000000
+#define LPM_MEM_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_10_EN           IPU_MEMORY_OFFSET+0x00408A8,0x10000000
+#define LPM_MEM_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_9_EN            IPU_MEMORY_OFFSET+0x00408A8,0x08000000
+#define LPM_MEM_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_8_EN            IPU_MEMORY_OFFSET+0x00408A8,0x04000000
+#define LPM_MEM_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_7_EN            IPU_MEMORY_OFFSET+0x00408A8,0x02000000
+#define LPM_MEM_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_6_EN            IPU_MEMORY_OFFSET+0x00408A8,0x01000000
+#define LPM_MEM_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_5_EN            IPU_MEMORY_OFFSET+0x00408A8,0x00800000
+#define LPM_MEM_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_4_EN            IPU_MEMORY_OFFSET+0x00408A8,0x00400000
+#define LPM_MEM_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_3_EN            IPU_MEMORY_OFFSET+0x00408A8,0x00200000
+#define LPM_MEM_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_2_EN            IPU_MEMORY_OFFSET+0x00408A8,0x00100000
+#define LPM_MEM_IPU_INT_CTRL_15__DI0_CNT_EN_PRE_1_EN            IPU_MEMORY_OFFSET+0x00408A8,0x00080000
+#define LPM_MEM_IPU_INT_CTRL_15__DI0_DISP_CLK_EN_PRE_EN         IPU_MEMORY_OFFSET+0x00408A8,0x00040000
+#define LPM_MEM_IPU_INT_CTRL_15__DC_ASYNC_STOP_EN               IPU_MEMORY_OFFSET+0x00408A8,0x00020000
+#define LPM_MEM_IPU_INT_CTRL_15__DC_DP_START_EN                 IPU_MEMORY_OFFSET+0x00408A8,0x00010000
+#define LPM_MEM_IPU_INT_CTRL_15__DI_VSYNC_PRE_1_EN              IPU_MEMORY_OFFSET+0x00408A8,0x00008000
+#define LPM_MEM_IPU_INT_CTRL_15__DI_VSYNC_PRE_0_EN              IPU_MEMORY_OFFSET+0x00408A8,0x00004000
+#define LPM_MEM_IPU_INT_CTRL_15__DC_FC_6_EN                     IPU_MEMORY_OFFSET+0x00408A8,0x00002000
+#define LPM_MEM_IPU_INT_CTRL_15__DC_FC_4_EN                     IPU_MEMORY_OFFSET+0x00408A8,0x00001000
+#define LPM_MEM_IPU_INT_CTRL_15__DC_FC_3_EN                     IPU_MEMORY_OFFSET+0x00408A8,0x00000800
+#define LPM_MEM_IPU_INT_CTRL_15__DC_FC_2_EN                     IPU_MEMORY_OFFSET+0x00408A8,0x00000400
+#define LPM_MEM_IPU_INT_CTRL_15__DC_FC_1_EN                     IPU_MEMORY_OFFSET+0x00408A8,0x00000200
+#define LPM_MEM_IPU_INT_CTRL_15__DC_FC_0_EN                     IPU_MEMORY_OFFSET+0x00408A8,0x00000100
+#define LPM_MEM_IPU_INT_CTRL_15__DP_ASF_BRAKE_EN                IPU_MEMORY_OFFSET+0x00408A8,0x00000080
+#define LPM_MEM_IPU_INT_CTRL_15__DP_SF_BRAKE_EN                 IPU_MEMORY_OFFSET+0x00408A8,0x00000040
+#define LPM_MEM_IPU_INT_CTRL_15__DP_ASF_END_EN                  IPU_MEMORY_OFFSET+0x00408A8,0x00000020
+#define LPM_MEM_IPU_INT_CTRL_15__DP_ASF_START_EN                IPU_MEMORY_OFFSET+0x00408A8,0x00000010
+#define LPM_MEM_IPU_INT_CTRL_15__DP_SF_END_EN                   IPU_MEMORY_OFFSET+0x00408A8,0x00000008
+#define LPM_MEM_IPU_INT_CTRL_15__DP_SF_START_EN                 IPU_MEMORY_OFFSET+0x00408A8,0x00000004
+#define LPM_MEM_IPU_INT_CTRL_15__IPU_SNOOPING2_INT_EN           IPU_MEMORY_OFFSET+0x00408A8,0x00000002
+#define LPM_MEM_IPU_INT_CTRL_15__IPU_SNOOPING1_INT_EN           IPU_MEMORY_OFFSET+0x00408A8,0x00000001
+
+#define LPM_MEM_IPU_SDMA_EVENT_1__ADDR                          IPU_MEMORY_OFFSET+0x00408AC
+#define LPM_MEM_IPU_SDMA_EVENT_1__EMPTY                         IPU_MEMORY_OFFSET+0x00408AC,0x00000000
+#define LPM_MEM_IPU_SDMA_EVENT_1__FULL                          IPU_MEMORY_OFFSET+0x00408AC,0xffffffff
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_31          IPU_MEMORY_OFFSET+0x00408AC,0x80000000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_29          IPU_MEMORY_OFFSET+0x00408AC,0x20000000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_28          IPU_MEMORY_OFFSET+0x00408AC,0x10000000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_27          IPU_MEMORY_OFFSET+0x00408AC,0x08000000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_26          IPU_MEMORY_OFFSET+0x00408AC,0x04000000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_25          IPU_MEMORY_OFFSET+0x00408AC,0x02000000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_24          IPU_MEMORY_OFFSET+0x00408AC,0x01000000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_23          IPU_MEMORY_OFFSET+0x00408AC,0x00800000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_22          IPU_MEMORY_OFFSET+0x00408AC,0x00400000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_21          IPU_MEMORY_OFFSET+0x00408AC,0x00200000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_20          IPU_MEMORY_OFFSET+0x00408AC,0x00100000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_19          IPU_MEMORY_OFFSET+0x00408AC,0x00080000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_18          IPU_MEMORY_OFFSET+0x00408AC,0x00040000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_17          IPU_MEMORY_OFFSET+0x00408AC,0x00020000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_15          IPU_MEMORY_OFFSET+0x00408AC,0x00008000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_14          IPU_MEMORY_OFFSET+0x00408AC,0x00004000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_13          IPU_MEMORY_OFFSET+0x00408AC,0x00002000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_12          IPU_MEMORY_OFFSET+0x00408AC,0x00001000
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_11          IPU_MEMORY_OFFSET+0x00408AC,0x00000800
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_10          IPU_MEMORY_OFFSET+0x00408AC,0x00000400
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_9           IPU_MEMORY_OFFSET+0x00408AC,0x00000200
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_8           IPU_MEMORY_OFFSET+0x00408AC,0x00000100
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_5           IPU_MEMORY_OFFSET+0x00408AC,0x00000020
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_3           IPU_MEMORY_OFFSET+0x00408AC,0x00000008
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_2           IPU_MEMORY_OFFSET+0x00408AC,0x00000004
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_1           IPU_MEMORY_OFFSET+0x00408AC,0x00000002
+#define LPM_MEM_IPU_SDMA_EVENT_1__IDMAC_EOF_SDMA_EN_0           IPU_MEMORY_OFFSET+0x00408AC,0x00000001
+
+#define LPM_MEM_IPU_SDMA_EVENT_2__ADDR                          IPU_MEMORY_OFFSET+0x00408B0
+#define LPM_MEM_IPU_SDMA_EVENT_2__EMPTY                         IPU_MEMORY_OFFSET+0x00408B0,0x00000000
+#define LPM_MEM_IPU_SDMA_EVENT_2__FULL                          IPU_MEMORY_OFFSET+0x00408B0,0xffffffff
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_52          IPU_MEMORY_OFFSET+0x00408B0,0x00100000
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_51          IPU_MEMORY_OFFSET+0x00408B0,0x00080000
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_50          IPU_MEMORY_OFFSET+0x00408B0,0x00040000
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_49          IPU_MEMORY_OFFSET+0x00408B0,0x00020000
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_48          IPU_MEMORY_OFFSET+0x00408B0,0x00010000
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_47          IPU_MEMORY_OFFSET+0x00408B0,0x00008000
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_46          IPU_MEMORY_OFFSET+0x00408B0,0x00004000
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_45          IPU_MEMORY_OFFSET+0x00408B0,0x00002000
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_44          IPU_MEMORY_OFFSET+0x00408B0,0x00001000
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_43          IPU_MEMORY_OFFSET+0x00408B0,0x00000800
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_42          IPU_MEMORY_OFFSET+0x00408B0,0x00000400
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_41          IPU_MEMORY_OFFSET+0x00408B0,0x00000200
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_40          IPU_MEMORY_OFFSET+0x00408B0,0x00000100
+#define LPM_MEM_IPU_SDMA_EVENT_2__IDMAC_EOF_SDMA_EN_33          IPU_MEMORY_OFFSET+0x00408B0,0x00000002
+
+#define LPM_MEM_IPU_SDMA_EVENT_3__ADDR                          IPU_MEMORY_OFFSET+0x00408B4
+#define LPM_MEM_IPU_SDMA_EVENT_3__EMPTY                         IPU_MEMORY_OFFSET+0x00408B4,0x00000000
+#define LPM_MEM_IPU_SDMA_EVENT_3__FULL                          IPU_MEMORY_OFFSET+0x00408B4,0xffffffff
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_31        IPU_MEMORY_OFFSET+0x00408B4,0x80000000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_29        IPU_MEMORY_OFFSET+0x00408B4,0x20000000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_28        IPU_MEMORY_OFFSET+0x00408B4,0x10000000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_27        IPU_MEMORY_OFFSET+0x00408B4,0x08000000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_26        IPU_MEMORY_OFFSET+0x00408B4,0x04000000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_25        IPU_MEMORY_OFFSET+0x00408B4,0x02000000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_24        IPU_MEMORY_OFFSET+0x00408B4,0x01000000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_23        IPU_MEMORY_OFFSET+0x00408B4,0x00800000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_22        IPU_MEMORY_OFFSET+0x00408B4,0x00400000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_21        IPU_MEMORY_OFFSET+0x00408B4,0x00200000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_20        IPU_MEMORY_OFFSET+0x00408B4,0x00100000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_19        IPU_MEMORY_OFFSET+0x00408B4,0x00080000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_18        IPU_MEMORY_OFFSET+0x00408B4,0x00040000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_17        IPU_MEMORY_OFFSET+0x00408B4,0x00020000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_15        IPU_MEMORY_OFFSET+0x00408B4,0x00008000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_14        IPU_MEMORY_OFFSET+0x00408B4,0x00004000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_13        IPU_MEMORY_OFFSET+0x00408B4,0x00002000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_12        IPU_MEMORY_OFFSET+0x00408B4,0x00001000
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_11        IPU_MEMORY_OFFSET+0x00408B4,0x00000800
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_10        IPU_MEMORY_OFFSET+0x00408B4,0x00000400
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_9         IPU_MEMORY_OFFSET+0x00408B4,0x00000200
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_8         IPU_MEMORY_OFFSET+0x00408B4,0x00000100
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_5         IPU_MEMORY_OFFSET+0x00408B4,0x00000020
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_3         IPU_MEMORY_OFFSET+0x00408B4,0x00000008
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_2         IPU_MEMORY_OFFSET+0x00408B4,0x00000004
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_1         IPU_MEMORY_OFFSET+0x00408B4,0x00000002
+#define LPM_MEM_IPU_SDMA_EVENT_3__IDMAC_NFACK_SDMA_EN_0         IPU_MEMORY_OFFSET+0x00408B4,0x00000001
+
+#define LPM_MEM_IPU_SDMA_EVENT_4__ADDR                          IPU_MEMORY_OFFSET+0x00408B8
+#define LPM_MEM_IPU_SDMA_EVENT_4__EMPTY                         IPU_MEMORY_OFFSET+0x00408B8,0x00000000
+#define LPM_MEM_IPU_SDMA_EVENT_4__FULL                          IPU_MEMORY_OFFSET+0x00408B8,0xffffffff
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_52        IPU_MEMORY_OFFSET+0x00408B8,0x00100000
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_51        IPU_MEMORY_OFFSET+0x00408B8,0x00080000
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_50        IPU_MEMORY_OFFSET+0x00408B8,0x00040000
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_49        IPU_MEMORY_OFFSET+0x00408B8,0x00020000
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_48        IPU_MEMORY_OFFSET+0x00408B8,0x00010000
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_47        IPU_MEMORY_OFFSET+0x00408B8,0x00008000
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_46        IPU_MEMORY_OFFSET+0x00408B8,0x00004000
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_45        IPU_MEMORY_OFFSET+0x00408B8,0x00002000
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_44        IPU_MEMORY_OFFSET+0x00408B8,0x00001000
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_43        IPU_MEMORY_OFFSET+0x00408B8,0x00000800
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_42        IPU_MEMORY_OFFSET+0x00408B8,0x00000400
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_41        IPU_MEMORY_OFFSET+0x00408B8,0x00000200
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_40        IPU_MEMORY_OFFSET+0x00408B8,0x00000100
+#define LPM_MEM_IPU_SDMA_EVENT_4__IDMAC_NFACK_SDMA_EN_33        IPU_MEMORY_OFFSET+0x00408B8,0x00000002
+
+#define LPM_MEM_IPU_SDMA_EVENT_7__ADDR                          IPU_MEMORY_OFFSET+0x00408BC
+#define LPM_MEM_IPU_SDMA_EVENT_7__EMPTY                         IPU_MEMORY_OFFSET+0x00408BC,0x00000000
+#define LPM_MEM_IPU_SDMA_EVENT_7__FULL                          IPU_MEMORY_OFFSET+0x00408BC,0xffffffff
+#define LPM_MEM_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_31          IPU_MEMORY_OFFSET+0x00408BC,0x80000000
+#define LPM_MEM_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_29          IPU_MEMORY_OFFSET+0x00408BC,0x20000000
+#define LPM_MEM_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_28          IPU_MEMORY_OFFSET+0x00408BC,0x10000000
+#define LPM_MEM_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_27          IPU_MEMORY_OFFSET+0x00408BC,0x08000000
+#define LPM_MEM_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_26          IPU_MEMORY_OFFSET+0x00408BC,0x04000000
+#define LPM_MEM_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_25          IPU_MEMORY_OFFSET+0x00408BC,0x02000000
+#define LPM_MEM_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_24          IPU_MEMORY_OFFSET+0x00408BC,0x01000000
+#define LPM_MEM_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_23          IPU_MEMORY_OFFSET+0x00408BC,0x00800000
+#define LPM_MEM_IPU_SDMA_EVENT_7__IDMAC_EOS_SDMA_EN_19          IPU_MEMORY_OFFSET+0x00408BC,0x00080000
+
+#define LPM_MEM_IPU_SDMA_EVENT_8__ADDR                          IPU_MEMORY_OFFSET+0x00408C0
+#define LPM_MEM_IPU_SDMA_EVENT_8__EMPTY                         IPU_MEMORY_OFFSET+0x00408C0,0x00000000
+#define LPM_MEM_IPU_SDMA_EVENT_8__FULL                          IPU_MEMORY_OFFSET+0x00408C0,0xffffffff
+#define LPM_MEM_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_52          IPU_MEMORY_OFFSET+0x00408C0,0x00100000
+#define LPM_MEM_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_51          IPU_MEMORY_OFFSET+0x00408C0,0x00080000
+#define LPM_MEM_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_44          IPU_MEMORY_OFFSET+0x00408C0,0x00001000
+#define LPM_MEM_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_43          IPU_MEMORY_OFFSET+0x00408C0,0x00000800
+#define LPM_MEM_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_42          IPU_MEMORY_OFFSET+0x00408C0,0x00000400
+#define LPM_MEM_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_41          IPU_MEMORY_OFFSET+0x00408C0,0x00000200
+#define LPM_MEM_IPU_SDMA_EVENT_8__IDMAC_EOS_SDMA_EN_32          IPU_MEMORY_OFFSET+0x00408C0,0x00000002
+
+#define LPM_MEM_IPU_SDMA_EVENT_11__ADDR                         IPU_MEMORY_OFFSET+0x00408C4
+#define LPM_MEM_IPU_SDMA_EVENT_11__EMPTY                        IPU_MEMORY_OFFSET+0x00408C4,0x00000000
+#define LPM_MEM_IPU_SDMA_EVENT_11__FULL                         IPU_MEMORY_OFFSET+0x00408C4,0xffffffff
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_26       IPU_MEMORY_OFFSET+0x00408C4,0x04000000
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_25       IPU_MEMORY_OFFSET+0x00408C4,0x02000000
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_22       IPU_MEMORY_OFFSET+0x00408C4,0x00400000
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_21       IPU_MEMORY_OFFSET+0x00408C4,0x00200000
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_20       IPU_MEMORY_OFFSET+0x00408C4,0x00100000
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_12       IPU_MEMORY_OFFSET+0x00408C4,0x00001000
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_11       IPU_MEMORY_OFFSET+0x00408C4,0x00000800
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_10       IPU_MEMORY_OFFSET+0x00408C4,0x00000400
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_9        IPU_MEMORY_OFFSET+0x00408C4,0x00000200
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_8        IPU_MEMORY_OFFSET+0x00408C4,0x00000100
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_5        IPU_MEMORY_OFFSET+0x00408C4,0x00000020
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_3        IPU_MEMORY_OFFSET+0x00408C4,0x00000008
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_2        IPU_MEMORY_OFFSET+0x00408C4,0x00000004
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_1        IPU_MEMORY_OFFSET+0x00408C4,0x00000002
+#define LPM_MEM_IPU_SDMA_EVENT_11__IDMAC_EOBND_SDMA_EN_0        IPU_MEMORY_OFFSET+0x00408C4,0x00000001
+
+#define LPM_MEM_IPU_SDMA_EVENT_12__ADDR                         IPU_MEMORY_OFFSET+0x00408C8
+#define LPM_MEM_IPU_SDMA_EVENT_12__EMPTY                        IPU_MEMORY_OFFSET+0x00408C8,0x00000000
+#define LPM_MEM_IPU_SDMA_EVENT_12__FULL                         IPU_MEMORY_OFFSET+0x00408C8,0xffffffff
+#define LPM_MEM_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_50       IPU_MEMORY_OFFSET+0x00408C8,0x00040000
+#define LPM_MEM_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_49       IPU_MEMORY_OFFSET+0x00408C8,0x00020000
+#define LPM_MEM_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_48       IPU_MEMORY_OFFSET+0x00408C8,0x00010000
+#define LPM_MEM_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_47       IPU_MEMORY_OFFSET+0x00408C8,0x00008000
+#define LPM_MEM_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_46       IPU_MEMORY_OFFSET+0x00408C8,0x00004000
+#define LPM_MEM_IPU_SDMA_EVENT_12__IDMAC_EOBND_SDMA_EN_45       IPU_MEMORY_OFFSET+0x00408C8,0x00002000
+
+#define LPM_MEM_IPU_SDMA_EVENT_13__ADDR                         IPU_MEMORY_OFFSET+0x00408CC
+#define LPM_MEM_IPU_SDMA_EVENT_13__EMPTY                        IPU_MEMORY_OFFSET+0x00408CC,0x00000000
+#define LPM_MEM_IPU_SDMA_EVENT_13__FULL                         IPU_MEMORY_OFFSET+0x00408CC,0xffffffff
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_31          IPU_MEMORY_OFFSET+0x00408CC,0x80000000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_29          IPU_MEMORY_OFFSET+0x00408CC,0x20000000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_28          IPU_MEMORY_OFFSET+0x00408CC,0x10000000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_27          IPU_MEMORY_OFFSET+0x00408CC,0x08000000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_26          IPU_MEMORY_OFFSET+0x00408CC,0x04000000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_25          IPU_MEMORY_OFFSET+0x00408CC,0x02000000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_24          IPU_MEMORY_OFFSET+0x00408CC,0x01000000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_23          IPU_MEMORY_OFFSET+0x00408CC,0x00800000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_22          IPU_MEMORY_OFFSET+0x00408CC,0x00400000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_21          IPU_MEMORY_OFFSET+0x00408CC,0x00200000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_20          IPU_MEMORY_OFFSET+0x00408CC,0x00100000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_19          IPU_MEMORY_OFFSET+0x00408CC,0x00080000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_18          IPU_MEMORY_OFFSET+0x00408CC,0x00040000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_17          IPU_MEMORY_OFFSET+0x00408CC,0x00020000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_15          IPU_MEMORY_OFFSET+0x00408CC,0x00008000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_14          IPU_MEMORY_OFFSET+0x00408CC,0x00004000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_13          IPU_MEMORY_OFFSET+0x00408CC,0x00002000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_12          IPU_MEMORY_OFFSET+0x00408CC,0x00001000
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_11          IPU_MEMORY_OFFSET+0x00408CC,0x00000800
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_10          IPU_MEMORY_OFFSET+0x00408CC,0x00000400
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_9           IPU_MEMORY_OFFSET+0x00408CC,0x00000200
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_8           IPU_MEMORY_OFFSET+0x00408CC,0x00000100
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_5           IPU_MEMORY_OFFSET+0x00408CC,0x00000020
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_3           IPU_MEMORY_OFFSET+0x00408CC,0x00000008
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_2           IPU_MEMORY_OFFSET+0x00408CC,0x00000004
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_1           IPU_MEMORY_OFFSET+0x00408CC,0x00000002
+#define LPM_MEM_IPU_SDMA_EVENT_13__IDMAC_TH_SDMA_EN_0           IPU_MEMORY_OFFSET+0x00408CC,0x00000001
+
+#define LPM_MEM_IPU_SDMA_EVENT_14__ADDR                         IPU_MEMORY_OFFSET+0x00408D0
+#define LPM_MEM_IPU_SDMA_EVENT_14__EMPTY                        IPU_MEMORY_OFFSET+0x00408D0,0x00000000
+#define LPM_MEM_IPU_SDMA_EVENT_14__FULL                         IPU_MEMORY_OFFSET+0x00408D0,0xffffffff
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_52          IPU_MEMORY_OFFSET+0x00408D0,0x00100000
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_51          IPU_MEMORY_OFFSET+0x00408D0,0x00080000
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_50          IPU_MEMORY_OFFSET+0x00408D0,0x00040000
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_49          IPU_MEMORY_OFFSET+0x00408D0,0x00020000
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_48          IPU_MEMORY_OFFSET+0x00408D0,0x00010000
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_47          IPU_MEMORY_OFFSET+0x00408D0,0x00008000
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_46          IPU_MEMORY_OFFSET+0x00408D0,0x00004000
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_45          IPU_MEMORY_OFFSET+0x00408D0,0x00002000
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_44          IPU_MEMORY_OFFSET+0x00408D0,0x00001000
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_43          IPU_MEMORY_OFFSET+0x00408D0,0x00000800
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_42          IPU_MEMORY_OFFSET+0x00408D0,0x00000400
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_41          IPU_MEMORY_OFFSET+0x00408D0,0x00000200
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_40          IPU_MEMORY_OFFSET+0x00408D0,0x00000100
+#define LPM_MEM_IPU_SDMA_EVENT_14__IDMAC_TH_SDMA_EN_33          IPU_MEMORY_OFFSET+0x00408D0,0x00000002
+
+#define LPM_MEM_IPU_SRM_PRI1__ADDR                              IPU_MEMORY_OFFSET+0x00408D4
+#define LPM_MEM_IPU_SRM_PRI1__EMPTY                             IPU_MEMORY_OFFSET+0x00408D4,0x00000000
+#define LPM_MEM_IPU_SRM_PRI1__FULL                              IPU_MEMORY_OFFSET+0x00408D4,0xffffffff
+#define LPM_MEM_IPU_SRM_PRI1__CSI0_SRM_MODE                     IPU_MEMORY_OFFSET+0x00408D4,0x00001800
+#define LPM_MEM_IPU_SRM_PRI1__CSI0_SRM_PRI                      IPU_MEMORY_OFFSET+0x00408D4,0x00000700
+#define LPM_MEM_IPU_SRM_PRI1__CSI1_SRM_MODE                     IPU_MEMORY_OFFSET+0x00408D4,0x00000018
+#define LPM_MEM_IPU_SRM_PRI1__CSI1_SRM_PRI                      IPU_MEMORY_OFFSET+0x00408D4,0x00000007
+
+#define LPM_MEM_IPU_SRM_PRI2__ADDR                              IPU_MEMORY_OFFSET+0x00408D8
+#define LPM_MEM_IPU_SRM_PRI2__EMPTY                             IPU_MEMORY_OFFSET+0x00408D8,0x00000000
+#define LPM_MEM_IPU_SRM_PRI2__FULL                              IPU_MEMORY_OFFSET+0x00408D8,0xffffffff
+#define LPM_MEM_IPU_SRM_PRI2__DI1_SRM_MODE                      IPU_MEMORY_OFFSET+0x00408D8,0x18000000
+#define LPM_MEM_IPU_SRM_PRI2__DI1_SRM_PRI                       IPU_MEMORY_OFFSET+0x00408D8,0x07000000
+#define LPM_MEM_IPU_SRM_PRI2__DI0_SRM_MODE                      IPU_MEMORY_OFFSET+0x00408D8,0x00180000
+#define LPM_MEM_IPU_SRM_PRI2__DI0_SRM_PRI                       IPU_MEMORY_OFFSET+0x00408D8,0x00070000
+#define LPM_MEM_IPU_SRM_PRI2__DC_6_SRM_MODE                     IPU_MEMORY_OFFSET+0x00408D8,0x0000C000
+#define LPM_MEM_IPU_SRM_PRI2__DC_2_SRM_MODE                     IPU_MEMORY_OFFSET+0x00408D8,0x00003000
+#define LPM_MEM_IPU_SRM_PRI2__DC_SRM_PRI                        IPU_MEMORY_OFFSET+0x00408D8,0x00000E00
+#define LPM_MEM_IPU_SRM_PRI2__DP_A1_SRM_MODE                    IPU_MEMORY_OFFSET+0x00408D8,0x00000180
+#define LPM_MEM_IPU_SRM_PRI2__DP_A0_SRM_MODE                    IPU_MEMORY_OFFSET+0x00408D8,0x00000060
+#define LPM_MEM_IPU_SRM_PRI2__DP_S_SRM_MODE                     IPU_MEMORY_OFFSET+0x00408D8,0x00000018
+#define LPM_MEM_IPU_SRM_PRI2__DP_SRM_PRI                        IPU_MEMORY_OFFSET+0x00408D8,0x00000007
+
+#define LPM_MEM_IPU_FS_PROC_FLOW1__ADDR                         IPU_MEMORY_OFFSET+0x00408DC
+#define LPM_MEM_IPU_FS_PROC_FLOW1__EMPTY                        IPU_MEMORY_OFFSET+0x00408DC,0x00000000
+#define LPM_MEM_IPU_FS_PROC_FLOW1__FULL                         IPU_MEMORY_OFFSET+0x00408DC,0xffffffff
+#define LPM_MEM_IPU_FS_PROC_FLOW1__VF_IN_VALID                  IPU_MEMORY_OFFSET+0x00408DC,0x80000000
+#define LPM_MEM_IPU_FS_PROC_FLOW1__ENC_IN_VALID                 IPU_MEMORY_OFFSET+0x00408DC,0x40000000
+#define LPM_MEM_IPU_FS_PROC_FLOW1__VDI_SRC_SEL                  IPU_MEMORY_OFFSET+0x00408DC,0x30000000
+#define LPM_MEM_IPU_FS_PROC_FLOW1__PRP_SRC_SEL                  IPU_MEMORY_OFFSET+0x00408DC,0x0F000000
+#define LPM_MEM_IPU_FS_PROC_FLOW1__VDI3_SRC_SEL                 IPU_MEMORY_OFFSET+0x00408DC,0x00C00000
+#define LPM_MEM_IPU_FS_PROC_FLOW1__VDI1_SRC_SEL                 IPU_MEMORY_OFFSET+0x00408DC,0x00300000
+#define LPM_MEM_IPU_FS_PROC_FLOW1__PP_ROT_SRC_SEL               IPU_MEMORY_OFFSET+0x00408DC,0x000F0000
+#define LPM_MEM_IPU_FS_PROC_FLOW1__PP_SRC_SEL                   IPU_MEMORY_OFFSET+0x00408DC,0x0000F000
+#define LPM_MEM_IPU_FS_PROC_FLOW1__PRPVF_ROT_SRC_SEL            IPU_MEMORY_OFFSET+0x00408DC,0x00000F00
+#define LPM_MEM_IPU_FS_PROC_FLOW1__PRPENC_ROT_SRC_SEL           IPU_MEMORY_OFFSET+0x00408DC,0x0000000F
+
+#define LPM_MEM_IPU_FS_PROC_FLOW2__ADDR                         IPU_MEMORY_OFFSET+0x00408E0
+#define LPM_MEM_IPU_FS_PROC_FLOW2__EMPTY                        IPU_MEMORY_OFFSET+0x00408E0,0x00000000
+#define LPM_MEM_IPU_FS_PROC_FLOW2__FULL                         IPU_MEMORY_OFFSET+0x00408E0,0xffffffff
+#define LPM_MEM_IPU_FS_PROC_FLOW2__PRP_DEST_SEL                 IPU_MEMORY_OFFSET+0x00408E0,0x0F000000
+#define LPM_MEM_IPU_FS_PROC_FLOW2__PRPENC_ROT_DEST_SEL          IPU_MEMORY_OFFSET+0x00408E0,0x00F00000
+#define LPM_MEM_IPU_FS_PROC_FLOW2__PP_ROT_DEST_SEL              IPU_MEMORY_OFFSET+0x00408E0,0x000F0000
+#define LPM_MEM_IPU_FS_PROC_FLOW2__PP_DEST_SEL                  IPU_MEMORY_OFFSET+0x00408E0,0x0000F000
+#define LPM_MEM_IPU_FS_PROC_FLOW2__PRPVF_ROT_DEST_SEL           IPU_MEMORY_OFFSET+0x00408E0,0x00000F00
+#define LPM_MEM_IPU_FS_PROC_FLOW2__PRPVF_DEST_SEL               IPU_MEMORY_OFFSET+0x00408E0,0x000000F0
+#define LPM_MEM_IPU_FS_PROC_FLOW2__PRP_ENC_DEST_SEL             IPU_MEMORY_OFFSET+0x00408E0,0x0000000F
+
+#define LPM_MEM_IPU_FS_PROC_FLOW3__ADDR                         IPU_MEMORY_OFFSET+0x00408E4
+#define LPM_MEM_IPU_FS_PROC_FLOW3__EMPTY                        IPU_MEMORY_OFFSET+0x00408E4,0x00000000
+#define LPM_MEM_IPU_FS_PROC_FLOW3__FULL                         IPU_MEMORY_OFFSET+0x00408E4,0xffffffff
+#define LPM_MEM_IPU_FS_PROC_FLOW3__VPU_DEST_SEL                 IPU_MEMORY_OFFSET+0x00408E4,0x03000000
+#define LPM_MEM_IPU_FS_PROC_FLOW3__EXT_SRC2_DEST_SEL            IPU_MEMORY_OFFSET+0x00408E4,0x00C00000
+#define LPM_MEM_IPU_FS_PROC_FLOW3__EXT_SRC1_DEST_SEL            IPU_MEMORY_OFFSET+0x00408E4,0x00300000
+#define LPM_MEM_IPU_FS_PROC_FLOW3__VDOA_DEST_SEL                IPU_MEMORY_OFFSET+0x00408E4,0x00030000
+#define LPM_MEM_IPU_FS_PROC_FLOW3__SMFC3_DEST_SEL               IPU_MEMORY_OFFSET+0x00408E4,0x00003800
+#define LPM_MEM_IPU_FS_PROC_FLOW3__SMFC2_DEST_SEL               IPU_MEMORY_OFFSET+0x00408E4,0x00000780
+#define LPM_MEM_IPU_FS_PROC_FLOW3__SMFC1_DEST_SEL               IPU_MEMORY_OFFSET+0x00408E4,0x00000070
+#define LPM_MEM_IPU_FS_PROC_FLOW3__SMFC0_DEST_SEL               IPU_MEMORY_OFFSET+0x00408E4,0x0000000F
+
+#define LPM_MEM_IPU_FS_DISP_FLOW1__ADDR                         IPU_MEMORY_OFFSET+0x00408E8
+#define LPM_MEM_IPU_FS_DISP_FLOW1__EMPTY                        IPU_MEMORY_OFFSET+0x00408E8,0x00000000
+#define LPM_MEM_IPU_FS_DISP_FLOW1__FULL                         IPU_MEMORY_OFFSET+0x00408E8,0xffffffff
+#define LPM_MEM_IPU_FS_DISP_FLOW1__DC1_SRC_SEL                  IPU_MEMORY_OFFSET+0x00408E8,0x00F00000
+#define LPM_MEM_IPU_FS_DISP_FLOW1__DC2_SRC_SEL                  IPU_MEMORY_OFFSET+0x00408E8,0x000F0000
+#define LPM_MEM_IPU_FS_DISP_FLOW1__DP_ASYNC1_SRC_SEL            IPU_MEMORY_OFFSET+0x00408E8,0x0000F000
+#define LPM_MEM_IPU_FS_DISP_FLOW1__DP_ASYNC0_SRC_SEL            IPU_MEMORY_OFFSET+0x00408E8,0x00000F00
+#define LPM_MEM_IPU_FS_DISP_FLOW1__DP_SYNC1_SRC_SEL             IPU_MEMORY_OFFSET+0x00408E8,0x000000F0
+#define LPM_MEM_IPU_FS_DISP_FLOW1__DP_SYNC0_SRC_SEL             IPU_MEMORY_OFFSET+0x00408E8,0x0000000F
+
+#define LPM_MEM_IPU_FS_DISP_FLOW2__ADDR                         IPU_MEMORY_OFFSET+0x00408EC
+#define LPM_MEM_IPU_FS_DISP_FLOW2__EMPTY                        IPU_MEMORY_OFFSET+0x00408EC,0x00000000
+#define LPM_MEM_IPU_FS_DISP_FLOW2__FULL                         IPU_MEMORY_OFFSET+0x00408EC,0xffffffff
+#define LPM_MEM_IPU_FS_DISP_FLOW2__DC2_ALT_SRC_SEL              IPU_MEMORY_OFFSET+0x00408EC,0x000F0000
+#define LPM_MEM_IPU_FS_DISP_FLOW2__DP_ASYNC1_ALT_SRC_SEL        IPU_MEMORY_OFFSET+0x00408EC,0x000000F0
+#define LPM_MEM_IPU_FS_DISP_FLOW2__DP_ASYNC0_ALT_SRC_SEL        IPU_MEMORY_OFFSET+0x00408EC,0x0000000F
+
+#define LPM_MEM_IPU_SKIP__ADDR                                  IPU_MEMORY_OFFSET+0x00408F0
+#define LPM_MEM_IPU_SKIP__EMPTY                                 IPU_MEMORY_OFFSET+0x00408F0,0x00000000
+#define LPM_MEM_IPU_SKIP__FULL                                  IPU_MEMORY_OFFSET+0x00408F0,0xffffffff
+#define LPM_MEM_IPU_SKIP__VDI_SKIP                              IPU_MEMORY_OFFSET+0x00408F0,0xFFF00000
+#define LPM_MEM_IPU_SKIP__VDI_MAX_RATIO_SKIP                    IPU_MEMORY_OFFSET+0x00408F0,0x000F0000
+#define LPM_MEM_IPU_SKIP__CSI_SKIP_IC_VF                        IPU_MEMORY_OFFSET+0x00408F0,0x0000F800
+#define LPM_MEM_IPU_SKIP__CSI_MAX_RATIO_SKIP_IC_VF              IPU_MEMORY_OFFSET+0x00408F0,0x00000700
+#define LPM_MEM_IPU_SKIP__CSI_SKIP_IC_ENC                       IPU_MEMORY_OFFSET+0x00408F0,0x000000F8
+#define LPM_MEM_IPU_SKIP__CSI_MAX_RATIO_SKIP_IC_ENC             IPU_MEMORY_OFFSET+0x00408F0,0x00000007
+
+#define LPM_MEM_IPU_DISP_ALT_CONF__ADDR                         IPU_MEMORY_OFFSET+0x00408F4
+#define LPM_MEM_IPU_DISP_ALT_CONF__EMPTY                        IPU_MEMORY_OFFSET+0x00408F4,0x00000000
+#define LPM_MEM_IPU_DISP_ALT_CONF__FULL                         IPU_MEMORY_OFFSET+0x00408F4,0xffffffff
+
+#define LPM_MEM_IPU_DISP_GEN__ADDR                              IPU_MEMORY_OFFSET+0x00408F8
+#define LPM_MEM_IPU_DISP_GEN__EMPTY                             IPU_MEMORY_OFFSET+0x00408F8,0x00000000
+#define LPM_MEM_IPU_DISP_GEN__FULL                              IPU_MEMORY_OFFSET+0x00408F8,0xffffffff
+#define LPM_MEM_IPU_DISP_GEN__DI1_COUNTER_RELEASE               IPU_MEMORY_OFFSET+0x00408F8,0x02000000
+#define LPM_MEM_IPU_DISP_GEN__DI0_COUNTER_RELEASE               IPU_MEMORY_OFFSET+0x00408F8,0x01000000
+#define LPM_MEM_IPU_DISP_GEN__CSI_VSYNC_DEST                    IPU_MEMORY_OFFSET+0x00408F8,0x00800000
+#define LPM_MEM_IPU_DISP_GEN__MCU_MAX_BURST_STOP                IPU_MEMORY_OFFSET+0x00408F8,0x00400000
+#define LPM_MEM_IPU_DISP_GEN__MCU_T                             IPU_MEMORY_OFFSET+0x00408F8,0x003C0000
+#define LPM_MEM_IPU_DISP_GEN__MCU_DI_ID_9                       IPU_MEMORY_OFFSET+0x00408F8,0x00020000
+#define LPM_MEM_IPU_DISP_GEN__MCU_DI_ID_8                       IPU_MEMORY_OFFSET+0x00408F8,0x00010000
+#define LPM_MEM_IPU_DISP_GEN__DP_PIPE_CLR                       IPU_MEMORY_OFFSET+0x00408F8,0x00000040
+#define LPM_MEM_IPU_DISP_GEN__DP_FG_EN_ASYNC1                   IPU_MEMORY_OFFSET+0x00408F8,0x00000020
+#define LPM_MEM_IPU_DISP_GEN__DP_FG_EN_ASYNC0                   IPU_MEMORY_OFFSET+0x00408F8,0x00000010
+#define LPM_MEM_IPU_DISP_GEN__DP_ASYNC_DOUBLE_FLOW              IPU_MEMORY_OFFSET+0x00408F8,0x00000008
+#define LPM_MEM_IPU_DISP_GEN__DC2_DOUBLE_FLOW                   IPU_MEMORY_OFFSET+0x00408F8,0x00000004
+#define LPM_MEM_IPU_DISP_GEN__DI1_DUAL_MODE                     IPU_MEMORY_OFFSET+0x00408F8,0x00000002
+#define LPM_MEM_IPU_DISP_GEN__DI0_DUAL_MODE                     IPU_MEMORY_OFFSET+0x00408F8,0x00000001
+
+#define LPM_MEM_IPU_DISP_ALT1__ADDR                             IPU_MEMORY_OFFSET+0x00408FC
+#define LPM_MEM_IPU_DISP_ALT1__EMPTY                            IPU_MEMORY_OFFSET+0x00408FC,0x00000000
+#define LPM_MEM_IPU_DISP_ALT1__FULL                             IPU_MEMORY_OFFSET+0x00408FC,0xffffffff
+#define LPM_MEM_IPU_DISP_ALT1__SEL_ALT_0                        IPU_MEMORY_OFFSET+0x00408FC,0xF0000000
+#define LPM_MEM_IPU_DISP_ALT1__STEP_REPEAT_ALT_0                IPU_MEMORY_OFFSET+0x00408FC,0x0FFF0000
+#define LPM_MEM_IPU_DISP_ALT1__CNT_AUTO_RELOAD_ALT_0            IPU_MEMORY_OFFSET+0x00408FC,0x00008000
+#define LPM_MEM_IPU_DISP_ALT1__CNT_CLR_SEL_ALT_0                IPU_MEMORY_OFFSET+0x00408FC,0x00007000
+#define LPM_MEM_IPU_DISP_ALT1__RUN_VALUE_M1_ALT_0               IPU_MEMORY_OFFSET+0x00408FC,0x00000FFF
+
+#define LPM_MEM_IPU_DISP_ALT2__ADDR                             IPU_MEMORY_OFFSET+0x0040900
+#define LPM_MEM_IPU_DISP_ALT2__EMPTY                            IPU_MEMORY_OFFSET+0x0040900,0x00000000
+#define LPM_MEM_IPU_DISP_ALT2__FULL                             IPU_MEMORY_OFFSET+0x0040900,0xffffffff
+#define LPM_MEM_IPU_DISP_ALT2__RUN_RESOLUTION_ALT_0             IPU_MEMORY_OFFSET+0x0040900,0x00070000
+#define LPM_MEM_IPU_DISP_ALT2__OFFSET_RESOLUTION_ALT_0          IPU_MEMORY_OFFSET+0x0040900,0x00007000
+#define LPM_MEM_IPU_DISP_ALT2__OFFSET_VALUE_ALT_0               IPU_MEMORY_OFFSET+0x0040900,0x00000FFF
+
+#define LPM_MEM_IPU_DISP_ALT3__ADDR                             IPU_MEMORY_OFFSET+0x0040904
+#define LPM_MEM_IPU_DISP_ALT3__EMPTY                            IPU_MEMORY_OFFSET+0x0040904,0x00000000
+#define LPM_MEM_IPU_DISP_ALT3__FULL                             IPU_MEMORY_OFFSET+0x0040904,0xffffffff
+#define LPM_MEM_IPU_DISP_ALT3__SEL_ALT_1                        IPU_MEMORY_OFFSET+0x0040904,0xF0000000
+#define LPM_MEM_IPU_DISP_ALT3__STEP_REPEAT_ALT_1                IPU_MEMORY_OFFSET+0x0040904,0x0FFF0000
+#define LPM_MEM_IPU_DISP_ALT3__CNT_AUTO_RELOAD_ALT_1            IPU_MEMORY_OFFSET+0x0040904,0x00008000
+#define LPM_MEM_IPU_DISP_ALT3__CNT_CLR_SEL_ALT_1                IPU_MEMORY_OFFSET+0x0040904,0x00007000
+#define LPM_MEM_IPU_DISP_ALT3__RUN_VALUE_M1_ALT_1               IPU_MEMORY_OFFSET+0x0040904,0x00000FFF
+
+#define LPM_MEM_IPU_DISP_ALT4__ADDR                             IPU_MEMORY_OFFSET+0x0040908
+#define LPM_MEM_IPU_DISP_ALT4__EMPTY                            IPU_MEMORY_OFFSET+0x0040908,0x00000000
+#define LPM_MEM_IPU_DISP_ALT4__FULL                             IPU_MEMORY_OFFSET+0x0040908,0xffffffff
+#define LPM_MEM_IPU_DISP_ALT4__RUN_RESOLUTION_ALT_1             IPU_MEMORY_OFFSET+0x0040908,0x00070000
+#define LPM_MEM_IPU_DISP_ALT4__OFFSET_RESOLUTION_ALT_1          IPU_MEMORY_OFFSET+0x0040908,0x00007000
+#define LPM_MEM_IPU_DISP_ALT4__OFFSET_VALUE_ALT_1               IPU_MEMORY_OFFSET+0x0040908,0x00000FFF
+
+#define LPM_MEM_IPU_SNOOP__ADDR                                 IPU_MEMORY_OFFSET+0x004090C
+#define LPM_MEM_IPU_SNOOP__EMPTY                                IPU_MEMORY_OFFSET+0x004090C,0x00000000
+#define LPM_MEM_IPU_SNOOP__FULL                                 IPU_MEMORY_OFFSET+0x004090C,0xffffffff
+#define LPM_MEM_IPU_SNOOP__SNOOP2_SYNC_BYP                      IPU_MEMORY_OFFSET+0x004090C,0x00010000
+#define LPM_MEM_IPU_SNOOP__AUTOREF_PER                          IPU_MEMORY_OFFSET+0x004090C,0x000003FF
+
+#define LPM_MEM_IPU_MEM_RST__ADDR                               IPU_MEMORY_OFFSET+0x0040910
+#define LPM_MEM_IPU_MEM_RST__EMPTY                              IPU_MEMORY_OFFSET+0x0040910,0x00000000
+#define LPM_MEM_IPU_MEM_RST__FULL                               IPU_MEMORY_OFFSET+0x0040910,0xffffffff
+#define LPM_MEM_IPU_MEM_RST__RST_MEM_START                      IPU_MEMORY_OFFSET+0x0040910,0x80000000
+#define LPM_MEM_IPU_MEM_RST__RST_MEM_EN                         IPU_MEMORY_OFFSET+0x0040910,0x007FFFFF
+
+#define LPM_MEM_IPU_PM__ADDR                                    IPU_MEMORY_OFFSET+0x0040914
+#define LPM_MEM_IPU_PM__EMPTY                                   IPU_MEMORY_OFFSET+0x0040914,0x00000000
+#define LPM_MEM_IPU_PM__FULL                                    IPU_MEMORY_OFFSET+0x0040914,0xffffffff
+#define LPM_MEM_IPU_PM__LPSR_MODE                               IPU_MEMORY_OFFSET+0x0040914,0x80000000
+#define LPM_MEM_IPU_PM__DI1_SRM_CLOCK_CHANGE_MODE               IPU_MEMORY_OFFSET+0x0040914,0x40000000
+#define LPM_MEM_IPU_PM__DI1_CLK_PERIOD_1                        IPU_MEMORY_OFFSET+0x0040914,0x3F800000
+#define LPM_MEM_IPU_PM__DI1_CLK_PERIOD_0                        IPU_MEMORY_OFFSET+0x0040914,0x007F0000
+#define LPM_MEM_IPU_PM__CLOCK_MODE_STAT                         IPU_MEMORY_OFFSET+0x0040914,0x00008000
+#define LPM_MEM_IPU_PM__DI0_SRM_CLOCK_CHANGE_MODE               IPU_MEMORY_OFFSET+0x0040914,0x00004000
+#define LPM_MEM_IPU_PM__DI0_CLK_PERIOD_1                        IPU_MEMORY_OFFSET+0x0040914,0x00003F80
+#define LPM_MEM_IPU_PM__DI0_CLK_PERIOD_0                        IPU_MEMORY_OFFSET+0x0040914,0x0000007F
+
+#define LPM_MEM_IPU_GPR__ADDR                                   IPU_MEMORY_OFFSET+0x0040918
+#define LPM_MEM_IPU_GPR__EMPTY                                  IPU_MEMORY_OFFSET+0x0040918,0x00000000
+#define LPM_MEM_IPU_GPR__FULL                                   IPU_MEMORY_OFFSET+0x0040918,0xffffffff
+#define LPM_MEM_IPU_GPR__IPU_CH_BUF1_RDY1_CLR                   IPU_MEMORY_OFFSET+0x0040918,0x80000000
+#define LPM_MEM_IPU_GPR__IPU_CH_BUF1_RDY0_CLR                   IPU_MEMORY_OFFSET+0x0040918,0x40000000
+#define LPM_MEM_IPU_GPR__IPU_CH_BUF0_RDY1_CLR                   IPU_MEMORY_OFFSET+0x0040918,0x20000000
+#define LPM_MEM_IPU_GPR__IPU_CH_BUF0_RDY0_CLR                   IPU_MEMORY_OFFSET+0x0040918,0x10000000
+#define LPM_MEM_IPU_GPR__IPU_ALT_CH_BUF1_RDY1_CLR               IPU_MEMORY_OFFSET+0x0040918,0x08000000
+#define LPM_MEM_IPU_GPR__IPU_ALT_CH_BUF1_RDY0_CLR               IPU_MEMORY_OFFSET+0x0040918,0x04000000
+#define LPM_MEM_IPU_GPR__IPU_ALT_CH_BUF0_RDY1_CLR               IPU_MEMORY_OFFSET+0x0040918,0x02000000
+#define LPM_MEM_IPU_GPR__IPU_ALT_CH_BUF0_RDY0_CLR               IPU_MEMORY_OFFSET+0x0040918,0x01000000
+#define LPM_MEM_IPU_GPR__IPU_DI1_CLK_CHANGE_ACK_DIS             IPU_MEMORY_OFFSET+0x0040918,0x00800000
+#define LPM_MEM_IPU_GPR__IPU_DI0_CLK_CHANGE_ACK_DIS             IPU_MEMORY_OFFSET+0x0040918,0x00400000
+#define LPM_MEM_IPU_GPR__IPU_CH_BUF2_RDY1_CLR                   IPU_MEMORY_OFFSET+0x0040918,0x00200000
+#define LPM_MEM_IPU_GPR__IPU_CH_BUF2_RDY0_CLR                   IPU_MEMORY_OFFSET+0x0040918,0x00100000
+#define LPM_MEM_IPU_GPR__IPU_GP19                               IPU_MEMORY_OFFSET+0x0040918,0x00080000
+#define LPM_MEM_IPU_GPR__IPU_GP18                               IPU_MEMORY_OFFSET+0x0040918,0x00040000
+#define LPM_MEM_IPU_GPR__IPU_GP17                               IPU_MEMORY_OFFSET+0x0040918,0x00020000
+#define LPM_MEM_IPU_GPR__IPU_GP16                               IPU_MEMORY_OFFSET+0x0040918,0x00010000
+#define LPM_MEM_IPU_GPR__IPU_GP15                               IPU_MEMORY_OFFSET+0x0040918,0x00008000
+#define LPM_MEM_IPU_GPR__IPU_GP14                               IPU_MEMORY_OFFSET+0x0040918,0x00004000
+#define LPM_MEM_IPU_GPR__IPU_GP13                               IPU_MEMORY_OFFSET+0x0040918,0x00002000
+#define LPM_MEM_IPU_GPR__IPU_GP12                               IPU_MEMORY_OFFSET+0x0040918,0x00001000
+#define LPM_MEM_IPU_GPR__IPU_GP11                               IPU_MEMORY_OFFSET+0x0040918,0x00000800
+#define LPM_MEM_IPU_GPR__IPU_GP10                               IPU_MEMORY_OFFSET+0x0040918,0x00000400
+#define LPM_MEM_IPU_GPR__IPU_GP9                                IPU_MEMORY_OFFSET+0x0040918,0x00000200
+#define LPM_MEM_IPU_GPR__IPU_GP8                                IPU_MEMORY_OFFSET+0x0040918,0x00000100
+#define LPM_MEM_IPU_GPR__IPU_GP7                                IPU_MEMORY_OFFSET+0x0040918,0x00000080
+#define LPM_MEM_IPU_GPR__IPU_GP6                                IPU_MEMORY_OFFSET+0x0040918,0x00000040
+#define LPM_MEM_IPU_GPR__IPU_GP5                                IPU_MEMORY_OFFSET+0x0040918,0x00000020
+#define LPM_MEM_IPU_GPR__IPU_GP4                                IPU_MEMORY_OFFSET+0x0040918,0x00000010
+#define LPM_MEM_IPU_GPR__IPU_GP3                                IPU_MEMORY_OFFSET+0x0040918,0x00000008
+#define LPM_MEM_IPU_GPR__IPU_GP2                                IPU_MEMORY_OFFSET+0x0040918,0x00000004
+#define LPM_MEM_IPU_GPR__IPU_GP1                                IPU_MEMORY_OFFSET+0x0040918,0x00000002
+#define LPM_MEM_IPU_GPR__IPU_GP0                                IPU_MEMORY_OFFSET+0x0040918,0x00000001
+
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__ADDR                      IPU_MEMORY_OFFSET+0x0040984
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__EMPTY                     IPU_MEMORY_OFFSET+0x0040984,0x00000000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__FULL                      IPU_MEMORY_OFFSET+0x0040984,0xffffffff
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_31     IPU_MEMORY_OFFSET+0x0040984,0x80000000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_29     IPU_MEMORY_OFFSET+0x0040984,0x20000000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_28     IPU_MEMORY_OFFSET+0x0040984,0x10000000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_27     IPU_MEMORY_OFFSET+0x0040984,0x08000000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_26     IPU_MEMORY_OFFSET+0x0040984,0x04000000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_25     IPU_MEMORY_OFFSET+0x0040984,0x02000000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_24     IPU_MEMORY_OFFSET+0x0040984,0x01000000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_23     IPU_MEMORY_OFFSET+0x0040984,0x00800000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_22     IPU_MEMORY_OFFSET+0x0040984,0x00400000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_21     IPU_MEMORY_OFFSET+0x0040984,0x00200000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_20     IPU_MEMORY_OFFSET+0x0040984,0x00100000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_19     IPU_MEMORY_OFFSET+0x0040984,0x00080000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_18     IPU_MEMORY_OFFSET+0x0040984,0x00040000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_17     IPU_MEMORY_OFFSET+0x0040984,0x00020000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_15     IPU_MEMORY_OFFSET+0x0040984,0x00008000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_14     IPU_MEMORY_OFFSET+0x0040984,0x00004000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_13     IPU_MEMORY_OFFSET+0x0040984,0x00002000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_12     IPU_MEMORY_OFFSET+0x0040984,0x00001000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_11     IPU_MEMORY_OFFSET+0x0040984,0x00000800
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_10     IPU_MEMORY_OFFSET+0x0040984,0x00000400
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_9      IPU_MEMORY_OFFSET+0x0040984,0x00000200
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_8      IPU_MEMORY_OFFSET+0x0040984,0x00000100
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_5      IPU_MEMORY_OFFSET+0x0040984,0x00000020
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_3      IPU_MEMORY_OFFSET+0x0040984,0x00000008
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_2      IPU_MEMORY_OFFSET+0x0040984,0x00000004
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_1      IPU_MEMORY_OFFSET+0x0040984,0x00000002
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_0__DMA_CH_DB_MODE_SEL_0      IPU_MEMORY_OFFSET+0x0040984,0x00000001
+
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__ADDR                      IPU_MEMORY_OFFSET+0x0040988
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__EMPTY                     IPU_MEMORY_OFFSET+0x0040988,0x00000000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__FULL                      IPU_MEMORY_OFFSET+0x0040988,0xffffffff
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_52     IPU_MEMORY_OFFSET+0x0040988,0x00100000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_51     IPU_MEMORY_OFFSET+0x0040988,0x00080000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_50     IPU_MEMORY_OFFSET+0x0040988,0x00040000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_49     IPU_MEMORY_OFFSET+0x0040988,0x00020000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_48     IPU_MEMORY_OFFSET+0x0040988,0x00010000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_47     IPU_MEMORY_OFFSET+0x0040988,0x00008000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_46     IPU_MEMORY_OFFSET+0x0040988,0x00004000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_45     IPU_MEMORY_OFFSET+0x0040988,0x00002000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_44     IPU_MEMORY_OFFSET+0x0040988,0x00001000
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_43     IPU_MEMORY_OFFSET+0x0040988,0x00000800
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_42     IPU_MEMORY_OFFSET+0x0040988,0x00000400
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_41     IPU_MEMORY_OFFSET+0x0040988,0x00000200
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_40     IPU_MEMORY_OFFSET+0x0040988,0x00000100
+#define LPM_MEM_IPU_CH_DB_MODE_SEL_1__DMA_CH_DB_MODE_SEL_33     IPU_MEMORY_OFFSET+0x0040988,0x00000002
+
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_0__ADDR                  IPU_MEMORY_OFFSET+0x004099C
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_0__EMPTY                 IPU_MEMORY_OFFSET+0x004099C,0x00000000
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_0__FULL                  IPU_MEMORY_OFFSET+0x004099C,0xffffffff
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_29 IPU_MEMORY_OFFSET+0x004099C,0x20000000
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_24 IPU_MEMORY_OFFSET+0x004099C,0x01000000
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_7 IPU_MEMORY_OFFSET+0x004099C,0x00000080
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_6 IPU_MEMORY_OFFSET+0x004099C,0x00000040
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_5 IPU_MEMORY_OFFSET+0x004099C,0x00000020
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_0__DMA_CH_ALT_DB_MODE_SEL_4 IPU_MEMORY_OFFSET+0x004099C,0x00000010
+
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_1__ADDR                  IPU_MEMORY_OFFSET+0x00409A0
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_1__EMPTY                 IPU_MEMORY_OFFSET+0x00409A0,0x00000000
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_1__FULL                  IPU_MEMORY_OFFSET+0x00409A0,0xffffffff
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_1__DMA_CH_ALT_DB_MODE_SEL_52 IPU_MEMORY_OFFSET+0x00409A0,0x00100000
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_1__DMA_CH_ALT_DB_MODE_SEL_41 IPU_MEMORY_OFFSET+0x00409A0,0x00000200
+#define LPM_MEM_IPU_ALT_CH_DB_MODE_SEL_1__DMA_CH_ALT_DB_MODE_SEL_33 IPU_MEMORY_OFFSET+0x00409A0,0x00000002
+
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_0__ADDR                     IPU_MEMORY_OFFSET+0x00409AC
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_0__EMPTY                    IPU_MEMORY_OFFSET+0x00409AC,0x00000000
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_0__FULL                     IPU_MEMORY_OFFSET+0x00409AC,0xffffffff
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_28   IPU_MEMORY_OFFSET+0x00409AC,0x10000000
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_27   IPU_MEMORY_OFFSET+0x00409AC,0x08000000
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_23   IPU_MEMORY_OFFSET+0x00409AC,0x00800000
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_21   IPU_MEMORY_OFFSET+0x00409AC,0x00200000
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_13   IPU_MEMORY_OFFSET+0x00409AC,0x00002000
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_10   IPU_MEMORY_OFFSET+0x00409AC,0x00000400
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_9    IPU_MEMORY_OFFSET+0x00409AC,0x00000200
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_0__DMA_CH_TRB_MODE_SEL_8    IPU_MEMORY_OFFSET+0x00409AC,0x00000100
+
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_1__ADDR                     IPU_MEMORY_OFFSET+0x00409B0
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_1__EMPTY                    IPU_MEMORY_OFFSET+0x00409B0,0x00000000
+#define LPM_MEM_IPU_CH_TRB_MODE_SEL_1__FULL                     IPU_MEMORY_OFFSET+0x00409B0,0xffffffff
+
+#define LPM_MEM_IDMAC_CONF__ADDR                                IPU_MEMORY_OFFSET+0x00407E4
+#define LPM_MEM_IDMAC_CONF__EMPTY                               IPU_MEMORY_OFFSET+0x00407E4,0x00000000
+#define LPM_MEM_IDMAC_CONF__FULL                                IPU_MEMORY_OFFSET+0x00407E4,0xffffffff
+#define LPM_MEM_IDMAC_CONF__USED_BUFS_EN_R                      IPU_MEMORY_OFFSET+0x00407E4,0x02000000
+#define LPM_MEM_IDMAC_CONF__USED_BUFS_MAX_R                     IPU_MEMORY_OFFSET+0x00407E4,0x01E00000
+#define LPM_MEM_IDMAC_CONF__USED_BUFS_EN_W                      IPU_MEMORY_OFFSET+0x00407E4,0x00100000
+#define LPM_MEM_IDMAC_CONF__USED_BUFS_MAX_W                     IPU_MEMORY_OFFSET+0x00407E4,0x000E0000
+#define LPM_MEM_IDMAC_CONF__P_ENDIAN                            IPU_MEMORY_OFFSET+0x00407E4,0x00010000
+#define LPM_MEM_IDMAC_CONF__RDI                                 IPU_MEMORY_OFFSET+0x00407E4,0x00000020
+#define LPM_MEM_IDMAC_CONF__WIDPT                               IPU_MEMORY_OFFSET+0x00407E4,0x00000018
+#define LPM_MEM_IDMAC_CONF__MAX_REQ_READ                        IPU_MEMORY_OFFSET+0x00407E4,0x00000007
+
+#define LPM_MEM_IDMAC_CH_EN_1__ADDR                             IPU_MEMORY_OFFSET+0x00407E8
+#define LPM_MEM_IDMAC_CH_EN_1__EMPTY                            IPU_MEMORY_OFFSET+0x00407E8,0x00000000
+#define LPM_MEM_IDMAC_CH_EN_1__FULL                             IPU_MEMORY_OFFSET+0x00407E8,0xffffffff
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_31                   IPU_MEMORY_OFFSET+0x00407E8,0x80000000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_29                   IPU_MEMORY_OFFSET+0x00407E8,0x20000000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_28                   IPU_MEMORY_OFFSET+0x00407E8,0x10000000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_27                   IPU_MEMORY_OFFSET+0x00407E8,0x08000000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_26                   IPU_MEMORY_OFFSET+0x00407E8,0x04000000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_25                   IPU_MEMORY_OFFSET+0x00407E8,0x02000000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_24                   IPU_MEMORY_OFFSET+0x00407E8,0x01000000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_23                   IPU_MEMORY_OFFSET+0x00407E8,0x00800000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_22                   IPU_MEMORY_OFFSET+0x00407E8,0x00400000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_21                   IPU_MEMORY_OFFSET+0x00407E8,0x00200000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_20                   IPU_MEMORY_OFFSET+0x00407E8,0x00100000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_19                   IPU_MEMORY_OFFSET+0x00407E8,0x00080000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_18                   IPU_MEMORY_OFFSET+0x00407E8,0x00040000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_17                   IPU_MEMORY_OFFSET+0x00407E8,0x00020000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_15                   IPU_MEMORY_OFFSET+0x00407E8,0x00008000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_14                   IPU_MEMORY_OFFSET+0x00407E8,0x00004000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_13                   IPU_MEMORY_OFFSET+0x00407E8,0x00002000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_12                   IPU_MEMORY_OFFSET+0x00407E8,0x00001000
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_11                   IPU_MEMORY_OFFSET+0x00407E8,0x00000800
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_10                   IPU_MEMORY_OFFSET+0x00407E8,0x00000400
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_9                    IPU_MEMORY_OFFSET+0x00407E8,0x00000200
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_8                    IPU_MEMORY_OFFSET+0x00407E8,0x00000100
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_5                    IPU_MEMORY_OFFSET+0x00407E8,0x00000020
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_3                    IPU_MEMORY_OFFSET+0x00407E8,0x00000008
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_2                    IPU_MEMORY_OFFSET+0x00407E8,0x00000004
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_1                    IPU_MEMORY_OFFSET+0x00407E8,0x00000002
+#define LPM_MEM_IDMAC_CH_EN_1__IDMAC_CH_EN_0                    IPU_MEMORY_OFFSET+0x00407E8,0x00000001
+
+#define LPM_MEM_IDMAC_CH_EN_2__ADDR                             IPU_MEMORY_OFFSET+0x00407EC
+#define LPM_MEM_IDMAC_CH_EN_2__EMPTY                            IPU_MEMORY_OFFSET+0x00407EC,0x00000000
+#define LPM_MEM_IDMAC_CH_EN_2__FULL                             IPU_MEMORY_OFFSET+0x00407EC,0xffffffff
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_52                   IPU_MEMORY_OFFSET+0x00407EC,0x00100000
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_51                   IPU_MEMORY_OFFSET+0x00407EC,0x00080000
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_50                   IPU_MEMORY_OFFSET+0x00407EC,0x00040000
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_49                   IPU_MEMORY_OFFSET+0x00407EC,0x00020000
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_48                   IPU_MEMORY_OFFSET+0x00407EC,0x00010000
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_47                   IPU_MEMORY_OFFSET+0x00407EC,0x00008000
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_46                   IPU_MEMORY_OFFSET+0x00407EC,0x00004000
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_45                   IPU_MEMORY_OFFSET+0x00407EC,0x00002000
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_44                   IPU_MEMORY_OFFSET+0x00407EC,0x00001000
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_43                   IPU_MEMORY_OFFSET+0x00407EC,0x00000800
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_42                   IPU_MEMORY_OFFSET+0x00407EC,0x00000400
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_41                   IPU_MEMORY_OFFSET+0x00407EC,0x00000200
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_40                   IPU_MEMORY_OFFSET+0x00407EC,0x00000100
+#define LPM_MEM_IDMAC_CH_EN_2__IDMAC_CH_EN_33                   IPU_MEMORY_OFFSET+0x00407EC,0x00000002
+
+#define LPM_MEM_IDMAC_SEP_ALPHA__ADDR                           IPU_MEMORY_OFFSET+0x00407F0
+#define LPM_MEM_IDMAC_SEP_ALPHA__EMPTY                          IPU_MEMORY_OFFSET+0x00407F0,0x00000000
+#define LPM_MEM_IDMAC_SEP_ALPHA__FULL                           IPU_MEMORY_OFFSET+0x00407F0,0xffffffff
+#define LPM_MEM_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_29                IPU_MEMORY_OFFSET+0x00407F0,0x20000000
+#define LPM_MEM_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_27                IPU_MEMORY_OFFSET+0x00407F0,0x08000000
+#define LPM_MEM_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_25                IPU_MEMORY_OFFSET+0x00407F0,0x02000000
+#define LPM_MEM_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_24                IPU_MEMORY_OFFSET+0x00407F0,0x01000000
+#define LPM_MEM_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_23                IPU_MEMORY_OFFSET+0x00407F0,0x00800000
+#define LPM_MEM_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_15                IPU_MEMORY_OFFSET+0x00407F0,0x00008000
+#define LPM_MEM_IDMAC_SEP_ALPHA__IDMAC_SEP_AL_14                IPU_MEMORY_OFFSET+0x00407F0,0x00004000
+
+#define LPM_MEM_IDMAC_ALT_SEP_ALPHA__ADDR                       IPU_MEMORY_OFFSET+0x00407F4
+#define LPM_MEM_IDMAC_ALT_SEP_ALPHA__EMPTY                      IPU_MEMORY_OFFSET+0x00407F4,0x00000000
+#define LPM_MEM_IDMAC_ALT_SEP_ALPHA__FULL                       IPU_MEMORY_OFFSET+0x00407F4,0xffffffff
+#define LPM_MEM_IDMAC_ALT_SEP_ALPHA__IDMAC_ALT_SEP_AL_29        IPU_MEMORY_OFFSET+0x00407F4,0x20000000
+#define LPM_MEM_IDMAC_ALT_SEP_ALPHA__IDMAC_ALT_SEP_AL_24        IPU_MEMORY_OFFSET+0x00407F4,0x01000000
+#define LPM_MEM_IDMAC_ALT_SEP_ALPHA__IDMAC_ALT_SEP_AL_23        IPU_MEMORY_OFFSET+0x00407F4,0x00800000
+
+#define LPM_MEM_IDMAC_CH_PRI_1__ADDR                            IPU_MEMORY_OFFSET+0x00407F8
+#define LPM_MEM_IDMAC_CH_PRI_1__EMPTY                           IPU_MEMORY_OFFSET+0x00407F8,0x00000000
+#define LPM_MEM_IDMAC_CH_PRI_1__FULL                            IPU_MEMORY_OFFSET+0x00407F8,0xffffffff
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_29                 IPU_MEMORY_OFFSET+0x00407F8,0x20000000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_28                 IPU_MEMORY_OFFSET+0x00407F8,0x10000000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_27                 IPU_MEMORY_OFFSET+0x00407F8,0x08000000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_26                 IPU_MEMORY_OFFSET+0x00407F8,0x04000000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_25                 IPU_MEMORY_OFFSET+0x00407F8,0x02000000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_24                 IPU_MEMORY_OFFSET+0x00407F8,0x01000000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_23                 IPU_MEMORY_OFFSET+0x00407F8,0x00800000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_22                 IPU_MEMORY_OFFSET+0x00407F8,0x00400000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_21                 IPU_MEMORY_OFFSET+0x00407F8,0x00200000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_20                 IPU_MEMORY_OFFSET+0x00407F8,0x00100000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_15                 IPU_MEMORY_OFFSET+0x00407F8,0x00008000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_14                 IPU_MEMORY_OFFSET+0x00407F8,0x00004000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_13                 IPU_MEMORY_OFFSET+0x00407F8,0x00002000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_12                 IPU_MEMORY_OFFSET+0x00407F8,0x00001000
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_11                 IPU_MEMORY_OFFSET+0x00407F8,0x00000800
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_10                 IPU_MEMORY_OFFSET+0x00407F8,0x00000400
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_9                  IPU_MEMORY_OFFSET+0x00407F8,0x00000200
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_8                  IPU_MEMORY_OFFSET+0x00407F8,0x00000100
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_5                  IPU_MEMORY_OFFSET+0x00407F8,0x00000020
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_3                  IPU_MEMORY_OFFSET+0x00407F8,0x00000008
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_2                  IPU_MEMORY_OFFSET+0x00407F8,0x00000004
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_1                  IPU_MEMORY_OFFSET+0x00407F8,0x00000002
+#define LPM_MEM_IDMAC_CH_PRI_1__IDMAC_CH_PRI_0                  IPU_MEMORY_OFFSET+0x00407F8,0x00000001
+
+#define LPM_MEM_IDMAC_CH_PRI_2__ADDR                            IPU_MEMORY_OFFSET+0x00407FC
+#define LPM_MEM_IDMAC_CH_PRI_2__EMPTY                           IPU_MEMORY_OFFSET+0x00407FC,0x00000000
+#define LPM_MEM_IDMAC_CH_PRI_2__FULL                            IPU_MEMORY_OFFSET+0x00407FC,0xffffffff
+#define LPM_MEM_IDMAC_CH_PRI_2__IDMAC_CH_PRI_50                 IPU_MEMORY_OFFSET+0x00407FC,0x00040000
+#define LPM_MEM_IDMAC_CH_PRI_2__IDMAC_CH_PRI_49                 IPU_MEMORY_OFFSET+0x00407FC,0x00020000
+#define LPM_MEM_IDMAC_CH_PRI_2__IDMAC_CH_PRI_48                 IPU_MEMORY_OFFSET+0x00407FC,0x00010000
+#define LPM_MEM_IDMAC_CH_PRI_2__IDMAC_CH_PRI_47                 IPU_MEMORY_OFFSET+0x00407FC,0x00008000
+#define LPM_MEM_IDMAC_CH_PRI_2__IDMAC_CH_PRI_46                 IPU_MEMORY_OFFSET+0x00407FC,0x00004000
+#define LPM_MEM_IDMAC_CH_PRI_2__IDMAC_CH_PRI_45                 IPU_MEMORY_OFFSET+0x00407FC,0x00002000
+#define LPM_MEM_IDMAC_CH_PRI_2__IDMAC_CH_PRI_44                 IPU_MEMORY_OFFSET+0x00407FC,0x00001000
+#define LPM_MEM_IDMAC_CH_PRI_2__IDMAC_CH_PRI_43                 IPU_MEMORY_OFFSET+0x00407FC,0x00000800
+#define LPM_MEM_IDMAC_CH_PRI_2__IDMAC_CH_PRI_42                 IPU_MEMORY_OFFSET+0x00407FC,0x00000400
+#define LPM_MEM_IDMAC_CH_PRI_2__IDMAC_CH_PRI_41                 IPU_MEMORY_OFFSET+0x00407FC,0x00000200
+#define LPM_MEM_IDMAC_CH_PRI_2__IDMAC_CH_PRI_40                 IPU_MEMORY_OFFSET+0x00407FC,0x00000100
+
+#define LPM_MEM_IDMAC_WM_EN_1__ADDR                             IPU_MEMORY_OFFSET+0x0040800
+#define LPM_MEM_IDMAC_WM_EN_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040800,0x00000000
+#define LPM_MEM_IDMAC_WM_EN_1__FULL                             IPU_MEMORY_OFFSET+0x0040800,0xffffffff
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_29                   IPU_MEMORY_OFFSET+0x0040800,0x20000000
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_28                   IPU_MEMORY_OFFSET+0x0040800,0x10000000
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_27                   IPU_MEMORY_OFFSET+0x0040800,0x08000000
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_26                   IPU_MEMORY_OFFSET+0x0040800,0x04000000
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_25                   IPU_MEMORY_OFFSET+0x0040800,0x02000000
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_24                   IPU_MEMORY_OFFSET+0x0040800,0x01000000
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_23                   IPU_MEMORY_OFFSET+0x0040800,0x00800000
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_14                   IPU_MEMORY_OFFSET+0x0040800,0x00004000
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_13                   IPU_MEMORY_OFFSET+0x0040800,0x00002000
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_12                   IPU_MEMORY_OFFSET+0x0040800,0x00001000
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_10                   IPU_MEMORY_OFFSET+0x0040800,0x00000400
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_8                    IPU_MEMORY_OFFSET+0x0040800,0x00000100
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_3                    IPU_MEMORY_OFFSET+0x0040800,0x00000008
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_2                    IPU_MEMORY_OFFSET+0x0040800,0x00000004
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_1                    IPU_MEMORY_OFFSET+0x0040800,0x00000002
+#define LPM_MEM_IDMAC_WM_EN_1__IDMAC_WM_EN_0                    IPU_MEMORY_OFFSET+0x0040800,0x00000001
+
+#define LPM_MEM_IDMAC_WM_EN_2__ADDR                             IPU_MEMORY_OFFSET+0x0040804
+#define LPM_MEM_IDMAC_WM_EN_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040804,0x00000000
+#define LPM_MEM_IDMAC_WM_EN_2__FULL                             IPU_MEMORY_OFFSET+0x0040804,0xffffffff
+#define LPM_MEM_IDMAC_WM_EN_2__IDMAC_WM_EN_44                   IPU_MEMORY_OFFSET+0x0040804,0x00001000
+#define LPM_MEM_IDMAC_WM_EN_2__IDMAC_WM_EN_43                   IPU_MEMORY_OFFSET+0x0040804,0x00000800
+#define LPM_MEM_IDMAC_WM_EN_2__IDMAC_WM_EN_42                   IPU_MEMORY_OFFSET+0x0040804,0x00000400
+#define LPM_MEM_IDMAC_WM_EN_2__IDMAC_WM_EN_41                   IPU_MEMORY_OFFSET+0x0040804,0x00000200
+#define LPM_MEM_IDMAC_WM_EN_2__IDMAC_WM_EN_40                   IPU_MEMORY_OFFSET+0x0040804,0x00000100
+
+#define LPM_MEM_IDMAC_LOCK_EN_1__ADDR                           IPU_MEMORY_OFFSET+0x0040808
+#define LPM_MEM_IDMAC_LOCK_EN_1__EMPTY                          IPU_MEMORY_OFFSET+0x0040808,0x00000000
+#define LPM_MEM_IDMAC_LOCK_EN_1__FULL                           IPU_MEMORY_OFFSET+0x0040808,0xffffffff
+#define LPM_MEM_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_28               IPU_MEMORY_OFFSET+0x0040808,0x00300000
+#define LPM_MEM_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_27               IPU_MEMORY_OFFSET+0x0040808,0x000C0000
+#define LPM_MEM_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_23               IPU_MEMORY_OFFSET+0x0040808,0x00030000
+#define LPM_MEM_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_22               IPU_MEMORY_OFFSET+0x0040808,0x0000C000
+#define LPM_MEM_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_21               IPU_MEMORY_OFFSET+0x0040808,0x00003000
+#define LPM_MEM_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_20               IPU_MEMORY_OFFSET+0x0040808,0x00000C00
+#define LPM_MEM_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_15               IPU_MEMORY_OFFSET+0x0040808,0x00000300
+#define LPM_MEM_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_14               IPU_MEMORY_OFFSET+0x0040808,0x000000C0
+#define LPM_MEM_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_12               IPU_MEMORY_OFFSET+0x0040808,0x00000030
+#define LPM_MEM_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_11               IPU_MEMORY_OFFSET+0x0040808,0x0000000C
+#define LPM_MEM_IDMAC_LOCK_EN_1__IDMAC_LOCK_EN_5                IPU_MEMORY_OFFSET+0x0040808,0x00000003
+
+#define LPM_MEM_IDMAC_LOCK_EN_2__ADDR                           IPU_MEMORY_OFFSET+0x004080C
+#define LPM_MEM_IDMAC_LOCK_EN_2__EMPTY                          IPU_MEMORY_OFFSET+0x004080C,0x00000000
+#define LPM_MEM_IDMAC_LOCK_EN_2__FULL                           IPU_MEMORY_OFFSET+0x004080C,0xffffffff
+#define LPM_MEM_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_50               IPU_MEMORY_OFFSET+0x004080C,0x00000C00
+#define LPM_MEM_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_49               IPU_MEMORY_OFFSET+0x004080C,0x00000300
+#define LPM_MEM_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_48               IPU_MEMORY_OFFSET+0x004080C,0x000000C0
+#define LPM_MEM_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_47               IPU_MEMORY_OFFSET+0x004080C,0x00000030
+#define LPM_MEM_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_46               IPU_MEMORY_OFFSET+0x004080C,0x0000000C
+#define LPM_MEM_IDMAC_LOCK_EN_2__IDMAC_LOCK_EN_45               IPU_MEMORY_OFFSET+0x004080C,0x00000003
+
+#define LPM_MEM_IDMAC_SUB_ADDR_0__ADDR                          IPU_MEMORY_OFFSET+0x0040810
+#define LPM_MEM_IDMAC_SUB_ADDR_0__EMPTY                         IPU_MEMORY_OFFSET+0x0040810,0x00000000
+#define LPM_MEM_IDMAC_SUB_ADDR_0__FULL                          IPU_MEMORY_OFFSET+0x0040810,0xffffffff
+
+#define LPM_MEM_IDMAC_SUB_ADDR_1__ADDR                          IPU_MEMORY_OFFSET+0x0040814
+#define LPM_MEM_IDMAC_SUB_ADDR_1__EMPTY                         IPU_MEMORY_OFFSET+0x0040814,0x00000000
+#define LPM_MEM_IDMAC_SUB_ADDR_1__FULL                          IPU_MEMORY_OFFSET+0x0040814,0xffffffff
+#define LPM_MEM_IDMAC_SUB_ADDR_1__IDMAC_SUB_ADDR_33             IPU_MEMORY_OFFSET+0x0040814,0x7F000000
+#define LPM_MEM_IDMAC_SUB_ADDR_1__IDMAC_SUB_ADDR_29             IPU_MEMORY_OFFSET+0x0040814,0x007F0000
+#define LPM_MEM_IDMAC_SUB_ADDR_1__IDMAC_SUB_ADDR_24             IPU_MEMORY_OFFSET+0x0040814,0x00007F00
+#define LPM_MEM_IDMAC_SUB_ADDR_1__IDMAC_SUB_ADDR_23             IPU_MEMORY_OFFSET+0x0040814,0x0000007F
+
+#define LPM_MEM_IDMAC_SUB_ADDR_2__ADDR                          IPU_MEMORY_OFFSET+0x0040818
+#define LPM_MEM_IDMAC_SUB_ADDR_2__EMPTY                         IPU_MEMORY_OFFSET+0x0040818,0x00000000
+#define LPM_MEM_IDMAC_SUB_ADDR_2__FULL                          IPU_MEMORY_OFFSET+0x0040818,0xffffffff
+#define LPM_MEM_IDMAC_SUB_ADDR_2__IDMAC_SUB_ADDR_52             IPU_MEMORY_OFFSET+0x0040818,0x007F0000
+#define LPM_MEM_IDMAC_SUB_ADDR_2__IDMAC_SUB_ADDR_51             IPU_MEMORY_OFFSET+0x0040818,0x00007F00
+#define LPM_MEM_IDMAC_SUB_ADDR_2__IDMAC_SUB_ADDR_41             IPU_MEMORY_OFFSET+0x0040818,0x0000007F
+
+#define LPM_MEM_IDMAC_SUB_ADDR_3__ADDR                          IPU_MEMORY_OFFSET+0x004081C
+#define LPM_MEM_IDMAC_SUB_ADDR_3__EMPTY                         IPU_MEMORY_OFFSET+0x004081C,0x00000000
+#define LPM_MEM_IDMAC_SUB_ADDR_3__FULL                          IPU_MEMORY_OFFSET+0x004081C,0xffffffff
+#define LPM_MEM_IDMAC_SUB_ADDR_3__IDMAC_SUB_ADDR_27             IPU_MEMORY_OFFSET+0x004081C,0x7F000000
+#define LPM_MEM_IDMAC_SUB_ADDR_3__IDMAC_SUB_ADDR_13             IPU_MEMORY_OFFSET+0x004081C,0x007F0000
+#define LPM_MEM_IDMAC_SUB_ADDR_3__IDMAC_SUB_ADDR_10             IPU_MEMORY_OFFSET+0x004081C,0x00007F00
+#define LPM_MEM_IDMAC_SUB_ADDR_3__IDMAC_SUB_ADDR_9              IPU_MEMORY_OFFSET+0x004081C,0x0000007F
+
+#define LPM_MEM_IDMAC_SUB_ADDR_4__ADDR                          IPU_MEMORY_OFFSET+0x0040820
+#define LPM_MEM_IDMAC_SUB_ADDR_4__EMPTY                         IPU_MEMORY_OFFSET+0x0040820,0x00000000
+#define LPM_MEM_IDMAC_SUB_ADDR_4__FULL                          IPU_MEMORY_OFFSET+0x0040820,0xffffffff
+#define LPM_MEM_IDMAC_SUB_ADDR_4__IDMAC_SUB_ADDR_21             IPU_MEMORY_OFFSET+0x0040820,0x007F0000
+#define LPM_MEM_IDMAC_SUB_ADDR_4__IDMAC_SUB_ADDR_8              IPU_MEMORY_OFFSET+0x0040820,0x00007F00
+#define LPM_MEM_IDMAC_SUB_ADDR_4__IDMAC_SUB_ADDR_28             IPU_MEMORY_OFFSET+0x0040820,0x0000007F
+
+#define LPM_MEM_IDMAC_BNDM_EN_1__ADDR                           IPU_MEMORY_OFFSET+0x0040824
+#define LPM_MEM_IDMAC_BNDM_EN_1__EMPTY                          IPU_MEMORY_OFFSET+0x0040824,0x00000000
+#define LPM_MEM_IDMAC_BNDM_EN_1__FULL                           IPU_MEMORY_OFFSET+0x0040824,0xffffffff
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_26               IPU_MEMORY_OFFSET+0x0040824,0x04000000
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_25               IPU_MEMORY_OFFSET+0x0040824,0x02000000
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_22               IPU_MEMORY_OFFSET+0x0040824,0x00400000
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_21               IPU_MEMORY_OFFSET+0x0040824,0x00200000
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_20               IPU_MEMORY_OFFSET+0x0040824,0x00100000
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_12               IPU_MEMORY_OFFSET+0x0040824,0x00001000
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_11               IPU_MEMORY_OFFSET+0x0040824,0x00000800
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_10               IPU_MEMORY_OFFSET+0x0040824,0x00000400
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_9                IPU_MEMORY_OFFSET+0x0040824,0x00000200
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_8                IPU_MEMORY_OFFSET+0x0040824,0x00000100
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_5                IPU_MEMORY_OFFSET+0x0040824,0x00000020
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_3                IPU_MEMORY_OFFSET+0x0040824,0x00000008
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_2                IPU_MEMORY_OFFSET+0x0040824,0x00000004
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_1                IPU_MEMORY_OFFSET+0x0040824,0x00000002
+#define LPM_MEM_IDMAC_BNDM_EN_1__IDMAC_BNDM_EN_0                IPU_MEMORY_OFFSET+0x0040824,0x00000001
+
+#define LPM_MEM_IDMAC_BNDM_EN_2__ADDR                           IPU_MEMORY_OFFSET+0x0040828
+#define LPM_MEM_IDMAC_BNDM_EN_2__EMPTY                          IPU_MEMORY_OFFSET+0x0040828,0x00000000
+#define LPM_MEM_IDMAC_BNDM_EN_2__FULL                           IPU_MEMORY_OFFSET+0x0040828,0xffffffff
+#define LPM_MEM_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_50               IPU_MEMORY_OFFSET+0x0040828,0x00040000
+#define LPM_MEM_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_49               IPU_MEMORY_OFFSET+0x0040828,0x00020000
+#define LPM_MEM_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_48               IPU_MEMORY_OFFSET+0x0040828,0x00010000
+#define LPM_MEM_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_47               IPU_MEMORY_OFFSET+0x0040828,0x00008000
+#define LPM_MEM_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_46               IPU_MEMORY_OFFSET+0x0040828,0x00004000
+#define LPM_MEM_IDMAC_BNDM_EN_2__IDMAC_BNDM_EN_45               IPU_MEMORY_OFFSET+0x0040828,0x00002000
+
+#define LPM_MEM_IDMAC_SC_CORD__ADDR                             IPU_MEMORY_OFFSET+0x004082C
+#define LPM_MEM_IDMAC_SC_CORD__EMPTY                            IPU_MEMORY_OFFSET+0x004082C,0x00000000
+#define LPM_MEM_IDMAC_SC_CORD__FULL                             IPU_MEMORY_OFFSET+0x004082C,0xffffffff
+#define LPM_MEM_IDMAC_SC_CORD__SX0                              IPU_MEMORY_OFFSET+0x004082C,0x0FFF0000
+#define LPM_MEM_IDMAC_SC_CORD__SY0                              IPU_MEMORY_OFFSET+0x004082C,0x000007FF
+
+#define LPM_MEM_IDMAC_SC_CORD1__ADDR                            IPU_MEMORY_OFFSET+0x0040830
+#define LPM_MEM_IDMAC_SC_CORD1__EMPTY                           IPU_MEMORY_OFFSET+0x0040830,0x00000000
+#define LPM_MEM_IDMAC_SC_CORD1__FULL                            IPU_MEMORY_OFFSET+0x0040830,0xffffffff
+#define LPM_MEM_IDMAC_SC_CORD1__SX1                             IPU_MEMORY_OFFSET+0x0040830,0x0FFF0000
+#define LPM_MEM_IDMAC_SC_CORD1__SY1                             IPU_MEMORY_OFFSET+0x0040830,0x000007FF
+
+#define LPM_MEM_DP_COM_CONF_SYNC__ADDR                          IPU_MEMORY_OFFSET+0x0040000
+#define LPM_MEM_DP_COM_CONF_SYNC__EMPTY                         IPU_MEMORY_OFFSET+0x0040000,0x00000000
+#define LPM_MEM_DP_COM_CONF_SYNC__FULL                          IPU_MEMORY_OFFSET+0x0040000,0xffffffff
+#define LPM_MEM_DP_COM_CONF_SYNC__DP_GAMMA_YUV_EN_SYNC          IPU_MEMORY_OFFSET+0x0040000,0x00002000
+#define LPM_MEM_DP_COM_CONF_SYNC__DP_GAMMA_EN_SYNC              IPU_MEMORY_OFFSET+0x0040000,0x00001000
+#define LPM_MEM_DP_COM_CONF_SYNC__DP_CSC_YUV_SAT_MODE_SYNC      IPU_MEMORY_OFFSET+0x0040000,0x00000800
+#define LPM_MEM_DP_COM_CONF_SYNC__DP_CSC_GAMUT_SAT_EN_SYNC      IPU_MEMORY_OFFSET+0x0040000,0x00000400
+#define LPM_MEM_DP_COM_CONF_SYNC__DP_CSC_DEF_SYNC               IPU_MEMORY_OFFSET+0x0040000,0x00000300
+#define LPM_MEM_DP_COM_CONF_SYNC__DP_COC_SYNC                   IPU_MEMORY_OFFSET+0x0040000,0x00000070
+#define LPM_MEM_DP_COM_CONF_SYNC__DP_GWCKE_SYNC                 IPU_MEMORY_OFFSET+0x0040000,0x00000008
+#define LPM_MEM_DP_COM_CONF_SYNC__DP_GWAM_SYNC                  IPU_MEMORY_OFFSET+0x0040000,0x00000004
+#define LPM_MEM_DP_COM_CONF_SYNC__DP_GWSEL_SYNC                 IPU_MEMORY_OFFSET+0x0040000,0x00000002
+#define LPM_MEM_DP_COM_CONF_SYNC__DP_FG_EN_SYNC                 IPU_MEMORY_OFFSET+0x0040000,0x00000001
+
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_SYNC__ADDR                   IPU_MEMORY_OFFSET+0x0040004
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_SYNC__EMPTY                  IPU_MEMORY_OFFSET+0x0040004,0x00000000
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_SYNC__FULL                   IPU_MEMORY_OFFSET+0x0040004,0xffffffff
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_SYNC__DP_GWAV_SYNC           IPU_MEMORY_OFFSET+0x0040004,0xFF000000
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_SYNC__DP_GWCKR_SYNC          IPU_MEMORY_OFFSET+0x0040004,0x00FF0000
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_SYNC__DP_GWCKG_SYNC          IPU_MEMORY_OFFSET+0x0040004,0x0000FF00
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_SYNC__DP_GWCKB_SYNC          IPU_MEMORY_OFFSET+0x0040004,0x000000FF
+
+#define LPM_MEM_DP_FG_POS_SYNC__ADDR                            IPU_MEMORY_OFFSET+0x0040008
+#define LPM_MEM_DP_FG_POS_SYNC__EMPTY                           IPU_MEMORY_OFFSET+0x0040008,0x00000000
+#define LPM_MEM_DP_FG_POS_SYNC__FULL                            IPU_MEMORY_OFFSET+0x0040008,0xffffffff
+#define LPM_MEM_DP_FG_POS_SYNC__DP_FGXP_SYNC                    IPU_MEMORY_OFFSET+0x0040008,0x07FF0000
+#define LPM_MEM_DP_FG_POS_SYNC__DP_FGYP_SYNC                    IPU_MEMORY_OFFSET+0x0040008,0x000007FF
+
+#define LPM_MEM_DP_CUR_POS_SYNC__ADDR                           IPU_MEMORY_OFFSET+0x004000C
+#define LPM_MEM_DP_CUR_POS_SYNC__EMPTY                          IPU_MEMORY_OFFSET+0x004000C,0x00000000
+#define LPM_MEM_DP_CUR_POS_SYNC__FULL                           IPU_MEMORY_OFFSET+0x004000C,0xffffffff
+#define LPM_MEM_DP_CUR_POS_SYNC__DP_CXW_SYNC                    IPU_MEMORY_OFFSET+0x004000C,0xF8000000
+#define LPM_MEM_DP_CUR_POS_SYNC__DP_CXP_SYNC                    IPU_MEMORY_OFFSET+0x004000C,0x07FF0000
+#define LPM_MEM_DP_CUR_POS_SYNC__DP_CYH_SYNC                    IPU_MEMORY_OFFSET+0x004000C,0x0000F800
+#define LPM_MEM_DP_CUR_POS_SYNC__DP_CYP_SYNC                    IPU_MEMORY_OFFSET+0x004000C,0x000007FF
+
+#define LPM_MEM_DP_CUR_MAP_SYNC__ADDR                           IPU_MEMORY_OFFSET+0x0040010
+#define LPM_MEM_DP_CUR_MAP_SYNC__EMPTY                          IPU_MEMORY_OFFSET+0x0040010,0x00000000
+#define LPM_MEM_DP_CUR_MAP_SYNC__FULL                           IPU_MEMORY_OFFSET+0x0040010,0xffffffff
+#define LPM_MEM_DP_CUR_MAP_SYNC__DP_CUR_COL_R_SYNC              IPU_MEMORY_OFFSET+0x0040010,0x00FF0000
+#define LPM_MEM_DP_CUR_MAP_SYNC__DP_CUR_COL_G_SYNC              IPU_MEMORY_OFFSET+0x0040010,0x0000FF00
+#define LPM_MEM_DP_CUR_MAP_SYNC__DP_CUR_COL_B_SYNC              IPU_MEMORY_OFFSET+0x0040010,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_C_SYNC_0__ADDR                         IPU_MEMORY_OFFSET+0x0040014
+#define LPM_MEM_DP_GAMMA_C_SYNC_0__EMPTY                        IPU_MEMORY_OFFSET+0x0040014,0x00000000
+#define LPM_MEM_DP_GAMMA_C_SYNC_0__FULL                         IPU_MEMORY_OFFSET+0x0040014,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_SYNC_0__DP_GAMMA_C_SYNC_1            IPU_MEMORY_OFFSET+0x0040014,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_SYNC_0__DP_GAMMA_C_SYNC_0            IPU_MEMORY_OFFSET+0x0040014,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_SYNC_1__ADDR                         IPU_MEMORY_OFFSET+0x0040018
+#define LPM_MEM_DP_GAMMA_C_SYNC_1__EMPTY                        IPU_MEMORY_OFFSET+0x0040018,0x00000000
+#define LPM_MEM_DP_GAMMA_C_SYNC_1__FULL                         IPU_MEMORY_OFFSET+0x0040018,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_SYNC_1__DP_GAMMA_C_SYNC_3            IPU_MEMORY_OFFSET+0x0040018,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_SYNC_1__DP_GAMMA_C_SYNC_2            IPU_MEMORY_OFFSET+0x0040018,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_SYNC_2__ADDR                         IPU_MEMORY_OFFSET+0x004001C
+#define LPM_MEM_DP_GAMMA_C_SYNC_2__EMPTY                        IPU_MEMORY_OFFSET+0x004001C,0x00000000
+#define LPM_MEM_DP_GAMMA_C_SYNC_2__FULL                         IPU_MEMORY_OFFSET+0x004001C,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_SYNC_2__DP_GAMMA_C_SYNC_5            IPU_MEMORY_OFFSET+0x004001C,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_SYNC_2__DP_GAMMA_C_SYNC_4            IPU_MEMORY_OFFSET+0x004001C,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_SYNC_3__ADDR                         IPU_MEMORY_OFFSET+0x0040020
+#define LPM_MEM_DP_GAMMA_C_SYNC_3__EMPTY                        IPU_MEMORY_OFFSET+0x0040020,0x00000000
+#define LPM_MEM_DP_GAMMA_C_SYNC_3__FULL                         IPU_MEMORY_OFFSET+0x0040020,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_SYNC_3__DP_GAMMA_C_SYNC_7            IPU_MEMORY_OFFSET+0x0040020,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_SYNC_3__DP_GAMMA_C_SYNC_6            IPU_MEMORY_OFFSET+0x0040020,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_SYNC_4__ADDR                         IPU_MEMORY_OFFSET+0x0040024
+#define LPM_MEM_DP_GAMMA_C_SYNC_4__EMPTY                        IPU_MEMORY_OFFSET+0x0040024,0x00000000
+#define LPM_MEM_DP_GAMMA_C_SYNC_4__FULL                         IPU_MEMORY_OFFSET+0x0040024,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_SYNC_4__DP_GAMMA_C_SYNC_9            IPU_MEMORY_OFFSET+0x0040024,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_SYNC_4__DP_GAMMA_C_SYNC_8            IPU_MEMORY_OFFSET+0x0040024,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_SYNC_5__ADDR                         IPU_MEMORY_OFFSET+0x0040028
+#define LPM_MEM_DP_GAMMA_C_SYNC_5__EMPTY                        IPU_MEMORY_OFFSET+0x0040028,0x00000000
+#define LPM_MEM_DP_GAMMA_C_SYNC_5__FULL                         IPU_MEMORY_OFFSET+0x0040028,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_SYNC_5__DP_GAMMA_C_SYNC_11           IPU_MEMORY_OFFSET+0x0040028,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_SYNC_5__DP_GAMMA_C_SYNC_10           IPU_MEMORY_OFFSET+0x0040028,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_SYNC_6__ADDR                         IPU_MEMORY_OFFSET+0x004002C
+#define LPM_MEM_DP_GAMMA_C_SYNC_6__EMPTY                        IPU_MEMORY_OFFSET+0x004002C,0x00000000
+#define LPM_MEM_DP_GAMMA_C_SYNC_6__FULL                         IPU_MEMORY_OFFSET+0x004002C,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_SYNC_6__DP_GAMMA_C_SYNC_13           IPU_MEMORY_OFFSET+0x004002C,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_SYNC_6__DP_GAMMA_C_SYNC_12           IPU_MEMORY_OFFSET+0x004002C,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_SYNC_7__ADDR                         IPU_MEMORY_OFFSET+0x0040030
+#define LPM_MEM_DP_GAMMA_C_SYNC_7__EMPTY                        IPU_MEMORY_OFFSET+0x0040030,0x00000000
+#define LPM_MEM_DP_GAMMA_C_SYNC_7__FULL                         IPU_MEMORY_OFFSET+0x0040030,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_SYNC_7__DP_GAMMA_C_SYNC_15           IPU_MEMORY_OFFSET+0x0040030,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_SYNC_7__DP_GAMMA_C_SYNC_14           IPU_MEMORY_OFFSET+0x0040030,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_S_SYNC_0__ADDR                         IPU_MEMORY_OFFSET+0x0040034
+#define LPM_MEM_DP_GAMMA_S_SYNC_0__EMPTY                        IPU_MEMORY_OFFSET+0x0040034,0x00000000
+#define LPM_MEM_DP_GAMMA_S_SYNC_0__FULL                         IPU_MEMORY_OFFSET+0x0040034,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_3            IPU_MEMORY_OFFSET+0x0040034,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_2            IPU_MEMORY_OFFSET+0x0040034,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_1            IPU_MEMORY_OFFSET+0x0040034,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_SYNC_0__DP_GAMMA_S_SYNC_0            IPU_MEMORY_OFFSET+0x0040034,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_S_SYNC_1__ADDR                         IPU_MEMORY_OFFSET+0x0040038
+#define LPM_MEM_DP_GAMMA_S_SYNC_1__EMPTY                        IPU_MEMORY_OFFSET+0x0040038,0x00000000
+#define LPM_MEM_DP_GAMMA_S_SYNC_1__FULL                         IPU_MEMORY_OFFSET+0x0040038,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_7            IPU_MEMORY_OFFSET+0x0040038,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_6            IPU_MEMORY_OFFSET+0x0040038,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_5            IPU_MEMORY_OFFSET+0x0040038,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_SYNC_1__DP_GAMMA_S_SYNC_4            IPU_MEMORY_OFFSET+0x0040038,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_S_SYNC_2__ADDR                         IPU_MEMORY_OFFSET+0x004003C
+#define LPM_MEM_DP_GAMMA_S_SYNC_2__EMPTY                        IPU_MEMORY_OFFSET+0x004003C,0x00000000
+#define LPM_MEM_DP_GAMMA_S_SYNC_2__FULL                         IPU_MEMORY_OFFSET+0x004003C,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_11           IPU_MEMORY_OFFSET+0x004003C,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_10           IPU_MEMORY_OFFSET+0x004003C,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_9            IPU_MEMORY_OFFSET+0x004003C,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_SYNC_2__DP_GAMMA_S_SYNC_8            IPU_MEMORY_OFFSET+0x004003C,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_S_SYNC_3__ADDR                         IPU_MEMORY_OFFSET+0x0040040
+#define LPM_MEM_DP_GAMMA_S_SYNC_3__EMPTY                        IPU_MEMORY_OFFSET+0x0040040,0x00000000
+#define LPM_MEM_DP_GAMMA_S_SYNC_3__FULL                         IPU_MEMORY_OFFSET+0x0040040,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_15           IPU_MEMORY_OFFSET+0x0040040,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_14           IPU_MEMORY_OFFSET+0x0040040,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_13           IPU_MEMORY_OFFSET+0x0040040,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_SYNC_3__DP_GAMMA_S_SYNC_12           IPU_MEMORY_OFFSET+0x0040040,0x000000FF
+
+#define LPM_MEM_DP_CSCA_SYNC_0__ADDR                            IPU_MEMORY_OFFSET+0x0040044
+#define LPM_MEM_DP_CSCA_SYNC_0__EMPTY                           IPU_MEMORY_OFFSET+0x0040044,0x00000000
+#define LPM_MEM_DP_CSCA_SYNC_0__FULL                            IPU_MEMORY_OFFSET+0x0040044,0xffffffff
+#define LPM_MEM_DP_CSCA_SYNC_0__DP_CSC_A_SYNC_1                 IPU_MEMORY_OFFSET+0x0040044,0x03FF0000
+#define LPM_MEM_DP_CSCA_SYNC_0__DP_CSC_A_SYNC_0                 IPU_MEMORY_OFFSET+0x0040044,0x000003FF
+
+#define LPM_MEM_DP_CSCA_SYNC_1__ADDR                            IPU_MEMORY_OFFSET+0x0040048
+#define LPM_MEM_DP_CSCA_SYNC_1__EMPTY                           IPU_MEMORY_OFFSET+0x0040048,0x00000000
+#define LPM_MEM_DP_CSCA_SYNC_1__FULL                            IPU_MEMORY_OFFSET+0x0040048,0xffffffff
+#define LPM_MEM_DP_CSCA_SYNC_1__DP_CSC_A_SYNC_3                 IPU_MEMORY_OFFSET+0x0040048,0x03FF0000
+#define LPM_MEM_DP_CSCA_SYNC_1__DP_CSC_A_SYNC_2                 IPU_MEMORY_OFFSET+0x0040048,0x000003FF
+
+#define LPM_MEM_DP_CSCA_SYNC_2__ADDR                            IPU_MEMORY_OFFSET+0x004004C
+#define LPM_MEM_DP_CSCA_SYNC_2__EMPTY                           IPU_MEMORY_OFFSET+0x004004C,0x00000000
+#define LPM_MEM_DP_CSCA_SYNC_2__FULL                            IPU_MEMORY_OFFSET+0x004004C,0xffffffff
+#define LPM_MEM_DP_CSCA_SYNC_2__DP_CSC_A_SYNC_5                 IPU_MEMORY_OFFSET+0x004004C,0x03FF0000
+#define LPM_MEM_DP_CSCA_SYNC_2__DP_CSC_A_SYNC_4                 IPU_MEMORY_OFFSET+0x004004C,0x000003FF
+
+#define LPM_MEM_DP_CSCA_SYNC_3__ADDR                            IPU_MEMORY_OFFSET+0x0040050
+#define LPM_MEM_DP_CSCA_SYNC_3__EMPTY                           IPU_MEMORY_OFFSET+0x0040050,0x00000000
+#define LPM_MEM_DP_CSCA_SYNC_3__FULL                            IPU_MEMORY_OFFSET+0x0040050,0xffffffff
+#define LPM_MEM_DP_CSCA_SYNC_3__DP_CSC_A_SYNC_7                 IPU_MEMORY_OFFSET+0x0040050,0x03FF0000
+#define LPM_MEM_DP_CSCA_SYNC_3__DP_CSC_A_SYNC_6                 IPU_MEMORY_OFFSET+0x0040050,0x000003FF
+
+#define LPM_MEM_DP_CSC_SYNC_0__ADDR                             IPU_MEMORY_OFFSET+0x0040054
+#define LPM_MEM_DP_CSC_SYNC_0__EMPTY                            IPU_MEMORY_OFFSET+0x0040054,0x00000000
+#define LPM_MEM_DP_CSC_SYNC_0__FULL                             IPU_MEMORY_OFFSET+0x0040054,0xffffffff
+#define LPM_MEM_DP_CSC_SYNC_0__DP_CSC_S0_SYNC                   IPU_MEMORY_OFFSET+0x0040054,0xC0000000
+#define LPM_MEM_DP_CSC_SYNC_0__DP_CSC_B0_SYNC                   IPU_MEMORY_OFFSET+0x0040054,0x3FFF0000
+#define LPM_MEM_DP_CSC_SYNC_0__DP_CSC_A8_SYNC                   IPU_MEMORY_OFFSET+0x0040054,0x000003FF
+
+#define LPM_MEM_DP_CSC_SYNC_1__ADDR                             IPU_MEMORY_OFFSET+0x0040058
+#define LPM_MEM_DP_CSC_SYNC_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040058,0x00000000
+#define LPM_MEM_DP_CSC_SYNC_1__FULL                             IPU_MEMORY_OFFSET+0x0040058,0xffffffff
+#define LPM_MEM_DP_CSC_SYNC_1__DP_CSC_S2_SYNC                   IPU_MEMORY_OFFSET+0x0040058,0xC0000000
+#define LPM_MEM_DP_CSC_SYNC_1__DP_CSC_B2_SYNC                   IPU_MEMORY_OFFSET+0x0040058,0x3FFF0000
+#define LPM_MEM_DP_CSC_SYNC_1__DP_CSC_S1_SYNC                   IPU_MEMORY_OFFSET+0x0040058,0x0000C000
+#define LPM_MEM_DP_CSC_SYNC_1__DP_CSC_B1_SYNC                   IPU_MEMORY_OFFSET+0x0040058,0x00003FFF
+
+#define LPM_MEM_DP_CUR_POS_ALT__ADDR                            IPU_MEMORY_OFFSET+0x004005C
+#define LPM_MEM_DP_CUR_POS_ALT__EMPTY                           IPU_MEMORY_OFFSET+0x004005C,0x00000000
+#define LPM_MEM_DP_CUR_POS_ALT__FULL                            IPU_MEMORY_OFFSET+0x004005C,0xffffffff
+#define LPM_MEM_DP_CUR_POS_ALT__DP_CXW_SYNC_ALT                 IPU_MEMORY_OFFSET+0x004005C,0xF8000000
+#define LPM_MEM_DP_CUR_POS_ALT__DP_CXP_SYNC_ALT                 IPU_MEMORY_OFFSET+0x004005C,0x07FF0000
+#define LPM_MEM_DP_CUR_POS_ALT__DP_CYH_SYNC_ALT                 IPU_MEMORY_OFFSET+0x004005C,0x0000F800
+#define LPM_MEM_DP_CUR_POS_ALT__DP_CYP_SYNC_ALT                 IPU_MEMORY_OFFSET+0x004005C,0x000007FF
+
+#define LPM_MEM_DP_COM_CONF_ASYNC0__ADDR                        IPU_MEMORY_OFFSET+0x0040060
+#define LPM_MEM_DP_COM_CONF_ASYNC0__EMPTY                       IPU_MEMORY_OFFSET+0x0040060,0x00000000
+#define LPM_MEM_DP_COM_CONF_ASYNC0__FULL                        IPU_MEMORY_OFFSET+0x0040060,0xffffffff
+#define LPM_MEM_DP_COM_CONF_ASYNC0__DP_GAMMA_YUV_EN_ASYNC0      IPU_MEMORY_OFFSET+0x0040060,0x00002000
+#define LPM_MEM_DP_COM_CONF_ASYNC0__DP_GAMMA_EN_ASYNC0          IPU_MEMORY_OFFSET+0x0040060,0x00001000
+#define LPM_MEM_DP_COM_CONF_ASYNC0__DP_CSC_YUV_SAT_MODE_ASYNC0  IPU_MEMORY_OFFSET+0x0040060,0x00000800
+#define LPM_MEM_DP_COM_CONF_ASYNC0__DP_CSC_GAMUT_SAT_EN_ASYNC0  IPU_MEMORY_OFFSET+0x0040060,0x00000400
+#define LPM_MEM_DP_COM_CONF_ASYNC0__DP_CSC_DEF_ASYNC0           IPU_MEMORY_OFFSET+0x0040060,0x00000300
+#define LPM_MEM_DP_COM_CONF_ASYNC0__DP_COC_ASYNC0               IPU_MEMORY_OFFSET+0x0040060,0x00000070
+#define LPM_MEM_DP_COM_CONF_ASYNC0__DP_GWCKE_ASYNC0             IPU_MEMORY_OFFSET+0x0040060,0x00000008
+#define LPM_MEM_DP_COM_CONF_ASYNC0__DP_GWAM_ASYNC0              IPU_MEMORY_OFFSET+0x0040060,0x00000004
+#define LPM_MEM_DP_COM_CONF_ASYNC0__DP_GWSEL_ASYNC0             IPU_MEMORY_OFFSET+0x0040060,0x00000002
+
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC0__ADDR                 IPU_MEMORY_OFFSET+0x0040064
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC0__EMPTY                IPU_MEMORY_OFFSET+0x0040064,0x00000000
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC0__FULL                 IPU_MEMORY_OFFSET+0x0040064,0xffffffff
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWAV_ASYNC0       IPU_MEMORY_OFFSET+0x0040064,0xFF000000
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWCKR_ASYNC0      IPU_MEMORY_OFFSET+0x0040064,0x00FF0000
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWCKG_ASYNC0      IPU_MEMORY_OFFSET+0x0040064,0x0000FF00
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC0__DP_GWCKB_ASYNC0      IPU_MEMORY_OFFSET+0x0040064,0x000000FF
+
+#define LPM_MEM_DP_FG_POS_ASYNC0__ADDR                          IPU_MEMORY_OFFSET+0x0040068
+#define LPM_MEM_DP_FG_POS_ASYNC0__EMPTY                         IPU_MEMORY_OFFSET+0x0040068,0x00000000
+#define LPM_MEM_DP_FG_POS_ASYNC0__FULL                          IPU_MEMORY_OFFSET+0x0040068,0xffffffff
+#define LPM_MEM_DP_FG_POS_ASYNC0__DP_FGXP_ASYNC0                IPU_MEMORY_OFFSET+0x0040068,0x07FF0000
+#define LPM_MEM_DP_FG_POS_ASYNC0__DP_FGYP_ASYNC0                IPU_MEMORY_OFFSET+0x0040068,0x000007FF
+
+#define LPM_MEM_DP_CUR_POS_ASYNC0__ADDR                         IPU_MEMORY_OFFSET+0x004006C
+#define LPM_MEM_DP_CUR_POS_ASYNC0__EMPTY                        IPU_MEMORY_OFFSET+0x004006C,0x00000000
+#define LPM_MEM_DP_CUR_POS_ASYNC0__FULL                         IPU_MEMORY_OFFSET+0x004006C,0xffffffff
+#define LPM_MEM_DP_CUR_POS_ASYNC0__DP_CXW_ASYNC0                IPU_MEMORY_OFFSET+0x004006C,0xF8000000
+#define LPM_MEM_DP_CUR_POS_ASYNC0__DP_CXP_ASYNC0                IPU_MEMORY_OFFSET+0x004006C,0x07FF0000
+#define LPM_MEM_DP_CUR_POS_ASYNC0__DP_CYH_ASYNC0                IPU_MEMORY_OFFSET+0x004006C,0x0000F800
+#define LPM_MEM_DP_CUR_POS_ASYNC0__DP_CYP_ASYNC0                IPU_MEMORY_OFFSET+0x004006C,0x000007FF
+
+#define LPM_MEM_DP_CUR_MAP_ASYNC0__ADDR                         IPU_MEMORY_OFFSET+0x0040070
+#define LPM_MEM_DP_CUR_MAP_ASYNC0__EMPTY                        IPU_MEMORY_OFFSET+0x0040070,0x00000000
+#define LPM_MEM_DP_CUR_MAP_ASYNC0__FULL                         IPU_MEMORY_OFFSET+0x0040070,0xffffffff
+#define LPM_MEM_DP_CUR_MAP_ASYNC0__CUR_COL_R_ASYNC0             IPU_MEMORY_OFFSET+0x0040070,0x00FF0000
+#define LPM_MEM_DP_CUR_MAP_ASYNC0__CUR_COL_G_ASYNC0             IPU_MEMORY_OFFSET+0x0040070,0x0000FF00
+#define LPM_MEM_DP_CUR_MAP_ASYNC0__CUR_COL_B_ASYNC0             IPU_MEMORY_OFFSET+0x0040070,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_0__ADDR                       IPU_MEMORY_OFFSET+0x0040074
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_0__EMPTY                      IPU_MEMORY_OFFSET+0x0040074,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_0__FULL                       IPU_MEMORY_OFFSET+0x0040074,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_0__DP_GAMMA_C_ASYNC0_1        IPU_MEMORY_OFFSET+0x0040074,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_0__DP_GAMMA_C_ASYNC0_0        IPU_MEMORY_OFFSET+0x0040074,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_1__ADDR                       IPU_MEMORY_OFFSET+0x0040078
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_1__EMPTY                      IPU_MEMORY_OFFSET+0x0040078,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_1__FULL                       IPU_MEMORY_OFFSET+0x0040078,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_1__DP_GAMMA_C_ASYNC0_3        IPU_MEMORY_OFFSET+0x0040078,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_1__DP_GAMMA_C_ASYNC0_2        IPU_MEMORY_OFFSET+0x0040078,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_2__ADDR                       IPU_MEMORY_OFFSET+0x004007C
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_2__EMPTY                      IPU_MEMORY_OFFSET+0x004007C,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_2__FULL                       IPU_MEMORY_OFFSET+0x004007C,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_2__DP_GAMMA_C_ASYNC0_5        IPU_MEMORY_OFFSET+0x004007C,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_2__DP_GAMMA_C_ASYNC0_4        IPU_MEMORY_OFFSET+0x004007C,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_3__ADDR                       IPU_MEMORY_OFFSET+0x0040080
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_3__EMPTY                      IPU_MEMORY_OFFSET+0x0040080,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_3__FULL                       IPU_MEMORY_OFFSET+0x0040080,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_3__DP_GAMMA_C_ASYNC0_7        IPU_MEMORY_OFFSET+0x0040080,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_3__DP_GAMMA_C_ASYNC0_6        IPU_MEMORY_OFFSET+0x0040080,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_4__ADDR                       IPU_MEMORY_OFFSET+0x0040084
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_4__EMPTY                      IPU_MEMORY_OFFSET+0x0040084,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_4__FULL                       IPU_MEMORY_OFFSET+0x0040084,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_4__DP_GAMMA_C_ASYNC0_9        IPU_MEMORY_OFFSET+0x0040084,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_4__DP_GAMMA_C_ASYNC0_8        IPU_MEMORY_OFFSET+0x0040084,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_5__ADDR                       IPU_MEMORY_OFFSET+0x0040088
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_5__EMPTY                      IPU_MEMORY_OFFSET+0x0040088,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_5__FULL                       IPU_MEMORY_OFFSET+0x0040088,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_5__DP_GAMMA_C_ASYNC0_11       IPU_MEMORY_OFFSET+0x0040088,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_5__DP_GAMMA_C_ASYNC0_10       IPU_MEMORY_OFFSET+0x0040088,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_6__ADDR                       IPU_MEMORY_OFFSET+0x004008C
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_6__EMPTY                      IPU_MEMORY_OFFSET+0x004008C,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_6__FULL                       IPU_MEMORY_OFFSET+0x004008C,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_6__DP_GAMMA_C_ASYNC0_13       IPU_MEMORY_OFFSET+0x004008C,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_6__DP_GAMMA_C_ASYNC0_12       IPU_MEMORY_OFFSET+0x004008C,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_7__ADDR                       IPU_MEMORY_OFFSET+0x0040090
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_7__EMPTY                      IPU_MEMORY_OFFSET+0x0040090,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_7__FULL                       IPU_MEMORY_OFFSET+0x0040090,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_7__DP_GAMMA_C_ASYNC0_15       IPU_MEMORY_OFFSET+0x0040090,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC0_7__DP_GAMMA_C_ASYNC0_14       IPU_MEMORY_OFFSET+0x0040090,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_0__ADDR                       IPU_MEMORY_OFFSET+0x0040094
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_0__EMPTY                      IPU_MEMORY_OFFSET+0x0040094,0x00000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_0__FULL                       IPU_MEMORY_OFFSET+0x0040094,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_3        IPU_MEMORY_OFFSET+0x0040094,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_2        IPU_MEMORY_OFFSET+0x0040094,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_1        IPU_MEMORY_OFFSET+0x0040094,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_0__DP_GAMMA_S_ASYNC0_0        IPU_MEMORY_OFFSET+0x0040094,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_1__ADDR                       IPU_MEMORY_OFFSET+0x0040098
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_1__EMPTY                      IPU_MEMORY_OFFSET+0x0040098,0x00000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_1__FULL                       IPU_MEMORY_OFFSET+0x0040098,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_7        IPU_MEMORY_OFFSET+0x0040098,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_6        IPU_MEMORY_OFFSET+0x0040098,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_5        IPU_MEMORY_OFFSET+0x0040098,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_1__DP_GAMMA_S_ASYNC0_4        IPU_MEMORY_OFFSET+0x0040098,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_2__ADDR                       IPU_MEMORY_OFFSET+0x004009C
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_2__EMPTY                      IPU_MEMORY_OFFSET+0x004009C,0x00000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_2__FULL                       IPU_MEMORY_OFFSET+0x004009C,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_11       IPU_MEMORY_OFFSET+0x004009C,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_10       IPU_MEMORY_OFFSET+0x004009C,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_9        IPU_MEMORY_OFFSET+0x004009C,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_2__DP_GAMMA_S_ASYNC0_8        IPU_MEMORY_OFFSET+0x004009C,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_3__ADDR                       IPU_MEMORY_OFFSET+0x00400A0
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_3__EMPTY                      IPU_MEMORY_OFFSET+0x00400A0,0x00000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_3__FULL                       IPU_MEMORY_OFFSET+0x00400A0,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_15       IPU_MEMORY_OFFSET+0x00400A0,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_14       IPU_MEMORY_OFFSET+0x00400A0,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_13       IPU_MEMORY_OFFSET+0x00400A0,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_ASYNC0_3__DP_GAMMA_S_ASYNC0_12       IPU_MEMORY_OFFSET+0x00400A0,0x000000FF
+
+#define LPM_MEM_DP_CSCA_ASYNC0_0__ADDR                          IPU_MEMORY_OFFSET+0x00400A4
+#define LPM_MEM_DP_CSCA_ASYNC0_0__EMPTY                         IPU_MEMORY_OFFSET+0x00400A4,0x00000000
+#define LPM_MEM_DP_CSCA_ASYNC0_0__FULL                          IPU_MEMORY_OFFSET+0x00400A4,0xffffffff
+#define LPM_MEM_DP_CSCA_ASYNC0_0__DP_CSC_A_ASYNC0_1             IPU_MEMORY_OFFSET+0x00400A4,0x03FF0000
+#define LPM_MEM_DP_CSCA_ASYNC0_0__DP_CSC_A_ASYNC0_0             IPU_MEMORY_OFFSET+0x00400A4,0x000003FF
+
+#define LPM_MEM_DP_CSCA_ASYNC0_1__ADDR                          IPU_MEMORY_OFFSET+0x00400A8
+#define LPM_MEM_DP_CSCA_ASYNC0_1__EMPTY                         IPU_MEMORY_OFFSET+0x00400A8,0x00000000
+#define LPM_MEM_DP_CSCA_ASYNC0_1__FULL                          IPU_MEMORY_OFFSET+0x00400A8,0xffffffff
+#define LPM_MEM_DP_CSCA_ASYNC0_1__DP_CSC_A_ASYNC0_3             IPU_MEMORY_OFFSET+0x00400A8,0x03FF0000
+#define LPM_MEM_DP_CSCA_ASYNC0_1__DP_CSC_A_ASYNC0_2             IPU_MEMORY_OFFSET+0x00400A8,0x000003FF
+
+#define LPM_MEM_DP_CSCA_ASYNC0_2__ADDR                          IPU_MEMORY_OFFSET+0x00400AC
+#define LPM_MEM_DP_CSCA_ASYNC0_2__EMPTY                         IPU_MEMORY_OFFSET+0x00400AC,0x00000000
+#define LPM_MEM_DP_CSCA_ASYNC0_2__FULL                          IPU_MEMORY_OFFSET+0x00400AC,0xffffffff
+#define LPM_MEM_DP_CSCA_ASYNC0_2__DP_CSC_A_ASYNC0_5             IPU_MEMORY_OFFSET+0x00400AC,0x03FF0000
+#define LPM_MEM_DP_CSCA_ASYNC0_2__DP_CSC_A_ASYNC0_4             IPU_MEMORY_OFFSET+0x00400AC,0x000003FF
+
+#define LPM_MEM_DP_CSCA_ASYNC0_3__ADDR                          IPU_MEMORY_OFFSET+0x00400B0
+#define LPM_MEM_DP_CSCA_ASYNC0_3__EMPTY                         IPU_MEMORY_OFFSET+0x00400B0,0x00000000
+#define LPM_MEM_DP_CSCA_ASYNC0_3__FULL                          IPU_MEMORY_OFFSET+0x00400B0,0xffffffff
+#define LPM_MEM_DP_CSCA_ASYNC0_3__DP_CSC_A_ASYNC0_7             IPU_MEMORY_OFFSET+0x00400B0,0x03FF0000
+#define LPM_MEM_DP_CSCA_ASYNC0_3__DP_CSC_A_ASYNC0_6             IPU_MEMORY_OFFSET+0x00400B0,0x000003FF
+
+#define LPM_MEM_DP_CSC_ASYNC0_0__ADDR                           IPU_MEMORY_OFFSET+0x00400B4
+#define LPM_MEM_DP_CSC_ASYNC0_0__EMPTY                          IPU_MEMORY_OFFSET+0x00400B4,0x00000000
+#define LPM_MEM_DP_CSC_ASYNC0_0__FULL                           IPU_MEMORY_OFFSET+0x00400B4,0xffffffff
+#define LPM_MEM_DP_CSC_ASYNC0_0__DP_CSC_S0_ASYNC0               IPU_MEMORY_OFFSET+0x00400B4,0xC0000000
+#define LPM_MEM_DP_CSC_ASYNC0_0__DP_CSC_B0_ASYNC0               IPU_MEMORY_OFFSET+0x00400B4,0x3FFF0000
+#define LPM_MEM_DP_CSC_ASYNC0_0__DP_CSC_A8_ASYNC0               IPU_MEMORY_OFFSET+0x00400B4,0x000003FF
+
+#define LPM_MEM_DP_CSC_ASYNC0_1__ADDR                           IPU_MEMORY_OFFSET+0x00400B8
+#define LPM_MEM_DP_CSC_ASYNC0_1__EMPTY                          IPU_MEMORY_OFFSET+0x00400B8,0x00000000
+#define LPM_MEM_DP_CSC_ASYNC0_1__FULL                           IPU_MEMORY_OFFSET+0x00400B8,0xffffffff
+#define LPM_MEM_DP_CSC_ASYNC0_1__DP_CSC_S2_ASYNC0               IPU_MEMORY_OFFSET+0x00400B8,0xC0000000
+#define LPM_MEM_DP_CSC_ASYNC0_1__DP_CSC_B2_ASYNC0               IPU_MEMORY_OFFSET+0x00400B8,0x3FFF0000
+#define LPM_MEM_DP_CSC_ASYNC0_1__DP_CSC_S1_ASYNC0               IPU_MEMORY_OFFSET+0x00400B8,0x0000C000
+#define LPM_MEM_DP_CSC_ASYNC0_1__DP_CSC_B1_ASYNC0               IPU_MEMORY_OFFSET+0x00400B8,0x00003FFF
+
+#define LPM_MEM_DP_COM_CONF_ASYNC1__ADDR                        IPU_MEMORY_OFFSET+0x00400BC
+#define LPM_MEM_DP_COM_CONF_ASYNC1__EMPTY                       IPU_MEMORY_OFFSET+0x00400BC,0x00000000
+#define LPM_MEM_DP_COM_CONF_ASYNC1__FULL                        IPU_MEMORY_OFFSET+0x00400BC,0xffffffff
+#define LPM_MEM_DP_COM_CONF_ASYNC1__DP_GAMMA_YUV_EN_ASYNC1      IPU_MEMORY_OFFSET+0x00400BC,0x00002000
+#define LPM_MEM_DP_COM_CONF_ASYNC1__DP_GAMMA_EN_ASYNC1          IPU_MEMORY_OFFSET+0x00400BC,0x00001000
+#define LPM_MEM_DP_COM_CONF_ASYNC1__DP_CSC_YUV_SAT_MODE_ASYNC1  IPU_MEMORY_OFFSET+0x00400BC,0x00000800
+#define LPM_MEM_DP_COM_CONF_ASYNC1__DP_CSC_GAMUT_SAT_EN_ASYNC1  IPU_MEMORY_OFFSET+0x00400BC,0x00000400
+#define LPM_MEM_DP_COM_CONF_ASYNC1__DP_CSC_DEF_ASYNC1           IPU_MEMORY_OFFSET+0x00400BC,0x00000300
+#define LPM_MEM_DP_COM_CONF_ASYNC1__DP_COC_ASYNC1               IPU_MEMORY_OFFSET+0x00400BC,0x00000070
+#define LPM_MEM_DP_COM_CONF_ASYNC1__DP_GWCKE_ASYNC1             IPU_MEMORY_OFFSET+0x00400BC,0x00000008
+#define LPM_MEM_DP_COM_CONF_ASYNC1__DP_GWAM_ASYNC1              IPU_MEMORY_OFFSET+0x00400BC,0x00000004
+#define LPM_MEM_DP_COM_CONF_ASYNC1__DP_GWSEL_ASYNC1             IPU_MEMORY_OFFSET+0x00400BC,0x00000002
+
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC1__ADDR                 IPU_MEMORY_OFFSET+0x00400C0
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC1__EMPTY                IPU_MEMORY_OFFSET+0x00400C0,0x00000000
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC1__FULL                 IPU_MEMORY_OFFSET+0x00400C0,0xffffffff
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWAV_ASYNC1       IPU_MEMORY_OFFSET+0x00400C0,0xFF000000
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWCKR_ASYNC1      IPU_MEMORY_OFFSET+0x00400C0,0x00FF0000
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWCKG_ASYNC1      IPU_MEMORY_OFFSET+0x00400C0,0x0000FF00
+#define LPM_MEM_DP_GRAPH_WIND_CTRL_ASYNC1__DP_GWCKB_ASYNC1      IPU_MEMORY_OFFSET+0x00400C0,0x000000FF
+
+#define LPM_MEM_DP_FG_POS_ASYNC1__ADDR                          IPU_MEMORY_OFFSET+0x00400C4
+#define LPM_MEM_DP_FG_POS_ASYNC1__EMPTY                         IPU_MEMORY_OFFSET+0x00400C4,0x00000000
+#define LPM_MEM_DP_FG_POS_ASYNC1__FULL                          IPU_MEMORY_OFFSET+0x00400C4,0xffffffff
+#define LPM_MEM_DP_FG_POS_ASYNC1__DP_FGXP_ASYNC1                IPU_MEMORY_OFFSET+0x00400C4,0x07FF0000
+#define LPM_MEM_DP_FG_POS_ASYNC1__DP_FGYP_ASYNC1                IPU_MEMORY_OFFSET+0x00400C4,0x000007FF
+
+#define LPM_MEM_DP_CUR_POS_ASYNC1__ADDR                         IPU_MEMORY_OFFSET+0x00400C8
+#define LPM_MEM_DP_CUR_POS_ASYNC1__EMPTY                        IPU_MEMORY_OFFSET+0x00400C8,0x00000000
+#define LPM_MEM_DP_CUR_POS_ASYNC1__FULL                         IPU_MEMORY_OFFSET+0x00400C8,0xffffffff
+#define LPM_MEM_DP_CUR_POS_ASYNC1__DP_CXW_ASYNC1                IPU_MEMORY_OFFSET+0x00400C8,0xF8000000
+#define LPM_MEM_DP_CUR_POS_ASYNC1__DP_CXP_ASYNC1                IPU_MEMORY_OFFSET+0x00400C8,0x07FF0000
+#define LPM_MEM_DP_CUR_POS_ASYNC1__DP_CYH_ASYNC1                IPU_MEMORY_OFFSET+0x00400C8,0x0000F800
+#define LPM_MEM_DP_CUR_POS_ASYNC1__DP_CYP_ASYNC1                IPU_MEMORY_OFFSET+0x00400C8,0x000007FF
+
+#define LPM_MEM_DP_CUR_MAP_ASYNC1__ADDR                         IPU_MEMORY_OFFSET+0x00400CC
+#define LPM_MEM_DP_CUR_MAP_ASYNC1__EMPTY                        IPU_MEMORY_OFFSET+0x00400CC,0x00000000
+#define LPM_MEM_DP_CUR_MAP_ASYNC1__FULL                         IPU_MEMORY_OFFSET+0x00400CC,0xffffffff
+#define LPM_MEM_DP_CUR_MAP_ASYNC1__CUR_COL_R_ASYNC1             IPU_MEMORY_OFFSET+0x00400CC,0x00FF0000
+#define LPM_MEM_DP_CUR_MAP_ASYNC1__CUR_COL_G_ASYNC1             IPU_MEMORY_OFFSET+0x00400CC,0x0000FF00
+#define LPM_MEM_DP_CUR_MAP_ASYNC1__CUR_COL_B_ASYNC1             IPU_MEMORY_OFFSET+0x00400CC,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_0__ADDR                       IPU_MEMORY_OFFSET+0x00400D0
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_0__EMPTY                      IPU_MEMORY_OFFSET+0x00400D0,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_0__FULL                       IPU_MEMORY_OFFSET+0x00400D0,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_0__DP_GAMMA_C_ASYNC1_1        IPU_MEMORY_OFFSET+0x00400D0,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_0__DP_GAMMA_C_ASYNC1_0        IPU_MEMORY_OFFSET+0x00400D0,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_1__ADDR                       IPU_MEMORY_OFFSET+0x00400D4
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_1__EMPTY                      IPU_MEMORY_OFFSET+0x00400D4,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_1__FULL                       IPU_MEMORY_OFFSET+0x00400D4,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_1__DP_GAMMA_C_ASYNC1_3        IPU_MEMORY_OFFSET+0x00400D4,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_1__DP_GAMMA_C_ASYNC1_2        IPU_MEMORY_OFFSET+0x00400D4,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_2__ADDR                       IPU_MEMORY_OFFSET+0x00400D8
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_2__EMPTY                      IPU_MEMORY_OFFSET+0x00400D8,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_2__FULL                       IPU_MEMORY_OFFSET+0x00400D8,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_2__DP_GAMMA_C_ASYNC1_5        IPU_MEMORY_OFFSET+0x00400D8,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_2__DP_GAMMA_C_ASYNC1_4        IPU_MEMORY_OFFSET+0x00400D8,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_3__ADDR                       IPU_MEMORY_OFFSET+0x00400DC
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_3__EMPTY                      IPU_MEMORY_OFFSET+0x00400DC,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_3__FULL                       IPU_MEMORY_OFFSET+0x00400DC,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_3__DP_GAMMA_C_ASYNC1_7        IPU_MEMORY_OFFSET+0x00400DC,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_3__DP_GAMMA_C_ASYNC1_6        IPU_MEMORY_OFFSET+0x00400DC,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_4__ADDR                       IPU_MEMORY_OFFSET+0x00400E0
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_4__EMPTY                      IPU_MEMORY_OFFSET+0x00400E0,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_4__FULL                       IPU_MEMORY_OFFSET+0x00400E0,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_4__DP_GAMMA_C_ASYNC1_9        IPU_MEMORY_OFFSET+0x00400E0,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_4__DP_GAMMA_C_ASYNC1_8        IPU_MEMORY_OFFSET+0x00400E0,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_5__ADDR                       IPU_MEMORY_OFFSET+0x00400E4
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_5__EMPTY                      IPU_MEMORY_OFFSET+0x00400E4,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_5__FULL                       IPU_MEMORY_OFFSET+0x00400E4,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_5__DP_GAMMA_C_ASYNC1_11       IPU_MEMORY_OFFSET+0x00400E4,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_5__DP_GAMMA_C_ASYNC1_10       IPU_MEMORY_OFFSET+0x00400E4,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_6__ADDR                       IPU_MEMORY_OFFSET+0x00400E8
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_6__EMPTY                      IPU_MEMORY_OFFSET+0x00400E8,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_6__FULL                       IPU_MEMORY_OFFSET+0x00400E8,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_6__DP_GAMMA_C_ASYNC1_13       IPU_MEMORY_OFFSET+0x00400E8,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_6__DP_GAMMA_C_ASYNC1_12       IPU_MEMORY_OFFSET+0x00400E8,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_7__ADDR                       IPU_MEMORY_OFFSET+0x00400EC
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_7__EMPTY                      IPU_MEMORY_OFFSET+0x00400EC,0x00000000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_7__FULL                       IPU_MEMORY_OFFSET+0x00400EC,0xffffffff
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_7__DP_GAMMA_C_ASYNC1_15       IPU_MEMORY_OFFSET+0x00400EC,0x01FF0000
+#define LPM_MEM_DP_GAMMA_C_ASYNC1_7__DP_GAMMA_C_ASYNC1_14       IPU_MEMORY_OFFSET+0x00400EC,0x000001FF
+
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_0__ADDR                       IPU_MEMORY_OFFSET+0x00400F0
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_0__EMPTY                      IPU_MEMORY_OFFSET+0x00400F0,0x00000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_0__FULL                       IPU_MEMORY_OFFSET+0x00400F0,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_3        IPU_MEMORY_OFFSET+0x00400F0,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_2        IPU_MEMORY_OFFSET+0x00400F0,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_1        IPU_MEMORY_OFFSET+0x00400F0,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_0__DP_GAMMA_S_ASYNC1_0        IPU_MEMORY_OFFSET+0x00400F0,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_1__ADDR                       IPU_MEMORY_OFFSET+0x00400F4
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_1__EMPTY                      IPU_MEMORY_OFFSET+0x00400F4,0x00000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_1__FULL                       IPU_MEMORY_OFFSET+0x00400F4,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_7        IPU_MEMORY_OFFSET+0x00400F4,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_6        IPU_MEMORY_OFFSET+0x00400F4,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_5        IPU_MEMORY_OFFSET+0x00400F4,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_1__DP_GAMMA_S_ASYNC1_4        IPU_MEMORY_OFFSET+0x00400F4,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_2__ADDR                       IPU_MEMORY_OFFSET+0x00400F8
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_2__EMPTY                      IPU_MEMORY_OFFSET+0x00400F8,0x00000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_2__FULL                       IPU_MEMORY_OFFSET+0x00400F8,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_11       IPU_MEMORY_OFFSET+0x00400F8,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_10       IPU_MEMORY_OFFSET+0x00400F8,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_9        IPU_MEMORY_OFFSET+0x00400F8,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_2__DP_GAMMA_S_ASYNC1_8        IPU_MEMORY_OFFSET+0x00400F8,0x000000FF
+
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_3__ADDR                       IPU_MEMORY_OFFSET+0x00400FC
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_3__EMPTY                      IPU_MEMORY_OFFSET+0x00400FC,0x00000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_3__FULL                       IPU_MEMORY_OFFSET+0x00400FC,0xffffffff
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_15       IPU_MEMORY_OFFSET+0x00400FC,0xFF000000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_14       IPU_MEMORY_OFFSET+0x00400FC,0x00FF0000
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_13       IPU_MEMORY_OFFSET+0x00400FC,0x0000FF00
+#define LPM_MEM_DP_GAMMA_S_ASYNC1_3__DP_GAMMA_S_ASYNC1_12       IPU_MEMORY_OFFSET+0x00400FC,0x000000FF
+
+#define LPM_MEM_DP_CSCA_ASYNC1_0__ADDR                          IPU_MEMORY_OFFSET+0x0040100
+#define LPM_MEM_DP_CSCA_ASYNC1_0__EMPTY                         IPU_MEMORY_OFFSET+0x0040100,0x00000000
+#define LPM_MEM_DP_CSCA_ASYNC1_0__FULL                          IPU_MEMORY_OFFSET+0x0040100,0xffffffff
+#define LPM_MEM_DP_CSCA_ASYNC1_0__DP_CSC_A_ASYNC1_1             IPU_MEMORY_OFFSET+0x0040100,0x03FF0000
+#define LPM_MEM_DP_CSCA_ASYNC1_0__DP_CSC_A_ASYNC1_0             IPU_MEMORY_OFFSET+0x0040100,0x000003FF
+
+#define LPM_MEM_DP_CSCA_ASYNC1_1__ADDR                          IPU_MEMORY_OFFSET+0x0040104
+#define LPM_MEM_DP_CSCA_ASYNC1_1__EMPTY                         IPU_MEMORY_OFFSET+0x0040104,0x00000000
+#define LPM_MEM_DP_CSCA_ASYNC1_1__FULL                          IPU_MEMORY_OFFSET+0x0040104,0xffffffff
+#define LPM_MEM_DP_CSCA_ASYNC1_1__DP_CSC_A_ASYNC1_3             IPU_MEMORY_OFFSET+0x0040104,0x03FF0000
+#define LPM_MEM_DP_CSCA_ASYNC1_1__DP_CSC_A_ASYNC1_2             IPU_MEMORY_OFFSET+0x0040104,0x000003FF
+
+#define LPM_MEM_DP_CSCA_ASYNC1_2__ADDR                          IPU_MEMORY_OFFSET+0x0040108
+#define LPM_MEM_DP_CSCA_ASYNC1_2__EMPTY                         IPU_MEMORY_OFFSET+0x0040108,0x00000000
+#define LPM_MEM_DP_CSCA_ASYNC1_2__FULL                          IPU_MEMORY_OFFSET+0x0040108,0xffffffff
+#define LPM_MEM_DP_CSCA_ASYNC1_2__DP_CSC_A_ASYNC1_5             IPU_MEMORY_OFFSET+0x0040108,0x03FF0000
+#define LPM_MEM_DP_CSCA_ASYNC1_2__DP_CSC_A_ASYNC1_4             IPU_MEMORY_OFFSET+0x0040108,0x000003FF
+
+#define LPM_MEM_DP_CSCA_ASYNC1_3__ADDR                          IPU_MEMORY_OFFSET+0x004010C
+#define LPM_MEM_DP_CSCA_ASYNC1_3__EMPTY                         IPU_MEMORY_OFFSET+0x004010C,0x00000000
+#define LPM_MEM_DP_CSCA_ASYNC1_3__FULL                          IPU_MEMORY_OFFSET+0x004010C,0xffffffff
+#define LPM_MEM_DP_CSCA_ASYNC1_3__DP_CSC_A_ASYNC1_7             IPU_MEMORY_OFFSET+0x004010C,0x03FF0000
+#define LPM_MEM_DP_CSCA_ASYNC1_3__DP_CSC_A_ASYNC1_6             IPU_MEMORY_OFFSET+0x004010C,0x000003FF
+
+#define LPM_MEM_DP_CSC_ASYNC1_0__ADDR                           IPU_MEMORY_OFFSET+0x0040110
+#define LPM_MEM_DP_CSC_ASYNC1_0__EMPTY                          IPU_MEMORY_OFFSET+0x0040110,0x00000000
+#define LPM_MEM_DP_CSC_ASYNC1_0__FULL                           IPU_MEMORY_OFFSET+0x0040110,0xffffffff
+#define LPM_MEM_DP_CSC_ASYNC1_0__DP_CSC_S0_ASYNC1               IPU_MEMORY_OFFSET+0x0040110,0xC0000000
+#define LPM_MEM_DP_CSC_ASYNC1_0__DP_CSC_B0_ASYNC1               IPU_MEMORY_OFFSET+0x0040110,0x3FFF0000
+#define LPM_MEM_DP_CSC_ASYNC1_0__DP_CSC_A8_ASYNC1               IPU_MEMORY_OFFSET+0x0040110,0x000003FF
+
+#define LPM_MEM_DP_CSC_ASYNC1_1__ADDR                           IPU_MEMORY_OFFSET+0x0040114
+#define LPM_MEM_DP_CSC_ASYNC1_1__EMPTY                          IPU_MEMORY_OFFSET+0x0040114,0x00000000
+#define LPM_MEM_DP_CSC_ASYNC1_1__FULL                           IPU_MEMORY_OFFSET+0x0040114,0xffffffff
+#define LPM_MEM_DP_CSC_ASYNC1_1__DP_CSC_S2_ASYNC1               IPU_MEMORY_OFFSET+0x0040114,0xC0000000
+#define LPM_MEM_DP_CSC_ASYNC1_1__DP_CSC_B2_ASYNC1               IPU_MEMORY_OFFSET+0x0040114,0x3FFF0000
+#define LPM_MEM_DP_CSC_ASYNC1_1__DP_CSC_S1_ASYNC1               IPU_MEMORY_OFFSET+0x0040114,0x0000C000
+#define LPM_MEM_DP_CSC_ASYNC1_1__DP_CSC_B1_ASYNC1               IPU_MEMORY_OFFSET+0x0040114,0x00003FFF
+
+#define LPM_MEM_IC_CONF__ADDR                                   IPU_MEMORY_OFFSET+0x00409B4
+#define LPM_MEM_IC_CONF__EMPTY                                  IPU_MEMORY_OFFSET+0x00409B4,0x00000000
+#define LPM_MEM_IC_CONF__FULL                                   IPU_MEMORY_OFFSET+0x00409B4,0xffffffff
+#define LPM_MEM_IC_CONF__CSI_MEM_WR_EN                          IPU_MEMORY_OFFSET+0x00409B4,0x80000000
+#define LPM_MEM_IC_CONF__RWS_EN                                 IPU_MEMORY_OFFSET+0x00409B4,0x40000000
+#define LPM_MEM_IC_CONF__IC_KEY_COLOR_EN                        IPU_MEMORY_OFFSET+0x00409B4,0x20000000
+#define LPM_MEM_IC_CONF__IC_GLB_LOC_A                           IPU_MEMORY_OFFSET+0x00409B4,0x10000000
+#define LPM_MEM_IC_CONF__PP_ROT_EN                              IPU_MEMORY_OFFSET+0x00409B4,0x00100000
+#define LPM_MEM_IC_CONF__PP_CMB                                 IPU_MEMORY_OFFSET+0x00409B4,0x00080000
+#define LPM_MEM_IC_CONF__PP_CSC2                                IPU_MEMORY_OFFSET+0x00409B4,0x00040000
+#define LPM_MEM_IC_CONF__PP_CSC1                                IPU_MEMORY_OFFSET+0x00409B4,0x00020000
+#define LPM_MEM_IC_CONF__PP_EN                                  IPU_MEMORY_OFFSET+0x00409B4,0x00010000
+#define LPM_MEM_IC_CONF__PRPVF_ROT_EN                           IPU_MEMORY_OFFSET+0x00409B4,0x00001000
+#define LPM_MEM_IC_CONF__PRPVF_CMB                              IPU_MEMORY_OFFSET+0x00409B4,0x00000800
+#define LPM_MEM_IC_CONF__PRPVF_CSC2                             IPU_MEMORY_OFFSET+0x00409B4,0x00000400
+#define LPM_MEM_IC_CONF__PRPVF_CSC1                             IPU_MEMORY_OFFSET+0x00409B4,0x00000200
+#define LPM_MEM_IC_CONF__PRPVF_EN                               IPU_MEMORY_OFFSET+0x00409B4,0x00000100
+#define LPM_MEM_IC_CONF__PRPENC_ROT_EN                          IPU_MEMORY_OFFSET+0x00409B4,0x00000004
+#define LPM_MEM_IC_CONF__PRPENC_CSC1                            IPU_MEMORY_OFFSET+0x00409B4,0x00000002
+#define LPM_MEM_IC_CONF__PRPENC_EN                              IPU_MEMORY_OFFSET+0x00409B4,0x00000001
+
+#define LPM_MEM_IC_PRP_ENC_RSC__ADDR                            IPU_MEMORY_OFFSET+0x00409B8
+#define LPM_MEM_IC_PRP_ENC_RSC__EMPTY                           IPU_MEMORY_OFFSET+0x00409B8,0x00000000
+#define LPM_MEM_IC_PRP_ENC_RSC__FULL                            IPU_MEMORY_OFFSET+0x00409B8,0xffffffff
+#define LPM_MEM_IC_PRP_ENC_RSC__PRPENC_DS_R_V                   IPU_MEMORY_OFFSET+0x00409B8,0xC0000000
+#define LPM_MEM_IC_PRP_ENC_RSC__PRPENC_RS_R_V                   IPU_MEMORY_OFFSET+0x00409B8,0x3FFF0000
+#define LPM_MEM_IC_PRP_ENC_RSC__PRPENC_DS_R_H                   IPU_MEMORY_OFFSET+0x00409B8,0x0000C000
+#define LPM_MEM_IC_PRP_ENC_RSC__PRPENC_RS_R_H                   IPU_MEMORY_OFFSET+0x00409B8,0x00003FFF
+
+#define LPM_MEM_IC_PRP_VF_RSC__ADDR                             IPU_MEMORY_OFFSET+0x00409BC
+#define LPM_MEM_IC_PRP_VF_RSC__EMPTY                            IPU_MEMORY_OFFSET+0x00409BC,0x00000000
+#define LPM_MEM_IC_PRP_VF_RSC__FULL                             IPU_MEMORY_OFFSET+0x00409BC,0xffffffff
+#define LPM_MEM_IC_PRP_VF_RSC__PRPVF_DS_R_V                     IPU_MEMORY_OFFSET+0x00409BC,0xC0000000
+#define LPM_MEM_IC_PRP_VF_RSC__PRPVF_RS_R_V                     IPU_MEMORY_OFFSET+0x00409BC,0x3FFF0000
+#define LPM_MEM_IC_PRP_VF_RSC__PRPVF_DS_R_H                     IPU_MEMORY_OFFSET+0x00409BC,0x0000C000
+#define LPM_MEM_IC_PRP_VF_RSC__PRPVF_RS_R_H                     IPU_MEMORY_OFFSET+0x00409BC,0x00003FFF
+
+#define LPM_MEM_IC_PP_RSC__ADDR                                 IPU_MEMORY_OFFSET+0x00409C0
+#define LPM_MEM_IC_PP_RSC__EMPTY                                IPU_MEMORY_OFFSET+0x00409C0,0x00000000
+#define LPM_MEM_IC_PP_RSC__FULL                                 IPU_MEMORY_OFFSET+0x00409C0,0xffffffff
+#define LPM_MEM_IC_PP_RSC__PP_DS_R_V                            IPU_MEMORY_OFFSET+0x00409C0,0xC0000000
+#define LPM_MEM_IC_PP_RSC__PP_RS_R_V                            IPU_MEMORY_OFFSET+0x00409C0,0x3FFF0000
+#define LPM_MEM_IC_PP_RSC__PP_DS_R_H                            IPU_MEMORY_OFFSET+0x00409C0,0x0000C000
+#define LPM_MEM_IC_PP_RSC__PP_RS_R_H                            IPU_MEMORY_OFFSET+0x00409C0,0x00003FFF
+
+#define LPM_MEM_IC_CMBP_1__ADDR                                 IPU_MEMORY_OFFSET+0x00409C4
+#define LPM_MEM_IC_CMBP_1__EMPTY                                IPU_MEMORY_OFFSET+0x00409C4,0x00000000
+#define LPM_MEM_IC_CMBP_1__FULL                                 IPU_MEMORY_OFFSET+0x00409C4,0xffffffff
+#define LPM_MEM_IC_CMBP_1__IC_PP_ALPHA_V                        IPU_MEMORY_OFFSET+0x00409C4,0x0000FF00
+#define LPM_MEM_IC_CMBP_1__IC_PRPVF_ALPHA_V                     IPU_MEMORY_OFFSET+0x00409C4,0x000000FF
+
+#define LPM_MEM_IC_CMBP_2__ADDR                                 IPU_MEMORY_OFFSET+0x00409C8
+#define LPM_MEM_IC_CMBP_2__EMPTY                                IPU_MEMORY_OFFSET+0x00409C8,0x00000000
+#define LPM_MEM_IC_CMBP_2__FULL                                 IPU_MEMORY_OFFSET+0x00409C8,0xffffffff
+#define LPM_MEM_IC_CMBP_2__IC_KEY_COLOR_R                       IPU_MEMORY_OFFSET+0x00409C8,0x00FF0000
+#define LPM_MEM_IC_CMBP_2__IC_KEY_COLOR_G                       IPU_MEMORY_OFFSET+0x00409C8,0x0000FF00
+#define LPM_MEM_IC_CMBP_2__IC_KEY_COLOR_B                       IPU_MEMORY_OFFSET+0x00409C8,0x000000FF
+
+#define LPM_MEM_IC_IDMAC_1__ADDR                                IPU_MEMORY_OFFSET+0x00409CC
+#define LPM_MEM_IC_IDMAC_1__EMPTY                               IPU_MEMORY_OFFSET+0x00409CC,0x00000000
+#define LPM_MEM_IC_IDMAC_1__FULL                                IPU_MEMORY_OFFSET+0x00409CC,0xffffffff
+#define LPM_MEM_IC_IDMAC_1__ALT_CB7_BURST_16                    IPU_MEMORY_OFFSET+0x00409CC,0x02000000
+#define LPM_MEM_IC_IDMAC_1__ALT_CB6_BURST_16                    IPU_MEMORY_OFFSET+0x00409CC,0x01000000
+#define LPM_MEM_IC_IDMAC_1__T3_FLIP_RS                          IPU_MEMORY_OFFSET+0x00409CC,0x00400000
+#define LPM_MEM_IC_IDMAC_1__T2_FLIP_RS                          IPU_MEMORY_OFFSET+0x00409CC,0x00200000
+#define LPM_MEM_IC_IDMAC_1__T1_FLIP_RS                          IPU_MEMORY_OFFSET+0x00409CC,0x00100000
+#define LPM_MEM_IC_IDMAC_1__T3_FLIP_UD                          IPU_MEMORY_OFFSET+0x00409CC,0x00080000
+#define LPM_MEM_IC_IDMAC_1__T3_FLIP_LR                          IPU_MEMORY_OFFSET+0x00409CC,0x00040000
+#define LPM_MEM_IC_IDMAC_1__T3_ROT                              IPU_MEMORY_OFFSET+0x00409CC,0x00020000
+#define LPM_MEM_IC_IDMAC_1__T2_FLIP_UD                          IPU_MEMORY_OFFSET+0x00409CC,0x00010000
+#define LPM_MEM_IC_IDMAC_1__T2_FLIP_LR                          IPU_MEMORY_OFFSET+0x00409CC,0x00008000
+#define LPM_MEM_IC_IDMAC_1__T2_ROT                              IPU_MEMORY_OFFSET+0x00409CC,0x00004000
+#define LPM_MEM_IC_IDMAC_1__T1_FLIP_UD                          IPU_MEMORY_OFFSET+0x00409CC,0x00002000
+#define LPM_MEM_IC_IDMAC_1__T1_FLIP_LR                          IPU_MEMORY_OFFSET+0x00409CC,0x00001000
+#define LPM_MEM_IC_IDMAC_1__T1_ROT                              IPU_MEMORY_OFFSET+0x00409CC,0x00000800
+#define LPM_MEM_IC_IDMAC_1__CB7_BURST_16                        IPU_MEMORY_OFFSET+0x00409CC,0x00000080
+#define LPM_MEM_IC_IDMAC_1__CB6_BURST_16                        IPU_MEMORY_OFFSET+0x00409CC,0x00000040
+#define LPM_MEM_IC_IDMAC_1__CB5_BURST_16                        IPU_MEMORY_OFFSET+0x00409CC,0x00000020
+#define LPM_MEM_IC_IDMAC_1__CB4_BURST_16                        IPU_MEMORY_OFFSET+0x00409CC,0x00000010
+#define LPM_MEM_IC_IDMAC_1__CB3_BURST_16                        IPU_MEMORY_OFFSET+0x00409CC,0x00000008
+#define LPM_MEM_IC_IDMAC_1__CB2_BURST_16                        IPU_MEMORY_OFFSET+0x00409CC,0x00000004
+#define LPM_MEM_IC_IDMAC_1__CB1_BURST_16                        IPU_MEMORY_OFFSET+0x00409CC,0x00000002
+#define LPM_MEM_IC_IDMAC_1__CB0_BURST_16                        IPU_MEMORY_OFFSET+0x00409CC,0x00000001
+
+#define LPM_MEM_IC_IDMAC_2__ADDR                                IPU_MEMORY_OFFSET+0x00409D0
+#define LPM_MEM_IC_IDMAC_2__EMPTY                               IPU_MEMORY_OFFSET+0x00409D0,0x00000000
+#define LPM_MEM_IC_IDMAC_2__FULL                                IPU_MEMORY_OFFSET+0x00409D0,0xffffffff
+#define LPM_MEM_IC_IDMAC_2__T3_FR_HEIGHT                        IPU_MEMORY_OFFSET+0x00409D0,0x3FF00000
+#define LPM_MEM_IC_IDMAC_2__T2_FR_HEIGHT                        IPU_MEMORY_OFFSET+0x00409D0,0x000FFC00
+#define LPM_MEM_IC_IDMAC_2__T1_FR_HEIGHT                        IPU_MEMORY_OFFSET+0x00409D0,0x000003FF
+
+#define LPM_MEM_IC_IDMAC_3__ADDR                                IPU_MEMORY_OFFSET+0x00409D4
+#define LPM_MEM_IC_IDMAC_3__EMPTY                               IPU_MEMORY_OFFSET+0x00409D4,0x00000000
+#define LPM_MEM_IC_IDMAC_3__FULL                                IPU_MEMORY_OFFSET+0x00409D4,0xffffffff
+#define LPM_MEM_IC_IDMAC_3__T3_FR_WIDTH                         IPU_MEMORY_OFFSET+0x00409D4,0x3FF00000
+#define LPM_MEM_IC_IDMAC_3__T2_FR_WIDTH                         IPU_MEMORY_OFFSET+0x00409D4,0x000FFC00
+#define LPM_MEM_IC_IDMAC_3__T1_FR_WIDTH                         IPU_MEMORY_OFFSET+0x00409D4,0x000003FF
+
+#define LPM_MEM_IC_IDMAC_4__ADDR                                IPU_MEMORY_OFFSET+0x00409D8
+#define LPM_MEM_IC_IDMAC_4__EMPTY                               IPU_MEMORY_OFFSET+0x00409D8,0x00000000
+#define LPM_MEM_IC_IDMAC_4__FULL                                IPU_MEMORY_OFFSET+0x00409D8,0xffffffff
+#define LPM_MEM_IC_IDMAC_4__RM_BRDG_MAX_RQ                      IPU_MEMORY_OFFSET+0x00409D8,0x0000F000
+#define LPM_MEM_IC_IDMAC_4__IBM_BRDG_MAX_RQ                     IPU_MEMORY_OFFSET+0x00409D8,0x00000F00
+#define LPM_MEM_IC_IDMAC_4__MPM_DMFC_BRDG_MAX_RQ                IPU_MEMORY_OFFSET+0x00409D8,0x000000F0
+#define LPM_MEM_IC_IDMAC_4__MPM_RW_BRDG_MAX_RQ                  IPU_MEMORY_OFFSET+0x00409D8,0x0000000F
+
+#define LPM_MEM_DI0_GENERAL__ADDR                               IPU_MEMORY_OFFSET+0x0040314
+#define LPM_MEM_DI0_GENERAL__EMPTY                              IPU_MEMORY_OFFSET+0x0040314,0x00000000
+#define LPM_MEM_DI0_GENERAL__FULL                               IPU_MEMORY_OFFSET+0x0040314,0xffffffff
+#define LPM_MEM_DI0_GENERAL__DI0_PIN8_PIN15_SEL                 IPU_MEMORY_OFFSET+0x0040314,0x80000000
+#define LPM_MEM_DI0_GENERAL__DI0_DISP_Y_SEL                     IPU_MEMORY_OFFSET+0x0040314,0x70000000
+#define LPM_MEM_DI0_GENERAL__DI0_CLOCK_STOP_MODE                IPU_MEMORY_OFFSET+0x0040314,0x0F000000
+#define LPM_MEM_DI0_GENERAL__DI0_DISP_CLOCK_INIT                IPU_MEMORY_OFFSET+0x0040314,0x00800000
+#define LPM_MEM_DI0_GENERAL__DI0_MASK_SEL                       IPU_MEMORY_OFFSET+0x0040314,0x00400000
+#define LPM_MEM_DI0_GENERAL__DI0_VSYNC_EXT                      IPU_MEMORY_OFFSET+0x0040314,0x00200000
+#define LPM_MEM_DI0_GENERAL__DI0_CLK_EXT                        IPU_MEMORY_OFFSET+0x0040314,0x00100000
+#define LPM_MEM_DI0_GENERAL__DI0_WATCHDOG_MODE                  IPU_MEMORY_OFFSET+0x0040314,0x000C0000
+#define LPM_MEM_DI0_GENERAL__DI0_POLARITY_DISP_CLK              IPU_MEMORY_OFFSET+0x0040314,0x00020000
+#define LPM_MEM_DI0_GENERAL__DI0_SYNC_COUNT_SEL                 IPU_MEMORY_OFFSET+0x0040314,0x0000F000
+#define LPM_MEM_DI0_GENERAL__DI0_ERR_TREATMENT                  IPU_MEMORY_OFFSET+0x0040314,0x00000800
+#define LPM_MEM_DI0_GENERAL__DI0_ERM_VSYNC_SEL                  IPU_MEMORY_OFFSET+0x0040314,0x00000400
+#define LPM_MEM_DI0_GENERAL__DI0_POLARITY_CS1                   IPU_MEMORY_OFFSET+0x0040314,0x00000200
+#define LPM_MEM_DI0_GENERAL__DI0_POLARITY_CS0                   IPU_MEMORY_OFFSET+0x0040314,0x00000100
+#define LPM_MEM_DI0_GENERAL__DI0_POLARITY_8                     IPU_MEMORY_OFFSET+0x0040314,0x00000080
+#define LPM_MEM_DI0_GENERAL__DI0_POLARITY_7                     IPU_MEMORY_OFFSET+0x0040314,0x00000040
+#define LPM_MEM_DI0_GENERAL__DI0_POLARITY_6                     IPU_MEMORY_OFFSET+0x0040314,0x00000020
+#define LPM_MEM_DI0_GENERAL__DI0_POLARITY_5                     IPU_MEMORY_OFFSET+0x0040314,0x00000010
+#define LPM_MEM_DI0_GENERAL__DI0_POLARITY_4                     IPU_MEMORY_OFFSET+0x0040314,0x00000008
+#define LPM_MEM_DI0_GENERAL__DI0_POLARITY_3                     IPU_MEMORY_OFFSET+0x0040314,0x00000004
+#define LPM_MEM_DI0_GENERAL__DI0_POLARITY_2                     IPU_MEMORY_OFFSET+0x0040314,0x00000002
+#define LPM_MEM_DI0_GENERAL__DI0_POLARITY_1                     IPU_MEMORY_OFFSET+0x0040314,0x00000001
+
+#define LPM_MEM_DI0_BS_CLKGEN0__ADDR                            IPU_MEMORY_OFFSET+0x0040318
+#define LPM_MEM_DI0_BS_CLKGEN0__EMPTY                           IPU_MEMORY_OFFSET+0x0040318,0x00000000
+#define LPM_MEM_DI0_BS_CLKGEN0__FULL                            IPU_MEMORY_OFFSET+0x0040318,0xffffffff
+#define LPM_MEM_DI0_BS_CLKGEN0__DI0_DISP_CLK_OFFSET             IPU_MEMORY_OFFSET+0x0040318,0x01FF0000
+#define LPM_MEM_DI0_BS_CLKGEN0__DI0_DISP_CLK_PERIOD             IPU_MEMORY_OFFSET+0x0040318,0x00000FFF
+
+#define LPM_MEM_DI0_BS_CLKGEN1__ADDR                            IPU_MEMORY_OFFSET+0x004031C
+#define LPM_MEM_DI0_BS_CLKGEN1__EMPTY                           IPU_MEMORY_OFFSET+0x004031C,0x00000000
+#define LPM_MEM_DI0_BS_CLKGEN1__FULL                            IPU_MEMORY_OFFSET+0x004031C,0xffffffff
+#define LPM_MEM_DI0_BS_CLKGEN1__DI0_DISP_CLK_DOWN               IPU_MEMORY_OFFSET+0x004031C,0x01FF0000
+#define LPM_MEM_DI0_BS_CLKGEN1__DI0_DISP_CLK_UP                 IPU_MEMORY_OFFSET+0x004031C,0x000001FF
+
+#define LPM_MEM_DI0_SW_GEN0_1__ADDR                             IPU_MEMORY_OFFSET+0x0040320
+#define LPM_MEM_DI0_SW_GEN0_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040320,0x00000000
+#define LPM_MEM_DI0_SW_GEN0_1__FULL                             IPU_MEMORY_OFFSET+0x0040320,0xffffffff
+#define LPM_MEM_DI0_SW_GEN0_1__DI0_RUN_VALUE_M1_1               IPU_MEMORY_OFFSET+0x0040320,0x7FF80000
+#define LPM_MEM_DI0_SW_GEN0_1__DI0_RUN_RESOLUTION_1             IPU_MEMORY_OFFSET+0x0040320,0x00070000
+#define LPM_MEM_DI0_SW_GEN0_1__DI0_OFFSET_VALUE_1               IPU_MEMORY_OFFSET+0x0040320,0x00007FF8
+#define LPM_MEM_DI0_SW_GEN0_1__DI0_OFFSET_RESOLUTION_1          IPU_MEMORY_OFFSET+0x0040320,0x00000007
+
+#define LPM_MEM_DI0_SW_GEN0_2__ADDR                             IPU_MEMORY_OFFSET+0x0040324
+#define LPM_MEM_DI0_SW_GEN0_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040324,0x00000000
+#define LPM_MEM_DI0_SW_GEN0_2__FULL                             IPU_MEMORY_OFFSET+0x0040324,0xffffffff
+#define LPM_MEM_DI0_SW_GEN0_2__DI0_RUN_VALUE_M1_2               IPU_MEMORY_OFFSET+0x0040324,0x7FF80000
+#define LPM_MEM_DI0_SW_GEN0_2__DI0_RUN_RESOLUTION_2             IPU_MEMORY_OFFSET+0x0040324,0x00070000
+#define LPM_MEM_DI0_SW_GEN0_2__DI0_OFFSET_VALUE_2               IPU_MEMORY_OFFSET+0x0040324,0x00007FF8
+#define LPM_MEM_DI0_SW_GEN0_2__DI0_OFFSET_RESOLUTION_2          IPU_MEMORY_OFFSET+0x0040324,0x00000007
+
+#define LPM_MEM_DI0_SW_GEN0_3__ADDR                             IPU_MEMORY_OFFSET+0x0040328
+#define LPM_MEM_DI0_SW_GEN0_3__EMPTY                            IPU_MEMORY_OFFSET+0x0040328,0x00000000
+#define LPM_MEM_DI0_SW_GEN0_3__FULL                             IPU_MEMORY_OFFSET+0x0040328,0xffffffff
+#define LPM_MEM_DI0_SW_GEN0_3__DI0_RUN_VALUE_M1_3               IPU_MEMORY_OFFSET+0x0040328,0x7FF80000
+#define LPM_MEM_DI0_SW_GEN0_3__DI0_RUN_RESOLUTION_3             IPU_MEMORY_OFFSET+0x0040328,0x00070000
+#define LPM_MEM_DI0_SW_GEN0_3__DI0_OFFSET_VALUE_3               IPU_MEMORY_OFFSET+0x0040328,0x00007FF8
+#define LPM_MEM_DI0_SW_GEN0_3__DI0_OFFSET_RESOLUTION_3          IPU_MEMORY_OFFSET+0x0040328,0x00000007
+
+#define LPM_MEM_DI0_SW_GEN0_4__ADDR                             IPU_MEMORY_OFFSET+0x004032C
+#define LPM_MEM_DI0_SW_GEN0_4__EMPTY                            IPU_MEMORY_OFFSET+0x004032C,0x00000000
+#define LPM_MEM_DI0_SW_GEN0_4__FULL                             IPU_MEMORY_OFFSET+0x004032C,0xffffffff
+#define LPM_MEM_DI0_SW_GEN0_4__DI0_RUN_VALUE_M1_4               IPU_MEMORY_OFFSET+0x004032C,0x7FF80000
+#define LPM_MEM_DI0_SW_GEN0_4__DI0_RUN_RESOLUTION_4             IPU_MEMORY_OFFSET+0x004032C,0x00070000
+#define LPM_MEM_DI0_SW_GEN0_4__DI0_OFFSET_VALUE_4               IPU_MEMORY_OFFSET+0x004032C,0x00007FF8
+#define LPM_MEM_DI0_SW_GEN0_4__DI0_OFFSET_RESOLUTION_4          IPU_MEMORY_OFFSET+0x004032C,0x00000007
+
+#define LPM_MEM_DI0_SW_GEN0_5__ADDR                             IPU_MEMORY_OFFSET+0x0040330
+#define LPM_MEM_DI0_SW_GEN0_5__EMPTY                            IPU_MEMORY_OFFSET+0x0040330,0x00000000
+#define LPM_MEM_DI0_SW_GEN0_5__FULL                             IPU_MEMORY_OFFSET+0x0040330,0xffffffff
+#define LPM_MEM_DI0_SW_GEN0_5__DI0_RUN_VALUE_M1_5               IPU_MEMORY_OFFSET+0x0040330,0x7FF80000
+#define LPM_MEM_DI0_SW_GEN0_5__DI0_RUN_RESOLUTION_5             IPU_MEMORY_OFFSET+0x0040330,0x00070000
+#define LPM_MEM_DI0_SW_GEN0_5__DI0_OFFSET_VALUE_5               IPU_MEMORY_OFFSET+0x0040330,0x00007FF8
+#define LPM_MEM_DI0_SW_GEN0_5__DI0_OFFSET_RESOLUTION_5          IPU_MEMORY_OFFSET+0x0040330,0x00000007
+
+#define LPM_MEM_DI0_SW_GEN0_6__ADDR                             IPU_MEMORY_OFFSET+0x0040334
+#define LPM_MEM_DI0_SW_GEN0_6__EMPTY                            IPU_MEMORY_OFFSET+0x0040334,0x00000000
+#define LPM_MEM_DI0_SW_GEN0_6__FULL                             IPU_MEMORY_OFFSET+0x0040334,0xffffffff
+#define LPM_MEM_DI0_SW_GEN0_6__DI0_RUN_VALUE_M1_6               IPU_MEMORY_OFFSET+0x0040334,0x7FF80000
+#define LPM_MEM_DI0_SW_GEN0_6__DI0_RUN_RESOLUTION_6             IPU_MEMORY_OFFSET+0x0040334,0x00070000
+#define LPM_MEM_DI0_SW_GEN0_6__DI0_OFFSET_VALUE_6               IPU_MEMORY_OFFSET+0x0040334,0x00007FF8
+#define LPM_MEM_DI0_SW_GEN0_6__DI0_OFFSET_RESOLUTION_6          IPU_MEMORY_OFFSET+0x0040334,0x00000007
+
+#define LPM_MEM_DI0_SW_GEN0_7__ADDR                             IPU_MEMORY_OFFSET+0x0040338
+#define LPM_MEM_DI0_SW_GEN0_7__EMPTY                            IPU_MEMORY_OFFSET+0x0040338,0x00000000
+#define LPM_MEM_DI0_SW_GEN0_7__FULL                             IPU_MEMORY_OFFSET+0x0040338,0xffffffff
+#define LPM_MEM_DI0_SW_GEN0_7__DI0_RUN_VALUE_M1_7               IPU_MEMORY_OFFSET+0x0040338,0x7FF80000
+#define LPM_MEM_DI0_SW_GEN0_7__DI0_RUN_RESOLUTION_7             IPU_MEMORY_OFFSET+0x0040338,0x00070000
+#define LPM_MEM_DI0_SW_GEN0_7__DI0_OFFSET_VALUE_7               IPU_MEMORY_OFFSET+0x0040338,0x00007FF8
+#define LPM_MEM_DI0_SW_GEN0_7__DI0_OFFSET_RESOLUTION_7          IPU_MEMORY_OFFSET+0x0040338,0x00000007
+
+#define LPM_MEM_DI0_SW_GEN0_8__ADDR                             IPU_MEMORY_OFFSET+0x004033C
+#define LPM_MEM_DI0_SW_GEN0_8__EMPTY                            IPU_MEMORY_OFFSET+0x004033C,0x00000000
+#define LPM_MEM_DI0_SW_GEN0_8__FULL                             IPU_MEMORY_OFFSET+0x004033C,0xffffffff
+#define LPM_MEM_DI0_SW_GEN0_8__DI0_RUN_VALUE_M1_8               IPU_MEMORY_OFFSET+0x004033C,0x7FF80000
+#define LPM_MEM_DI0_SW_GEN0_8__DI0_RUN_RESOLUTION_8             IPU_MEMORY_OFFSET+0x004033C,0x00070000
+#define LPM_MEM_DI0_SW_GEN0_8__DI0_OFFSET_VALUE_8               IPU_MEMORY_OFFSET+0x004033C,0x00007FF8
+#define LPM_MEM_DI0_SW_GEN0_8__DI0_OFFSET_RESOLUTION_8          IPU_MEMORY_OFFSET+0x004033C,0x00000007
+
+#define LPM_MEM_DI0_SW_GEN0_9__ADDR                             IPU_MEMORY_OFFSET+0x0040340
+#define LPM_MEM_DI0_SW_GEN0_9__EMPTY                            IPU_MEMORY_OFFSET+0x0040340,0x00000000
+#define LPM_MEM_DI0_SW_GEN0_9__FULL                             IPU_MEMORY_OFFSET+0x0040340,0xffffffff
+#define LPM_MEM_DI0_SW_GEN0_9__DI0_RUN_VALUE_M1_9               IPU_MEMORY_OFFSET+0x0040340,0x7FF80000
+#define LPM_MEM_DI0_SW_GEN0_9__DI0_RUN_RESOLUTION_9             IPU_MEMORY_OFFSET+0x0040340,0x00070000
+#define LPM_MEM_DI0_SW_GEN0_9__DI0_OFFSET_VALUE_9               IPU_MEMORY_OFFSET+0x0040340,0x00007FF8
+#define LPM_MEM_DI0_SW_GEN0_9__DI0_OFFSET_RESOLUTION_9          IPU_MEMORY_OFFSET+0x0040340,0x00000007
+
+#define LPM_MEM_DI0_SW_GEN1_1__ADDR                             IPU_MEMORY_OFFSET+0x0040344
+#define LPM_MEM_DI0_SW_GEN1_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040344,0x00000000
+#define LPM_MEM_DI0_SW_GEN1_1__FULL                             IPU_MEMORY_OFFSET+0x0040344,0xffffffff
+#define LPM_MEM_DI0_SW_GEN1_1__DI0_CNT_POLARITY_GEN_EN_1        IPU_MEMORY_OFFSET+0x0040344,0x60000000
+#define LPM_MEM_DI0_SW_GEN1_1__DI0_CNT_AUTO_RELOAD_1            IPU_MEMORY_OFFSET+0x0040344,0x10000000
+#define LPM_MEM_DI0_SW_GEN1_1__DI0_CNT_CLR_SEL_1                IPU_MEMORY_OFFSET+0x0040344,0x0E000000
+#define LPM_MEM_DI0_SW_GEN1_1__DI0_CNT_DOWN_1                   IPU_MEMORY_OFFSET+0x0040344,0x01FF0000
+#define LPM_MEM_DI0_SW_GEN1_1__DI0_CNT_POLARITY_TRIGGER_SEL_1   IPU_MEMORY_OFFSET+0x0040344,0x00007000
+#define LPM_MEM_DI0_SW_GEN1_1__DI0_CNT_POLARITY_CLR_SEL_1       IPU_MEMORY_OFFSET+0x0040344,0x00000E00
+#define LPM_MEM_DI0_SW_GEN1_1__DI0_CNT_UP_1                     IPU_MEMORY_OFFSET+0x0040344,0x000001FF
+
+#define LPM_MEM_DI0_SW_GEN1_2__ADDR                             IPU_MEMORY_OFFSET+0x0040348
+#define LPM_MEM_DI0_SW_GEN1_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040348,0x00000000
+#define LPM_MEM_DI0_SW_GEN1_2__FULL                             IPU_MEMORY_OFFSET+0x0040348,0xffffffff
+#define LPM_MEM_DI0_SW_GEN1_2__DI0_CNT_POLARITY_GEN_EN_2        IPU_MEMORY_OFFSET+0x0040348,0x60000000
+#define LPM_MEM_DI0_SW_GEN1_2__DI0_CNT_AUTO_RELOAD_2            IPU_MEMORY_OFFSET+0x0040348,0x10000000
+#define LPM_MEM_DI0_SW_GEN1_2__DI0_CNT_CLR_SEL_2                IPU_MEMORY_OFFSET+0x0040348,0x0E000000
+#define LPM_MEM_DI0_SW_GEN1_2__DI0_CNT_DOWN_2                   IPU_MEMORY_OFFSET+0x0040348,0x01FF0000
+#define LPM_MEM_DI0_SW_GEN1_2__DI0_CNT_POLARITY_TRIGGER_SEL_2   IPU_MEMORY_OFFSET+0x0040348,0x00007000
+#define LPM_MEM_DI0_SW_GEN1_2__DI0_CNT_POLARITY_CLR_SEL_2       IPU_MEMORY_OFFSET+0x0040348,0x00000E00
+#define LPM_MEM_DI0_SW_GEN1_2__DI0_CNT_UP_2                     IPU_MEMORY_OFFSET+0x0040348,0x000001FF
+
+#define LPM_MEM_DI0_SW_GEN1_3__ADDR                             IPU_MEMORY_OFFSET+0x004034C
+#define LPM_MEM_DI0_SW_GEN1_3__EMPTY                            IPU_MEMORY_OFFSET+0x004034C,0x00000000
+#define LPM_MEM_DI0_SW_GEN1_3__FULL                             IPU_MEMORY_OFFSET+0x004034C,0xffffffff
+#define LPM_MEM_DI0_SW_GEN1_3__DI0_CNT_POLARITY_GEN_EN_3        IPU_MEMORY_OFFSET+0x004034C,0x60000000
+#define LPM_MEM_DI0_SW_GEN1_3__DI0_CNT_AUTO_RELOAD_3            IPU_MEMORY_OFFSET+0x004034C,0x10000000
+#define LPM_MEM_DI0_SW_GEN1_3__DI0_CNT_CLR_SEL_3                IPU_MEMORY_OFFSET+0x004034C,0x0E000000
+#define LPM_MEM_DI0_SW_GEN1_3__DI0_CNT_DOWN_3                   IPU_MEMORY_OFFSET+0x004034C,0x01FF0000
+#define LPM_MEM_DI0_SW_GEN1_3__DI0_CNT_POLARITY_TRIGGER_SEL_3   IPU_MEMORY_OFFSET+0x004034C,0x00007000
+#define LPM_MEM_DI0_SW_GEN1_3__DI0_CNT_POLARITY_CLR_SEL_3       IPU_MEMORY_OFFSET+0x004034C,0x00000E00
+#define LPM_MEM_DI0_SW_GEN1_3__DI0_CNT_UP_3                     IPU_MEMORY_OFFSET+0x004034C,0x000001FF
+
+#define LPM_MEM_DI0_SW_GEN1_4__ADDR                             IPU_MEMORY_OFFSET+0x0040350
+#define LPM_MEM_DI0_SW_GEN1_4__EMPTY                            IPU_MEMORY_OFFSET+0x0040350,0x00000000
+#define LPM_MEM_DI0_SW_GEN1_4__FULL                             IPU_MEMORY_OFFSET+0x0040350,0xffffffff
+#define LPM_MEM_DI0_SW_GEN1_4__DI0_CNT_POLARITY_GEN_EN_4        IPU_MEMORY_OFFSET+0x0040350,0x60000000
+#define LPM_MEM_DI0_SW_GEN1_4__DI0_CNT_AUTO_RELOAD_4            IPU_MEMORY_OFFSET+0x0040350,0x10000000
+#define LPM_MEM_DI0_SW_GEN1_4__DI0_CNT_CLR_SEL_4                IPU_MEMORY_OFFSET+0x0040350,0x0E000000
+#define LPM_MEM_DI0_SW_GEN1_4__DI0_CNT_DOWN_4                   IPU_MEMORY_OFFSET+0x0040350,0x01FF0000
+#define LPM_MEM_DI0_SW_GEN1_4__DI0_CNT_POLARITY_TRIGGER_SEL_4   IPU_MEMORY_OFFSET+0x0040350,0x00007000
+#define LPM_MEM_DI0_SW_GEN1_4__DI0_CNT_POLARITY_CLR_SEL_4       IPU_MEMORY_OFFSET+0x0040350,0x00000E00
+#define LPM_MEM_DI0_SW_GEN1_4__DI0_CNT_UP_4                     IPU_MEMORY_OFFSET+0x0040350,0x000001FF
+
+#define LPM_MEM_DI0_SW_GEN1_5__ADDR                             IPU_MEMORY_OFFSET+0x0040354
+#define LPM_MEM_DI0_SW_GEN1_5__EMPTY                            IPU_MEMORY_OFFSET+0x0040354,0x00000000
+#define LPM_MEM_DI0_SW_GEN1_5__FULL                             IPU_MEMORY_OFFSET+0x0040354,0xffffffff
+#define LPM_MEM_DI0_SW_GEN1_5__DI0_CNT_POLARITY_GEN_EN_5        IPU_MEMORY_OFFSET+0x0040354,0x60000000
+#define LPM_MEM_DI0_SW_GEN1_5__DI0_CNT_AUTO_RELOAD_5            IPU_MEMORY_OFFSET+0x0040354,0x10000000
+#define LPM_MEM_DI0_SW_GEN1_5__DI0_CNT_CLR_SEL_5                IPU_MEMORY_OFFSET+0x0040354,0x0E000000
+#define LPM_MEM_DI0_SW_GEN1_5__DI0_CNT_DOWN_5                   IPU_MEMORY_OFFSET+0x0040354,0x01FF0000
+#define LPM_MEM_DI0_SW_GEN1_5__DI0_CNT_POLARITY_TRIGGER_SEL_5   IPU_MEMORY_OFFSET+0x0040354,0x00007000
+#define LPM_MEM_DI0_SW_GEN1_5__DI0_CNT_POLARITY_CLR_SEL_5       IPU_MEMORY_OFFSET+0x0040354,0x00000E00
+#define LPM_MEM_DI0_SW_GEN1_5__DI0_CNT_UP_5                     IPU_MEMORY_OFFSET+0x0040354,0x000001FF
+
+#define LPM_MEM_DI0_SW_GEN1_6__ADDR                             IPU_MEMORY_OFFSET+0x0040358
+#define LPM_MEM_DI0_SW_GEN1_6__EMPTY                            IPU_MEMORY_OFFSET+0x0040358,0x00000000
+#define LPM_MEM_DI0_SW_GEN1_6__FULL                             IPU_MEMORY_OFFSET+0x0040358,0xffffffff
+#define LPM_MEM_DI0_SW_GEN1_6__DI0_CNT_POLARITY_GEN_EN_6        IPU_MEMORY_OFFSET+0x0040358,0x60000000
+#define LPM_MEM_DI0_SW_GEN1_6__DI0_CNT_AUTO_RELOAD_6            IPU_MEMORY_OFFSET+0x0040358,0x10000000
+#define LPM_MEM_DI0_SW_GEN1_6__DI0_CNT_CLR_SEL_6                IPU_MEMORY_OFFSET+0x0040358,0x0E000000
+#define LPM_MEM_DI0_SW_GEN1_6__DI0_CNT_DOWN_6                   IPU_MEMORY_OFFSET+0x0040358,0x01FF0000
+#define LPM_MEM_DI0_SW_GEN1_6__DI0_CNT_POLARITY_TRIGGER_SEL_6   IPU_MEMORY_OFFSET+0x0040358,0x00007000
+#define LPM_MEM_DI0_SW_GEN1_6__DI0_CNT_POLARITY_CLR_SEL_6       IPU_MEMORY_OFFSET+0x0040358,0x00000E00
+#define LPM_MEM_DI0_SW_GEN1_6__DI0_CNT_UP_6                     IPU_MEMORY_OFFSET+0x0040358,0x000001FF
+
+#define LPM_MEM_DI0_SW_GEN1_7__ADDR                             IPU_MEMORY_OFFSET+0x004035C
+#define LPM_MEM_DI0_SW_GEN1_7__EMPTY                            IPU_MEMORY_OFFSET+0x004035C,0x00000000
+#define LPM_MEM_DI0_SW_GEN1_7__FULL                             IPU_MEMORY_OFFSET+0x004035C,0xffffffff
+#define LPM_MEM_DI0_SW_GEN1_7__DI0_CNT_POLARITY_GEN_EN_7        IPU_MEMORY_OFFSET+0x004035C,0x60000000
+#define LPM_MEM_DI0_SW_GEN1_7__DI0_CNT_AUTO_RELOAD_7            IPU_MEMORY_OFFSET+0x004035C,0x10000000
+#define LPM_MEM_DI0_SW_GEN1_7__DI0_CNT_CLR_SEL_7                IPU_MEMORY_OFFSET+0x004035C,0x0E000000
+#define LPM_MEM_DI0_SW_GEN1_7__DI0_CNT_DOWN_7                   IPU_MEMORY_OFFSET+0x004035C,0x01FF0000
+#define LPM_MEM_DI0_SW_GEN1_7__DI0_CNT_POLARITY_TRIGGER_SEL_7   IPU_MEMORY_OFFSET+0x004035C,0x00007000
+#define LPM_MEM_DI0_SW_GEN1_7__DI0_CNT_POLARITY_CLR_SEL_7       IPU_MEMORY_OFFSET+0x004035C,0x00000E00
+#define LPM_MEM_DI0_SW_GEN1_7__DI0_CNT_UP_7                     IPU_MEMORY_OFFSET+0x004035C,0x000001FF
+
+#define LPM_MEM_DI0_SW_GEN1_8__ADDR                             IPU_MEMORY_OFFSET+0x0040360
+#define LPM_MEM_DI0_SW_GEN1_8__EMPTY                            IPU_MEMORY_OFFSET+0x0040360,0x00000000
+#define LPM_MEM_DI0_SW_GEN1_8__FULL                             IPU_MEMORY_OFFSET+0x0040360,0xffffffff
+#define LPM_MEM_DI0_SW_GEN1_8__DI0_CNT_POLARITY_GEN_EN_8        IPU_MEMORY_OFFSET+0x0040360,0x60000000
+#define LPM_MEM_DI0_SW_GEN1_8__DI0_CNT_AUTO_RELOAD_8            IPU_MEMORY_OFFSET+0x0040360,0x10000000
+#define LPM_MEM_DI0_SW_GEN1_8__DI0_CNT_CLR_SEL_8                IPU_MEMORY_OFFSET+0x0040360,0x0E000000
+#define LPM_MEM_DI0_SW_GEN1_8__DI0_CNT_DOWN_8                   IPU_MEMORY_OFFSET+0x0040360,0x01FF0000
+#define LPM_MEM_DI0_SW_GEN1_8__DI0_CNT_POLARITY_TRIGGER_SEL_8   IPU_MEMORY_OFFSET+0x0040360,0x00007000
+#define LPM_MEM_DI0_SW_GEN1_8__DI0_CNT_POLARITY_CLR_SEL_8       IPU_MEMORY_OFFSET+0x0040360,0x00000E00
+#define LPM_MEM_DI0_SW_GEN1_8__DI0_CNT_UP_8                     IPU_MEMORY_OFFSET+0x0040360,0x000001FF
+
+#define LPM_MEM_DI0_SW_GEN1_9__ADDR                             IPU_MEMORY_OFFSET+0x0040364
+#define LPM_MEM_DI0_SW_GEN1_9__EMPTY                            IPU_MEMORY_OFFSET+0x0040364,0x00000000
+#define LPM_MEM_DI0_SW_GEN1_9__FULL                             IPU_MEMORY_OFFSET+0x0040364,0xffffffff
+#define LPM_MEM_DI0_SW_GEN1_9__DI0_GENTIME_SEL_9                IPU_MEMORY_OFFSET+0x0040364,0xE0000000
+#define LPM_MEM_DI0_SW_GEN1_9__DI0_CNT_AUTO_RELOAD_9            IPU_MEMORY_OFFSET+0x0040364,0x10000000
+#define LPM_MEM_DI0_SW_GEN1_9__DI0_CNT_CLR_SEL_9                IPU_MEMORY_OFFSET+0x0040364,0x0E000000
+#define LPM_MEM_DI0_SW_GEN1_9__DI0_CNT_DOWN_9                   IPU_MEMORY_OFFSET+0x0040364,0x01FF0000
+#define LPM_MEM_DI0_SW_GEN1_9__DI0_TAG_SEL_9                    IPU_MEMORY_OFFSET+0x0040364,0x00008000
+#define LPM_MEM_DI0_SW_GEN1_9__DI0_CNT_UP_9                     IPU_MEMORY_OFFSET+0x0040364,0x000001FF
+
+#define LPM_MEM_DI0_SYNC_AS_GEN__ADDR                           IPU_MEMORY_OFFSET+0x0040368
+#define LPM_MEM_DI0_SYNC_AS_GEN__EMPTY                          IPU_MEMORY_OFFSET+0x0040368,0x00000000
+#define LPM_MEM_DI0_SYNC_AS_GEN__FULL                           IPU_MEMORY_OFFSET+0x0040368,0xffffffff
+#define LPM_MEM_DI0_SYNC_AS_GEN__DI0_SYNC_START_EN              IPU_MEMORY_OFFSET+0x0040368,0x10000000
+#define LPM_MEM_DI0_SYNC_AS_GEN__DI0_VSYNC_SEL                  IPU_MEMORY_OFFSET+0x0040368,0x0000E000
+#define LPM_MEM_DI0_SYNC_AS_GEN__DI0_SYNC_START                 IPU_MEMORY_OFFSET+0x0040368,0x00000FFF
+
+#define LPM_MEM_DI0_DW_GEN_0__ADDR                              IPU_MEMORY_OFFSET+0x004036C
+#define LPM_MEM_DI0_DW_GEN_0__EMPTY                             IPU_MEMORY_OFFSET+0x004036C,0x00000000
+#define LPM_MEM_DI0_DW_GEN_0__FULL                              IPU_MEMORY_OFFSET+0x004036C,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_0__DI0_ACCESS_SIZE_0                 IPU_MEMORY_OFFSET+0x004036C,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_0__DI0_COMPONNENT_SIZE_0             IPU_MEMORY_OFFSET+0x004036C,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_0__DI0_CST_0                         IPU_MEMORY_OFFSET+0x004036C,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_0__DI0_PT_6_0                        IPU_MEMORY_OFFSET+0x004036C,0x00003000
+#define LPM_MEM_DI0_DW_GEN_0__DI0_PT_5_0                        IPU_MEMORY_OFFSET+0x004036C,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_0__DI0_PT_4_0                        IPU_MEMORY_OFFSET+0x004036C,0x00000300
+#define LPM_MEM_DI0_DW_GEN_0__DI0_PT_3_0                        IPU_MEMORY_OFFSET+0x004036C,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_0__DI0_PT_2_0                        IPU_MEMORY_OFFSET+0x004036C,0x00000030
+#define LPM_MEM_DI0_DW_GEN_0__DI0_PT_1_0                        IPU_MEMORY_OFFSET+0x004036C,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_0__DI0_PT_0_0                        IPU_MEMORY_OFFSET+0x004036C,0x00000003
+
+#define LPM_MEM_DI0_DW_GEN_1__ADDR                              IPU_MEMORY_OFFSET+0x0040370
+#define LPM_MEM_DI0_DW_GEN_1__EMPTY                             IPU_MEMORY_OFFSET+0x0040370,0x00000000
+#define LPM_MEM_DI0_DW_GEN_1__FULL                              IPU_MEMORY_OFFSET+0x0040370,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_1__DI0_ACCESS_SIZE_1                 IPU_MEMORY_OFFSET+0x0040370,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_1__DI0_COMPONNENT_SIZE_1             IPU_MEMORY_OFFSET+0x0040370,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_1__DI0_CST_1                         IPU_MEMORY_OFFSET+0x0040370,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_1__DI0_PT_6_1                        IPU_MEMORY_OFFSET+0x0040370,0x00003000
+#define LPM_MEM_DI0_DW_GEN_1__DI0_PT_5_1                        IPU_MEMORY_OFFSET+0x0040370,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_1__DI0_PT_4_1                        IPU_MEMORY_OFFSET+0x0040370,0x00000300
+#define LPM_MEM_DI0_DW_GEN_1__DI0_PT_3_1                        IPU_MEMORY_OFFSET+0x0040370,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_1__DI0_PT_2_1                        IPU_MEMORY_OFFSET+0x0040370,0x00000030
+#define LPM_MEM_DI0_DW_GEN_1__DI0_PT_1_1                        IPU_MEMORY_OFFSET+0x0040370,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_1__DI0_PT_0_1                        IPU_MEMORY_OFFSET+0x0040370,0x00000003
+
+#define LPM_MEM_DI0_DW_GEN_2__ADDR                              IPU_MEMORY_OFFSET+0x0040374
+#define LPM_MEM_DI0_DW_GEN_2__EMPTY                             IPU_MEMORY_OFFSET+0x0040374,0x00000000
+#define LPM_MEM_DI0_DW_GEN_2__FULL                              IPU_MEMORY_OFFSET+0x0040374,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_2__DI0_ACCESS_SIZE_2                 IPU_MEMORY_OFFSET+0x0040374,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_2__DI0_COMPONNENT_SIZE_2             IPU_MEMORY_OFFSET+0x0040374,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_2__DI0_CST_2                         IPU_MEMORY_OFFSET+0x0040374,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_2__DI0_PT_6_2                        IPU_MEMORY_OFFSET+0x0040374,0x00003000
+#define LPM_MEM_DI0_DW_GEN_2__DI0_PT_5_2                        IPU_MEMORY_OFFSET+0x0040374,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_2__DI0_PT_4_2                        IPU_MEMORY_OFFSET+0x0040374,0x00000300
+#define LPM_MEM_DI0_DW_GEN_2__DI0_PT_3_2                        IPU_MEMORY_OFFSET+0x0040374,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_2__DI0_PT_2_2                        IPU_MEMORY_OFFSET+0x0040374,0x00000030
+#define LPM_MEM_DI0_DW_GEN_2__DI0_PT_1_2                        IPU_MEMORY_OFFSET+0x0040374,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_2__DI0_PT_0_2                        IPU_MEMORY_OFFSET+0x0040374,0x00000003
+
+#define LPM_MEM_DI0_DW_GEN_3__ADDR                              IPU_MEMORY_OFFSET+0x0040378
+#define LPM_MEM_DI0_DW_GEN_3__EMPTY                             IPU_MEMORY_OFFSET+0x0040378,0x00000000
+#define LPM_MEM_DI0_DW_GEN_3__FULL                              IPU_MEMORY_OFFSET+0x0040378,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_3__DI0_ACCESS_SIZE_3                 IPU_MEMORY_OFFSET+0x0040378,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_3__DI0_COMPONNENT_SIZE_3             IPU_MEMORY_OFFSET+0x0040378,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_3__DI0_CST_3                         IPU_MEMORY_OFFSET+0x0040378,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_3__DI0_PT_6_3                        IPU_MEMORY_OFFSET+0x0040378,0x00003000
+#define LPM_MEM_DI0_DW_GEN_3__DI0_PT_5_3                        IPU_MEMORY_OFFSET+0x0040378,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_3__DI0_PT_4_3                        IPU_MEMORY_OFFSET+0x0040378,0x00000300
+#define LPM_MEM_DI0_DW_GEN_3__DI0_PT_3_3                        IPU_MEMORY_OFFSET+0x0040378,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_3__DI0_PT_2_3                        IPU_MEMORY_OFFSET+0x0040378,0x00000030
+#define LPM_MEM_DI0_DW_GEN_3__DI0_PT_1_3                        IPU_MEMORY_OFFSET+0x0040378,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_3__DI0_PT_0_3                        IPU_MEMORY_OFFSET+0x0040378,0x00000003
+
+#define LPM_MEM_DI0_DW_GEN_4__ADDR                              IPU_MEMORY_OFFSET+0x004037C
+#define LPM_MEM_DI0_DW_GEN_4__EMPTY                             IPU_MEMORY_OFFSET+0x004037C,0x00000000
+#define LPM_MEM_DI0_DW_GEN_4__FULL                              IPU_MEMORY_OFFSET+0x004037C,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_4__DI0_ACCESS_SIZE_4                 IPU_MEMORY_OFFSET+0x004037C,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_4__DI0_COMPONNENT_SIZE_4             IPU_MEMORY_OFFSET+0x004037C,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_4__DI0_CST_4                         IPU_MEMORY_OFFSET+0x004037C,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_4__DI0_PT_6_4                        IPU_MEMORY_OFFSET+0x004037C,0x00003000
+#define LPM_MEM_DI0_DW_GEN_4__DI0_PT_5_4                        IPU_MEMORY_OFFSET+0x004037C,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_4__DI0_PT_4_4                        IPU_MEMORY_OFFSET+0x004037C,0x00000300
+#define LPM_MEM_DI0_DW_GEN_4__DI0_PT_3_4                        IPU_MEMORY_OFFSET+0x004037C,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_4__DI0_PT_2_4                        IPU_MEMORY_OFFSET+0x004037C,0x00000030
+#define LPM_MEM_DI0_DW_GEN_4__DI0_PT_1_4                        IPU_MEMORY_OFFSET+0x004037C,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_4__DI0_PT_0_4                        IPU_MEMORY_OFFSET+0x004037C,0x00000003
+
+#define LPM_MEM_DI0_DW_GEN_5__ADDR                              IPU_MEMORY_OFFSET+0x0040380
+#define LPM_MEM_DI0_DW_GEN_5__EMPTY                             IPU_MEMORY_OFFSET+0x0040380,0x00000000
+#define LPM_MEM_DI0_DW_GEN_5__FULL                              IPU_MEMORY_OFFSET+0x0040380,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_5__DI0_ACCESS_SIZE_5                 IPU_MEMORY_OFFSET+0x0040380,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_5__DI0_COMPONNENT_SIZE_5             IPU_MEMORY_OFFSET+0x0040380,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_5__DI0_CST_5                         IPU_MEMORY_OFFSET+0x0040380,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_5__DI0_PT_6_5                        IPU_MEMORY_OFFSET+0x0040380,0x00003000
+#define LPM_MEM_DI0_DW_GEN_5__DI0_PT_5_5                        IPU_MEMORY_OFFSET+0x0040380,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_5__DI0_PT_4_5                        IPU_MEMORY_OFFSET+0x0040380,0x00000300
+#define LPM_MEM_DI0_DW_GEN_5__DI0_PT_3_5                        IPU_MEMORY_OFFSET+0x0040380,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_5__DI0_PT_2_5                        IPU_MEMORY_OFFSET+0x0040380,0x00000030
+#define LPM_MEM_DI0_DW_GEN_5__DI0_PT_1_5                        IPU_MEMORY_OFFSET+0x0040380,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_5__DI0_PT_0_5                        IPU_MEMORY_OFFSET+0x0040380,0x00000003
+
+#define LPM_MEM_DI0_DW_GEN_6__ADDR                              IPU_MEMORY_OFFSET+0x0040384
+#define LPM_MEM_DI0_DW_GEN_6__EMPTY                             IPU_MEMORY_OFFSET+0x0040384,0x00000000
+#define LPM_MEM_DI0_DW_GEN_6__FULL                              IPU_MEMORY_OFFSET+0x0040384,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_6__DI0_ACCESS_SIZE_6                 IPU_MEMORY_OFFSET+0x0040384,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_6__DI0_COMPONNENT_SIZE_6             IPU_MEMORY_OFFSET+0x0040384,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_6__DI0_CST_6                         IPU_MEMORY_OFFSET+0x0040384,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_6__DI0_PT_6_6                        IPU_MEMORY_OFFSET+0x0040384,0x00003000
+#define LPM_MEM_DI0_DW_GEN_6__DI0_PT_5_6                        IPU_MEMORY_OFFSET+0x0040384,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_6__DI0_PT_4_6                        IPU_MEMORY_OFFSET+0x0040384,0x00000300
+#define LPM_MEM_DI0_DW_GEN_6__DI0_PT_3_6                        IPU_MEMORY_OFFSET+0x0040384,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_6__DI0_PT_2_6                        IPU_MEMORY_OFFSET+0x0040384,0x00000030
+#define LPM_MEM_DI0_DW_GEN_6__DI0_PT_1_6                        IPU_MEMORY_OFFSET+0x0040384,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_6__DI0_PT_0_6                        IPU_MEMORY_OFFSET+0x0040384,0x00000003
+
+#define LPM_MEM_DI0_DW_GEN_7__ADDR                              IPU_MEMORY_OFFSET+0x0040388
+#define LPM_MEM_DI0_DW_GEN_7__EMPTY                             IPU_MEMORY_OFFSET+0x0040388,0x00000000
+#define LPM_MEM_DI0_DW_GEN_7__FULL                              IPU_MEMORY_OFFSET+0x0040388,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_7__DI0_ACCESS_SIZE_7                 IPU_MEMORY_OFFSET+0x0040388,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_7__DI0_COMPONNENT_SIZE_7             IPU_MEMORY_OFFSET+0x0040388,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_7__DI0_CST_7                         IPU_MEMORY_OFFSET+0x0040388,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_7__DI0_PT_6_7                        IPU_MEMORY_OFFSET+0x0040388,0x00003000
+#define LPM_MEM_DI0_DW_GEN_7__DI0_PT_5_7                        IPU_MEMORY_OFFSET+0x0040388,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_7__DI0_PT_4_7                        IPU_MEMORY_OFFSET+0x0040388,0x00000300
+#define LPM_MEM_DI0_DW_GEN_7__DI0_PT_3_7                        IPU_MEMORY_OFFSET+0x0040388,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_7__DI0_PT_2_7                        IPU_MEMORY_OFFSET+0x0040388,0x00000030
+#define LPM_MEM_DI0_DW_GEN_7__DI0_PT_1_7                        IPU_MEMORY_OFFSET+0x0040388,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_7__DI0_PT_0_7                        IPU_MEMORY_OFFSET+0x0040388,0x00000003
+
+#define LPM_MEM_DI0_DW_GEN_8__ADDR                              IPU_MEMORY_OFFSET+0x004038C
+#define LPM_MEM_DI0_DW_GEN_8__EMPTY                             IPU_MEMORY_OFFSET+0x004038C,0x00000000
+#define LPM_MEM_DI0_DW_GEN_8__FULL                              IPU_MEMORY_OFFSET+0x004038C,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_8__DI0_ACCESS_SIZE_8                 IPU_MEMORY_OFFSET+0x004038C,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_8__DI0_COMPONNENT_SIZE_8             IPU_MEMORY_OFFSET+0x004038C,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_8__DI0_CST_8                         IPU_MEMORY_OFFSET+0x004038C,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_8__DI0_PT_6_8                        IPU_MEMORY_OFFSET+0x004038C,0x00003000
+#define LPM_MEM_DI0_DW_GEN_8__DI0_PT_5_8                        IPU_MEMORY_OFFSET+0x004038C,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_8__DI0_PT_4_8                        IPU_MEMORY_OFFSET+0x004038C,0x00000300
+#define LPM_MEM_DI0_DW_GEN_8__DI0_PT_3_8                        IPU_MEMORY_OFFSET+0x004038C,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_8__DI0_PT_2_8                        IPU_MEMORY_OFFSET+0x004038C,0x00000030
+#define LPM_MEM_DI0_DW_GEN_8__DI0_PT_1_8                        IPU_MEMORY_OFFSET+0x004038C,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_8__DI0_PT_0_8                        IPU_MEMORY_OFFSET+0x004038C,0x00000003
+
+#define LPM_MEM_DI0_DW_GEN_9__ADDR                              IPU_MEMORY_OFFSET+0x0040390
+#define LPM_MEM_DI0_DW_GEN_9__EMPTY                             IPU_MEMORY_OFFSET+0x0040390,0x00000000
+#define LPM_MEM_DI0_DW_GEN_9__FULL                              IPU_MEMORY_OFFSET+0x0040390,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_9__DI0_ACCESS_SIZE_9                 IPU_MEMORY_OFFSET+0x0040390,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_9__DI0_COMPONNENT_SIZE_9             IPU_MEMORY_OFFSET+0x0040390,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_9__DI0_CST_9                         IPU_MEMORY_OFFSET+0x0040390,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_9__DI0_PT_6_9                        IPU_MEMORY_OFFSET+0x0040390,0x00003000
+#define LPM_MEM_DI0_DW_GEN_9__DI0_PT_5_9                        IPU_MEMORY_OFFSET+0x0040390,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_9__DI0_PT_4_9                        IPU_MEMORY_OFFSET+0x0040390,0x00000300
+#define LPM_MEM_DI0_DW_GEN_9__DI0_PT_3_9                        IPU_MEMORY_OFFSET+0x0040390,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_9__DI0_PT_2_9                        IPU_MEMORY_OFFSET+0x0040390,0x00000030
+#define LPM_MEM_DI0_DW_GEN_9__DI0_PT_1_9                        IPU_MEMORY_OFFSET+0x0040390,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_9__DI0_PT_0_9                        IPU_MEMORY_OFFSET+0x0040390,0x00000003
+
+#define LPM_MEM_DI0_DW_GEN_10__ADDR                             IPU_MEMORY_OFFSET+0x0040394
+#define LPM_MEM_DI0_DW_GEN_10__EMPTY                            IPU_MEMORY_OFFSET+0x0040394,0x00000000
+#define LPM_MEM_DI0_DW_GEN_10__FULL                             IPU_MEMORY_OFFSET+0x0040394,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_10__DI0_ACCESS_SIZE_10               IPU_MEMORY_OFFSET+0x0040394,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_10__DI0_COMPONNENT_SIZE_10           IPU_MEMORY_OFFSET+0x0040394,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_10__DI0_CST_10                       IPU_MEMORY_OFFSET+0x0040394,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_10__DI0_PT_6_10                      IPU_MEMORY_OFFSET+0x0040394,0x00003000
+#define LPM_MEM_DI0_DW_GEN_10__DI0_PT_5_10                      IPU_MEMORY_OFFSET+0x0040394,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_10__DI0_PT_4_10                      IPU_MEMORY_OFFSET+0x0040394,0x00000300
+#define LPM_MEM_DI0_DW_GEN_10__DI0_PT_3_10                      IPU_MEMORY_OFFSET+0x0040394,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_10__DI0_PT_2_10                      IPU_MEMORY_OFFSET+0x0040394,0x00000030
+#define LPM_MEM_DI0_DW_GEN_10__DI0_PT_1_10                      IPU_MEMORY_OFFSET+0x0040394,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_10__DI0_PT_0_10                      IPU_MEMORY_OFFSET+0x0040394,0x00000003
+
+#define LPM_MEM_DI0_DW_GEN_11__ADDR                             IPU_MEMORY_OFFSET+0x0040398
+#define LPM_MEM_DI0_DW_GEN_11__EMPTY                            IPU_MEMORY_OFFSET+0x0040398,0x00000000
+#define LPM_MEM_DI0_DW_GEN_11__FULL                             IPU_MEMORY_OFFSET+0x0040398,0xffffffff
+#define LPM_MEM_DI0_DW_GEN_11__DI0_ACCESS_SIZE_11               IPU_MEMORY_OFFSET+0x0040398,0xFF000000
+#define LPM_MEM_DI0_DW_GEN_11__DI0_COMPONNENT_SIZE_11           IPU_MEMORY_OFFSET+0x0040398,0x00FF0000
+#define LPM_MEM_DI0_DW_GEN_11__DI0_CST_11                       IPU_MEMORY_OFFSET+0x0040398,0x0000C000
+#define LPM_MEM_DI0_DW_GEN_11__DI0_PT_6_11                      IPU_MEMORY_OFFSET+0x0040398,0x00003000
+#define LPM_MEM_DI0_DW_GEN_11__DI0_PT_5_11                      IPU_MEMORY_OFFSET+0x0040398,0x00000C00
+#define LPM_MEM_DI0_DW_GEN_11__DI0_PT_4_11                      IPU_MEMORY_OFFSET+0x0040398,0x00000300
+#define LPM_MEM_DI0_DW_GEN_11__DI0_PT_3_11                      IPU_MEMORY_OFFSET+0x0040398,0x000000C0
+#define LPM_MEM_DI0_DW_GEN_11__DI0_PT_2_11                      IPU_MEMORY_OFFSET+0x0040398,0x00000030
+#define LPM_MEM_DI0_DW_GEN_11__DI0_PT_1_11                      IPU_MEMORY_OFFSET+0x0040398,0x0000000C
+#define LPM_MEM_DI0_DW_GEN_11__DI0_PT_0_11                      IPU_MEMORY_OFFSET+0x0040398,0x00000003
+
+#define LPM_MEM_DI0_DW_SET0_0__ADDR                             IPU_MEMORY_OFFSET+0x004039C
+#define LPM_MEM_DI0_DW_SET0_0__EMPTY                            IPU_MEMORY_OFFSET+0x004039C,0x00000000
+#define LPM_MEM_DI0_DW_SET0_0__FULL                             IPU_MEMORY_OFFSET+0x004039C,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_0__DI0_DATA_CNT_DOWN0_0             IPU_MEMORY_OFFSET+0x004039C,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_0__DI0_DATA_CNT_UP0_0               IPU_MEMORY_OFFSET+0x004039C,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET0_1__ADDR                             IPU_MEMORY_OFFSET+0x00403A0
+#define LPM_MEM_DI0_DW_SET0_1__EMPTY                            IPU_MEMORY_OFFSET+0x00403A0,0x00000000
+#define LPM_MEM_DI0_DW_SET0_1__FULL                             IPU_MEMORY_OFFSET+0x00403A0,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_1__DI0_DATA_CNT_DOWN0_1             IPU_MEMORY_OFFSET+0x00403A0,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_1__DI0_DATA_CNT_UP0_1               IPU_MEMORY_OFFSET+0x00403A0,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET0_2__ADDR                             IPU_MEMORY_OFFSET+0x00403A4
+#define LPM_MEM_DI0_DW_SET0_2__EMPTY                            IPU_MEMORY_OFFSET+0x00403A4,0x00000000
+#define LPM_MEM_DI0_DW_SET0_2__FULL                             IPU_MEMORY_OFFSET+0x00403A4,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_2__DI0_DATA_CNT_DOWN0_2             IPU_MEMORY_OFFSET+0x00403A4,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_2__DI0_DATA_CNT_UP0_2               IPU_MEMORY_OFFSET+0x00403A4,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET0_3__ADDR                             IPU_MEMORY_OFFSET+0x00403A8
+#define LPM_MEM_DI0_DW_SET0_3__EMPTY                            IPU_MEMORY_OFFSET+0x00403A8,0x00000000
+#define LPM_MEM_DI0_DW_SET0_3__FULL                             IPU_MEMORY_OFFSET+0x00403A8,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_3__DI0_DATA_CNT_DOWN0_3             IPU_MEMORY_OFFSET+0x00403A8,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_3__DI0_DATA_CNT_UP0_3               IPU_MEMORY_OFFSET+0x00403A8,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET0_4__ADDR                             IPU_MEMORY_OFFSET+0x00403AC
+#define LPM_MEM_DI0_DW_SET0_4__EMPTY                            IPU_MEMORY_OFFSET+0x00403AC,0x00000000
+#define LPM_MEM_DI0_DW_SET0_4__FULL                             IPU_MEMORY_OFFSET+0x00403AC,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_4__DI0_DATA_CNT_DOWN0_4             IPU_MEMORY_OFFSET+0x00403AC,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_4__DI0_DATA_CNT_UP0_4               IPU_MEMORY_OFFSET+0x00403AC,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET0_5__ADDR                             IPU_MEMORY_OFFSET+0x00403B0
+#define LPM_MEM_DI0_DW_SET0_5__EMPTY                            IPU_MEMORY_OFFSET+0x00403B0,0x00000000
+#define LPM_MEM_DI0_DW_SET0_5__FULL                             IPU_MEMORY_OFFSET+0x00403B0,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_5__DI0_DATA_CNT_DOWN0_5             IPU_MEMORY_OFFSET+0x00403B0,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_5__DI0_DATA_CNT_UP0_5               IPU_MEMORY_OFFSET+0x00403B0,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET0_6__ADDR                             IPU_MEMORY_OFFSET+0x00403B4
+#define LPM_MEM_DI0_DW_SET0_6__EMPTY                            IPU_MEMORY_OFFSET+0x00403B4,0x00000000
+#define LPM_MEM_DI0_DW_SET0_6__FULL                             IPU_MEMORY_OFFSET+0x00403B4,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_6__DI0_DATA_CNT_DOWN0_6             IPU_MEMORY_OFFSET+0x00403B4,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_6__DI0_DATA_CNT_UP0_6               IPU_MEMORY_OFFSET+0x00403B4,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET0_7__ADDR                             IPU_MEMORY_OFFSET+0x00403B8
+#define LPM_MEM_DI0_DW_SET0_7__EMPTY                            IPU_MEMORY_OFFSET+0x00403B8,0x00000000
+#define LPM_MEM_DI0_DW_SET0_7__FULL                             IPU_MEMORY_OFFSET+0x00403B8,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_7__DI0_DATA_CNT_DOWN0_7             IPU_MEMORY_OFFSET+0x00403B8,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_7__DI0_DATA_CNT_UP0_7               IPU_MEMORY_OFFSET+0x00403B8,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET0_8__ADDR                             IPU_MEMORY_OFFSET+0x00403BC
+#define LPM_MEM_DI0_DW_SET0_8__EMPTY                            IPU_MEMORY_OFFSET+0x00403BC,0x00000000
+#define LPM_MEM_DI0_DW_SET0_8__FULL                             IPU_MEMORY_OFFSET+0x00403BC,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_8__DI0_DATA_CNT_DOWN0_8             IPU_MEMORY_OFFSET+0x00403BC,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_8__DI0_DATA_CNT_UP0_8               IPU_MEMORY_OFFSET+0x00403BC,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET0_9__ADDR                             IPU_MEMORY_OFFSET+0x00403C0
+#define LPM_MEM_DI0_DW_SET0_9__EMPTY                            IPU_MEMORY_OFFSET+0x00403C0,0x00000000
+#define LPM_MEM_DI0_DW_SET0_9__FULL                             IPU_MEMORY_OFFSET+0x00403C0,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_9__DI0_DATA_CNT_DOWN0_9             IPU_MEMORY_OFFSET+0x00403C0,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_9__DI0_DATA_CNT_UP0_9               IPU_MEMORY_OFFSET+0x00403C0,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET0_10__ADDR                            IPU_MEMORY_OFFSET+0x00403C4
+#define LPM_MEM_DI0_DW_SET0_10__EMPTY                           IPU_MEMORY_OFFSET+0x00403C4,0x00000000
+#define LPM_MEM_DI0_DW_SET0_10__FULL                            IPU_MEMORY_OFFSET+0x00403C4,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_10__DI0_DATA_CNT_DOWN0_10           IPU_MEMORY_OFFSET+0x00403C4,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_10__DI0_DATA_CNT_UP0_10             IPU_MEMORY_OFFSET+0x00403C4,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET0_11__ADDR                            IPU_MEMORY_OFFSET+0x00403C8
+#define LPM_MEM_DI0_DW_SET0_11__EMPTY                           IPU_MEMORY_OFFSET+0x00403C8,0x00000000
+#define LPM_MEM_DI0_DW_SET0_11__FULL                            IPU_MEMORY_OFFSET+0x00403C8,0xffffffff
+#define LPM_MEM_DI0_DW_SET0_11__DI0_DATA_CNT_DOWN0_11           IPU_MEMORY_OFFSET+0x00403C8,0x01FF0000
+#define LPM_MEM_DI0_DW_SET0_11__DI0_DATA_CNT_UP0_11             IPU_MEMORY_OFFSET+0x00403C8,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_0__ADDR                             IPU_MEMORY_OFFSET+0x00403CC
+#define LPM_MEM_DI0_DW_SET1_0__EMPTY                            IPU_MEMORY_OFFSET+0x00403CC,0x00000000
+#define LPM_MEM_DI0_DW_SET1_0__FULL                             IPU_MEMORY_OFFSET+0x00403CC,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_0__DI0_DATA_CNT_DOWN1_0             IPU_MEMORY_OFFSET+0x00403CC,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_0__DI0_DATA_CNT_UP1_0               IPU_MEMORY_OFFSET+0x00403CC,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_1__ADDR                             IPU_MEMORY_OFFSET+0x00403D0
+#define LPM_MEM_DI0_DW_SET1_1__EMPTY                            IPU_MEMORY_OFFSET+0x00403D0,0x00000000
+#define LPM_MEM_DI0_DW_SET1_1__FULL                             IPU_MEMORY_OFFSET+0x00403D0,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_1__DI0_DATA_CNT_DOWN1_1             IPU_MEMORY_OFFSET+0x00403D0,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_1__DI0_DATA_CNT_UP1_1               IPU_MEMORY_OFFSET+0x00403D0,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_2__ADDR                             IPU_MEMORY_OFFSET+0x00403D4
+#define LPM_MEM_DI0_DW_SET1_2__EMPTY                            IPU_MEMORY_OFFSET+0x00403D4,0x00000000
+#define LPM_MEM_DI0_DW_SET1_2__FULL                             IPU_MEMORY_OFFSET+0x00403D4,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_2__DI0_DATA_CNT_DOWN1_2             IPU_MEMORY_OFFSET+0x00403D4,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_2__DI0_DATA_CNT_UP1_2               IPU_MEMORY_OFFSET+0x00403D4,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_3__ADDR                             IPU_MEMORY_OFFSET+0x00403D8
+#define LPM_MEM_DI0_DW_SET1_3__EMPTY                            IPU_MEMORY_OFFSET+0x00403D8,0x00000000
+#define LPM_MEM_DI0_DW_SET1_3__FULL                             IPU_MEMORY_OFFSET+0x00403D8,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_3__DI0_DATA_CNT_DOWN1_3             IPU_MEMORY_OFFSET+0x00403D8,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_3__DI0_DATA_CNT_UP1_3               IPU_MEMORY_OFFSET+0x00403D8,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_4__ADDR                             IPU_MEMORY_OFFSET+0x00403DC
+#define LPM_MEM_DI0_DW_SET1_4__EMPTY                            IPU_MEMORY_OFFSET+0x00403DC,0x00000000
+#define LPM_MEM_DI0_DW_SET1_4__FULL                             IPU_MEMORY_OFFSET+0x00403DC,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_4__DI0_DATA_CNT_DOWN1_4             IPU_MEMORY_OFFSET+0x00403DC,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_4__DI0_DATA_CNT_UP1_4               IPU_MEMORY_OFFSET+0x00403DC,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_5__ADDR                             IPU_MEMORY_OFFSET+0x00403E0
+#define LPM_MEM_DI0_DW_SET1_5__EMPTY                            IPU_MEMORY_OFFSET+0x00403E0,0x00000000
+#define LPM_MEM_DI0_DW_SET1_5__FULL                             IPU_MEMORY_OFFSET+0x00403E0,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_5__DI0_DATA_CNT_DOWN1_5             IPU_MEMORY_OFFSET+0x00403E0,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_5__DI0_DATA_CNT_UP1_5               IPU_MEMORY_OFFSET+0x00403E0,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_6__ADDR                             IPU_MEMORY_OFFSET+0x00403E4
+#define LPM_MEM_DI0_DW_SET1_6__EMPTY                            IPU_MEMORY_OFFSET+0x00403E4,0x00000000
+#define LPM_MEM_DI0_DW_SET1_6__FULL                             IPU_MEMORY_OFFSET+0x00403E4,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_6__DI0_DATA_CNT_DOWN1_6             IPU_MEMORY_OFFSET+0x00403E4,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_6__DI0_DATA_CNT_UP1_6               IPU_MEMORY_OFFSET+0x00403E4,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_7__ADDR                             IPU_MEMORY_OFFSET+0x00403E8
+#define LPM_MEM_DI0_DW_SET1_7__EMPTY                            IPU_MEMORY_OFFSET+0x00403E8,0x00000000
+#define LPM_MEM_DI0_DW_SET1_7__FULL                             IPU_MEMORY_OFFSET+0x00403E8,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_7__DI0_DATA_CNT_DOWN1_7             IPU_MEMORY_OFFSET+0x00403E8,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_7__DI0_DATA_CNT_UP1_7               IPU_MEMORY_OFFSET+0x00403E8,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_8__ADDR                             IPU_MEMORY_OFFSET+0x00403EC
+#define LPM_MEM_DI0_DW_SET1_8__EMPTY                            IPU_MEMORY_OFFSET+0x00403EC,0x00000000
+#define LPM_MEM_DI0_DW_SET1_8__FULL                             IPU_MEMORY_OFFSET+0x00403EC,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_8__DI0_DATA_CNT_DOWN1_8             IPU_MEMORY_OFFSET+0x00403EC,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_8__DI0_DATA_CNT_UP1_8               IPU_MEMORY_OFFSET+0x00403EC,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_9__ADDR                             IPU_MEMORY_OFFSET+0x00403F0
+#define LPM_MEM_DI0_DW_SET1_9__EMPTY                            IPU_MEMORY_OFFSET+0x00403F0,0x00000000
+#define LPM_MEM_DI0_DW_SET1_9__FULL                             IPU_MEMORY_OFFSET+0x00403F0,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_9__DI0_DATA_CNT_DOWN1_9             IPU_MEMORY_OFFSET+0x00403F0,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_9__DI0_DATA_CNT_UP1_9               IPU_MEMORY_OFFSET+0x00403F0,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_10__ADDR                            IPU_MEMORY_OFFSET+0x00403F4
+#define LPM_MEM_DI0_DW_SET1_10__EMPTY                           IPU_MEMORY_OFFSET+0x00403F4,0x00000000
+#define LPM_MEM_DI0_DW_SET1_10__FULL                            IPU_MEMORY_OFFSET+0x00403F4,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_10__DI0_DATA_CNT_DOWN1_10           IPU_MEMORY_OFFSET+0x00403F4,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_10__DI0_DATA_CNT_UP1_10             IPU_MEMORY_OFFSET+0x00403F4,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET1_11__ADDR                            IPU_MEMORY_OFFSET+0x00403F8
+#define LPM_MEM_DI0_DW_SET1_11__EMPTY                           IPU_MEMORY_OFFSET+0x00403F8,0x00000000
+#define LPM_MEM_DI0_DW_SET1_11__FULL                            IPU_MEMORY_OFFSET+0x00403F8,0xffffffff
+#define LPM_MEM_DI0_DW_SET1_11__DI0_DATA_CNT_DOWN1_11           IPU_MEMORY_OFFSET+0x00403F8,0x01FF0000
+#define LPM_MEM_DI0_DW_SET1_11__DI0_DATA_CNT_UP1_11             IPU_MEMORY_OFFSET+0x00403F8,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_0__ADDR                             IPU_MEMORY_OFFSET+0x00403FC
+#define LPM_MEM_DI0_DW_SET2_0__EMPTY                            IPU_MEMORY_OFFSET+0x00403FC,0x00000000
+#define LPM_MEM_DI0_DW_SET2_0__FULL                             IPU_MEMORY_OFFSET+0x00403FC,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_0__DI0_DATA_CNT_DOWN2_0             IPU_MEMORY_OFFSET+0x00403FC,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_0__DI0_DATA_CNT_UP2_0               IPU_MEMORY_OFFSET+0x00403FC,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_1__ADDR                             IPU_MEMORY_OFFSET+0x0040400
+#define LPM_MEM_DI0_DW_SET2_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040400,0x00000000
+#define LPM_MEM_DI0_DW_SET2_1__FULL                             IPU_MEMORY_OFFSET+0x0040400,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_1__DI0_DATA_CNT_DOWN2_1             IPU_MEMORY_OFFSET+0x0040400,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_1__DI0_DATA_CNT_UP2_1               IPU_MEMORY_OFFSET+0x0040400,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_2__ADDR                             IPU_MEMORY_OFFSET+0x0040404
+#define LPM_MEM_DI0_DW_SET2_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040404,0x00000000
+#define LPM_MEM_DI0_DW_SET2_2__FULL                             IPU_MEMORY_OFFSET+0x0040404,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_2__DI0_DATA_CNT_DOWN2_2             IPU_MEMORY_OFFSET+0x0040404,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_2__DI0_DATA_CNT_UP2_2               IPU_MEMORY_OFFSET+0x0040404,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_3__ADDR                             IPU_MEMORY_OFFSET+0x0040408
+#define LPM_MEM_DI0_DW_SET2_3__EMPTY                            IPU_MEMORY_OFFSET+0x0040408,0x00000000
+#define LPM_MEM_DI0_DW_SET2_3__FULL                             IPU_MEMORY_OFFSET+0x0040408,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_3__DI0_DATA_CNT_DOWN2_3             IPU_MEMORY_OFFSET+0x0040408,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_3__DI0_DATA_CNT_UP2_3               IPU_MEMORY_OFFSET+0x0040408,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_4__ADDR                             IPU_MEMORY_OFFSET+0x004040C
+#define LPM_MEM_DI0_DW_SET2_4__EMPTY                            IPU_MEMORY_OFFSET+0x004040C,0x00000000
+#define LPM_MEM_DI0_DW_SET2_4__FULL                             IPU_MEMORY_OFFSET+0x004040C,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_4__DI0_DATA_CNT_DOWN2_4             IPU_MEMORY_OFFSET+0x004040C,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_4__DI0_DATA_CNT_UP2_4               IPU_MEMORY_OFFSET+0x004040C,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_5__ADDR                             IPU_MEMORY_OFFSET+0x0040410
+#define LPM_MEM_DI0_DW_SET2_5__EMPTY                            IPU_MEMORY_OFFSET+0x0040410,0x00000000
+#define LPM_MEM_DI0_DW_SET2_5__FULL                             IPU_MEMORY_OFFSET+0x0040410,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_5__DI0_DATA_CNT_DOWN2_5             IPU_MEMORY_OFFSET+0x0040410,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_5__DI0_DATA_CNT_UP2_5               IPU_MEMORY_OFFSET+0x0040410,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_6__ADDR                             IPU_MEMORY_OFFSET+0x0040414
+#define LPM_MEM_DI0_DW_SET2_6__EMPTY                            IPU_MEMORY_OFFSET+0x0040414,0x00000000
+#define LPM_MEM_DI0_DW_SET2_6__FULL                             IPU_MEMORY_OFFSET+0x0040414,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_6__DI0_DATA_CNT_DOWN2_6             IPU_MEMORY_OFFSET+0x0040414,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_6__DI0_DATA_CNT_UP2_6               IPU_MEMORY_OFFSET+0x0040414,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_7__ADDR                             IPU_MEMORY_OFFSET+0x0040418
+#define LPM_MEM_DI0_DW_SET2_7__EMPTY                            IPU_MEMORY_OFFSET+0x0040418,0x00000000
+#define LPM_MEM_DI0_DW_SET2_7__FULL                             IPU_MEMORY_OFFSET+0x0040418,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_7__DI0_DATA_CNT_DOWN2_7             IPU_MEMORY_OFFSET+0x0040418,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_7__DI0_DATA_CNT_UP2_7               IPU_MEMORY_OFFSET+0x0040418,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_8__ADDR                             IPU_MEMORY_OFFSET+0x004041C
+#define LPM_MEM_DI0_DW_SET2_8__EMPTY                            IPU_MEMORY_OFFSET+0x004041C,0x00000000
+#define LPM_MEM_DI0_DW_SET2_8__FULL                             IPU_MEMORY_OFFSET+0x004041C,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_8__DI0_DATA_CNT_DOWN2_8             IPU_MEMORY_OFFSET+0x004041C,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_8__DI0_DATA_CNT_UP2_8               IPU_MEMORY_OFFSET+0x004041C,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_9__ADDR                             IPU_MEMORY_OFFSET+0x0040420
+#define LPM_MEM_DI0_DW_SET2_9__EMPTY                            IPU_MEMORY_OFFSET+0x0040420,0x00000000
+#define LPM_MEM_DI0_DW_SET2_9__FULL                             IPU_MEMORY_OFFSET+0x0040420,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_9__DI0_DATA_CNT_DOWN2_9             IPU_MEMORY_OFFSET+0x0040420,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_9__DI0_DATA_CNT_UP2_9               IPU_MEMORY_OFFSET+0x0040420,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_10__ADDR                            IPU_MEMORY_OFFSET+0x0040424
+#define LPM_MEM_DI0_DW_SET2_10__EMPTY                           IPU_MEMORY_OFFSET+0x0040424,0x00000000
+#define LPM_MEM_DI0_DW_SET2_10__FULL                            IPU_MEMORY_OFFSET+0x0040424,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_10__DI0_DATA_CNT_DOWN2_10           IPU_MEMORY_OFFSET+0x0040424,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_10__DI0_DATA_CNT_UP2_10             IPU_MEMORY_OFFSET+0x0040424,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET2_11__ADDR                            IPU_MEMORY_OFFSET+0x0040428
+#define LPM_MEM_DI0_DW_SET2_11__EMPTY                           IPU_MEMORY_OFFSET+0x0040428,0x00000000
+#define LPM_MEM_DI0_DW_SET2_11__FULL                            IPU_MEMORY_OFFSET+0x0040428,0xffffffff
+#define LPM_MEM_DI0_DW_SET2_11__DI0_DATA_CNT_DOWN2_11           IPU_MEMORY_OFFSET+0x0040428,0x01FF0000
+#define LPM_MEM_DI0_DW_SET2_11__DI0_DATA_CNT_UP2_11             IPU_MEMORY_OFFSET+0x0040428,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_0__ADDR                             IPU_MEMORY_OFFSET+0x004042C
+#define LPM_MEM_DI0_DW_SET3_0__EMPTY                            IPU_MEMORY_OFFSET+0x004042C,0x00000000
+#define LPM_MEM_DI0_DW_SET3_0__FULL                             IPU_MEMORY_OFFSET+0x004042C,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_0__DI0_DATA_CNT_DOWN3_0             IPU_MEMORY_OFFSET+0x004042C,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_0__DI0_DATA_CNT_UP3_0               IPU_MEMORY_OFFSET+0x004042C,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_1__ADDR                             IPU_MEMORY_OFFSET+0x0040430
+#define LPM_MEM_DI0_DW_SET3_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040430,0x00000000
+#define LPM_MEM_DI0_DW_SET3_1__FULL                             IPU_MEMORY_OFFSET+0x0040430,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_1__DI0_DATA_CNT_DOWN3_1             IPU_MEMORY_OFFSET+0x0040430,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_1__DI0_DATA_CNT_UP3_1               IPU_MEMORY_OFFSET+0x0040430,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_2__ADDR                             IPU_MEMORY_OFFSET+0x0040434
+#define LPM_MEM_DI0_DW_SET3_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040434,0x00000000
+#define LPM_MEM_DI0_DW_SET3_2__FULL                             IPU_MEMORY_OFFSET+0x0040434,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_2__DI0_DATA_CNT_DOWN3_2             IPU_MEMORY_OFFSET+0x0040434,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_2__DI0_DATA_CNT_UP3_2               IPU_MEMORY_OFFSET+0x0040434,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_3__ADDR                             IPU_MEMORY_OFFSET+0x0040438
+#define LPM_MEM_DI0_DW_SET3_3__EMPTY                            IPU_MEMORY_OFFSET+0x0040438,0x00000000
+#define LPM_MEM_DI0_DW_SET3_3__FULL                             IPU_MEMORY_OFFSET+0x0040438,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_3__DI0_DATA_CNT_DOWN3_3             IPU_MEMORY_OFFSET+0x0040438,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_3__DI0_DATA_CNT_UP3_3               IPU_MEMORY_OFFSET+0x0040438,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_4__ADDR                             IPU_MEMORY_OFFSET+0x004043C
+#define LPM_MEM_DI0_DW_SET3_4__EMPTY                            IPU_MEMORY_OFFSET+0x004043C,0x00000000
+#define LPM_MEM_DI0_DW_SET3_4__FULL                             IPU_MEMORY_OFFSET+0x004043C,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_4__DI0_DATA_CNT_DOWN3_4             IPU_MEMORY_OFFSET+0x004043C,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_4__DI0_DATA_CNT_UP3_4               IPU_MEMORY_OFFSET+0x004043C,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_5__ADDR                             IPU_MEMORY_OFFSET+0x0040440
+#define LPM_MEM_DI0_DW_SET3_5__EMPTY                            IPU_MEMORY_OFFSET+0x0040440,0x00000000
+#define LPM_MEM_DI0_DW_SET3_5__FULL                             IPU_MEMORY_OFFSET+0x0040440,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_5__DI0_DATA_CNT_DOWN3_5             IPU_MEMORY_OFFSET+0x0040440,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_5__DI0_DATA_CNT_UP3_5               IPU_MEMORY_OFFSET+0x0040440,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_6__ADDR                             IPU_MEMORY_OFFSET+0x0040444
+#define LPM_MEM_DI0_DW_SET3_6__EMPTY                            IPU_MEMORY_OFFSET+0x0040444,0x00000000
+#define LPM_MEM_DI0_DW_SET3_6__FULL                             IPU_MEMORY_OFFSET+0x0040444,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_6__DI0_DATA_CNT_DOWN3_6             IPU_MEMORY_OFFSET+0x0040444,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_6__DI0_DATA_CNT_UP3_6               IPU_MEMORY_OFFSET+0x0040444,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_7__ADDR                             IPU_MEMORY_OFFSET+0x0040448
+#define LPM_MEM_DI0_DW_SET3_7__EMPTY                            IPU_MEMORY_OFFSET+0x0040448,0x00000000
+#define LPM_MEM_DI0_DW_SET3_7__FULL                             IPU_MEMORY_OFFSET+0x0040448,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_7__DI0_DATA_CNT_DOWN3_7             IPU_MEMORY_OFFSET+0x0040448,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_7__DI0_DATA_CNT_UP3_7               IPU_MEMORY_OFFSET+0x0040448,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_8__ADDR                             IPU_MEMORY_OFFSET+0x004044C
+#define LPM_MEM_DI0_DW_SET3_8__EMPTY                            IPU_MEMORY_OFFSET+0x004044C,0x00000000
+#define LPM_MEM_DI0_DW_SET3_8__FULL                             IPU_MEMORY_OFFSET+0x004044C,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_8__DI0_DATA_CNT_DOWN3_8             IPU_MEMORY_OFFSET+0x004044C,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_8__DI0_DATA_CNT_UP3_8               IPU_MEMORY_OFFSET+0x004044C,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_9__ADDR                             IPU_MEMORY_OFFSET+0x0040450
+#define LPM_MEM_DI0_DW_SET3_9__EMPTY                            IPU_MEMORY_OFFSET+0x0040450,0x00000000
+#define LPM_MEM_DI0_DW_SET3_9__FULL                             IPU_MEMORY_OFFSET+0x0040450,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_9__DI0_DATA_CNT_DOWN3_9             IPU_MEMORY_OFFSET+0x0040450,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_9__DI0_DATA_CNT_UP3_9               IPU_MEMORY_OFFSET+0x0040450,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_10__ADDR                            IPU_MEMORY_OFFSET+0x0040454
+#define LPM_MEM_DI0_DW_SET3_10__EMPTY                           IPU_MEMORY_OFFSET+0x0040454,0x00000000
+#define LPM_MEM_DI0_DW_SET3_10__FULL                            IPU_MEMORY_OFFSET+0x0040454,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_10__DI0_DATA_CNT_DOWN3_10           IPU_MEMORY_OFFSET+0x0040454,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_10__DI0_DATA_CNT_UP3_10             IPU_MEMORY_OFFSET+0x0040454,0x000001FF
+
+#define LPM_MEM_DI0_DW_SET3_11__ADDR                            IPU_MEMORY_OFFSET+0x0040458
+#define LPM_MEM_DI0_DW_SET3_11__EMPTY                           IPU_MEMORY_OFFSET+0x0040458,0x00000000
+#define LPM_MEM_DI0_DW_SET3_11__FULL                            IPU_MEMORY_OFFSET+0x0040458,0xffffffff
+#define LPM_MEM_DI0_DW_SET3_11__DI0_DATA_CNT_DOWN3_11           IPU_MEMORY_OFFSET+0x0040458,0x01FF0000
+#define LPM_MEM_DI0_DW_SET3_11__DI0_DATA_CNT_UP3_11             IPU_MEMORY_OFFSET+0x0040458,0x000001FF
+
+#define LPM_MEM_DI0_STP_REP_1__ADDR                             IPU_MEMORY_OFFSET+0x004045C
+#define LPM_MEM_DI0_STP_REP_1__EMPTY                            IPU_MEMORY_OFFSET+0x004045C,0x00000000
+#define LPM_MEM_DI0_STP_REP_1__FULL                             IPU_MEMORY_OFFSET+0x004045C,0xffffffff
+#define LPM_MEM_DI0_STP_REP_1__DI0_STEP_REPEAT_2                IPU_MEMORY_OFFSET+0x004045C,0x0FFF0000
+#define LPM_MEM_DI0_STP_REP_1__DI0_STEP_REPEAT_1                IPU_MEMORY_OFFSET+0x004045C,0x00000FFF
+
+#define LPM_MEM_DI0_STP_REP_2__ADDR                             IPU_MEMORY_OFFSET+0x0040460
+#define LPM_MEM_DI0_STP_REP_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040460,0x00000000
+#define LPM_MEM_DI0_STP_REP_2__FULL                             IPU_MEMORY_OFFSET+0x0040460,0xffffffff
+#define LPM_MEM_DI0_STP_REP_2__DI0_STEP_REPEAT_4                IPU_MEMORY_OFFSET+0x0040460,0x0FFF0000
+#define LPM_MEM_DI0_STP_REP_2__DI0_STEP_REPEAT_3                IPU_MEMORY_OFFSET+0x0040460,0x00000FFF
+
+#define LPM_MEM_DI0_STP_REP_3__ADDR                             IPU_MEMORY_OFFSET+0x0040464
+#define LPM_MEM_DI0_STP_REP_3__EMPTY                            IPU_MEMORY_OFFSET+0x0040464,0x00000000
+#define LPM_MEM_DI0_STP_REP_3__FULL                             IPU_MEMORY_OFFSET+0x0040464,0xffffffff
+#define LPM_MEM_DI0_STP_REP_3__DI0_STEP_REPEAT_6                IPU_MEMORY_OFFSET+0x0040464,0x0FFF0000
+#define LPM_MEM_DI0_STP_REP_3__DI0_STEP_REPEAT_5                IPU_MEMORY_OFFSET+0x0040464,0x00000FFF
+
+#define LPM_MEM_DI0_STP_REP_4__ADDR                             IPU_MEMORY_OFFSET+0x0040468
+#define LPM_MEM_DI0_STP_REP_4__EMPTY                            IPU_MEMORY_OFFSET+0x0040468,0x00000000
+#define LPM_MEM_DI0_STP_REP_4__FULL                             IPU_MEMORY_OFFSET+0x0040468,0xffffffff
+#define LPM_MEM_DI0_STP_REP_4__DI0_STEP_REPEAT_8                IPU_MEMORY_OFFSET+0x0040468,0x0FFF0000
+#define LPM_MEM_DI0_STP_REP_4__DI0_STEP_REPEAT_7                IPU_MEMORY_OFFSET+0x0040468,0x00000FFF
+
+#define LPM_MEM_DI0_STP_REP_9__ADDR                             IPU_MEMORY_OFFSET+0x004046C
+#define LPM_MEM_DI0_STP_REP_9__EMPTY                            IPU_MEMORY_OFFSET+0x004046C,0x00000000
+#define LPM_MEM_DI0_STP_REP_9__FULL                             IPU_MEMORY_OFFSET+0x004046C,0xffffffff
+#define LPM_MEM_DI0_STP_REP_9__DI0_STEP_REPEAT_9                IPU_MEMORY_OFFSET+0x004046C,0x00000FFF
+
+#define LPM_MEM_DI0_SER_CONF__ADDR                              IPU_MEMORY_OFFSET+0x0040470
+#define LPM_MEM_DI0_SER_CONF__EMPTY                             IPU_MEMORY_OFFSET+0x0040470,0x00000000
+#define LPM_MEM_DI0_SER_CONF__FULL                              IPU_MEMORY_OFFSET+0x0040470,0xffffffff
+#define LPM_MEM_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_R_1        IPU_MEMORY_OFFSET+0x0040470,0xF0000000
+#define LPM_MEM_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_R_0        IPU_MEMORY_OFFSET+0x0040470,0x0F000000
+#define LPM_MEM_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_W_1        IPU_MEMORY_OFFSET+0x0040470,0x00F00000
+#define LPM_MEM_DI0_SER_CONF__DI0_SERIAL_LLA_PNTR_RS_W_0        IPU_MEMORY_OFFSET+0x0040470,0x000F0000
+#define LPM_MEM_DI0_SER_CONF__DI0_SERIAL_LATCH                  IPU_MEMORY_OFFSET+0x0040470,0x0000FF00
+#define LPM_MEM_DI0_SER_CONF__DI0_LLA_SER_ACCESS                IPU_MEMORY_OFFSET+0x0040470,0x00000020
+#define LPM_MEM_DI0_SER_CONF__DI0_SER_CLK_POLARITY              IPU_MEMORY_OFFSET+0x0040470,0x00000010
+#define LPM_MEM_DI0_SER_CONF__DI0_SERIAL_DATA_POLARITY          IPU_MEMORY_OFFSET+0x0040470,0x00000008
+#define LPM_MEM_DI0_SER_CONF__DI0_SERIAL_RS_POLARITY            IPU_MEMORY_OFFSET+0x0040470,0x00000004
+#define LPM_MEM_DI0_SER_CONF__DI0_SERIAL_CS_POLARITY            IPU_MEMORY_OFFSET+0x0040470,0x00000002
+#define LPM_MEM_DI0_SER_CONF__DI0_WAIT4SERIAL                   IPU_MEMORY_OFFSET+0x0040470,0x00000001
+
+#define LPM_MEM_DI0_SSC__ADDR                                   IPU_MEMORY_OFFSET+0x0040474
+#define LPM_MEM_DI0_SSC__EMPTY                                  IPU_MEMORY_OFFSET+0x0040474,0x00000000
+#define LPM_MEM_DI0_SSC__FULL                                   IPU_MEMORY_OFFSET+0x0040474,0xffffffff
+#define LPM_MEM_DI0_SSC__DI0_PIN17_ERM                          IPU_MEMORY_OFFSET+0x0040474,0x00800000
+#define LPM_MEM_DI0_SSC__DI0_PIN16_ERM                          IPU_MEMORY_OFFSET+0x0040474,0x00400000
+#define LPM_MEM_DI0_SSC__DI0_PIN15_ERM                          IPU_MEMORY_OFFSET+0x0040474,0x00200000
+#define LPM_MEM_DI0_SSC__DI0_PIN14_ERM                          IPU_MEMORY_OFFSET+0x0040474,0x00100000
+#define LPM_MEM_DI0_SSC__DI0_PIN13_ERM                          IPU_MEMORY_OFFSET+0x0040474,0x00080000
+#define LPM_MEM_DI0_SSC__DI0_PIN12_ERM                          IPU_MEMORY_OFFSET+0x0040474,0x00040000
+#define LPM_MEM_DI0_SSC__DI0_PIN11_ERM                          IPU_MEMORY_OFFSET+0x0040474,0x00020000
+#define LPM_MEM_DI0_SSC__DI0_CS_ERM                             IPU_MEMORY_OFFSET+0x0040474,0x00010000
+#define LPM_MEM_DI0_SSC__DI0_WAIT_ON                            IPU_MEMORY_OFFSET+0x0040474,0x00000020
+#define LPM_MEM_DI0_SSC__DI0_BYTE_EN_RD_IN                      IPU_MEMORY_OFFSET+0x0040474,0x00000008
+#define LPM_MEM_DI0_SSC__DI0_BYTE_EN_PNTR                       IPU_MEMORY_OFFSET+0x0040474,0x00000007
+
+#define LPM_MEM_DI0_POL__ADDR                                   IPU_MEMORY_OFFSET+0x0040478
+#define LPM_MEM_DI0_POL__EMPTY                                  IPU_MEMORY_OFFSET+0x0040478,0x00000000
+#define LPM_MEM_DI0_POL__FULL                                   IPU_MEMORY_OFFSET+0x0040478,0xffffffff
+#define LPM_MEM_DI0_POL__DI0_WAIT_POLARITY                      IPU_MEMORY_OFFSET+0x0040478,0x04000000
+#define LPM_MEM_DI0_POL__DI0_CS1_BYTE_EN_POLARITY               IPU_MEMORY_OFFSET+0x0040478,0x02000000
+#define LPM_MEM_DI0_POL__DI0_CS0_BYTE_EN_POLARITY               IPU_MEMORY_OFFSET+0x0040478,0x01000000
+#define LPM_MEM_DI0_POL__DI0_CS1_DATA_POLARITY                  IPU_MEMORY_OFFSET+0x0040478,0x00800000
+#define LPM_MEM_DI0_POL__DI0_CS1_POLARITY_17                    IPU_MEMORY_OFFSET+0x0040478,0x00400000
+#define LPM_MEM_DI0_POL__DI0_CS1_POLARITY_16                    IPU_MEMORY_OFFSET+0x0040478,0x00200000
+#define LPM_MEM_DI0_POL__DI0_CS1_POLARITY_15                    IPU_MEMORY_OFFSET+0x0040478,0x00100000
+#define LPM_MEM_DI0_POL__DI0_CS1_POLARITY_14                    IPU_MEMORY_OFFSET+0x0040478,0x00080000
+#define LPM_MEM_DI0_POL__DI0_CS1_POLARITY_13                    IPU_MEMORY_OFFSET+0x0040478,0x00040000
+#define LPM_MEM_DI0_POL__DI0_CS1_POLARITY_12                    IPU_MEMORY_OFFSET+0x0040478,0x00020000
+#define LPM_MEM_DI0_POL__DI0_CS1_POLARITY_11                    IPU_MEMORY_OFFSET+0x0040478,0x00010000
+#define LPM_MEM_DI0_POL__DI0_CS0_DATA_POLARITY                  IPU_MEMORY_OFFSET+0x0040478,0x00008000
+#define LPM_MEM_DI0_POL__DI0_CS0_POLARITY_17                    IPU_MEMORY_OFFSET+0x0040478,0x00004000
+#define LPM_MEM_DI0_POL__DI0_CS0_POLARITY_16                    IPU_MEMORY_OFFSET+0x0040478,0x00002000
+#define LPM_MEM_DI0_POL__DI0_CS0_POLARITY_15                    IPU_MEMORY_OFFSET+0x0040478,0x00001000
+#define LPM_MEM_DI0_POL__DI0_CS0_POLARITY_14                    IPU_MEMORY_OFFSET+0x0040478,0x00000800
+#define LPM_MEM_DI0_POL__DI0_CS0_POLARITY_13                    IPU_MEMORY_OFFSET+0x0040478,0x00000400
+#define LPM_MEM_DI0_POL__DI0_CS0_POLARITY_12                    IPU_MEMORY_OFFSET+0x0040478,0x00000200
+#define LPM_MEM_DI0_POL__DI0_CS0_POLARITY_11                    IPU_MEMORY_OFFSET+0x0040478,0x00000100
+#define LPM_MEM_DI0_POL__DI0_DRDY_DATA_POLARITY                 IPU_MEMORY_OFFSET+0x0040478,0x00000080
+#define LPM_MEM_DI0_POL__DI0_DRDY_POLARITY_17                   IPU_MEMORY_OFFSET+0x0040478,0x00000040
+#define LPM_MEM_DI0_POL__DI0_DRDY_POLARITY_16                   IPU_MEMORY_OFFSET+0x0040478,0x00000020
+#define LPM_MEM_DI0_POL__DI0_DRDY_POLARITY_15                   IPU_MEMORY_OFFSET+0x0040478,0x00000010
+#define LPM_MEM_DI0_POL__DI0_DRDY_POLARITY_14                   IPU_MEMORY_OFFSET+0x0040478,0x00000008
+#define LPM_MEM_DI0_POL__DI0_DRDY_POLARITY_13                   IPU_MEMORY_OFFSET+0x0040478,0x00000004
+#define LPM_MEM_DI0_POL__DI0_DRDY_POLARITY_12                   IPU_MEMORY_OFFSET+0x0040478,0x00000002
+#define LPM_MEM_DI0_POL__DI0_DRDY_POLARITY_11                   IPU_MEMORY_OFFSET+0x0040478,0x00000001
+
+#define LPM_MEM_DI0_AW0__ADDR                                   IPU_MEMORY_OFFSET+0x004047C
+#define LPM_MEM_DI0_AW0__EMPTY                                  IPU_MEMORY_OFFSET+0x004047C,0x00000000
+#define LPM_MEM_DI0_AW0__FULL                                   IPU_MEMORY_OFFSET+0x004047C,0xffffffff
+#define LPM_MEM_DI0_AW0__DI0_AW_TRIG_SEL                        IPU_MEMORY_OFFSET+0x004047C,0xF0000000
+#define LPM_MEM_DI0_AW0__DI0_AW_HEND                            IPU_MEMORY_OFFSET+0x004047C,0x0FFF0000
+#define LPM_MEM_DI0_AW0__DI0_AW_HCOUNT_SEL                      IPU_MEMORY_OFFSET+0x004047C,0x0000F000
+#define LPM_MEM_DI0_AW0__DI0_AW_HSTART                          IPU_MEMORY_OFFSET+0x004047C,0x00000FFF
+
+#define LPM_MEM_DI0_AW1__ADDR                                   IPU_MEMORY_OFFSET+0x0040480
+#define LPM_MEM_DI0_AW1__EMPTY                                  IPU_MEMORY_OFFSET+0x0040480,0x00000000
+#define LPM_MEM_DI0_AW1__FULL                                   IPU_MEMORY_OFFSET+0x0040480,0xffffffff
+#define LPM_MEM_DI0_AW1__DI0_AW_VEND                            IPU_MEMORY_OFFSET+0x0040480,0x0FFF0000
+#define LPM_MEM_DI0_AW1__DI0_AW_VCOUNT_SEL                      IPU_MEMORY_OFFSET+0x0040480,0x0000F000
+#define LPM_MEM_DI0_AW1__DI0_AW_VSTART                          IPU_MEMORY_OFFSET+0x0040480,0x00000FFF
+
+#define LPM_MEM_DI0_SCR_CONF__ADDR                              IPU_MEMORY_OFFSET+0x0040484
+#define LPM_MEM_DI0_SCR_CONF__EMPTY                             IPU_MEMORY_OFFSET+0x0040484,0x00000000
+#define LPM_MEM_DI0_SCR_CONF__FULL                              IPU_MEMORY_OFFSET+0x0040484,0xffffffff
+#define LPM_MEM_DI0_SCR_CONF__DI0_SCREEN_HEIGHT                 IPU_MEMORY_OFFSET+0x0040484,0x00000FFF
+
+#define LPM_MEM_DI1_GENERAL__ADDR                               IPU_MEMORY_OFFSET+0x0040488
+#define LPM_MEM_DI1_GENERAL__EMPTY                              IPU_MEMORY_OFFSET+0x0040488,0x00000000
+#define LPM_MEM_DI1_GENERAL__FULL                               IPU_MEMORY_OFFSET+0x0040488,0xffffffff
+#define LPM_MEM_DI1_GENERAL__DI1_PIN8_PIN15_SEL                 IPU_MEMORY_OFFSET+0x0040488,0x80000000
+#define LPM_MEM_DI1_GENERAL__DI1_DISP_Y_SEL                     IPU_MEMORY_OFFSET+0x0040488,0x70000000
+#define LPM_MEM_DI1_GENERAL__DI1_CLOCK_STOP_MODE                IPU_MEMORY_OFFSET+0x0040488,0x0F000000
+#define LPM_MEM_DI1_GENERAL__DI1_DISP_CLOCK_INIT                IPU_MEMORY_OFFSET+0x0040488,0x00800000
+#define LPM_MEM_DI1_GENERAL__DI1_MASK_SEL                       IPU_MEMORY_OFFSET+0x0040488,0x00400000
+#define LPM_MEM_DI1_GENERAL__DI1_VSYNC_EXT                      IPU_MEMORY_OFFSET+0x0040488,0x00200000
+#define LPM_MEM_DI1_GENERAL__DI1_CLK_EXT                        IPU_MEMORY_OFFSET+0x0040488,0x00100000
+#define LPM_MEM_DI1_GENERAL__DI1_WATCHDOG_MODE                  IPU_MEMORY_OFFSET+0x0040488,0x000C0000
+#define LPM_MEM_DI1_GENERAL__DI1_POLARITY_DISP_CLK              IPU_MEMORY_OFFSET+0x0040488,0x00020000
+#define LPM_MEM_DI1_GENERAL__DI1_SYNC_COUNT_SEL                 IPU_MEMORY_OFFSET+0x0040488,0x0000F000
+#define LPM_MEM_DI1_GENERAL__DI1_ERR_TREATMENT                  IPU_MEMORY_OFFSET+0x0040488,0x00000800
+#define LPM_MEM_DI1_GENERAL__DI1_ERM_VSYNC_SEL                  IPU_MEMORY_OFFSET+0x0040488,0x00000400
+#define LPM_MEM_DI1_GENERAL__DI1_POLARITY_CS1                   IPU_MEMORY_OFFSET+0x0040488,0x00000200
+#define LPM_MEM_DI1_GENERAL__DI1_POLARITY_CS0                   IPU_MEMORY_OFFSET+0x0040488,0x00000100
+#define LPM_MEM_DI1_GENERAL__DI1_POLARITY_8                     IPU_MEMORY_OFFSET+0x0040488,0x00000080
+#define LPM_MEM_DI1_GENERAL__DI1_POLARITY_7                     IPU_MEMORY_OFFSET+0x0040488,0x00000040
+#define LPM_MEM_DI1_GENERAL__DI1_POLARITY_6                     IPU_MEMORY_OFFSET+0x0040488,0x00000020
+#define LPM_MEM_DI1_GENERAL__DI1_POLARITY_5                     IPU_MEMORY_OFFSET+0x0040488,0x00000010
+#define LPM_MEM_DI1_GENERAL__DI1_POLARITY_4                     IPU_MEMORY_OFFSET+0x0040488,0x00000008
+#define LPM_MEM_DI1_GENERAL__DI1_POLARITY_3                     IPU_MEMORY_OFFSET+0x0040488,0x00000004
+#define LPM_MEM_DI1_GENERAL__DI1_POLARITY_2                     IPU_MEMORY_OFFSET+0x0040488,0x00000002
+#define LPM_MEM_DI1_GENERAL__DI1_POLARITY_1                     IPU_MEMORY_OFFSET+0x0040488,0x00000001
+
+#define LPM_MEM_DI1_BS_CLKGEN0__ADDR                            IPU_MEMORY_OFFSET+0x004048C
+#define LPM_MEM_DI1_BS_CLKGEN0__EMPTY                           IPU_MEMORY_OFFSET+0x004048C,0x00000000
+#define LPM_MEM_DI1_BS_CLKGEN0__FULL                            IPU_MEMORY_OFFSET+0x004048C,0xffffffff
+#define LPM_MEM_DI1_BS_CLKGEN0__DI1_DISP_CLK_OFFSET             IPU_MEMORY_OFFSET+0x004048C,0x01FF0000
+#define LPM_MEM_DI1_BS_CLKGEN0__DI1_DISP_CLK_PERIOD             IPU_MEMORY_OFFSET+0x004048C,0x00000FFF
+
+#define LPM_MEM_DI1_BS_CLKGEN1__ADDR                            IPU_MEMORY_OFFSET+0x0040490
+#define LPM_MEM_DI1_BS_CLKGEN1__EMPTY                           IPU_MEMORY_OFFSET+0x0040490,0x00000000
+#define LPM_MEM_DI1_BS_CLKGEN1__FULL                            IPU_MEMORY_OFFSET+0x0040490,0xffffffff
+#define LPM_MEM_DI1_BS_CLKGEN1__DI1_DISP_CLK_DOWN               IPU_MEMORY_OFFSET+0x0040490,0x01FF0000
+#define LPM_MEM_DI1_BS_CLKGEN1__DI1_DISP_CLK_UP                 IPU_MEMORY_OFFSET+0x0040490,0x000001FF
+
+#define LPM_MEM_DI1_SW_GEN0_1__ADDR                             IPU_MEMORY_OFFSET+0x0040494
+#define LPM_MEM_DI1_SW_GEN0_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040494,0x00000000
+#define LPM_MEM_DI1_SW_GEN0_1__FULL                             IPU_MEMORY_OFFSET+0x0040494,0xffffffff
+#define LPM_MEM_DI1_SW_GEN0_1__DI1_RUN_VALUE_M1_1               IPU_MEMORY_OFFSET+0x0040494,0x7FF80000
+#define LPM_MEM_DI1_SW_GEN0_1__DI1_RUN_RESOLUTION_1             IPU_MEMORY_OFFSET+0x0040494,0x00070000
+#define LPM_MEM_DI1_SW_GEN0_1__DI1_OFFSET_VALUE_1               IPU_MEMORY_OFFSET+0x0040494,0x00007FF8
+#define LPM_MEM_DI1_SW_GEN0_1__DI1_OFFSET_RESOLUTION_1          IPU_MEMORY_OFFSET+0x0040494,0x00000007
+
+#define LPM_MEM_DI1_SW_GEN0_2__ADDR                             IPU_MEMORY_OFFSET+0x0040498
+#define LPM_MEM_DI1_SW_GEN0_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040498,0x00000000
+#define LPM_MEM_DI1_SW_GEN0_2__FULL                             IPU_MEMORY_OFFSET+0x0040498,0xffffffff
+#define LPM_MEM_DI1_SW_GEN0_2__DI1_RUN_VALUE_M1_2               IPU_MEMORY_OFFSET+0x0040498,0x7FF80000
+#define LPM_MEM_DI1_SW_GEN0_2__DI1_RUN_RESOLUTION_2             IPU_MEMORY_OFFSET+0x0040498,0x00070000
+#define LPM_MEM_DI1_SW_GEN0_2__DI1_OFFSET_VALUE_2               IPU_MEMORY_OFFSET+0x0040498,0x00007FF8
+#define LPM_MEM_DI1_SW_GEN0_2__DI1_OFFSET_RESOLUTION_2          IPU_MEMORY_OFFSET+0x0040498,0x00000007
+
+#define LPM_MEM_DI1_SW_GEN0_3__ADDR                             IPU_MEMORY_OFFSET+0x004049C
+#define LPM_MEM_DI1_SW_GEN0_3__EMPTY                            IPU_MEMORY_OFFSET+0x004049C,0x00000000
+#define LPM_MEM_DI1_SW_GEN0_3__FULL                             IPU_MEMORY_OFFSET+0x004049C,0xffffffff
+#define LPM_MEM_DI1_SW_GEN0_3__DI1_RUN_VALUE_M1_3               IPU_MEMORY_OFFSET+0x004049C,0x7FF80000
+#define LPM_MEM_DI1_SW_GEN0_3__DI1_RUN_RESOLUTION_3             IPU_MEMORY_OFFSET+0x004049C,0x00070000
+#define LPM_MEM_DI1_SW_GEN0_3__DI1_OFFSET_VALUE_3               IPU_MEMORY_OFFSET+0x004049C,0x00007FF8
+#define LPM_MEM_DI1_SW_GEN0_3__DI1_OFFSET_RESOLUTION_3          IPU_MEMORY_OFFSET+0x004049C,0x00000007
+
+#define LPM_MEM_DI1_SW_GEN0_4__ADDR                             IPU_MEMORY_OFFSET+0x00404A0
+#define LPM_MEM_DI1_SW_GEN0_4__EMPTY                            IPU_MEMORY_OFFSET+0x00404A0,0x00000000
+#define LPM_MEM_DI1_SW_GEN0_4__FULL                             IPU_MEMORY_OFFSET+0x00404A0,0xffffffff
+#define LPM_MEM_DI1_SW_GEN0_4__DI1_RUN_VALUE_M1_4               IPU_MEMORY_OFFSET+0x00404A0,0x7FF80000
+#define LPM_MEM_DI1_SW_GEN0_4__DI1_RUN_RESOLUTION_4             IPU_MEMORY_OFFSET+0x00404A0,0x00070000
+#define LPM_MEM_DI1_SW_GEN0_4__DI1_OFFSET_VALUE_4               IPU_MEMORY_OFFSET+0x00404A0,0x00007FF8
+#define LPM_MEM_DI1_SW_GEN0_4__DI1_OFFSET_RESOLUTION_4          IPU_MEMORY_OFFSET+0x00404A0,0x00000007
+
+#define LPM_MEM_DI1_SW_GEN0_5__ADDR                             IPU_MEMORY_OFFSET+0x00404A4
+#define LPM_MEM_DI1_SW_GEN0_5__EMPTY                            IPU_MEMORY_OFFSET+0x00404A4,0x00000000
+#define LPM_MEM_DI1_SW_GEN0_5__FULL                             IPU_MEMORY_OFFSET+0x00404A4,0xffffffff
+#define LPM_MEM_DI1_SW_GEN0_5__DI1_RUN_VALUE_M1_5               IPU_MEMORY_OFFSET+0x00404A4,0x7FF80000
+#define LPM_MEM_DI1_SW_GEN0_5__DI1_RUN_RESOLUTION_5             IPU_MEMORY_OFFSET+0x00404A4,0x00070000
+#define LPM_MEM_DI1_SW_GEN0_5__DI1_OFFSET_VALUE_5               IPU_MEMORY_OFFSET+0x00404A4,0x00007FF8
+#define LPM_MEM_DI1_SW_GEN0_5__DI1_OFFSET_RESOLUTION_5          IPU_MEMORY_OFFSET+0x00404A4,0x00000007
+
+#define LPM_MEM_DI1_SW_GEN0_6__ADDR                             IPU_MEMORY_OFFSET+0x00404A8
+#define LPM_MEM_DI1_SW_GEN0_6__EMPTY                            IPU_MEMORY_OFFSET+0x00404A8,0x00000000
+#define LPM_MEM_DI1_SW_GEN0_6__FULL                             IPU_MEMORY_OFFSET+0x00404A8,0xffffffff
+#define LPM_MEM_DI1_SW_GEN0_6__DI1_RUN_VALUE_M1_6               IPU_MEMORY_OFFSET+0x00404A8,0x7FF80000
+#define LPM_MEM_DI1_SW_GEN0_6__DI1_RUN_RESOLUTION_6             IPU_MEMORY_OFFSET+0x00404A8,0x00070000
+#define LPM_MEM_DI1_SW_GEN0_6__DI1_OFFSET_VALUE_6               IPU_MEMORY_OFFSET+0x00404A8,0x00007FF8
+#define LPM_MEM_DI1_SW_GEN0_6__DI1_OFFSET_RESOLUTION_6          IPU_MEMORY_OFFSET+0x00404A8,0x00000007
+
+#define LPM_MEM_DI1_SW_GEN0_7__ADDR                             IPU_MEMORY_OFFSET+0x00404AC
+#define LPM_MEM_DI1_SW_GEN0_7__EMPTY                            IPU_MEMORY_OFFSET+0x00404AC,0x00000000
+#define LPM_MEM_DI1_SW_GEN0_7__FULL                             IPU_MEMORY_OFFSET+0x00404AC,0xffffffff
+#define LPM_MEM_DI1_SW_GEN0_7__DI1_RUN_VALUE_M1_7               IPU_MEMORY_OFFSET+0x00404AC,0x7FF80000
+#define LPM_MEM_DI1_SW_GEN0_7__DI1_RUN_RESOLUTION_7             IPU_MEMORY_OFFSET+0x00404AC,0x00070000
+#define LPM_MEM_DI1_SW_GEN0_7__DI1_OFFSET_VALUE_7               IPU_MEMORY_OFFSET+0x00404AC,0x00007FF8
+#define LPM_MEM_DI1_SW_GEN0_7__DI1_OFFSET_RESOLUTION_7          IPU_MEMORY_OFFSET+0x00404AC,0x00000007
+
+#define LPM_MEM_DI1_SW_GEN0_8__ADDR                             IPU_MEMORY_OFFSET+0x00404B0
+#define LPM_MEM_DI1_SW_GEN0_8__EMPTY                            IPU_MEMORY_OFFSET+0x00404B0,0x00000000
+#define LPM_MEM_DI1_SW_GEN0_8__FULL                             IPU_MEMORY_OFFSET+0x00404B0,0xffffffff
+#define LPM_MEM_DI1_SW_GEN0_8__DI1_RUN_VALUE_M1_8               IPU_MEMORY_OFFSET+0x00404B0,0x7FF80000
+#define LPM_MEM_DI1_SW_GEN0_8__DI1_RUN_RESOLUTION_8             IPU_MEMORY_OFFSET+0x00404B0,0x00070000
+#define LPM_MEM_DI1_SW_GEN0_8__DI1_OFFSET_VALUE_8               IPU_MEMORY_OFFSET+0x00404B0,0x00007FF8
+#define LPM_MEM_DI1_SW_GEN0_8__DI1_OFFSET_RESOLUTION_8          IPU_MEMORY_OFFSET+0x00404B0,0x00000007
+
+#define LPM_MEM_DI1_SW_GEN0_9__ADDR                             IPU_MEMORY_OFFSET+0x00404B4
+#define LPM_MEM_DI1_SW_GEN0_9__EMPTY                            IPU_MEMORY_OFFSET+0x00404B4,0x00000000
+#define LPM_MEM_DI1_SW_GEN0_9__FULL                             IPU_MEMORY_OFFSET+0x00404B4,0xffffffff
+#define LPM_MEM_DI1_SW_GEN0_9__DI1_RUN_VALUE_M1_9               IPU_MEMORY_OFFSET+0x00404B4,0x7FF80000
+#define LPM_MEM_DI1_SW_GEN0_9__DI1_RUN_RESOLUTION_9             IPU_MEMORY_OFFSET+0x00404B4,0x00070000
+#define LPM_MEM_DI1_SW_GEN0_9__DI1_OFFSET_VALUE_9               IPU_MEMORY_OFFSET+0x00404B4,0x00007FF8
+#define LPM_MEM_DI1_SW_GEN0_9__DI1_OFFSET_RESOLUTION_9          IPU_MEMORY_OFFSET+0x00404B4,0x00000007
+
+#define LPM_MEM_DI1_SW_GEN1_1__ADDR                             IPU_MEMORY_OFFSET+0x00404B8
+#define LPM_MEM_DI1_SW_GEN1_1__EMPTY                            IPU_MEMORY_OFFSET+0x00404B8,0x00000000
+#define LPM_MEM_DI1_SW_GEN1_1__FULL                             IPU_MEMORY_OFFSET+0x00404B8,0xffffffff
+#define LPM_MEM_DI1_SW_GEN1_1__DI1_CNT_POLARITY_GEN_EN_1        IPU_MEMORY_OFFSET+0x00404B8,0x60000000
+#define LPM_MEM_DI1_SW_GEN1_1__DI1_CNT_AUTO_RELOAD_1            IPU_MEMORY_OFFSET+0x00404B8,0x10000000
+#define LPM_MEM_DI1_SW_GEN1_1__DI1_CNT_CLR_SEL_1                IPU_MEMORY_OFFSET+0x00404B8,0x0E000000
+#define LPM_MEM_DI1_SW_GEN1_1__DI1_CNT_DOWN_1                   IPU_MEMORY_OFFSET+0x00404B8,0x01FF0000
+#define LPM_MEM_DI1_SW_GEN1_1__DI1_CNT_POLARITY_TRIGGER_SEL_1   IPU_MEMORY_OFFSET+0x00404B8,0x00007000
+#define LPM_MEM_DI1_SW_GEN1_1__DI1_CNT_POLARITY_CLR_SEL_1       IPU_MEMORY_OFFSET+0x00404B8,0x00000E00
+#define LPM_MEM_DI1_SW_GEN1_1__DI1_CNT_UP_1                     IPU_MEMORY_OFFSET+0x00404B8,0x000001FF
+
+#define LPM_MEM_DI1_SW_GEN1_2__ADDR                             IPU_MEMORY_OFFSET+0x00404BC
+#define LPM_MEM_DI1_SW_GEN1_2__EMPTY                            IPU_MEMORY_OFFSET+0x00404BC,0x00000000
+#define LPM_MEM_DI1_SW_GEN1_2__FULL                             IPU_MEMORY_OFFSET+0x00404BC,0xffffffff
+#define LPM_MEM_DI1_SW_GEN1_2__DI1_CNT_POLARITY_GEN_EN_2        IPU_MEMORY_OFFSET+0x00404BC,0x60000000
+#define LPM_MEM_DI1_SW_GEN1_2__DI1_CNT_AUTO_RELOAD_2            IPU_MEMORY_OFFSET+0x00404BC,0x10000000
+#define LPM_MEM_DI1_SW_GEN1_2__DI1_CNT_CLR_SEL_2                IPU_MEMORY_OFFSET+0x00404BC,0x0E000000
+#define LPM_MEM_DI1_SW_GEN1_2__DI1_CNT_DOWN_2                   IPU_MEMORY_OFFSET+0x00404BC,0x01FF0000
+#define LPM_MEM_DI1_SW_GEN1_2__DI1_CNT_POLARITY_TRIGGER_SEL_2   IPU_MEMORY_OFFSET+0x00404BC,0x00007000
+#define LPM_MEM_DI1_SW_GEN1_2__DI1_CNT_POLARITY_CLR_SEL_2       IPU_MEMORY_OFFSET+0x00404BC,0x00000E00
+#define LPM_MEM_DI1_SW_GEN1_2__DI1_CNT_UP_2                     IPU_MEMORY_OFFSET+0x00404BC,0x000001FF
+
+#define LPM_MEM_DI1_SW_GEN1_3__ADDR                             IPU_MEMORY_OFFSET+0x00404C0
+#define LPM_MEM_DI1_SW_GEN1_3__EMPTY                            IPU_MEMORY_OFFSET+0x00404C0,0x00000000
+#define LPM_MEM_DI1_SW_GEN1_3__FULL                             IPU_MEMORY_OFFSET+0x00404C0,0xffffffff
+#define LPM_MEM_DI1_SW_GEN1_3__DI1_CNT_POLARITY_GEN_EN_3        IPU_MEMORY_OFFSET+0x00404C0,0x60000000
+#define LPM_MEM_DI1_SW_GEN1_3__DI1_CNT_AUTO_RELOAD_3            IPU_MEMORY_OFFSET+0x00404C0,0x10000000
+#define LPM_MEM_DI1_SW_GEN1_3__DI1_CNT_CLR_SEL_3                IPU_MEMORY_OFFSET+0x00404C0,0x0E000000
+#define LPM_MEM_DI1_SW_GEN1_3__DI1_CNT_DOWN_3                   IPU_MEMORY_OFFSET+0x00404C0,0x01FF0000
+#define LPM_MEM_DI1_SW_GEN1_3__DI1_CNT_POLARITY_TRIGGER_SEL_3   IPU_MEMORY_OFFSET+0x00404C0,0x00007000
+#define LPM_MEM_DI1_SW_GEN1_3__DI1_CNT_POLARITY_CLR_SEL_3       IPU_MEMORY_OFFSET+0x00404C0,0x00000E00
+#define LPM_MEM_DI1_SW_GEN1_3__DI1_CNT_UP_3                     IPU_MEMORY_OFFSET+0x00404C0,0x000001FF
+
+#define LPM_MEM_DI1_SW_GEN1_4__ADDR                             IPU_MEMORY_OFFSET+0x00404C4
+#define LPM_MEM_DI1_SW_GEN1_4__EMPTY                            IPU_MEMORY_OFFSET+0x00404C4,0x00000000
+#define LPM_MEM_DI1_SW_GEN1_4__FULL                             IPU_MEMORY_OFFSET+0x00404C4,0xffffffff
+#define LPM_MEM_DI1_SW_GEN1_4__DI1_CNT_POLARITY_GEN_EN_4        IPU_MEMORY_OFFSET+0x00404C4,0x60000000
+#define LPM_MEM_DI1_SW_GEN1_4__DI1_CNT_AUTO_RELOAD_4            IPU_MEMORY_OFFSET+0x00404C4,0x10000000
+#define LPM_MEM_DI1_SW_GEN1_4__DI1_CNT_CLR_SEL_4                IPU_MEMORY_OFFSET+0x00404C4,0x0E000000
+#define LPM_MEM_DI1_SW_GEN1_4__DI1_CNT_DOWN_4                   IPU_MEMORY_OFFSET+0x00404C4,0x01FF0000
+#define LPM_MEM_DI1_SW_GEN1_4__DI1_CNT_POLARITY_TRIGGER_SEL_4   IPU_MEMORY_OFFSET+0x00404C4,0x00007000
+#define LPM_MEM_DI1_SW_GEN1_4__DI1_CNT_POLARITY_CLR_SEL_4       IPU_MEMORY_OFFSET+0x00404C4,0x00000E00
+#define LPM_MEM_DI1_SW_GEN1_4__DI1_CNT_UP_4                     IPU_MEMORY_OFFSET+0x00404C4,0x000001FF
+
+#define LPM_MEM_DI1_SW_GEN1_5__ADDR                             IPU_MEMORY_OFFSET+0x00404C8
+#define LPM_MEM_DI1_SW_GEN1_5__EMPTY                            IPU_MEMORY_OFFSET+0x00404C8,0x00000000
+#define LPM_MEM_DI1_SW_GEN1_5__FULL                             IPU_MEMORY_OFFSET+0x00404C8,0xffffffff
+#define LPM_MEM_DI1_SW_GEN1_5__DI1_CNT_POLARITY_GEN_EN_5        IPU_MEMORY_OFFSET+0x00404C8,0x60000000
+#define LPM_MEM_DI1_SW_GEN1_5__DI1_CNT_AUTO_RELOAD_5            IPU_MEMORY_OFFSET+0x00404C8,0x10000000
+#define LPM_MEM_DI1_SW_GEN1_5__DI1_CNT_CLR_SEL_5                IPU_MEMORY_OFFSET+0x00404C8,0x0E000000
+#define LPM_MEM_DI1_SW_GEN1_5__DI1_CNT_DOWN_5                   IPU_MEMORY_OFFSET+0x00404C8,0x01FF0000
+#define LPM_MEM_DI1_SW_GEN1_5__DI1_CNT_POLARITY_TRIGGER_SEL_5   IPU_MEMORY_OFFSET+0x00404C8,0x00007000
+#define LPM_MEM_DI1_SW_GEN1_5__DI1_CNT_POLARITY_CLR_SEL_5       IPU_MEMORY_OFFSET+0x00404C8,0x00000E00
+#define LPM_MEM_DI1_SW_GEN1_5__DI1_CNT_UP_5                     IPU_MEMORY_OFFSET+0x00404C8,0x000001FF
+
+#define LPM_MEM_DI1_SW_GEN1_6__ADDR                             IPU_MEMORY_OFFSET+0x00404CC
+#define LPM_MEM_DI1_SW_GEN1_6__EMPTY                            IPU_MEMORY_OFFSET+0x00404CC,0x00000000
+#define LPM_MEM_DI1_SW_GEN1_6__FULL                             IPU_MEMORY_OFFSET+0x00404CC,0xffffffff
+#define LPM_MEM_DI1_SW_GEN1_6__DI1_CNT_POLARITY_GEN_EN_6        IPU_MEMORY_OFFSET+0x00404CC,0x60000000
+#define LPM_MEM_DI1_SW_GEN1_6__DI1_CNT_AUTO_RELOAD_6            IPU_MEMORY_OFFSET+0x00404CC,0x10000000
+#define LPM_MEM_DI1_SW_GEN1_6__DI1_CNT_CLR_SEL_6                IPU_MEMORY_OFFSET+0x00404CC,0x0E000000
+#define LPM_MEM_DI1_SW_GEN1_6__DI1_CNT_DOWN_6                   IPU_MEMORY_OFFSET+0x00404CC,0x01FF0000
+#define LPM_MEM_DI1_SW_GEN1_6__DI1_CNT_POLARITY_TRIGGER_SEL_6   IPU_MEMORY_OFFSET+0x00404CC,0x00007000
+#define LPM_MEM_DI1_SW_GEN1_6__DI1_CNT_POLARITY_CLR_SEL_6       IPU_MEMORY_OFFSET+0x00404CC,0x00000E00
+#define LPM_MEM_DI1_SW_GEN1_6__DI1_CNT_UP_6                     IPU_MEMORY_OFFSET+0x00404CC,0x000001FF
+
+#define LPM_MEM_DI1_SW_GEN1_7__ADDR                             IPU_MEMORY_OFFSET+0x00404D0
+#define LPM_MEM_DI1_SW_GEN1_7__EMPTY                            IPU_MEMORY_OFFSET+0x00404D0,0x00000000
+#define LPM_MEM_DI1_SW_GEN1_7__FULL                             IPU_MEMORY_OFFSET+0x00404D0,0xffffffff
+#define LPM_MEM_DI1_SW_GEN1_7__DI1_CNT_POLARITY_GEN_EN_7        IPU_MEMORY_OFFSET+0x00404D0,0x60000000
+#define LPM_MEM_DI1_SW_GEN1_7__DI1_CNT_AUTO_RELOAD_7            IPU_MEMORY_OFFSET+0x00404D0,0x10000000
+#define LPM_MEM_DI1_SW_GEN1_7__DI1_CNT_CLR_SEL_7                IPU_MEMORY_OFFSET+0x00404D0,0x0E000000
+#define LPM_MEM_DI1_SW_GEN1_7__DI1_CNT_DOWN_7                   IPU_MEMORY_OFFSET+0x00404D0,0x01FF0000
+#define LPM_MEM_DI1_SW_GEN1_7__DI1_CNT_POLARITY_TRIGGER_SEL_7   IPU_MEMORY_OFFSET+0x00404D0,0x00007000
+#define LPM_MEM_DI1_SW_GEN1_7__DI1_CNT_POLARITY_CLR_SEL_7       IPU_MEMORY_OFFSET+0x00404D0,0x00000E00
+#define LPM_MEM_DI1_SW_GEN1_7__DI1_CNT_UP_7                     IPU_MEMORY_OFFSET+0x00404D0,0x000001FF
+
+#define LPM_MEM_DI1_SW_GEN1_8__ADDR                             IPU_MEMORY_OFFSET+0x00404D4
+#define LPM_MEM_DI1_SW_GEN1_8__EMPTY                            IPU_MEMORY_OFFSET+0x00404D4,0x00000000
+#define LPM_MEM_DI1_SW_GEN1_8__FULL                             IPU_MEMORY_OFFSET+0x00404D4,0xffffffff
+#define LPM_MEM_DI1_SW_GEN1_8__DI1_CNT_POLARITY_GEN_EN_8        IPU_MEMORY_OFFSET+0x00404D4,0x60000000
+#define LPM_MEM_DI1_SW_GEN1_8__DI1_CNT_AUTO_RELOAD_8            IPU_MEMORY_OFFSET+0x00404D4,0x10000000
+#define LPM_MEM_DI1_SW_GEN1_8__DI1_CNT_CLR_SEL_8                IPU_MEMORY_OFFSET+0x00404D4,0x0E000000
+#define LPM_MEM_DI1_SW_GEN1_8__DI1_CNT_DOWN_8                   IPU_MEMORY_OFFSET+0x00404D4,0x01FF0000
+#define LPM_MEM_DI1_SW_GEN1_8__DI1_CNT_POLARITY_TRIGGER_SEL_8   IPU_MEMORY_OFFSET+0x00404D4,0x00007000
+#define LPM_MEM_DI1_SW_GEN1_8__DI1_CNT_POLARITY_CLR_SEL_8       IPU_MEMORY_OFFSET+0x00404D4,0x00000E00
+#define LPM_MEM_DI1_SW_GEN1_8__DI1_CNT_UP_8                     IPU_MEMORY_OFFSET+0x00404D4,0x000001FF
+
+#define LPM_MEM_DI1_SW_GEN1_9__ADDR                             IPU_MEMORY_OFFSET+0x00404D8
+#define LPM_MEM_DI1_SW_GEN1_9__EMPTY                            IPU_MEMORY_OFFSET+0x00404D8,0x00000000
+#define LPM_MEM_DI1_SW_GEN1_9__FULL                             IPU_MEMORY_OFFSET+0x00404D8,0xffffffff
+#define LPM_MEM_DI1_SW_GEN1_9__DI1_GENTIME_SEL_9                IPU_MEMORY_OFFSET+0x00404D8,0xE0000000
+#define LPM_MEM_DI1_SW_GEN1_9__DI1_CNT_AUTO_RELOAD_9            IPU_MEMORY_OFFSET+0x00404D8,0x10000000
+#define LPM_MEM_DI1_SW_GEN1_9__DI1_CNT_CLR_SEL_9                IPU_MEMORY_OFFSET+0x00404D8,0x0E000000
+#define LPM_MEM_DI1_SW_GEN1_9__DI1_CNT_DOWN_9                   IPU_MEMORY_OFFSET+0x00404D8,0x01FF0000
+#define LPM_MEM_DI1_SW_GEN1_9__DI1_TAG_SEL_9                    IPU_MEMORY_OFFSET+0x00404D8,0x00008000
+#define LPM_MEM_DI1_SW_GEN1_9__DI1_CNT_UP_9                     IPU_MEMORY_OFFSET+0x00404D8,0x000001FF
+
+#define LPM_MEM_DI1_SYNC_AS_GEN__ADDR                           IPU_MEMORY_OFFSET+0x00404DC
+#define LPM_MEM_DI1_SYNC_AS_GEN__EMPTY                          IPU_MEMORY_OFFSET+0x00404DC,0x00000000
+#define LPM_MEM_DI1_SYNC_AS_GEN__FULL                           IPU_MEMORY_OFFSET+0x00404DC,0xffffffff
+#define LPM_MEM_DI1_SYNC_AS_GEN__DI1_SYNC_START_EN              IPU_MEMORY_OFFSET+0x00404DC,0x10000000
+#define LPM_MEM_DI1_SYNC_AS_GEN__DI1_VSYNC_SEL                  IPU_MEMORY_OFFSET+0x00404DC,0x0000E000
+#define LPM_MEM_DI1_SYNC_AS_GEN__DI1_SYNC_START                 IPU_MEMORY_OFFSET+0x00404DC,0x00000FFF
+
+#define LPM_MEM_DI1_DW_GEN_0__ADDR                              IPU_MEMORY_OFFSET+0x00404E0
+#define LPM_MEM_DI1_DW_GEN_0__EMPTY                             IPU_MEMORY_OFFSET+0x00404E0,0x00000000
+#define LPM_MEM_DI1_DW_GEN_0__FULL                              IPU_MEMORY_OFFSET+0x00404E0,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_0__DI1_ACCESS_SIZE_0                 IPU_MEMORY_OFFSET+0x00404E0,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_0__DI1_COMPONNENT_SIZE_0             IPU_MEMORY_OFFSET+0x00404E0,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_0__DI1_CST_0                         IPU_MEMORY_OFFSET+0x00404E0,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_0__DI1_PT_6_0                        IPU_MEMORY_OFFSET+0x00404E0,0x00003000
+#define LPM_MEM_DI1_DW_GEN_0__DI1_PT_5_0                        IPU_MEMORY_OFFSET+0x00404E0,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_0__DI1_PT_4_0                        IPU_MEMORY_OFFSET+0x00404E0,0x00000300
+#define LPM_MEM_DI1_DW_GEN_0__DI1_PT_3_0                        IPU_MEMORY_OFFSET+0x00404E0,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_0__DI1_PT_2_0                        IPU_MEMORY_OFFSET+0x00404E0,0x00000030
+#define LPM_MEM_DI1_DW_GEN_0__DI1_PT_1_0                        IPU_MEMORY_OFFSET+0x00404E0,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_0__DI1_PT_0_0                        IPU_MEMORY_OFFSET+0x00404E0,0x00000003
+
+#define LPM_MEM_DI1_DW_GEN_1__ADDR                              IPU_MEMORY_OFFSET+0x00404E4
+#define LPM_MEM_DI1_DW_GEN_1__EMPTY                             IPU_MEMORY_OFFSET+0x00404E4,0x00000000
+#define LPM_MEM_DI1_DW_GEN_1__FULL                              IPU_MEMORY_OFFSET+0x00404E4,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_1__DI1_ACCESS_SIZE_1                 IPU_MEMORY_OFFSET+0x00404E4,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_1__DI1_COMPONNENT_SIZE_1             IPU_MEMORY_OFFSET+0x00404E4,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_1__DI1_CST_1                         IPU_MEMORY_OFFSET+0x00404E4,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_1__DI1_PT_6_1                        IPU_MEMORY_OFFSET+0x00404E4,0x00003000
+#define LPM_MEM_DI1_DW_GEN_1__DI1_PT_5_1                        IPU_MEMORY_OFFSET+0x00404E4,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_1__DI1_PT_4_1                        IPU_MEMORY_OFFSET+0x00404E4,0x00000300
+#define LPM_MEM_DI1_DW_GEN_1__DI1_PT_3_1                        IPU_MEMORY_OFFSET+0x00404E4,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_1__DI1_PT_2_1                        IPU_MEMORY_OFFSET+0x00404E4,0x00000030
+#define LPM_MEM_DI1_DW_GEN_1__DI1_PT_1_1                        IPU_MEMORY_OFFSET+0x00404E4,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_1__DI1_PT_0_1                        IPU_MEMORY_OFFSET+0x00404E4,0x00000003
+
+#define LPM_MEM_DI1_DW_GEN_2__ADDR                              IPU_MEMORY_OFFSET+0x00404E8
+#define LPM_MEM_DI1_DW_GEN_2__EMPTY                             IPU_MEMORY_OFFSET+0x00404E8,0x00000000
+#define LPM_MEM_DI1_DW_GEN_2__FULL                              IPU_MEMORY_OFFSET+0x00404E8,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_2__DI1_ACCESS_SIZE_2                 IPU_MEMORY_OFFSET+0x00404E8,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_2__DI1_COMPONNENT_SIZE_2             IPU_MEMORY_OFFSET+0x00404E8,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_2__DI1_CST_2                         IPU_MEMORY_OFFSET+0x00404E8,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_2__DI1_PT_6_2                        IPU_MEMORY_OFFSET+0x00404E8,0x00003000
+#define LPM_MEM_DI1_DW_GEN_2__DI1_PT_5_2                        IPU_MEMORY_OFFSET+0x00404E8,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_2__DI1_PT_4_2                        IPU_MEMORY_OFFSET+0x00404E8,0x00000300
+#define LPM_MEM_DI1_DW_GEN_2__DI1_PT_3_2                        IPU_MEMORY_OFFSET+0x00404E8,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_2__DI1_PT_2_2                        IPU_MEMORY_OFFSET+0x00404E8,0x00000030
+#define LPM_MEM_DI1_DW_GEN_2__DI1_PT_1_2                        IPU_MEMORY_OFFSET+0x00404E8,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_2__DI1_PT_0_2                        IPU_MEMORY_OFFSET+0x00404E8,0x00000003
+
+#define LPM_MEM_DI1_DW_GEN_3__ADDR                              IPU_MEMORY_OFFSET+0x00404EC
+#define LPM_MEM_DI1_DW_GEN_3__EMPTY                             IPU_MEMORY_OFFSET+0x00404EC,0x00000000
+#define LPM_MEM_DI1_DW_GEN_3__FULL                              IPU_MEMORY_OFFSET+0x00404EC,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_3__DI1_ACCESS_SIZE_3                 IPU_MEMORY_OFFSET+0x00404EC,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_3__DI1_COMPONNENT_SIZE_3             IPU_MEMORY_OFFSET+0x00404EC,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_3__DI1_CST_3                         IPU_MEMORY_OFFSET+0x00404EC,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_3__DI1_PT_6_3                        IPU_MEMORY_OFFSET+0x00404EC,0x00003000
+#define LPM_MEM_DI1_DW_GEN_3__DI1_PT_5_3                        IPU_MEMORY_OFFSET+0x00404EC,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_3__DI1_PT_4_3                        IPU_MEMORY_OFFSET+0x00404EC,0x00000300
+#define LPM_MEM_DI1_DW_GEN_3__DI1_PT_3_3                        IPU_MEMORY_OFFSET+0x00404EC,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_3__DI1_PT_2_3                        IPU_MEMORY_OFFSET+0x00404EC,0x00000030
+#define LPM_MEM_DI1_DW_GEN_3__DI1_PT_1_3                        IPU_MEMORY_OFFSET+0x00404EC,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_3__DI1_PT_0_3                        IPU_MEMORY_OFFSET+0x00404EC,0x00000003
+
+#define LPM_MEM_DI1_DW_GEN_4__ADDR                              IPU_MEMORY_OFFSET+0x00404F0
+#define LPM_MEM_DI1_DW_GEN_4__EMPTY                             IPU_MEMORY_OFFSET+0x00404F0,0x00000000
+#define LPM_MEM_DI1_DW_GEN_4__FULL                              IPU_MEMORY_OFFSET+0x00404F0,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_4__DI1_ACCESS_SIZE_4                 IPU_MEMORY_OFFSET+0x00404F0,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_4__DI1_COMPONNENT_SIZE_4             IPU_MEMORY_OFFSET+0x00404F0,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_4__DI1_CST_4                         IPU_MEMORY_OFFSET+0x00404F0,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_4__DI1_PT_6_4                        IPU_MEMORY_OFFSET+0x00404F0,0x00003000
+#define LPM_MEM_DI1_DW_GEN_4__DI1_PT_5_4                        IPU_MEMORY_OFFSET+0x00404F0,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_4__DI1_PT_4_4                        IPU_MEMORY_OFFSET+0x00404F0,0x00000300
+#define LPM_MEM_DI1_DW_GEN_4__DI1_PT_3_4                        IPU_MEMORY_OFFSET+0x00404F0,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_4__DI1_PT_2_4                        IPU_MEMORY_OFFSET+0x00404F0,0x00000030
+#define LPM_MEM_DI1_DW_GEN_4__DI1_PT_1_4                        IPU_MEMORY_OFFSET+0x00404F0,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_4__DI1_PT_0_4                        IPU_MEMORY_OFFSET+0x00404F0,0x00000003
+
+#define LPM_MEM_DI1_DW_GEN_5__ADDR                              IPU_MEMORY_OFFSET+0x00404F4
+#define LPM_MEM_DI1_DW_GEN_5__EMPTY                             IPU_MEMORY_OFFSET+0x00404F4,0x00000000
+#define LPM_MEM_DI1_DW_GEN_5__FULL                              IPU_MEMORY_OFFSET+0x00404F4,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_5__DI1_ACCESS_SIZE_5                 IPU_MEMORY_OFFSET+0x00404F4,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_5__DI1_COMPONNENT_SIZE_5             IPU_MEMORY_OFFSET+0x00404F4,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_5__DI1_CST_5                         IPU_MEMORY_OFFSET+0x00404F4,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_5__DI1_PT_6_5                        IPU_MEMORY_OFFSET+0x00404F4,0x00003000
+#define LPM_MEM_DI1_DW_GEN_5__DI1_PT_5_5                        IPU_MEMORY_OFFSET+0x00404F4,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_5__DI1_PT_4_5                        IPU_MEMORY_OFFSET+0x00404F4,0x00000300
+#define LPM_MEM_DI1_DW_GEN_5__DI1_PT_3_5                        IPU_MEMORY_OFFSET+0x00404F4,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_5__DI1_PT_2_5                        IPU_MEMORY_OFFSET+0x00404F4,0x00000030
+#define LPM_MEM_DI1_DW_GEN_5__DI1_PT_1_5                        IPU_MEMORY_OFFSET+0x00404F4,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_5__DI1_PT_0_5                        IPU_MEMORY_OFFSET+0x00404F4,0x00000003
+
+#define LPM_MEM_DI1_DW_GEN_6__ADDR                              IPU_MEMORY_OFFSET+0x00404F8
+#define LPM_MEM_DI1_DW_GEN_6__EMPTY                             IPU_MEMORY_OFFSET+0x00404F8,0x00000000
+#define LPM_MEM_DI1_DW_GEN_6__FULL                              IPU_MEMORY_OFFSET+0x00404F8,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_6__DI1_ACCESS_SIZE_6                 IPU_MEMORY_OFFSET+0x00404F8,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_6__DI1_COMPONNENT_SIZE_6             IPU_MEMORY_OFFSET+0x00404F8,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_6__DI1_CST_6                         IPU_MEMORY_OFFSET+0x00404F8,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_6__DI1_PT_6_6                        IPU_MEMORY_OFFSET+0x00404F8,0x00003000
+#define LPM_MEM_DI1_DW_GEN_6__DI1_PT_5_6                        IPU_MEMORY_OFFSET+0x00404F8,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_6__DI1_PT_4_6                        IPU_MEMORY_OFFSET+0x00404F8,0x00000300
+#define LPM_MEM_DI1_DW_GEN_6__DI1_PT_3_6                        IPU_MEMORY_OFFSET+0x00404F8,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_6__DI1_PT_2_6                        IPU_MEMORY_OFFSET+0x00404F8,0x00000030
+#define LPM_MEM_DI1_DW_GEN_6__DI1_PT_1_6                        IPU_MEMORY_OFFSET+0x00404F8,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_6__DI1_PT_0_6                        IPU_MEMORY_OFFSET+0x00404F8,0x00000003
+
+#define LPM_MEM_DI1_DW_GEN_7__ADDR                              IPU_MEMORY_OFFSET+0x00404FC
+#define LPM_MEM_DI1_DW_GEN_7__EMPTY                             IPU_MEMORY_OFFSET+0x00404FC,0x00000000
+#define LPM_MEM_DI1_DW_GEN_7__FULL                              IPU_MEMORY_OFFSET+0x00404FC,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_7__DI1_ACCESS_SIZE_7                 IPU_MEMORY_OFFSET+0x00404FC,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_7__DI1_COMPONNENT_SIZE_7             IPU_MEMORY_OFFSET+0x00404FC,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_7__DI1_CST_7                         IPU_MEMORY_OFFSET+0x00404FC,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_7__DI1_PT_6_7                        IPU_MEMORY_OFFSET+0x00404FC,0x00003000
+#define LPM_MEM_DI1_DW_GEN_7__DI1_PT_5_7                        IPU_MEMORY_OFFSET+0x00404FC,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_7__DI1_PT_4_7                        IPU_MEMORY_OFFSET+0x00404FC,0x00000300
+#define LPM_MEM_DI1_DW_GEN_7__DI1_PT_3_7                        IPU_MEMORY_OFFSET+0x00404FC,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_7__DI1_PT_2_7                        IPU_MEMORY_OFFSET+0x00404FC,0x00000030
+#define LPM_MEM_DI1_DW_GEN_7__DI1_PT_1_7                        IPU_MEMORY_OFFSET+0x00404FC,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_7__DI1_PT_0_7                        IPU_MEMORY_OFFSET+0x00404FC,0x00000003
+
+#define LPM_MEM_DI1_DW_GEN_8__ADDR                              IPU_MEMORY_OFFSET+0x0040500
+#define LPM_MEM_DI1_DW_GEN_8__EMPTY                             IPU_MEMORY_OFFSET+0x0040500,0x00000000
+#define LPM_MEM_DI1_DW_GEN_8__FULL                              IPU_MEMORY_OFFSET+0x0040500,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_8__DI1_ACCESS_SIZE_8                 IPU_MEMORY_OFFSET+0x0040500,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_8__DI1_COMPONNENT_SIZE_8             IPU_MEMORY_OFFSET+0x0040500,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_8__DI1_CST_8                         IPU_MEMORY_OFFSET+0x0040500,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_8__DI1_PT_6_8                        IPU_MEMORY_OFFSET+0x0040500,0x00003000
+#define LPM_MEM_DI1_DW_GEN_8__DI1_PT_5_8                        IPU_MEMORY_OFFSET+0x0040500,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_8__DI1_PT_4_8                        IPU_MEMORY_OFFSET+0x0040500,0x00000300
+#define LPM_MEM_DI1_DW_GEN_8__DI1_PT_3_8                        IPU_MEMORY_OFFSET+0x0040500,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_8__DI1_PT_2_8                        IPU_MEMORY_OFFSET+0x0040500,0x00000030
+#define LPM_MEM_DI1_DW_GEN_8__DI1_PT_1_8                        IPU_MEMORY_OFFSET+0x0040500,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_8__DI1_PT_0_8                        IPU_MEMORY_OFFSET+0x0040500,0x00000003
+
+#define LPM_MEM_DI1_DW_GEN_9__ADDR                              IPU_MEMORY_OFFSET+0x0040504
+#define LPM_MEM_DI1_DW_GEN_9__EMPTY                             IPU_MEMORY_OFFSET+0x0040504,0x00000000
+#define LPM_MEM_DI1_DW_GEN_9__FULL                              IPU_MEMORY_OFFSET+0x0040504,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_9__DI1_ACCESS_SIZE_9                 IPU_MEMORY_OFFSET+0x0040504,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_9__DI1_COMPONNENT_SIZE_9             IPU_MEMORY_OFFSET+0x0040504,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_9__DI1_CST_9                         IPU_MEMORY_OFFSET+0x0040504,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_9__DI1_PT_6_9                        IPU_MEMORY_OFFSET+0x0040504,0x00003000
+#define LPM_MEM_DI1_DW_GEN_9__DI1_PT_5_9                        IPU_MEMORY_OFFSET+0x0040504,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_9__DI1_PT_4_9                        IPU_MEMORY_OFFSET+0x0040504,0x00000300
+#define LPM_MEM_DI1_DW_GEN_9__DI1_PT_3_9                        IPU_MEMORY_OFFSET+0x0040504,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_9__DI1_PT_2_9                        IPU_MEMORY_OFFSET+0x0040504,0x00000030
+#define LPM_MEM_DI1_DW_GEN_9__DI1_PT_1_9                        IPU_MEMORY_OFFSET+0x0040504,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_9__DI1_PT_0_9                        IPU_MEMORY_OFFSET+0x0040504,0x00000003
+
+#define LPM_MEM_DI1_DW_GEN_10__ADDR                             IPU_MEMORY_OFFSET+0x0040508
+#define LPM_MEM_DI1_DW_GEN_10__EMPTY                            IPU_MEMORY_OFFSET+0x0040508,0x00000000
+#define LPM_MEM_DI1_DW_GEN_10__FULL                             IPU_MEMORY_OFFSET+0x0040508,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_10__DI1_ACCESS_SIZE_10               IPU_MEMORY_OFFSET+0x0040508,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_10__DI1_COMPONNENT_SIZE_10           IPU_MEMORY_OFFSET+0x0040508,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_10__DI1_CST_10                       IPU_MEMORY_OFFSET+0x0040508,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_10__DI1_PT_6_10                      IPU_MEMORY_OFFSET+0x0040508,0x00003000
+#define LPM_MEM_DI1_DW_GEN_10__DI1_PT_5_10                      IPU_MEMORY_OFFSET+0x0040508,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_10__DI1_PT_4_10                      IPU_MEMORY_OFFSET+0x0040508,0x00000300
+#define LPM_MEM_DI1_DW_GEN_10__DI1_PT_3_10                      IPU_MEMORY_OFFSET+0x0040508,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_10__DI1_PT_2_10                      IPU_MEMORY_OFFSET+0x0040508,0x00000030
+#define LPM_MEM_DI1_DW_GEN_10__DI1_PT_1_10                      IPU_MEMORY_OFFSET+0x0040508,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_10__DI1_PT_0_10                      IPU_MEMORY_OFFSET+0x0040508,0x00000003
+
+#define LPM_MEM_DI1_DW_GEN_11__ADDR                             IPU_MEMORY_OFFSET+0x004050C
+#define LPM_MEM_DI1_DW_GEN_11__EMPTY                            IPU_MEMORY_OFFSET+0x004050C,0x00000000
+#define LPM_MEM_DI1_DW_GEN_11__FULL                             IPU_MEMORY_OFFSET+0x004050C,0xffffffff
+#define LPM_MEM_DI1_DW_GEN_11__DI1_ACCESS_SIZE_11               IPU_MEMORY_OFFSET+0x004050C,0xFF000000
+#define LPM_MEM_DI1_DW_GEN_11__DI1_COMPONNENT_SIZE_11           IPU_MEMORY_OFFSET+0x004050C,0x00FF0000
+#define LPM_MEM_DI1_DW_GEN_11__DI1_CST_11                       IPU_MEMORY_OFFSET+0x004050C,0x0000C000
+#define LPM_MEM_DI1_DW_GEN_11__DI1_PT_6_11                      IPU_MEMORY_OFFSET+0x004050C,0x00003000
+#define LPM_MEM_DI1_DW_GEN_11__DI1_PT_5_11                      IPU_MEMORY_OFFSET+0x004050C,0x00000C00
+#define LPM_MEM_DI1_DW_GEN_11__DI1_PT_4_11                      IPU_MEMORY_OFFSET+0x004050C,0x00000300
+#define LPM_MEM_DI1_DW_GEN_11__DI1_PT_3_11                      IPU_MEMORY_OFFSET+0x004050C,0x000000C0
+#define LPM_MEM_DI1_DW_GEN_11__DI1_PT_2_11                      IPU_MEMORY_OFFSET+0x004050C,0x00000030
+#define LPM_MEM_DI1_DW_GEN_11__DI1_PT_1_11                      IPU_MEMORY_OFFSET+0x004050C,0x0000000C
+#define LPM_MEM_DI1_DW_GEN_11__DI1_PT_0_11                      IPU_MEMORY_OFFSET+0x004050C,0x00000003
+
+#define LPM_MEM_DI1_DW_SET0_0__ADDR                             IPU_MEMORY_OFFSET+0x0040510
+#define LPM_MEM_DI1_DW_SET0_0__EMPTY                            IPU_MEMORY_OFFSET+0x0040510,0x00000000
+#define LPM_MEM_DI1_DW_SET0_0__FULL                             IPU_MEMORY_OFFSET+0x0040510,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_0__DI1_DATA_CNT_DOWN0_0             IPU_MEMORY_OFFSET+0x0040510,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_0__DI1_DATA_CNT_UP0_0               IPU_MEMORY_OFFSET+0x0040510,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET0_1__ADDR                             IPU_MEMORY_OFFSET+0x0040514
+#define LPM_MEM_DI1_DW_SET0_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040514,0x00000000
+#define LPM_MEM_DI1_DW_SET0_1__FULL                             IPU_MEMORY_OFFSET+0x0040514,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_1__DI1_DATA_CNT_DOWN0_1             IPU_MEMORY_OFFSET+0x0040514,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_1__DI1_DATA_CNT_UP0_1               IPU_MEMORY_OFFSET+0x0040514,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET0_2__ADDR                             IPU_MEMORY_OFFSET+0x0040518
+#define LPM_MEM_DI1_DW_SET0_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040518,0x00000000
+#define LPM_MEM_DI1_DW_SET0_2__FULL                             IPU_MEMORY_OFFSET+0x0040518,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_2__DI1_DATA_CNT_DOWN0_2             IPU_MEMORY_OFFSET+0x0040518,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_2__DI1_DATA_CNT_UP0_2               IPU_MEMORY_OFFSET+0x0040518,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET0_3__ADDR                             IPU_MEMORY_OFFSET+0x004051C
+#define LPM_MEM_DI1_DW_SET0_3__EMPTY                            IPU_MEMORY_OFFSET+0x004051C,0x00000000
+#define LPM_MEM_DI1_DW_SET0_3__FULL                             IPU_MEMORY_OFFSET+0x004051C,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_3__DI1_DATA_CNT_DOWN0_3             IPU_MEMORY_OFFSET+0x004051C,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_3__DI1_DATA_CNT_UP0_3               IPU_MEMORY_OFFSET+0x004051C,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET0_4__ADDR                             IPU_MEMORY_OFFSET+0x0040520
+#define LPM_MEM_DI1_DW_SET0_4__EMPTY                            IPU_MEMORY_OFFSET+0x0040520,0x00000000
+#define LPM_MEM_DI1_DW_SET0_4__FULL                             IPU_MEMORY_OFFSET+0x0040520,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_4__DI1_DATA_CNT_DOWN0_4             IPU_MEMORY_OFFSET+0x0040520,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_4__DI1_DATA_CNT_UP0_4               IPU_MEMORY_OFFSET+0x0040520,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET0_5__ADDR                             IPU_MEMORY_OFFSET+0x0040524
+#define LPM_MEM_DI1_DW_SET0_5__EMPTY                            IPU_MEMORY_OFFSET+0x0040524,0x00000000
+#define LPM_MEM_DI1_DW_SET0_5__FULL                             IPU_MEMORY_OFFSET+0x0040524,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_5__DI1_DATA_CNT_DOWN0_5             IPU_MEMORY_OFFSET+0x0040524,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_5__DI1_DATA_CNT_UP0_5               IPU_MEMORY_OFFSET+0x0040524,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET0_6__ADDR                             IPU_MEMORY_OFFSET+0x0040528
+#define LPM_MEM_DI1_DW_SET0_6__EMPTY                            IPU_MEMORY_OFFSET+0x0040528,0x00000000
+#define LPM_MEM_DI1_DW_SET0_6__FULL                             IPU_MEMORY_OFFSET+0x0040528,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_6__DI1_DATA_CNT_DOWN0_6             IPU_MEMORY_OFFSET+0x0040528,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_6__DI1_DATA_CNT_UP0_6               IPU_MEMORY_OFFSET+0x0040528,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET0_7__ADDR                             IPU_MEMORY_OFFSET+0x004052C
+#define LPM_MEM_DI1_DW_SET0_7__EMPTY                            IPU_MEMORY_OFFSET+0x004052C,0x00000000
+#define LPM_MEM_DI1_DW_SET0_7__FULL                             IPU_MEMORY_OFFSET+0x004052C,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_7__DI1_DATA_CNT_DOWN0_7             IPU_MEMORY_OFFSET+0x004052C,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_7__DI1_DATA_CNT_UP0_7               IPU_MEMORY_OFFSET+0x004052C,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET0_8__ADDR                             IPU_MEMORY_OFFSET+0x0040530
+#define LPM_MEM_DI1_DW_SET0_8__EMPTY                            IPU_MEMORY_OFFSET+0x0040530,0x00000000
+#define LPM_MEM_DI1_DW_SET0_8__FULL                             IPU_MEMORY_OFFSET+0x0040530,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_8__DI1_DATA_CNT_DOWN0_8             IPU_MEMORY_OFFSET+0x0040530,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_8__DI1_DATA_CNT_UP0_8               IPU_MEMORY_OFFSET+0x0040530,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET0_9__ADDR                             IPU_MEMORY_OFFSET+0x0040534
+#define LPM_MEM_DI1_DW_SET0_9__EMPTY                            IPU_MEMORY_OFFSET+0x0040534,0x00000000
+#define LPM_MEM_DI1_DW_SET0_9__FULL                             IPU_MEMORY_OFFSET+0x0040534,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_9__DI1_DATA_CNT_DOWN0_9             IPU_MEMORY_OFFSET+0x0040534,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_9__DI1_DATA_CNT_UP0_9               IPU_MEMORY_OFFSET+0x0040534,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET0_10__ADDR                            IPU_MEMORY_OFFSET+0x0040538
+#define LPM_MEM_DI1_DW_SET0_10__EMPTY                           IPU_MEMORY_OFFSET+0x0040538,0x00000000
+#define LPM_MEM_DI1_DW_SET0_10__FULL                            IPU_MEMORY_OFFSET+0x0040538,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_10__DI1_DATA_CNT_DOWN0_10           IPU_MEMORY_OFFSET+0x0040538,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_10__DI1_DATA_CNT_UP0_10             IPU_MEMORY_OFFSET+0x0040538,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET0_11__ADDR                            IPU_MEMORY_OFFSET+0x004053C
+#define LPM_MEM_DI1_DW_SET0_11__EMPTY                           IPU_MEMORY_OFFSET+0x004053C,0x00000000
+#define LPM_MEM_DI1_DW_SET0_11__FULL                            IPU_MEMORY_OFFSET+0x004053C,0xffffffff
+#define LPM_MEM_DI1_DW_SET0_11__DI1_DATA_CNT_DOWN0_11           IPU_MEMORY_OFFSET+0x004053C,0x01FF0000
+#define LPM_MEM_DI1_DW_SET0_11__DI1_DATA_CNT_UP0_11             IPU_MEMORY_OFFSET+0x004053C,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_0__ADDR                             IPU_MEMORY_OFFSET+0x0040540
+#define LPM_MEM_DI1_DW_SET1_0__EMPTY                            IPU_MEMORY_OFFSET+0x0040540,0x00000000
+#define LPM_MEM_DI1_DW_SET1_0__FULL                             IPU_MEMORY_OFFSET+0x0040540,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_0__DI1_DATA_CNT_DOWN1_0             IPU_MEMORY_OFFSET+0x0040540,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_0__DI1_DATA_CNT_UP1_0               IPU_MEMORY_OFFSET+0x0040540,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_1__ADDR                             IPU_MEMORY_OFFSET+0x0040544
+#define LPM_MEM_DI1_DW_SET1_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040544,0x00000000
+#define LPM_MEM_DI1_DW_SET1_1__FULL                             IPU_MEMORY_OFFSET+0x0040544,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_1__DI1_DATA_CNT_DOWN1_1             IPU_MEMORY_OFFSET+0x0040544,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_1__DI1_DATA_CNT_UP1_1               IPU_MEMORY_OFFSET+0x0040544,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_2__ADDR                             IPU_MEMORY_OFFSET+0x0040548
+#define LPM_MEM_DI1_DW_SET1_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040548,0x00000000
+#define LPM_MEM_DI1_DW_SET1_2__FULL                             IPU_MEMORY_OFFSET+0x0040548,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_2__DI1_DATA_CNT_DOWN1_2             IPU_MEMORY_OFFSET+0x0040548,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_2__DI1_DATA_CNT_UP1_2               IPU_MEMORY_OFFSET+0x0040548,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_3__ADDR                             IPU_MEMORY_OFFSET+0x004054C
+#define LPM_MEM_DI1_DW_SET1_3__EMPTY                            IPU_MEMORY_OFFSET+0x004054C,0x00000000
+#define LPM_MEM_DI1_DW_SET1_3__FULL                             IPU_MEMORY_OFFSET+0x004054C,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_3__DI1_DATA_CNT_DOWN1_3             IPU_MEMORY_OFFSET+0x004054C,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_3__DI1_DATA_CNT_UP1_3               IPU_MEMORY_OFFSET+0x004054C,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_4__ADDR                             IPU_MEMORY_OFFSET+0x0040550
+#define LPM_MEM_DI1_DW_SET1_4__EMPTY                            IPU_MEMORY_OFFSET+0x0040550,0x00000000
+#define LPM_MEM_DI1_DW_SET1_4__FULL                             IPU_MEMORY_OFFSET+0x0040550,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_4__DI1_DATA_CNT_DOWN1_4             IPU_MEMORY_OFFSET+0x0040550,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_4__DI1_DATA_CNT_UP1_4               IPU_MEMORY_OFFSET+0x0040550,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_5__ADDR                             IPU_MEMORY_OFFSET+0x0040554
+#define LPM_MEM_DI1_DW_SET1_5__EMPTY                            IPU_MEMORY_OFFSET+0x0040554,0x00000000
+#define LPM_MEM_DI1_DW_SET1_5__FULL                             IPU_MEMORY_OFFSET+0x0040554,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_5__DI1_DATA_CNT_DOWN1_5             IPU_MEMORY_OFFSET+0x0040554,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_5__DI1_DATA_CNT_UP1_5               IPU_MEMORY_OFFSET+0x0040554,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_6__ADDR                             IPU_MEMORY_OFFSET+0x0040558
+#define LPM_MEM_DI1_DW_SET1_6__EMPTY                            IPU_MEMORY_OFFSET+0x0040558,0x00000000
+#define LPM_MEM_DI1_DW_SET1_6__FULL                             IPU_MEMORY_OFFSET+0x0040558,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_6__DI1_DATA_CNT_DOWN1_6             IPU_MEMORY_OFFSET+0x0040558,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_6__DI1_DATA_CNT_UP1_6               IPU_MEMORY_OFFSET+0x0040558,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_7__ADDR                             IPU_MEMORY_OFFSET+0x004055C
+#define LPM_MEM_DI1_DW_SET1_7__EMPTY                            IPU_MEMORY_OFFSET+0x004055C,0x00000000
+#define LPM_MEM_DI1_DW_SET1_7__FULL                             IPU_MEMORY_OFFSET+0x004055C,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_7__DI1_DATA_CNT_DOWN1_7             IPU_MEMORY_OFFSET+0x004055C,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_7__DI1_DATA_CNT_UP1_7               IPU_MEMORY_OFFSET+0x004055C,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_8__ADDR                             IPU_MEMORY_OFFSET+0x0040560
+#define LPM_MEM_DI1_DW_SET1_8__EMPTY                            IPU_MEMORY_OFFSET+0x0040560,0x00000000
+#define LPM_MEM_DI1_DW_SET1_8__FULL                             IPU_MEMORY_OFFSET+0x0040560,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_8__DI1_DATA_CNT_DOWN1_8             IPU_MEMORY_OFFSET+0x0040560,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_8__DI1_DATA_CNT_UP1_8               IPU_MEMORY_OFFSET+0x0040560,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_9__ADDR                             IPU_MEMORY_OFFSET+0x0040564
+#define LPM_MEM_DI1_DW_SET1_9__EMPTY                            IPU_MEMORY_OFFSET+0x0040564,0x00000000
+#define LPM_MEM_DI1_DW_SET1_9__FULL                             IPU_MEMORY_OFFSET+0x0040564,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_9__DI1_DATA_CNT_DOWN1_9             IPU_MEMORY_OFFSET+0x0040564,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_9__DI1_DATA_CNT_UP1_9               IPU_MEMORY_OFFSET+0x0040564,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_10__ADDR                            IPU_MEMORY_OFFSET+0x0040568
+#define LPM_MEM_DI1_DW_SET1_10__EMPTY                           IPU_MEMORY_OFFSET+0x0040568,0x00000000
+#define LPM_MEM_DI1_DW_SET1_10__FULL                            IPU_MEMORY_OFFSET+0x0040568,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_10__DI1_DATA_CNT_DOWN1_10           IPU_MEMORY_OFFSET+0x0040568,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_10__DI1_DATA_CNT_UP1_10             IPU_MEMORY_OFFSET+0x0040568,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET1_11__ADDR                            IPU_MEMORY_OFFSET+0x004056C
+#define LPM_MEM_DI1_DW_SET1_11__EMPTY                           IPU_MEMORY_OFFSET+0x004056C,0x00000000
+#define LPM_MEM_DI1_DW_SET1_11__FULL                            IPU_MEMORY_OFFSET+0x004056C,0xffffffff
+#define LPM_MEM_DI1_DW_SET1_11__DI1_DATA_CNT_DOWN1_11           IPU_MEMORY_OFFSET+0x004056C,0x01FF0000
+#define LPM_MEM_DI1_DW_SET1_11__DI1_DATA_CNT_UP1_11             IPU_MEMORY_OFFSET+0x004056C,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_0__ADDR                             IPU_MEMORY_OFFSET+0x0040570
+#define LPM_MEM_DI1_DW_SET2_0__EMPTY                            IPU_MEMORY_OFFSET+0x0040570,0x00000000
+#define LPM_MEM_DI1_DW_SET2_0__FULL                             IPU_MEMORY_OFFSET+0x0040570,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_0__DI1_DATA_CNT_DOWN2_0             IPU_MEMORY_OFFSET+0x0040570,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_0__DI1_DATA_CNT_UP2_0               IPU_MEMORY_OFFSET+0x0040570,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_1__ADDR                             IPU_MEMORY_OFFSET+0x0040574
+#define LPM_MEM_DI1_DW_SET2_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040574,0x00000000
+#define LPM_MEM_DI1_DW_SET2_1__FULL                             IPU_MEMORY_OFFSET+0x0040574,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_1__DI1_DATA_CNT_DOWN2_1             IPU_MEMORY_OFFSET+0x0040574,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_1__DI1_DATA_CNT_UP2_1               IPU_MEMORY_OFFSET+0x0040574,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_2__ADDR                             IPU_MEMORY_OFFSET+0x0040578
+#define LPM_MEM_DI1_DW_SET2_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040578,0x00000000
+#define LPM_MEM_DI1_DW_SET2_2__FULL                             IPU_MEMORY_OFFSET+0x0040578,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_2__DI1_DATA_CNT_DOWN2_2             IPU_MEMORY_OFFSET+0x0040578,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_2__DI1_DATA_CNT_UP2_2               IPU_MEMORY_OFFSET+0x0040578,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_3__ADDR                             IPU_MEMORY_OFFSET+0x004057C
+#define LPM_MEM_DI1_DW_SET2_3__EMPTY                            IPU_MEMORY_OFFSET+0x004057C,0x00000000
+#define LPM_MEM_DI1_DW_SET2_3__FULL                             IPU_MEMORY_OFFSET+0x004057C,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_3__DI1_DATA_CNT_DOWN2_3             IPU_MEMORY_OFFSET+0x004057C,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_3__DI1_DATA_CNT_UP2_3               IPU_MEMORY_OFFSET+0x004057C,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_4__ADDR                             IPU_MEMORY_OFFSET+0x0040580
+#define LPM_MEM_DI1_DW_SET2_4__EMPTY                            IPU_MEMORY_OFFSET+0x0040580,0x00000000
+#define LPM_MEM_DI1_DW_SET2_4__FULL                             IPU_MEMORY_OFFSET+0x0040580,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_4__DI1_DATA_CNT_DOWN2_4             IPU_MEMORY_OFFSET+0x0040580,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_4__DI1_DATA_CNT_UP2_4               IPU_MEMORY_OFFSET+0x0040580,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_5__ADDR                             IPU_MEMORY_OFFSET+0x0040584
+#define LPM_MEM_DI1_DW_SET2_5__EMPTY                            IPU_MEMORY_OFFSET+0x0040584,0x00000000
+#define LPM_MEM_DI1_DW_SET2_5__FULL                             IPU_MEMORY_OFFSET+0x0040584,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_5__DI1_DATA_CNT_DOWN2_5             IPU_MEMORY_OFFSET+0x0040584,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_5__DI1_DATA_CNT_UP2_5               IPU_MEMORY_OFFSET+0x0040584,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_6__ADDR                             IPU_MEMORY_OFFSET+0x0040588
+#define LPM_MEM_DI1_DW_SET2_6__EMPTY                            IPU_MEMORY_OFFSET+0x0040588,0x00000000
+#define LPM_MEM_DI1_DW_SET2_6__FULL                             IPU_MEMORY_OFFSET+0x0040588,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_6__DI1_DATA_CNT_DOWN2_6             IPU_MEMORY_OFFSET+0x0040588,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_6__DI1_DATA_CNT_UP2_6               IPU_MEMORY_OFFSET+0x0040588,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_7__ADDR                             IPU_MEMORY_OFFSET+0x004058C
+#define LPM_MEM_DI1_DW_SET2_7__EMPTY                            IPU_MEMORY_OFFSET+0x004058C,0x00000000
+#define LPM_MEM_DI1_DW_SET2_7__FULL                             IPU_MEMORY_OFFSET+0x004058C,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_7__DI1_DATA_CNT_DOWN2_7             IPU_MEMORY_OFFSET+0x004058C,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_7__DI1_DATA_CNT_UP2_7               IPU_MEMORY_OFFSET+0x004058C,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_8__ADDR                             IPU_MEMORY_OFFSET+0x0040590
+#define LPM_MEM_DI1_DW_SET2_8__EMPTY                            IPU_MEMORY_OFFSET+0x0040590,0x00000000
+#define LPM_MEM_DI1_DW_SET2_8__FULL                             IPU_MEMORY_OFFSET+0x0040590,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_8__DI1_DATA_CNT_DOWN2_8             IPU_MEMORY_OFFSET+0x0040590,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_8__DI1_DATA_CNT_UP2_8               IPU_MEMORY_OFFSET+0x0040590,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_9__ADDR                             IPU_MEMORY_OFFSET+0x0040594
+#define LPM_MEM_DI1_DW_SET2_9__EMPTY                            IPU_MEMORY_OFFSET+0x0040594,0x00000000
+#define LPM_MEM_DI1_DW_SET2_9__FULL                             IPU_MEMORY_OFFSET+0x0040594,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_9__DI1_DATA_CNT_DOWN2_9             IPU_MEMORY_OFFSET+0x0040594,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_9__DI1_DATA_CNT_UP2_9               IPU_MEMORY_OFFSET+0x0040594,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_10__ADDR                            IPU_MEMORY_OFFSET+0x0040598
+#define LPM_MEM_DI1_DW_SET2_10__EMPTY                           IPU_MEMORY_OFFSET+0x0040598,0x00000000
+#define LPM_MEM_DI1_DW_SET2_10__FULL                            IPU_MEMORY_OFFSET+0x0040598,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_10__DI1_DATA_CNT_DOWN2_10           IPU_MEMORY_OFFSET+0x0040598,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_10__DI1_DATA_CNT_UP2_10             IPU_MEMORY_OFFSET+0x0040598,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET2_11__ADDR                            IPU_MEMORY_OFFSET+0x004059C
+#define LPM_MEM_DI1_DW_SET2_11__EMPTY                           IPU_MEMORY_OFFSET+0x004059C,0x00000000
+#define LPM_MEM_DI1_DW_SET2_11__FULL                            IPU_MEMORY_OFFSET+0x004059C,0xffffffff
+#define LPM_MEM_DI1_DW_SET2_11__DI1_DATA_CNT_DOWN2_11           IPU_MEMORY_OFFSET+0x004059C,0x01FF0000
+#define LPM_MEM_DI1_DW_SET2_11__DI1_DATA_CNT_UP2_11             IPU_MEMORY_OFFSET+0x004059C,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_0__ADDR                             IPU_MEMORY_OFFSET+0x00405A0
+#define LPM_MEM_DI1_DW_SET3_0__EMPTY                            IPU_MEMORY_OFFSET+0x00405A0,0x00000000
+#define LPM_MEM_DI1_DW_SET3_0__FULL                             IPU_MEMORY_OFFSET+0x00405A0,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_0__DI1_DATA_CNT_DOWN3_0             IPU_MEMORY_OFFSET+0x00405A0,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_0__DI1_DATA_CNT_UP3_0               IPU_MEMORY_OFFSET+0x00405A0,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_1__ADDR                             IPU_MEMORY_OFFSET+0x00405A4
+#define LPM_MEM_DI1_DW_SET3_1__EMPTY                            IPU_MEMORY_OFFSET+0x00405A4,0x00000000
+#define LPM_MEM_DI1_DW_SET3_1__FULL                             IPU_MEMORY_OFFSET+0x00405A4,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_1__DI1_DATA_CNT_DOWN3_1             IPU_MEMORY_OFFSET+0x00405A4,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_1__DI1_DATA_CNT_UP3_1               IPU_MEMORY_OFFSET+0x00405A4,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_2__ADDR                             IPU_MEMORY_OFFSET+0x00405A8
+#define LPM_MEM_DI1_DW_SET3_2__EMPTY                            IPU_MEMORY_OFFSET+0x00405A8,0x00000000
+#define LPM_MEM_DI1_DW_SET3_2__FULL                             IPU_MEMORY_OFFSET+0x00405A8,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_2__DI1_DATA_CNT_DOWN3_2             IPU_MEMORY_OFFSET+0x00405A8,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_2__DI1_DATA_CNT_UP3_2               IPU_MEMORY_OFFSET+0x00405A8,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_3__ADDR                             IPU_MEMORY_OFFSET+0x00405AC
+#define LPM_MEM_DI1_DW_SET3_3__EMPTY                            IPU_MEMORY_OFFSET+0x00405AC,0x00000000
+#define LPM_MEM_DI1_DW_SET3_3__FULL                             IPU_MEMORY_OFFSET+0x00405AC,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_3__DI1_DATA_CNT_DOWN3_3             IPU_MEMORY_OFFSET+0x00405AC,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_3__DI1_DATA_CNT_UP3_3               IPU_MEMORY_OFFSET+0x00405AC,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_4__ADDR                             IPU_MEMORY_OFFSET+0x00405B0
+#define LPM_MEM_DI1_DW_SET3_4__EMPTY                            IPU_MEMORY_OFFSET+0x00405B0,0x00000000
+#define LPM_MEM_DI1_DW_SET3_4__FULL                             IPU_MEMORY_OFFSET+0x00405B0,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_4__DI1_DATA_CNT_DOWN3_4             IPU_MEMORY_OFFSET+0x00405B0,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_4__DI1_DATA_CNT_UP3_4               IPU_MEMORY_OFFSET+0x00405B0,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_5__ADDR                             IPU_MEMORY_OFFSET+0x00405B4
+#define LPM_MEM_DI1_DW_SET3_5__EMPTY                            IPU_MEMORY_OFFSET+0x00405B4,0x00000000
+#define LPM_MEM_DI1_DW_SET3_5__FULL                             IPU_MEMORY_OFFSET+0x00405B4,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_5__DI1_DATA_CNT_DOWN3_5             IPU_MEMORY_OFFSET+0x00405B4,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_5__DI1_DATA_CNT_UP3_5               IPU_MEMORY_OFFSET+0x00405B4,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_6__ADDR                             IPU_MEMORY_OFFSET+0x00405B8
+#define LPM_MEM_DI1_DW_SET3_6__EMPTY                            IPU_MEMORY_OFFSET+0x00405B8,0x00000000
+#define LPM_MEM_DI1_DW_SET3_6__FULL                             IPU_MEMORY_OFFSET+0x00405B8,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_6__DI1_DATA_CNT_DOWN3_6             IPU_MEMORY_OFFSET+0x00405B8,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_6__DI1_DATA_CNT_UP3_6               IPU_MEMORY_OFFSET+0x00405B8,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_7__ADDR                             IPU_MEMORY_OFFSET+0x00405BC
+#define LPM_MEM_DI1_DW_SET3_7__EMPTY                            IPU_MEMORY_OFFSET+0x00405BC,0x00000000
+#define LPM_MEM_DI1_DW_SET3_7__FULL                             IPU_MEMORY_OFFSET+0x00405BC,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_7__DI1_DATA_CNT_DOWN3_7             IPU_MEMORY_OFFSET+0x00405BC,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_7__DI1_DATA_CNT_UP3_7               IPU_MEMORY_OFFSET+0x00405BC,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_8__ADDR                             IPU_MEMORY_OFFSET+0x00405C0
+#define LPM_MEM_DI1_DW_SET3_8__EMPTY                            IPU_MEMORY_OFFSET+0x00405C0,0x00000000
+#define LPM_MEM_DI1_DW_SET3_8__FULL                             IPU_MEMORY_OFFSET+0x00405C0,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_8__DI1_DATA_CNT_DOWN3_8             IPU_MEMORY_OFFSET+0x00405C0,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_8__DI1_DATA_CNT_UP3_8               IPU_MEMORY_OFFSET+0x00405C0,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_9__ADDR                             IPU_MEMORY_OFFSET+0x00405C4
+#define LPM_MEM_DI1_DW_SET3_9__EMPTY                            IPU_MEMORY_OFFSET+0x00405C4,0x00000000
+#define LPM_MEM_DI1_DW_SET3_9__FULL                             IPU_MEMORY_OFFSET+0x00405C4,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_9__DI1_DATA_CNT_DOWN3_9             IPU_MEMORY_OFFSET+0x00405C4,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_9__DI1_DATA_CNT_UP3_9               IPU_MEMORY_OFFSET+0x00405C4,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_10__ADDR                            IPU_MEMORY_OFFSET+0x00405C8
+#define LPM_MEM_DI1_DW_SET3_10__EMPTY                           IPU_MEMORY_OFFSET+0x00405C8,0x00000000
+#define LPM_MEM_DI1_DW_SET3_10__FULL                            IPU_MEMORY_OFFSET+0x00405C8,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_10__DI1_DATA_CNT_DOWN3_10           IPU_MEMORY_OFFSET+0x00405C8,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_10__DI1_DATA_CNT_UP3_10             IPU_MEMORY_OFFSET+0x00405C8,0x000001FF
+
+#define LPM_MEM_DI1_DW_SET3_11__ADDR                            IPU_MEMORY_OFFSET+0x00405CC
+#define LPM_MEM_DI1_DW_SET3_11__EMPTY                           IPU_MEMORY_OFFSET+0x00405CC,0x00000000
+#define LPM_MEM_DI1_DW_SET3_11__FULL                            IPU_MEMORY_OFFSET+0x00405CC,0xffffffff
+#define LPM_MEM_DI1_DW_SET3_11__DI1_DATA_CNT_DOWN3_11           IPU_MEMORY_OFFSET+0x00405CC,0x01FF0000
+#define LPM_MEM_DI1_DW_SET3_11__DI1_DATA_CNT_UP3_11             IPU_MEMORY_OFFSET+0x00405CC,0x000001FF
+
+#define LPM_MEM_DI1_STP_REP_1__ADDR                             IPU_MEMORY_OFFSET+0x00405D0
+#define LPM_MEM_DI1_STP_REP_1__EMPTY                            IPU_MEMORY_OFFSET+0x00405D0,0x00000000
+#define LPM_MEM_DI1_STP_REP_1__FULL                             IPU_MEMORY_OFFSET+0x00405D0,0xffffffff
+#define LPM_MEM_DI1_STP_REP_1__DI1_STEP_REPEAT_2                IPU_MEMORY_OFFSET+0x00405D0,0x0FFF0000
+#define LPM_MEM_DI1_STP_REP_1__DI1_STEP_REPEAT_1                IPU_MEMORY_OFFSET+0x00405D0,0x00000FFF
+
+#define LPM_MEM_DI1_STP_REP_2__ADDR                             IPU_MEMORY_OFFSET+0x00405D4
+#define LPM_MEM_DI1_STP_REP_2__EMPTY                            IPU_MEMORY_OFFSET+0x00405D4,0x00000000
+#define LPM_MEM_DI1_STP_REP_2__FULL                             IPU_MEMORY_OFFSET+0x00405D4,0xffffffff
+#define LPM_MEM_DI1_STP_REP_2__DI1_STEP_REPEAT_4                IPU_MEMORY_OFFSET+0x00405D4,0x0FFF0000
+#define LPM_MEM_DI1_STP_REP_2__DI1_STEP_REPEAT_3                IPU_MEMORY_OFFSET+0x00405D4,0x00000FFF
+
+#define LPM_MEM_DI1_STP_REP_3__ADDR                             IPU_MEMORY_OFFSET+0x00405D8
+#define LPM_MEM_DI1_STP_REP_3__EMPTY                            IPU_MEMORY_OFFSET+0x00405D8,0x00000000
+#define LPM_MEM_DI1_STP_REP_3__FULL                             IPU_MEMORY_OFFSET+0x00405D8,0xffffffff
+#define LPM_MEM_DI1_STP_REP_3__DI1_STEP_REPEAT_6                IPU_MEMORY_OFFSET+0x00405D8,0x0FFF0000
+#define LPM_MEM_DI1_STP_REP_3__DI1_STEP_REPEAT_5                IPU_MEMORY_OFFSET+0x00405D8,0x00000FFF
+
+#define LPM_MEM_DI1_STP_REP_4__ADDR                             IPU_MEMORY_OFFSET+0x00405DC
+#define LPM_MEM_DI1_STP_REP_4__EMPTY                            IPU_MEMORY_OFFSET+0x00405DC,0x00000000
+#define LPM_MEM_DI1_STP_REP_4__FULL                             IPU_MEMORY_OFFSET+0x00405DC,0xffffffff
+#define LPM_MEM_DI1_STP_REP_4__DI1_STEP_REPEAT_8                IPU_MEMORY_OFFSET+0x00405DC,0x0FFF0000
+#define LPM_MEM_DI1_STP_REP_4__DI1_STEP_REPEAT_7                IPU_MEMORY_OFFSET+0x00405DC,0x00000FFF
+
+#define LPM_MEM_DI1_STP_REP_9__ADDR                             IPU_MEMORY_OFFSET+0x00405E0
+#define LPM_MEM_DI1_STP_REP_9__EMPTY                            IPU_MEMORY_OFFSET+0x00405E0,0x00000000
+#define LPM_MEM_DI1_STP_REP_9__FULL                             IPU_MEMORY_OFFSET+0x00405E0,0xffffffff
+#define LPM_MEM_DI1_STP_REP_9__DI1_STEP_REPEAT_9                IPU_MEMORY_OFFSET+0x00405E0,0x00000FFF
+
+#define LPM_MEM_DI1_SER_CONF__ADDR                              IPU_MEMORY_OFFSET+0x00405E4
+#define LPM_MEM_DI1_SER_CONF__EMPTY                             IPU_MEMORY_OFFSET+0x00405E4,0x00000000
+#define LPM_MEM_DI1_SER_CONF__FULL                              IPU_MEMORY_OFFSET+0x00405E4,0xffffffff
+#define LPM_MEM_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_R_1        IPU_MEMORY_OFFSET+0x00405E4,0xF0000000
+#define LPM_MEM_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_R_0        IPU_MEMORY_OFFSET+0x00405E4,0x0F000000
+#define LPM_MEM_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_W_1        IPU_MEMORY_OFFSET+0x00405E4,0x00F00000
+#define LPM_MEM_DI1_SER_CONF__DI1_SERIAL_LLA_PNTR_RS_W_0        IPU_MEMORY_OFFSET+0x00405E4,0x000F0000
+#define LPM_MEM_DI1_SER_CONF__DI1_SERIAL_LATCH                  IPU_MEMORY_OFFSET+0x00405E4,0x0000FF00
+#define LPM_MEM_DI1_SER_CONF__DI1_LLA_SER_ACCESS                IPU_MEMORY_OFFSET+0x00405E4,0x00000020
+#define LPM_MEM_DI1_SER_CONF__DI1_SER_CLK_POLARITY              IPU_MEMORY_OFFSET+0x00405E4,0x00000010
+#define LPM_MEM_DI1_SER_CONF__DI1_SERIAL_DATA_POLARITY          IPU_MEMORY_OFFSET+0x00405E4,0x00000008
+#define LPM_MEM_DI1_SER_CONF__DI1_SERIAL_RS_POLARITY            IPU_MEMORY_OFFSET+0x00405E4,0x00000004
+#define LPM_MEM_DI1_SER_CONF__DI1_SERIAL_CS_POLARITY            IPU_MEMORY_OFFSET+0x00405E4,0x00000002
+#define LPM_MEM_DI1_SER_CONF__DI1_WAIT4SERIAL                   IPU_MEMORY_OFFSET+0x00405E4,0x00000001
+
+#define LPM_MEM_DI1_SSC__ADDR                                   IPU_MEMORY_OFFSET+0x00405E8
+#define LPM_MEM_DI1_SSC__EMPTY                                  IPU_MEMORY_OFFSET+0x00405E8,0x00000000
+#define LPM_MEM_DI1_SSC__FULL                                   IPU_MEMORY_OFFSET+0x00405E8,0xffffffff
+#define LPM_MEM_DI1_SSC__DI1_PIN17_ERM                          IPU_MEMORY_OFFSET+0x00405E8,0x00800000
+#define LPM_MEM_DI1_SSC__DI1_PIN16_ERM                          IPU_MEMORY_OFFSET+0x00405E8,0x00400000
+#define LPM_MEM_DI1_SSC__DI1_PIN15_ERM                          IPU_MEMORY_OFFSET+0x00405E8,0x00200000
+#define LPM_MEM_DI1_SSC__DI1_PIN14_ERM                          IPU_MEMORY_OFFSET+0x00405E8,0x00100000
+#define LPM_MEM_DI1_SSC__DI1_PIN13_ERM                          IPU_MEMORY_OFFSET+0x00405E8,0x00080000
+#define LPM_MEM_DI1_SSC__DI1_PIN12_ERM                          IPU_MEMORY_OFFSET+0x00405E8,0x00040000
+#define LPM_MEM_DI1_SSC__DI1_PIN11_ERM                          IPU_MEMORY_OFFSET+0x00405E8,0x00020000
+#define LPM_MEM_DI1_SSC__DI1_CS_ERM                             IPU_MEMORY_OFFSET+0x00405E8,0x00010000
+#define LPM_MEM_DI1_SSC__DI1_WAIT_ON                            IPU_MEMORY_OFFSET+0x00405E8,0x00000020
+#define LPM_MEM_DI1_SSC__DI1_BYTE_EN_RD_IN                      IPU_MEMORY_OFFSET+0x00405E8,0x00000008
+#define LPM_MEM_DI1_SSC__DI1_BYTE_EN_PNTR                       IPU_MEMORY_OFFSET+0x00405E8,0x00000007
+
+#define LPM_MEM_DI1_POL__ADDR                                   IPU_MEMORY_OFFSET+0x00405EC
+#define LPM_MEM_DI1_POL__EMPTY                                  IPU_MEMORY_OFFSET+0x00405EC,0x00000000
+#define LPM_MEM_DI1_POL__FULL                                   IPU_MEMORY_OFFSET+0x00405EC,0xffffffff
+#define LPM_MEM_DI1_POL__DI1_WAIT_POLARITY                      IPU_MEMORY_OFFSET+0x00405EC,0x04000000
+#define LPM_MEM_DI1_POL__DI1_CS1_BYTE_EN_POLARITY               IPU_MEMORY_OFFSET+0x00405EC,0x02000000
+#define LPM_MEM_DI1_POL__DI1_CS0_BYTE_EN_POLARITY               IPU_MEMORY_OFFSET+0x00405EC,0x01000000
+#define LPM_MEM_DI1_POL__DI1_CS1_DATA_POLARITY                  IPU_MEMORY_OFFSET+0x00405EC,0x00800000
+#define LPM_MEM_DI1_POL__DI1_CS1_POLARITY_17                    IPU_MEMORY_OFFSET+0x00405EC,0x00400000
+#define LPM_MEM_DI1_POL__DI1_CS1_POLARITY_16                    IPU_MEMORY_OFFSET+0x00405EC,0x00200000
+#define LPM_MEM_DI1_POL__DI1_CS1_POLARITY_15                    IPU_MEMORY_OFFSET+0x00405EC,0x00100000
+#define LPM_MEM_DI1_POL__DI1_CS1_POLARITY_14                    IPU_MEMORY_OFFSET+0x00405EC,0x00080000
+#define LPM_MEM_DI1_POL__DI1_CS1_POLARITY_13                    IPU_MEMORY_OFFSET+0x00405EC,0x00040000
+#define LPM_MEM_DI1_POL__DI1_CS1_POLARITY_12                    IPU_MEMORY_OFFSET+0x00405EC,0x00020000
+#define LPM_MEM_DI1_POL__DI1_CS1_POLARITY_11                    IPU_MEMORY_OFFSET+0x00405EC,0x00010000
+#define LPM_MEM_DI1_POL__DI1_CS0_DATA_POLARITY                  IPU_MEMORY_OFFSET+0x00405EC,0x00008000
+#define LPM_MEM_DI1_POL__DI1_CS0_POLARITY_17                    IPU_MEMORY_OFFSET+0x00405EC,0x00004000
+#define LPM_MEM_DI1_POL__DI1_CS0_POLARITY_16                    IPU_MEMORY_OFFSET+0x00405EC,0x00002000
+#define LPM_MEM_DI1_POL__DI1_CS0_POLARITY_15                    IPU_MEMORY_OFFSET+0x00405EC,0x00001000
+#define LPM_MEM_DI1_POL__DI1_CS0_POLARITY_14                    IPU_MEMORY_OFFSET+0x00405EC,0x00000800
+#define LPM_MEM_DI1_POL__DI1_CS0_POLARITY_13                    IPU_MEMORY_OFFSET+0x00405EC,0x00000400
+#define LPM_MEM_DI1_POL__DI1_CS0_POLARITY_12                    IPU_MEMORY_OFFSET+0x00405EC,0x00000200
+#define LPM_MEM_DI1_POL__DI1_CS0_POLARITY_11                    IPU_MEMORY_OFFSET+0x00405EC,0x00000100
+#define LPM_MEM_DI1_POL__DI1_DRDY_DATA_POLARITY                 IPU_MEMORY_OFFSET+0x00405EC,0x00000080
+#define LPM_MEM_DI1_POL__DI1_DRDY_POLARITY_17                   IPU_MEMORY_OFFSET+0x00405EC,0x00000040
+#define LPM_MEM_DI1_POL__DI1_DRDY_POLARITY_16                   IPU_MEMORY_OFFSET+0x00405EC,0x00000020
+#define LPM_MEM_DI1_POL__DI1_DRDY_POLARITY_15                   IPU_MEMORY_OFFSET+0x00405EC,0x00000010
+#define LPM_MEM_DI1_POL__DI1_DRDY_POLARITY_14                   IPU_MEMORY_OFFSET+0x00405EC,0x00000008
+#define LPM_MEM_DI1_POL__DI1_DRDY_POLARITY_13                   IPU_MEMORY_OFFSET+0x00405EC,0x00000004
+#define LPM_MEM_DI1_POL__DI1_DRDY_POLARITY_12                   IPU_MEMORY_OFFSET+0x00405EC,0x00000002
+#define LPM_MEM_DI1_POL__DI1_DRDY_POLARITY_11                   IPU_MEMORY_OFFSET+0x00405EC,0x00000001
+
+#define LPM_MEM_DI1_AW0__ADDR                                   IPU_MEMORY_OFFSET+0x00405F0
+#define LPM_MEM_DI1_AW0__EMPTY                                  IPU_MEMORY_OFFSET+0x00405F0,0x00000000
+#define LPM_MEM_DI1_AW0__FULL                                   IPU_MEMORY_OFFSET+0x00405F0,0xffffffff
+#define LPM_MEM_DI1_AW0__DI1_AW_TRIG_SEL                        IPU_MEMORY_OFFSET+0x00405F0,0xF0000000
+#define LPM_MEM_DI1_AW0__DI1_AW_HEND                            IPU_MEMORY_OFFSET+0x00405F0,0x0FFF0000
+#define LPM_MEM_DI1_AW0__DI1_AW_HCOUNT_SEL                      IPU_MEMORY_OFFSET+0x00405F0,0x0000F000
+#define LPM_MEM_DI1_AW0__DI1_AW_HSTART                          IPU_MEMORY_OFFSET+0x00405F0,0x00000FFF
+
+#define LPM_MEM_DI1_AW1__ADDR                                   IPU_MEMORY_OFFSET+0x00405F4
+#define LPM_MEM_DI1_AW1__EMPTY                                  IPU_MEMORY_OFFSET+0x00405F4,0x00000000
+#define LPM_MEM_DI1_AW1__FULL                                   IPU_MEMORY_OFFSET+0x00405F4,0xffffffff
+#define LPM_MEM_DI1_AW1__DI1_AW_VEND                            IPU_MEMORY_OFFSET+0x00405F4,0x0FFF0000
+#define LPM_MEM_DI1_AW1__DI1_AW_VCOUNT_SEL                      IPU_MEMORY_OFFSET+0x00405F4,0x0000F000
+#define LPM_MEM_DI1_AW1__DI1_AW_VSTART                          IPU_MEMORY_OFFSET+0x00405F4,0x00000FFF
+
+#define LPM_MEM_DI1_SCR_CONF__ADDR                              IPU_MEMORY_OFFSET+0x00405F8
+#define LPM_MEM_DI1_SCR_CONF__EMPTY                             IPU_MEMORY_OFFSET+0x00405F8,0x00000000
+#define LPM_MEM_DI1_SCR_CONF__FULL                              IPU_MEMORY_OFFSET+0x00405F8,0xffffffff
+#define LPM_MEM_DI1_SCR_CONF__DI1_SCREEN_HEIGHT                 IPU_MEMORY_OFFSET+0x00405F8,0x00000FFF
+
+#define LPM_MEM_DC_READ_CH_CONF__ADDR                           IPU_MEMORY_OFFSET+0x004061C
+#define LPM_MEM_DC_READ_CH_CONF__EMPTY                          IPU_MEMORY_OFFSET+0x004061C,0x00000000
+#define LPM_MEM_DC_READ_CH_CONF__FULL                           IPU_MEMORY_OFFSET+0x004061C,0xffffffff
+#define LPM_MEM_DC_READ_CH_CONF__TIME_OUT_VALUE                 IPU_MEMORY_OFFSET+0x004061C,0xFFFF0000
+#define LPM_MEM_DC_READ_CH_CONF__CS_ID_3                        IPU_MEMORY_OFFSET+0x004061C,0x00000800
+#define LPM_MEM_DC_READ_CH_CONF__CS_ID_2                        IPU_MEMORY_OFFSET+0x004061C,0x00000400
+#define LPM_MEM_DC_READ_CH_CONF__CS_ID_1                        IPU_MEMORY_OFFSET+0x004061C,0x00000200
+#define LPM_MEM_DC_READ_CH_CONF__CS_ID_0                        IPU_MEMORY_OFFSET+0x004061C,0x00000100
+#define LPM_MEM_DC_READ_CH_CONF__CHAN_MASK_DEFAULT_0            IPU_MEMORY_OFFSET+0x004061C,0x00000040
+#define LPM_MEM_DC_READ_CH_CONF__W_SIZE_0                       IPU_MEMORY_OFFSET+0x004061C,0x00000030
+#define LPM_MEM_DC_READ_CH_CONF__PROG_DISP_ID_0                 IPU_MEMORY_OFFSET+0x004061C,0x0000000C
+#define LPM_MEM_DC_READ_CH_CONF__PROG_DI_ID_0                   IPU_MEMORY_OFFSET+0x004061C,0x00000002
+#define LPM_MEM_DC_READ_CH_CONF__RD_CHANNEL_EN                  IPU_MEMORY_OFFSET+0x004061C,0x00000001
+
+#define LPM_MEM_DC_READ_CH_ADDR__ADDR                           IPU_MEMORY_OFFSET+0x0040620
+#define LPM_MEM_DC_READ_CH_ADDR__EMPTY                          IPU_MEMORY_OFFSET+0x0040620,0x00000000
+#define LPM_MEM_DC_READ_CH_ADDR__FULL                           IPU_MEMORY_OFFSET+0x0040620,0xffffffff
+#define LPM_MEM_DC_READ_CH_ADDR__ST_ADDR_0                      IPU_MEMORY_OFFSET+0x0040620,0x1FFFFFFF
+
+#define LPM_MEM_DC_RL0_CH_0__ADDR                               IPU_MEMORY_OFFSET+0x0040624
+#define LPM_MEM_DC_RL0_CH_0__EMPTY                              IPU_MEMORY_OFFSET+0x0040624,0x00000000
+#define LPM_MEM_DC_RL0_CH_0__FULL                               IPU_MEMORY_OFFSET+0x0040624,0xffffffff
+#define LPM_MEM_DC_RL0_CH_0__COD_NL_START_CHAN_0                IPU_MEMORY_OFFSET+0x0040624,0xFF000000
+#define LPM_MEM_DC_RL0_CH_0__COD_NL_PRIORITY_CHAN_0             IPU_MEMORY_OFFSET+0x0040624,0x000F0000
+#define LPM_MEM_DC_RL0_CH_0__COD_NF_START_CHAN_0                IPU_MEMORY_OFFSET+0x0040624,0x0000FF00
+#define LPM_MEM_DC_RL0_CH_0__COD_NF_PRIORITY_CHAN_0             IPU_MEMORY_OFFSET+0x0040624,0x0000000F
+
+#define LPM_MEM_DC_RL1_CH_0__ADDR                               IPU_MEMORY_OFFSET+0x0040628
+#define LPM_MEM_DC_RL1_CH_0__EMPTY                              IPU_MEMORY_OFFSET+0x0040628,0x00000000
+#define LPM_MEM_DC_RL1_CH_0__FULL                               IPU_MEMORY_OFFSET+0x0040628,0xffffffff
+#define LPM_MEM_DC_RL1_CH_0__COD_NFIELD_START_CHAN_0            IPU_MEMORY_OFFSET+0x0040628,0xFF000000
+#define LPM_MEM_DC_RL1_CH_0__COD_NFIELD_PRIORITY_CHAN_0         IPU_MEMORY_OFFSET+0x0040628,0x000F0000
+#define LPM_MEM_DC_RL1_CH_0__COD_EOF_START_CHAN_0               IPU_MEMORY_OFFSET+0x0040628,0x0000FF00
+#define LPM_MEM_DC_RL1_CH_0__COD_EOF_PRIORITY_CHAN_0            IPU_MEMORY_OFFSET+0x0040628,0x0000000F
+
+#define LPM_MEM_DC_RL2_CH_0__ADDR                               IPU_MEMORY_OFFSET+0x004062C
+#define LPM_MEM_DC_RL2_CH_0__EMPTY                              IPU_MEMORY_OFFSET+0x004062C,0x00000000
+#define LPM_MEM_DC_RL2_CH_0__FULL                               IPU_MEMORY_OFFSET+0x004062C,0xffffffff
+#define LPM_MEM_DC_RL2_CH_0__COD_EOFIELD_START_CHAN_0           IPU_MEMORY_OFFSET+0x004062C,0xFF000000
+#define LPM_MEM_DC_RL2_CH_0__COD_EOFIELD_PRIORITY_CHAN_0        IPU_MEMORY_OFFSET+0x004062C,0x000F0000
+#define LPM_MEM_DC_RL2_CH_0__COD_EOL_START_CHAN_0               IPU_MEMORY_OFFSET+0x004062C,0x0000FF00
+#define LPM_MEM_DC_RL2_CH_0__COD_EOL_PRIORITY_CHAN_0            IPU_MEMORY_OFFSET+0x004062C,0x0000000F
+
+#define LPM_MEM_DC_RL3_CH_0__ADDR                               IPU_MEMORY_OFFSET+0x0040630
+#define LPM_MEM_DC_RL3_CH_0__EMPTY                              IPU_MEMORY_OFFSET+0x0040630,0x00000000
+#define LPM_MEM_DC_RL3_CH_0__FULL                               IPU_MEMORY_OFFSET+0x0040630,0xffffffff
+#define LPM_MEM_DC_RL3_CH_0__COD_NEW_CHAN_START_CHAN_0          IPU_MEMORY_OFFSET+0x0040630,0xFF000000
+#define LPM_MEM_DC_RL3_CH_0__COD_NEW_CHAN_PRIORITY_CHAN_0       IPU_MEMORY_OFFSET+0x0040630,0x000F0000
+#define LPM_MEM_DC_RL3_CH_0__COD_NEW_ADDR_START_CHAN_0          IPU_MEMORY_OFFSET+0x0040630,0x0000FF00
+#define LPM_MEM_DC_RL3_CH_0__COD_NEW_ADDR_PRIORITY_CHAN_0       IPU_MEMORY_OFFSET+0x0040630,0x0000000F
+
+#define LPM_MEM_DC_RL4_CH_0__ADDR                               IPU_MEMORY_OFFSET+0x0040634
+#define LPM_MEM_DC_RL4_CH_0__EMPTY                              IPU_MEMORY_OFFSET+0x0040634,0x00000000
+#define LPM_MEM_DC_RL4_CH_0__FULL                               IPU_MEMORY_OFFSET+0x0040634,0xffffffff
+#define LPM_MEM_DC_RL4_CH_0__COD_NEW_DATA_START_CHAN_0          IPU_MEMORY_OFFSET+0x0040634,0x0000FF00
+#define LPM_MEM_DC_RL4_CH_0__COD_NEW_DATA_PRIORITY_CHAN_0       IPU_MEMORY_OFFSET+0x0040634,0x0000000F
+
+#define LPM_MEM_DC_WR_CH_CONF_1__ADDR                           IPU_MEMORY_OFFSET+0x0040638
+#define LPM_MEM_DC_WR_CH_CONF_1__EMPTY                          IPU_MEMORY_OFFSET+0x0040638,0x00000000
+#define LPM_MEM_DC_WR_CH_CONF_1__FULL                           IPU_MEMORY_OFFSET+0x0040638,0xffffffff
+#define LPM_MEM_DC_WR_CH_CONF_1__PROG_START_TIME_1              IPU_MEMORY_OFFSET+0x0040638,0x07FF0000
+#define LPM_MEM_DC_WR_CH_CONF_1__FIELD_MODE_1                   IPU_MEMORY_OFFSET+0x0040638,0x00000200
+#define LPM_MEM_DC_WR_CH_CONF_1__CHAN_MASK_DEFAULT_1            IPU_MEMORY_OFFSET+0x0040638,0x00000100
+#define LPM_MEM_DC_WR_CH_CONF_1__PROG_CHAN_TYP_1                IPU_MEMORY_OFFSET+0x0040638,0x000000E0
+#define LPM_MEM_DC_WR_CH_CONF_1__PROG_DISP_ID_1                 IPU_MEMORY_OFFSET+0x0040638,0x00000018
+#define LPM_MEM_DC_WR_CH_CONF_1__PROG_DI_ID_1                   IPU_MEMORY_OFFSET+0x0040638,0x00000004
+#define LPM_MEM_DC_WR_CH_CONF_1__W_SIZE_1                       IPU_MEMORY_OFFSET+0x0040638,0x00000003
+
+#define LPM_MEM_DC_WR_CH_ADDR_1__ADDR                           IPU_MEMORY_OFFSET+0x004063C
+#define LPM_MEM_DC_WR_CH_ADDR_1__EMPTY                          IPU_MEMORY_OFFSET+0x004063C,0x00000000
+#define LPM_MEM_DC_WR_CH_ADDR_1__FULL                           IPU_MEMORY_OFFSET+0x004063C,0xffffffff
+#define LPM_MEM_DC_WR_CH_ADDR_1__ST_ADDR_1                      IPU_MEMORY_OFFSET+0x004063C,0x1FFFFFFF
+
+#define LPM_MEM_DC_RL0_CH_1__ADDR                               IPU_MEMORY_OFFSET+0x0040640
+#define LPM_MEM_DC_RL0_CH_1__EMPTY                              IPU_MEMORY_OFFSET+0x0040640,0x00000000
+#define LPM_MEM_DC_RL0_CH_1__FULL                               IPU_MEMORY_OFFSET+0x0040640,0xffffffff
+#define LPM_MEM_DC_RL0_CH_1__COD_NL_START_CHAN_1                IPU_MEMORY_OFFSET+0x0040640,0xFF000000
+#define LPM_MEM_DC_RL0_CH_1__COD_NL_PRIORITY_CHAN_1             IPU_MEMORY_OFFSET+0x0040640,0x000F0000
+#define LPM_MEM_DC_RL0_CH_1__COD_NF_START_CHAN_1                IPU_MEMORY_OFFSET+0x0040640,0x0000FF00
+#define LPM_MEM_DC_RL0_CH_1__COD_NF_PRIORITY_CHAN_1             IPU_MEMORY_OFFSET+0x0040640,0x0000000F
+
+#define LPM_MEM_DC_RL1_CH_1__ADDR                               IPU_MEMORY_OFFSET+0x0040644
+#define LPM_MEM_DC_RL1_CH_1__EMPTY                              IPU_MEMORY_OFFSET+0x0040644,0x00000000
+#define LPM_MEM_DC_RL1_CH_1__FULL                               IPU_MEMORY_OFFSET+0x0040644,0xffffffff
+#define LPM_MEM_DC_RL1_CH_1__COD_NFIELD_START_CHAN_1            IPU_MEMORY_OFFSET+0x0040644,0xFF000000
+#define LPM_MEM_DC_RL1_CH_1__COD_NFIELD_PRIORITY_CHAN_1         IPU_MEMORY_OFFSET+0x0040644,0x000F0000
+#define LPM_MEM_DC_RL1_CH_1__COD_EOF_START_CHAN_1               IPU_MEMORY_OFFSET+0x0040644,0x0000FF00
+#define LPM_MEM_DC_RL1_CH_1__COD_EOF_PRIORITY_CHAN_1            IPU_MEMORY_OFFSET+0x0040644,0x0000000F
+
+#define LPM_MEM_DC_RL2_CH_1__ADDR                               IPU_MEMORY_OFFSET+0x0040648
+#define LPM_MEM_DC_RL2_CH_1__EMPTY                              IPU_MEMORY_OFFSET+0x0040648,0x00000000
+#define LPM_MEM_DC_RL2_CH_1__FULL                               IPU_MEMORY_OFFSET+0x0040648,0xffffffff
+#define LPM_MEM_DC_RL2_CH_1__COD_EOFIELD_START_CHAN_1           IPU_MEMORY_OFFSET+0x0040648,0xFF000000
+#define LPM_MEM_DC_RL2_CH_1__COD_EOFIELD_PRIORITY_CHAN_1        IPU_MEMORY_OFFSET+0x0040648,0x000F0000
+#define LPM_MEM_DC_RL2_CH_1__COD_EOL_START_CHAN_1               IPU_MEMORY_OFFSET+0x0040648,0x0000FF00
+#define LPM_MEM_DC_RL2_CH_1__COD_EOL_PRIORITY_CHAN_1            IPU_MEMORY_OFFSET+0x0040648,0x0000000F
+
+#define LPM_MEM_DC_RL3_CH_1__ADDR                               IPU_MEMORY_OFFSET+0x004064C
+#define LPM_MEM_DC_RL3_CH_1__EMPTY                              IPU_MEMORY_OFFSET+0x004064C,0x00000000
+#define LPM_MEM_DC_RL3_CH_1__FULL                               IPU_MEMORY_OFFSET+0x004064C,0xffffffff
+#define LPM_MEM_DC_RL3_CH_1__COD_NEW_CHAN_START_CHAN_1          IPU_MEMORY_OFFSET+0x004064C,0xFF000000
+#define LPM_MEM_DC_RL3_CH_1__COD_NEW_CHAN_PRIORITY_CHAN_1       IPU_MEMORY_OFFSET+0x004064C,0x000F0000
+#define LPM_MEM_DC_RL3_CH_1__COD_NEW_ADDR_START_CHAN_1          IPU_MEMORY_OFFSET+0x004064C,0x0000FF00
+#define LPM_MEM_DC_RL3_CH_1__COD_NEW_ADDR_PRIORITY_CHAN_1       IPU_MEMORY_OFFSET+0x004064C,0x0000000F
+
+#define LPM_MEM_DC_RL4_CH_1__ADDR                               IPU_MEMORY_OFFSET+0x0040650
+#define LPM_MEM_DC_RL4_CH_1__EMPTY                              IPU_MEMORY_OFFSET+0x0040650,0x00000000
+#define LPM_MEM_DC_RL4_CH_1__FULL                               IPU_MEMORY_OFFSET+0x0040650,0xffffffff
+#define LPM_MEM_DC_RL4_CH_1__COD_NEW_DATA_START_CHAN_1          IPU_MEMORY_OFFSET+0x0040650,0x0000FF00
+#define LPM_MEM_DC_RL4_CH_1__COD_NEW_DATA_PRIORITY_CHAN_1       IPU_MEMORY_OFFSET+0x0040650,0x0000000F
+
+#define LPM_MEM_DC_WR_CH_CONF_2__ADDR                           IPU_MEMORY_OFFSET+0x0040654
+#define LPM_MEM_DC_WR_CH_CONF_2__EMPTY                          IPU_MEMORY_OFFSET+0x0040654,0x00000000
+#define LPM_MEM_DC_WR_CH_CONF_2__FULL                           IPU_MEMORY_OFFSET+0x0040654,0xffffffff
+#define LPM_MEM_DC_WR_CH_CONF_2__PROG_START_TIME_2              IPU_MEMORY_OFFSET+0x0040654,0x07FF0000
+#define LPM_MEM_DC_WR_CH_CONF_2__CHAN_MASK_DEFAULT_2            IPU_MEMORY_OFFSET+0x0040654,0x00000100
+#define LPM_MEM_DC_WR_CH_CONF_2__PROG_CHAN_TYP_2                IPU_MEMORY_OFFSET+0x0040654,0x000000E0
+#define LPM_MEM_DC_WR_CH_CONF_2__PROG_DISP_ID_2                 IPU_MEMORY_OFFSET+0x0040654,0x00000018
+#define LPM_MEM_DC_WR_CH_CONF_2__PROG_DI_ID_2                   IPU_MEMORY_OFFSET+0x0040654,0x00000004
+#define LPM_MEM_DC_WR_CH_CONF_2__W_SIZE_2                       IPU_MEMORY_OFFSET+0x0040654,0x00000003
+
+#define LPM_MEM_DC_WR_CH_ADDR_2__ADDR                           IPU_MEMORY_OFFSET+0x0040658
+#define LPM_MEM_DC_WR_CH_ADDR_2__EMPTY                          IPU_MEMORY_OFFSET+0x0040658,0x00000000
+#define LPM_MEM_DC_WR_CH_ADDR_2__FULL                           IPU_MEMORY_OFFSET+0x0040658,0xffffffff
+#define LPM_MEM_DC_WR_CH_ADDR_2__ST_ADDR_2                      IPU_MEMORY_OFFSET+0x0040658,0x1FFFFFFF
+
+#define LPM_MEM_DC_RL0_CH_2__ADDR                               IPU_MEMORY_OFFSET+0x004065C
+#define LPM_MEM_DC_RL0_CH_2__EMPTY                              IPU_MEMORY_OFFSET+0x004065C,0x00000000
+#define LPM_MEM_DC_RL0_CH_2__FULL                               IPU_MEMORY_OFFSET+0x004065C,0xffffffff
+#define LPM_MEM_DC_RL0_CH_2__COD_NL_START_CHAN_2                IPU_MEMORY_OFFSET+0x004065C,0xFF000000
+#define LPM_MEM_DC_RL0_CH_2__COD_NL_PRIORITY_CHAN_2             IPU_MEMORY_OFFSET+0x004065C,0x000F0000
+#define LPM_MEM_DC_RL0_CH_2__COD_NF_START_CHAN_2                IPU_MEMORY_OFFSET+0x004065C,0x0000FF00
+#define LPM_MEM_DC_RL0_CH_2__COD_NF_PRIORITY_CHAN_2             IPU_MEMORY_OFFSET+0x004065C,0x0000000F
+
+#define LPM_MEM_DC_RL1_CH_2__ADDR                               IPU_MEMORY_OFFSET+0x0040660
+#define LPM_MEM_DC_RL1_CH_2__EMPTY                              IPU_MEMORY_OFFSET+0x0040660,0x00000000
+#define LPM_MEM_DC_RL1_CH_2__FULL                               IPU_MEMORY_OFFSET+0x0040660,0xffffffff
+#define LPM_MEM_DC_RL1_CH_2__COD_NFIELD_START_CHAN_2            IPU_MEMORY_OFFSET+0x0040660,0xFF000000
+#define LPM_MEM_DC_RL1_CH_2__COD_NFIELD_PRIORITY_CHAN_2         IPU_MEMORY_OFFSET+0x0040660,0x000F0000
+#define LPM_MEM_DC_RL1_CH_2__COD_EOF_START_CHAN_2               IPU_MEMORY_OFFSET+0x0040660,0x0000FF00
+#define LPM_MEM_DC_RL1_CH_2__COD_EOF_PRIORITY_CHAN_2            IPU_MEMORY_OFFSET+0x0040660,0x0000000F
+
+#define LPM_MEM_DC_RL2_CH_2__ADDR                               IPU_MEMORY_OFFSET+0x0040664
+#define LPM_MEM_DC_RL2_CH_2__EMPTY                              IPU_MEMORY_OFFSET+0x0040664,0x00000000
+#define LPM_MEM_DC_RL2_CH_2__FULL                               IPU_MEMORY_OFFSET+0x0040664,0xffffffff
+#define LPM_MEM_DC_RL2_CH_2__COD_EOFIELD_START_CHAN_2           IPU_MEMORY_OFFSET+0x0040664,0xFF000000
+#define LPM_MEM_DC_RL2_CH_2__COD_EOFIELD_PRIORITY_CHAN_2        IPU_MEMORY_OFFSET+0x0040664,0x000F0000
+#define LPM_MEM_DC_RL2_CH_2__COD_EOL_START_CHAN_2               IPU_MEMORY_OFFSET+0x0040664,0x0000FF00
+#define LPM_MEM_DC_RL2_CH_2__COD_EOL_PRIORITY_CHAN_2            IPU_MEMORY_OFFSET+0x0040664,0x0000000F
+
+#define LPM_MEM_DC_RL3_CH_2__ADDR                               IPU_MEMORY_OFFSET+0x0040668
+#define LPM_MEM_DC_RL3_CH_2__EMPTY                              IPU_MEMORY_OFFSET+0x0040668,0x00000000
+#define LPM_MEM_DC_RL3_CH_2__FULL                               IPU_MEMORY_OFFSET+0x0040668,0xffffffff
+#define LPM_MEM_DC_RL3_CH_2__COD_NEW_CHAN_START_CHAN_2          IPU_MEMORY_OFFSET+0x0040668,0xFF000000
+#define LPM_MEM_DC_RL3_CH_2__COD_NEW_CHAN_PRIORITY_CHAN_2       IPU_MEMORY_OFFSET+0x0040668,0x000F0000
+#define LPM_MEM_DC_RL3_CH_2__COD_NEW_ADDR_START_CHAN_2          IPU_MEMORY_OFFSET+0x0040668,0x0000FF00
+#define LPM_MEM_DC_RL3_CH_2__COD_NEW_ADDR_PRIORITY_CHAN_2       IPU_MEMORY_OFFSET+0x0040668,0x0000000F
+
+#define LPM_MEM_DC_RL4_CH_2__ADDR                               IPU_MEMORY_OFFSET+0x004066C
+#define LPM_MEM_DC_RL4_CH_2__EMPTY                              IPU_MEMORY_OFFSET+0x004066C,0x00000000
+#define LPM_MEM_DC_RL4_CH_2__FULL                               IPU_MEMORY_OFFSET+0x004066C,0xffffffff
+#define LPM_MEM_DC_RL4_CH_2__COD_NEW_DATA_START_CHAN_2          IPU_MEMORY_OFFSET+0x004066C,0x0000FF00
+#define LPM_MEM_DC_RL4_CH_2__COD_NEW_DATA_PRIORITY_CHAN_2       IPU_MEMORY_OFFSET+0x004066C,0x0000000F
+
+#define LPM_MEM_DC_CMD_CH_CONF_3__ADDR                          IPU_MEMORY_OFFSET+0x0040670
+#define LPM_MEM_DC_CMD_CH_CONF_3__EMPTY                         IPU_MEMORY_OFFSET+0x0040670,0x00000000
+#define LPM_MEM_DC_CMD_CH_CONF_3__FULL                          IPU_MEMORY_OFFSET+0x0040670,0xffffffff
+#define LPM_MEM_DC_CMD_CH_CONF_3__COD_CMND_START_CHAN_RS1_3     IPU_MEMORY_OFFSET+0x0040670,0xFF000000
+#define LPM_MEM_DC_CMD_CH_CONF_3__COD_CMND_START_CHAN_RS0_3     IPU_MEMORY_OFFSET+0x0040670,0x0000FF00
+#define LPM_MEM_DC_CMD_CH_CONF_3__W_SIZE_3                      IPU_MEMORY_OFFSET+0x0040670,0x00000003
+
+#define LPM_MEM_DC_CMD_CH_CONF_4__ADDR                          IPU_MEMORY_OFFSET+0x0040674
+#define LPM_MEM_DC_CMD_CH_CONF_4__EMPTY                         IPU_MEMORY_OFFSET+0x0040674,0x00000000
+#define LPM_MEM_DC_CMD_CH_CONF_4__FULL                          IPU_MEMORY_OFFSET+0x0040674,0xffffffff
+#define LPM_MEM_DC_CMD_CH_CONF_4__COD_CMND_START_CHAN_RS1_4     IPU_MEMORY_OFFSET+0x0040674,0xFF000000
+#define LPM_MEM_DC_CMD_CH_CONF_4__COD_CMND_START_CHAN_RS0_4     IPU_MEMORY_OFFSET+0x0040674,0x0000FF00
+#define LPM_MEM_DC_CMD_CH_CONF_4__W_SIZE_4                      IPU_MEMORY_OFFSET+0x0040674,0x00000003
+
+#define LPM_MEM_DC_WR_CH_CONF_5__ADDR                           IPU_MEMORY_OFFSET+0x0040678
+#define LPM_MEM_DC_WR_CH_CONF_5__EMPTY                          IPU_MEMORY_OFFSET+0x0040678,0x00000000
+#define LPM_MEM_DC_WR_CH_CONF_5__FULL                           IPU_MEMORY_OFFSET+0x0040678,0xffffffff
+#define LPM_MEM_DC_WR_CH_CONF_5__PROG_START_TIME_5              IPU_MEMORY_OFFSET+0x0040678,0x07FF0000
+#define LPM_MEM_DC_WR_CH_CONF_5__FIELD_MODE_5                   IPU_MEMORY_OFFSET+0x0040678,0x00000200
+#define LPM_MEM_DC_WR_CH_CONF_5__CHAN_MASK_DEFAULT_5            IPU_MEMORY_OFFSET+0x0040678,0x00000100
+#define LPM_MEM_DC_WR_CH_CONF_5__PROG_CHAN_TYP_5                IPU_MEMORY_OFFSET+0x0040678,0x000000E0
+#define LPM_MEM_DC_WR_CH_CONF_5__PROG_DISP_ID_5                 IPU_MEMORY_OFFSET+0x0040678,0x00000018
+#define LPM_MEM_DC_WR_CH_CONF_5__PROG_DI_ID_5                   IPU_MEMORY_OFFSET+0x0040678,0x00000004
+#define LPM_MEM_DC_WR_CH_CONF_5__W_SIZE_5                       IPU_MEMORY_OFFSET+0x0040678,0x00000003
+
+#define LPM_MEM_DC_WR_CH_ADDR_5__ADDR                           IPU_MEMORY_OFFSET+0x004067C
+#define LPM_MEM_DC_WR_CH_ADDR_5__EMPTY                          IPU_MEMORY_OFFSET+0x004067C,0x00000000
+#define LPM_MEM_DC_WR_CH_ADDR_5__FULL                           IPU_MEMORY_OFFSET+0x004067C,0xffffffff
+#define LPM_MEM_DC_WR_CH_ADDR_5__ST_ADDR_5                      IPU_MEMORY_OFFSET+0x004067C,0x1FFFFFFF
+
+#define LPM_MEM_DC_RL0_CH_5__ADDR                               IPU_MEMORY_OFFSET+0x0040680
+#define LPM_MEM_DC_RL0_CH_5__EMPTY                              IPU_MEMORY_OFFSET+0x0040680,0x00000000
+#define LPM_MEM_DC_RL0_CH_5__FULL                               IPU_MEMORY_OFFSET+0x0040680,0xffffffff
+#define LPM_MEM_DC_RL0_CH_5__COD_NL_START_CHAN_5                IPU_MEMORY_OFFSET+0x0040680,0xFF000000
+#define LPM_MEM_DC_RL0_CH_5__COD_NL_PRIORITY_CHAN_5             IPU_MEMORY_OFFSET+0x0040680,0x000F0000
+#define LPM_MEM_DC_RL0_CH_5__COD_NF_START_CHAN_5                IPU_MEMORY_OFFSET+0x0040680,0x0000FF00
+#define LPM_MEM_DC_RL0_CH_5__COD_NF_PRIORITY_CHAN_5             IPU_MEMORY_OFFSET+0x0040680,0x0000000F
+
+#define LPM_MEM_DC_RL1_CH_5__ADDR                               IPU_MEMORY_OFFSET+0x0040684
+#define LPM_MEM_DC_RL1_CH_5__EMPTY                              IPU_MEMORY_OFFSET+0x0040684,0x00000000
+#define LPM_MEM_DC_RL1_CH_5__FULL                               IPU_MEMORY_OFFSET+0x0040684,0xffffffff
+#define LPM_MEM_DC_RL1_CH_5__COD_NFIELD_START_CHAN_5            IPU_MEMORY_OFFSET+0x0040684,0xFF000000
+#define LPM_MEM_DC_RL1_CH_5__COD_NFIELD_PRIORITY_CHAN_5         IPU_MEMORY_OFFSET+0x0040684,0x000F0000
+#define LPM_MEM_DC_RL1_CH_5__COD_EOF_START_CHAN_5               IPU_MEMORY_OFFSET+0x0040684,0x0000FF00
+#define LPM_MEM_DC_RL1_CH_5__COD_EOF_PRIORITY_CHAN_5            IPU_MEMORY_OFFSET+0x0040684,0x0000000F
+
+#define LPM_MEM_DC_RL2_CH_5__ADDR                               IPU_MEMORY_OFFSET+0x0040688
+#define LPM_MEM_DC_RL2_CH_5__EMPTY                              IPU_MEMORY_OFFSET+0x0040688,0x00000000
+#define LPM_MEM_DC_RL2_CH_5__FULL                               IPU_MEMORY_OFFSET+0x0040688,0xffffffff
+#define LPM_MEM_DC_RL2_CH_5__COD_EOFIELD_START_CHAN_5           IPU_MEMORY_OFFSET+0x0040688,0xFF000000
+#define LPM_MEM_DC_RL2_CH_5__COD_EOFIELD_PRIORITY_CHAN_5        IPU_MEMORY_OFFSET+0x0040688,0x000F0000
+#define LPM_MEM_DC_RL2_CH_5__COD_EOL_START_CHAN_5               IPU_MEMORY_OFFSET+0x0040688,0x0000FF00
+#define LPM_MEM_DC_RL2_CH_5__COD_EOL_PRIORITY_CHAN_5            IPU_MEMORY_OFFSET+0x0040688,0x0000000F
+
+#define LPM_MEM_DC_RL3_CH_5__ADDR                               IPU_MEMORY_OFFSET+0x004068C
+#define LPM_MEM_DC_RL3_CH_5__EMPTY                              IPU_MEMORY_OFFSET+0x004068C,0x00000000
+#define LPM_MEM_DC_RL3_CH_5__FULL                               IPU_MEMORY_OFFSET+0x004068C,0xffffffff
+#define LPM_MEM_DC_RL3_CH_5__COD_NEW_CHAN_START_CHAN_5          IPU_MEMORY_OFFSET+0x004068C,0xFF000000
+#define LPM_MEM_DC_RL3_CH_5__COD_NEW_CHAN_PRIORITY_CHAN_5       IPU_MEMORY_OFFSET+0x004068C,0x000F0000
+#define LPM_MEM_DC_RL3_CH_5__COD_NEW_ADDR_START_CHAN_5          IPU_MEMORY_OFFSET+0x004068C,0x0000FF00
+#define LPM_MEM_DC_RL3_CH_5__COD_NEW_ADDR_PRIORITY_CHAN_5       IPU_MEMORY_OFFSET+0x004068C,0x0000000F
+
+#define LPM_MEM_DC_RL4_CH_5__ADDR                               IPU_MEMORY_OFFSET+0x0040690
+#define LPM_MEM_DC_RL4_CH_5__EMPTY                              IPU_MEMORY_OFFSET+0x0040690,0x00000000
+#define LPM_MEM_DC_RL4_CH_5__FULL                               IPU_MEMORY_OFFSET+0x0040690,0xffffffff
+#define LPM_MEM_DC_RL4_CH_5__COD_NEW_DATA_START_CHAN_5          IPU_MEMORY_OFFSET+0x0040690,0x0000FF00
+#define LPM_MEM_DC_RL4_CH_5__COD_NEW_DATA_PRIORITY_CHAN_5       IPU_MEMORY_OFFSET+0x0040690,0x0000000F
+
+#define LPM_MEM_DC_WR_CH_CONF_6__ADDR                           IPU_MEMORY_OFFSET+0x0040694
+#define LPM_MEM_DC_WR_CH_CONF_6__EMPTY                          IPU_MEMORY_OFFSET+0x0040694,0x00000000
+#define LPM_MEM_DC_WR_CH_CONF_6__FULL                           IPU_MEMORY_OFFSET+0x0040694,0xffffffff
+#define LPM_MEM_DC_WR_CH_CONF_6__PROG_START_TIME_6              IPU_MEMORY_OFFSET+0x0040694,0x07FF0000
+#define LPM_MEM_DC_WR_CH_CONF_6__CHAN_MASK_DEFAULT_6            IPU_MEMORY_OFFSET+0x0040694,0x00000100
+#define LPM_MEM_DC_WR_CH_CONF_6__PROG_CHAN_TYP_6                IPU_MEMORY_OFFSET+0x0040694,0x000000E0
+#define LPM_MEM_DC_WR_CH_CONF_6__PROG_DISP_ID_6                 IPU_MEMORY_OFFSET+0x0040694,0x00000018
+#define LPM_MEM_DC_WR_CH_CONF_6__PROG_DI_ID_6                   IPU_MEMORY_OFFSET+0x0040694,0x00000004
+#define LPM_MEM_DC_WR_CH_CONF_6__W_SIZE_6                       IPU_MEMORY_OFFSET+0x0040694,0x00000003
+
+#define LPM_MEM_DC_WR_CH_ADDR_6__ADDR                           IPU_MEMORY_OFFSET+0x0040698
+#define LPM_MEM_DC_WR_CH_ADDR_6__EMPTY                          IPU_MEMORY_OFFSET+0x0040698,0x00000000
+#define LPM_MEM_DC_WR_CH_ADDR_6__FULL                           IPU_MEMORY_OFFSET+0x0040698,0xffffffff
+#define LPM_MEM_DC_WR_CH_ADDR_6__ST_ADDR_6                      IPU_MEMORY_OFFSET+0x0040698,0x1FFFFFFF
+
+#define LPM_MEM_DC_RL0_CH_6__ADDR                               IPU_MEMORY_OFFSET+0x004069C
+#define LPM_MEM_DC_RL0_CH_6__EMPTY                              IPU_MEMORY_OFFSET+0x004069C,0x00000000
+#define LPM_MEM_DC_RL0_CH_6__FULL                               IPU_MEMORY_OFFSET+0x004069C,0xffffffff
+#define LPM_MEM_DC_RL0_CH_6__COD_NL_START_CHAN_6                IPU_MEMORY_OFFSET+0x004069C,0xFF000000
+#define LPM_MEM_DC_RL0_CH_6__COD_NL_PRIORITY_CHAN_6             IPU_MEMORY_OFFSET+0x004069C,0x000F0000
+#define LPM_MEM_DC_RL0_CH_6__COD_NF_START_CHAN_6                IPU_MEMORY_OFFSET+0x004069C,0x0000FF00
+#define LPM_MEM_DC_RL0_CH_6__COD_NF_PRIORITY_CHAN_6             IPU_MEMORY_OFFSET+0x004069C,0x0000000F
+
+#define LPM_MEM_DC_RL1_CH_6__ADDR                               IPU_MEMORY_OFFSET+0x00406A0
+#define LPM_MEM_DC_RL1_CH_6__EMPTY                              IPU_MEMORY_OFFSET+0x00406A0,0x00000000
+#define LPM_MEM_DC_RL1_CH_6__FULL                               IPU_MEMORY_OFFSET+0x00406A0,0xffffffff
+#define LPM_MEM_DC_RL1_CH_6__COD_NFIELD_START_CHAN_6            IPU_MEMORY_OFFSET+0x00406A0,0xFF000000
+#define LPM_MEM_DC_RL1_CH_6__COD_NFIELD_PRIORITY_CHAN_6         IPU_MEMORY_OFFSET+0x00406A0,0x000F0000
+#define LPM_MEM_DC_RL1_CH_6__COD_EOF_START_CHAN_6               IPU_MEMORY_OFFSET+0x00406A0,0x0000FF00
+#define LPM_MEM_DC_RL1_CH_6__COD_EOF_PRIORITY_CHAN_6            IPU_MEMORY_OFFSET+0x00406A0,0x0000000F
+
+#define LPM_MEM_DC_RL2_CH_6__ADDR                               IPU_MEMORY_OFFSET+0x00406A4
+#define LPM_MEM_DC_RL2_CH_6__EMPTY                              IPU_MEMORY_OFFSET+0x00406A4,0x00000000
+#define LPM_MEM_DC_RL2_CH_6__FULL                               IPU_MEMORY_OFFSET+0x00406A4,0xffffffff
+#define LPM_MEM_DC_RL2_CH_6__COD_EOFIELD_START_CHAN_6           IPU_MEMORY_OFFSET+0x00406A4,0xFF000000
+#define LPM_MEM_DC_RL2_CH_6__COD_EOFIELD_PRIORITY_CHAN_6        IPU_MEMORY_OFFSET+0x00406A4,0x000F0000
+#define LPM_MEM_DC_RL2_CH_6__COD_EOL_START_CHAN_6               IPU_MEMORY_OFFSET+0x00406A4,0x0000FF00
+#define LPM_MEM_DC_RL2_CH_6__COD_EOL_PRIORITY_CHAN_6            IPU_MEMORY_OFFSET+0x00406A4,0x0000000F
+
+#define LPM_MEM_DC_RL3_CH_6__ADDR                               IPU_MEMORY_OFFSET+0x00406A8
+#define LPM_MEM_DC_RL3_CH_6__EMPTY                              IPU_MEMORY_OFFSET+0x00406A8,0x00000000
+#define LPM_MEM_DC_RL3_CH_6__FULL                               IPU_MEMORY_OFFSET+0x00406A8,0xffffffff
+#define LPM_MEM_DC_RL3_CH_6__COD_NEW_CHAN_START_CHAN_6          IPU_MEMORY_OFFSET+0x00406A8,0xFF000000
+#define LPM_MEM_DC_RL3_CH_6__COD_NEW_CHAN_PRIORITY_CHAN_6       IPU_MEMORY_OFFSET+0x00406A8,0x000F0000
+#define LPM_MEM_DC_RL3_CH_6__COD_NEW_ADDR_START_CHAN_6          IPU_MEMORY_OFFSET+0x00406A8,0x0000FF00
+#define LPM_MEM_DC_RL3_CH_6__COD_NEW_ADDR_PRIORITY_CHAN_6       IPU_MEMORY_OFFSET+0x00406A8,0x0000000F
+
+#define LPM_MEM_DC_RL4_CH_6__ADDR                               IPU_MEMORY_OFFSET+0x00406AC
+#define LPM_MEM_DC_RL4_CH_6__EMPTY                              IPU_MEMORY_OFFSET+0x00406AC,0x00000000
+#define LPM_MEM_DC_RL4_CH_6__FULL                               IPU_MEMORY_OFFSET+0x00406AC,0xffffffff
+#define LPM_MEM_DC_RL4_CH_6__COD_NEW_DATA_START_CHAN_6          IPU_MEMORY_OFFSET+0x00406AC,0x0000FF00
+#define LPM_MEM_DC_RL4_CH_6__COD_NEW_DATA_PRIORITY_CHAN_6       IPU_MEMORY_OFFSET+0x00406AC,0x0000000F
+
+#define LPM_MEM_DC_WR_CH_CONF1_8__ADDR                          IPU_MEMORY_OFFSET+0x00406B0
+#define LPM_MEM_DC_WR_CH_CONF1_8__EMPTY                         IPU_MEMORY_OFFSET+0x00406B0,0x00000000
+#define LPM_MEM_DC_WR_CH_CONF1_8__FULL                          IPU_MEMORY_OFFSET+0x00406B0,0xffffffff
+#define LPM_MEM_DC_WR_CH_CONF1_8__MCU_DISP_ID_8                 IPU_MEMORY_OFFSET+0x00406B0,0x00000018
+#define LPM_MEM_DC_WR_CH_CONF1_8__CHAN_MASK_DEFAULT_8           IPU_MEMORY_OFFSET+0x00406B0,0x00000004
+#define LPM_MEM_DC_WR_CH_CONF1_8__W_SIZE_8                      IPU_MEMORY_OFFSET+0x00406B0,0x00000003
+
+#define LPM_MEM_DC_WR_CH_CONF2_8__ADDR                          IPU_MEMORY_OFFSET+0x00406B4
+#define LPM_MEM_DC_WR_CH_CONF2_8__EMPTY                         IPU_MEMORY_OFFSET+0x00406B4,0x00000000
+#define LPM_MEM_DC_WR_CH_CONF2_8__FULL                          IPU_MEMORY_OFFSET+0x00406B4,0xffffffff
+#define LPM_MEM_DC_WR_CH_CONF2_8__NEW_ADDR_SPACE_SA_8           IPU_MEMORY_OFFSET+0x00406B4,0x1FFFFFFF
+
+#define LPM_MEM_DC_RL1_CH_8__ADDR                               IPU_MEMORY_OFFSET+0x00406B8
+#define LPM_MEM_DC_RL1_CH_8__EMPTY                              IPU_MEMORY_OFFSET+0x00406B8,0x00000000
+#define LPM_MEM_DC_RL1_CH_8__FULL                               IPU_MEMORY_OFFSET+0x00406B8,0xffffffff
+#define LPM_MEM_DC_RL1_CH_8__COD_NEW_ADDR_START_CHAN_W_8_1      IPU_MEMORY_OFFSET+0x00406B8,0xFF000000
+#define LPM_MEM_DC_RL1_CH_8__COD_NEW_ADDR_START_CHAN_W_8_0      IPU_MEMORY_OFFSET+0x00406B8,0x0000FF00
+#define LPM_MEM_DC_RL1_CH_8__COD_NEW_ADDR_PRIORITY_CHAN_8       IPU_MEMORY_OFFSET+0x00406B8,0x0000000F
+
+#define LPM_MEM_DC_RL2_CH_8__ADDR                               IPU_MEMORY_OFFSET+0x00406BC
+#define LPM_MEM_DC_RL2_CH_8__EMPTY                              IPU_MEMORY_OFFSET+0x00406BC,0x00000000
+#define LPM_MEM_DC_RL2_CH_8__FULL                               IPU_MEMORY_OFFSET+0x00406BC,0xffffffff
+#define LPM_MEM_DC_RL2_CH_8__COD_NEW_CHAN_START_CHAN_W_8_1      IPU_MEMORY_OFFSET+0x00406BC,0xFF000000
+#define LPM_MEM_DC_RL2_CH_8__COD_NEW_CHAN_START_CHAN_W_8_0      IPU_MEMORY_OFFSET+0x00406BC,0x0000FF00
+#define LPM_MEM_DC_RL2_CH_8__COD_NEW_CHAN_PRIORITY_CHAN_8       IPU_MEMORY_OFFSET+0x00406BC,0x0000000F
+
+#define LPM_MEM_DC_RL3_CH_8__ADDR                               IPU_MEMORY_OFFSET+0x00406C0
+#define LPM_MEM_DC_RL3_CH_8__EMPTY                              IPU_MEMORY_OFFSET+0x00406C0,0x00000000
+#define LPM_MEM_DC_RL3_CH_8__FULL                               IPU_MEMORY_OFFSET+0x00406C0,0xffffffff
+#define LPM_MEM_DC_RL3_CH_8__COD_NEW_DATA_START_CHAN_W_8_1      IPU_MEMORY_OFFSET+0x00406C0,0xFF000000
+#define LPM_MEM_DC_RL3_CH_8__COD_NEW_DATA_START_CHAN_W_8_0      IPU_MEMORY_OFFSET+0x00406C0,0x0000FF00
+#define LPM_MEM_DC_RL3_CH_8__COD_NEW_DATA_PRIORITY_CHAN_8       IPU_MEMORY_OFFSET+0x00406C0,0x0000000F
+
+#define LPM_MEM_DC_RL4_CH_8__ADDR                               IPU_MEMORY_OFFSET+0x00406C4
+#define LPM_MEM_DC_RL4_CH_8__EMPTY                              IPU_MEMORY_OFFSET+0x00406C4,0x00000000
+#define LPM_MEM_DC_RL4_CH_8__FULL                               IPU_MEMORY_OFFSET+0x00406C4,0xffffffff
+#define LPM_MEM_DC_RL4_CH_8__COD_NEW_ADDR_START_CHAN_R_8_1      IPU_MEMORY_OFFSET+0x00406C4,0xFF000000
+#define LPM_MEM_DC_RL4_CH_8__COD_NEW_ADDR_START_CHAN_R_8_0      IPU_MEMORY_OFFSET+0x00406C4,0x0000FF00
+
+#define LPM_MEM_DC_RL5_CH_8__ADDR                               IPU_MEMORY_OFFSET+0x00406C8
+#define LPM_MEM_DC_RL5_CH_8__EMPTY                              IPU_MEMORY_OFFSET+0x00406C8,0x00000000
+#define LPM_MEM_DC_RL5_CH_8__FULL                               IPU_MEMORY_OFFSET+0x00406C8,0xffffffff
+#define LPM_MEM_DC_RL5_CH_8__COD_NEW_CHAN_START_CHAN_R_8_1      IPU_MEMORY_OFFSET+0x00406C8,0xFF000000
+#define LPM_MEM_DC_RL5_CH_8__COD_NEW_CHAN_START_CHAN_R_8_0      IPU_MEMORY_OFFSET+0x00406C8,0x0000FF00
+
+#define LPM_MEM_DC_RL6_CH_8__ADDR                               IPU_MEMORY_OFFSET+0x00406CC
+#define LPM_MEM_DC_RL6_CH_8__EMPTY                              IPU_MEMORY_OFFSET+0x00406CC,0x00000000
+#define LPM_MEM_DC_RL6_CH_8__FULL                               IPU_MEMORY_OFFSET+0x00406CC,0xffffffff
+#define LPM_MEM_DC_RL6_CH_8__COD_NEW_DATA_START_CHAN_R_8_1      IPU_MEMORY_OFFSET+0x00406CC,0xFF000000
+#define LPM_MEM_DC_RL6_CH_8__COD_NEW_DATA_START_CHAN_R_8_0      IPU_MEMORY_OFFSET+0x00406CC,0x0000FF00
+
+#define LPM_MEM_DC_WR_CH_CONF1_9__ADDR                          IPU_MEMORY_OFFSET+0x00406D0
+#define LPM_MEM_DC_WR_CH_CONF1_9__EMPTY                         IPU_MEMORY_OFFSET+0x00406D0,0x00000000
+#define LPM_MEM_DC_WR_CH_CONF1_9__FULL                          IPU_MEMORY_OFFSET+0x00406D0,0xffffffff
+#define LPM_MEM_DC_WR_CH_CONF1_9__MCU_DISP_ID_9                 IPU_MEMORY_OFFSET+0x00406D0,0x00000018
+#define LPM_MEM_DC_WR_CH_CONF1_9__CHAN_MASK_DEFAULT_9           IPU_MEMORY_OFFSET+0x00406D0,0x00000004
+#define LPM_MEM_DC_WR_CH_CONF1_9__W_SIZE_9                      IPU_MEMORY_OFFSET+0x00406D0,0x00000003
+
+#define LPM_MEM_DC_WR_CH_CONF2_9__ADDR                          IPU_MEMORY_OFFSET+0x00406D4
+#define LPM_MEM_DC_WR_CH_CONF2_9__EMPTY                         IPU_MEMORY_OFFSET+0x00406D4,0x00000000
+#define LPM_MEM_DC_WR_CH_CONF2_9__FULL                          IPU_MEMORY_OFFSET+0x00406D4,0xffffffff
+#define LPM_MEM_DC_WR_CH_CONF2_9__NEW_ADDR_SPACE_SA_9           IPU_MEMORY_OFFSET+0x00406D4,0x1FFFFFFF
+
+#define LPM_MEM_DC_RL1_CH_9__ADDR                               IPU_MEMORY_OFFSET+0x00406D8
+#define LPM_MEM_DC_RL1_CH_9__EMPTY                              IPU_MEMORY_OFFSET+0x00406D8,0x00000000
+#define LPM_MEM_DC_RL1_CH_9__FULL                               IPU_MEMORY_OFFSET+0x00406D8,0xffffffff
+#define LPM_MEM_DC_RL1_CH_9__COD_NEW_ADDR_START_CHAN_W_9_1      IPU_MEMORY_OFFSET+0x00406D8,0xFF000000
+#define LPM_MEM_DC_RL1_CH_9__COD_NEW_ADDR_START_CHAN_W_9_0      IPU_MEMORY_OFFSET+0x00406D8,0x0000FF00
+#define LPM_MEM_DC_RL1_CH_9__COD_NEW_ADDR_PRIORITY_CHAN_9       IPU_MEMORY_OFFSET+0x00406D8,0x0000000F
+
+#define LPM_MEM_DC_RL2_CH_9__ADDR                               IPU_MEMORY_OFFSET+0x00406DC
+#define LPM_MEM_DC_RL2_CH_9__EMPTY                              IPU_MEMORY_OFFSET+0x00406DC,0x00000000
+#define LPM_MEM_DC_RL2_CH_9__FULL                               IPU_MEMORY_OFFSET+0x00406DC,0xffffffff
+#define LPM_MEM_DC_RL2_CH_9__COD_NEW_CHAN_START_CHAN_W_9_1      IPU_MEMORY_OFFSET+0x00406DC,0xFF000000
+#define LPM_MEM_DC_RL2_CH_9__COD_NEW_CHAN_START_CHAN_W_9_0      IPU_MEMORY_OFFSET+0x00406DC,0x0000FF00
+#define LPM_MEM_DC_RL2_CH_9__COD_NEW_CHAN_PRIORITY_CHAN_9       IPU_MEMORY_OFFSET+0x00406DC,0x0000000F
+
+#define LPM_MEM_DC_RL3_CH_9__ADDR                               IPU_MEMORY_OFFSET+0x00406E0
+#define LPM_MEM_DC_RL3_CH_9__EMPTY                              IPU_MEMORY_OFFSET+0x00406E0,0x00000000
+#define LPM_MEM_DC_RL3_CH_9__FULL                               IPU_MEMORY_OFFSET+0x00406E0,0xffffffff
+#define LPM_MEM_DC_RL3_CH_9__COD_NEW_DATA_START_CHAN_W_9_1      IPU_MEMORY_OFFSET+0x00406E0,0xFF000000
+#define LPM_MEM_DC_RL3_CH_9__COD_NEW_DATA_START_CHAN_W_9_0      IPU_MEMORY_OFFSET+0x00406E0,0x0000FF00
+#define LPM_MEM_DC_RL3_CH_9__COD_NEW_DATA_PRIORITY_CHAN_9       IPU_MEMORY_OFFSET+0x00406E0,0x0000000F
+
+#define LPM_MEM_DC_RL4_CH_9__ADDR                               IPU_MEMORY_OFFSET+0x00406E4
+#define LPM_MEM_DC_RL4_CH_9__EMPTY                              IPU_MEMORY_OFFSET+0x00406E4,0x00000000
+#define LPM_MEM_DC_RL4_CH_9__FULL                               IPU_MEMORY_OFFSET+0x00406E4,0xffffffff
+#define LPM_MEM_DC_RL4_CH_9__COD_NEW_ADDR_START_CHAN_R_9_1      IPU_MEMORY_OFFSET+0x00406E4,0xFF000000
+#define LPM_MEM_DC_RL4_CH_9__COD_NEW_ADDR_START_CHAN_R_9_0      IPU_MEMORY_OFFSET+0x00406E4,0x0000FF00
+
+#define LPM_MEM_DC_RL5_CH_9__ADDR                               IPU_MEMORY_OFFSET+0x00406E8
+#define LPM_MEM_DC_RL5_CH_9__EMPTY                              IPU_MEMORY_OFFSET+0x00406E8,0x00000000
+#define LPM_MEM_DC_RL5_CH_9__FULL                               IPU_MEMORY_OFFSET+0x00406E8,0xffffffff
+#define LPM_MEM_DC_RL5_CH_9__COD_NEW_CHAN_START_CHAN_R_9_1      IPU_MEMORY_OFFSET+0x00406E8,0xFF000000
+#define LPM_MEM_DC_RL5_CH_9__COD_NEW_CHAN_START_CHAN_R_9_0      IPU_MEMORY_OFFSET+0x00406E8,0x0000FF00
+
+#define LPM_MEM_DC_RL6_CH_9__ADDR                               IPU_MEMORY_OFFSET+0x00406EC
+#define LPM_MEM_DC_RL6_CH_9__EMPTY                              IPU_MEMORY_OFFSET+0x00406EC,0x00000000
+#define LPM_MEM_DC_RL6_CH_9__FULL                               IPU_MEMORY_OFFSET+0x00406EC,0xffffffff
+#define LPM_MEM_DC_RL6_CH_9__COD_NEW_DATA_START_CHAN_R_9_1      IPU_MEMORY_OFFSET+0x00406EC,0xFF000000
+#define LPM_MEM_DC_RL6_CH_9__COD_NEW_DATA_START_CHAN_R_9_0      IPU_MEMORY_OFFSET+0x00406EC,0x0000FF00
+
+#define LPM_MEM_DC_GEN__ADDR                                    IPU_MEMORY_OFFSET+0x00406F0
+#define LPM_MEM_DC_GEN__EMPTY                                   IPU_MEMORY_OFFSET+0x00406F0,0x00000000
+#define LPM_MEM_DC_GEN__FULL                                    IPU_MEMORY_OFFSET+0x00406F0,0xffffffff
+#define LPM_MEM_DC_GEN__DC_BK_EN                                IPU_MEMORY_OFFSET+0x00406F0,0x01000000
+#define LPM_MEM_DC_GEN__DC_BKDIV                                IPU_MEMORY_OFFSET+0x00406F0,0x00FF0000
+#define LPM_MEM_DC_GEN__DC_CH5_TYPE                             IPU_MEMORY_OFFSET+0x00406F0,0x00000100
+#define LPM_MEM_DC_GEN__SYNC_PRIORITY_1                         IPU_MEMORY_OFFSET+0x00406F0,0x00000080
+#define LPM_MEM_DC_GEN__SYNC_PRIORITY_5                         IPU_MEMORY_OFFSET+0x00406F0,0x00000040
+#define LPM_MEM_DC_GEN__MASK4CHAN_5                             IPU_MEMORY_OFFSET+0x00406F0,0x00000020
+#define LPM_MEM_DC_GEN__MASK_EN                                 IPU_MEMORY_OFFSET+0x00406F0,0x00000010
+#define LPM_MEM_DC_GEN__SYNC_1_6                                IPU_MEMORY_OFFSET+0x00406F0,0x00000006
+
+#define LPM_MEM_DC_DISP_CONF1_0__ADDR                           IPU_MEMORY_OFFSET+0x00406F4
+#define LPM_MEM_DC_DISP_CONF1_0__EMPTY                          IPU_MEMORY_OFFSET+0x00406F4,0x00000000
+#define LPM_MEM_DC_DISP_CONF1_0__FULL                           IPU_MEMORY_OFFSET+0x00406F4,0xffffffff
+#define LPM_MEM_DC_DISP_CONF1_0__DISP_RD_VALUE_PTR_0            IPU_MEMORY_OFFSET+0x00406F4,0x00000080
+#define LPM_MEM_DC_DISP_CONF1_0__MCU_ACC_LB_MASK_0              IPU_MEMORY_OFFSET+0x00406F4,0x00000040
+#define LPM_MEM_DC_DISP_CONF1_0__ADDR_BE_L_INC_0                IPU_MEMORY_OFFSET+0x00406F4,0x00000030
+#define LPM_MEM_DC_DISP_CONF1_0__ADDR_INCREMENT_0               IPU_MEMORY_OFFSET+0x00406F4,0x0000000C
+#define LPM_MEM_DC_DISP_CONF1_0__DISP_TYP_0                     IPU_MEMORY_OFFSET+0x00406F4,0x00000003
+
+#define LPM_MEM_DC_DISP_CONF1_1__ADDR                           IPU_MEMORY_OFFSET+0x00406F8
+#define LPM_MEM_DC_DISP_CONF1_1__EMPTY                          IPU_MEMORY_OFFSET+0x00406F8,0x00000000
+#define LPM_MEM_DC_DISP_CONF1_1__FULL                           IPU_MEMORY_OFFSET+0x00406F8,0xffffffff
+#define LPM_MEM_DC_DISP_CONF1_1__DISP_RD_VALUE_PTR_1            IPU_MEMORY_OFFSET+0x00406F8,0x00000080
+#define LPM_MEM_DC_DISP_CONF1_1__MCU_ACC_LB_MASK_1              IPU_MEMORY_OFFSET+0x00406F8,0x00000040
+#define LPM_MEM_DC_DISP_CONF1_1__ADDR_BE_L_INC_1                IPU_MEMORY_OFFSET+0x00406F8,0x00000030
+#define LPM_MEM_DC_DISP_CONF1_1__ADDR_INCREMENT_1               IPU_MEMORY_OFFSET+0x00406F8,0x0000000C
+#define LPM_MEM_DC_DISP_CONF1_1__DISP_TYP_1                     IPU_MEMORY_OFFSET+0x00406F8,0x00000003
+
+#define LPM_MEM_DC_DISP_CONF1_2__ADDR                           IPU_MEMORY_OFFSET+0x00406FC
+#define LPM_MEM_DC_DISP_CONF1_2__EMPTY                          IPU_MEMORY_OFFSET+0x00406FC,0x00000000
+#define LPM_MEM_DC_DISP_CONF1_2__FULL                           IPU_MEMORY_OFFSET+0x00406FC,0xffffffff
+#define LPM_MEM_DC_DISP_CONF1_2__DISP_RD_VALUE_PTR_2            IPU_MEMORY_OFFSET+0x00406FC,0x00000080
+#define LPM_MEM_DC_DISP_CONF1_2__MCU_ACC_LB_MASK_2              IPU_MEMORY_OFFSET+0x00406FC,0x00000040
+#define LPM_MEM_DC_DISP_CONF1_2__ADDR_BE_L_INC_2                IPU_MEMORY_OFFSET+0x00406FC,0x00000030
+#define LPM_MEM_DC_DISP_CONF1_2__ADDR_INCREMENT_2               IPU_MEMORY_OFFSET+0x00406FC,0x0000000C
+#define LPM_MEM_DC_DISP_CONF1_2__DISP_TYP_2                     IPU_MEMORY_OFFSET+0x00406FC,0x00000003
+
+#define LPM_MEM_DC_DISP_CONF1_3__ADDR                           IPU_MEMORY_OFFSET+0x0040700
+#define LPM_MEM_DC_DISP_CONF1_3__EMPTY                          IPU_MEMORY_OFFSET+0x0040700,0x00000000
+#define LPM_MEM_DC_DISP_CONF1_3__FULL                           IPU_MEMORY_OFFSET+0x0040700,0xffffffff
+#define LPM_MEM_DC_DISP_CONF1_3__DISP_RD_VALUE_PTR_3            IPU_MEMORY_OFFSET+0x0040700,0x00000080
+#define LPM_MEM_DC_DISP_CONF1_3__MCU_ACC_LB_MASK_3              IPU_MEMORY_OFFSET+0x0040700,0x00000040
+#define LPM_MEM_DC_DISP_CONF1_3__ADDR_BE_L_INC_3                IPU_MEMORY_OFFSET+0x0040700,0x00000030
+#define LPM_MEM_DC_DISP_CONF1_3__ADDR_INCREMENT_3               IPU_MEMORY_OFFSET+0x0040700,0x0000000C
+#define LPM_MEM_DC_DISP_CONF1_3__DISP_TYP_3                     IPU_MEMORY_OFFSET+0x0040700,0x00000003
+
+#define LPM_MEM_DC_DISP_CONF2_0__ADDR                           IPU_MEMORY_OFFSET+0x0040704
+#define LPM_MEM_DC_DISP_CONF2_0__EMPTY                          IPU_MEMORY_OFFSET+0x0040704,0x00000000
+#define LPM_MEM_DC_DISP_CONF2_0__FULL                           IPU_MEMORY_OFFSET+0x0040704,0xffffffff
+#define LPM_MEM_DC_DISP_CONF2_0__SL_0                           IPU_MEMORY_OFFSET+0x0040704,0x1FFFFFFF
+
+#define LPM_MEM_DC_DISP_CONF2_1__ADDR                           IPU_MEMORY_OFFSET+0x0040708
+#define LPM_MEM_DC_DISP_CONF2_1__EMPTY                          IPU_MEMORY_OFFSET+0x0040708,0x00000000
+#define LPM_MEM_DC_DISP_CONF2_1__FULL                           IPU_MEMORY_OFFSET+0x0040708,0xffffffff
+#define LPM_MEM_DC_DISP_CONF2_1__SL_1                           IPU_MEMORY_OFFSET+0x0040708,0x1FFFFFFF
+
+#define LPM_MEM_DC_DISP_CONF2_2__ADDR                           IPU_MEMORY_OFFSET+0x004070C
+#define LPM_MEM_DC_DISP_CONF2_2__EMPTY                          IPU_MEMORY_OFFSET+0x004070C,0x00000000
+#define LPM_MEM_DC_DISP_CONF2_2__FULL                           IPU_MEMORY_OFFSET+0x004070C,0xffffffff
+#define LPM_MEM_DC_DISP_CONF2_2__SL_2                           IPU_MEMORY_OFFSET+0x004070C,0x1FFFFFFF
+
+#define LPM_MEM_DC_DISP_CONF2_3__ADDR                           IPU_MEMORY_OFFSET+0x0040710
+#define LPM_MEM_DC_DISP_CONF2_3__EMPTY                          IPU_MEMORY_OFFSET+0x0040710,0x00000000
+#define LPM_MEM_DC_DISP_CONF2_3__FULL                           IPU_MEMORY_OFFSET+0x0040710,0xffffffff
+#define LPM_MEM_DC_DISP_CONF2_3__SL_3                           IPU_MEMORY_OFFSET+0x0040710,0x1FFFFFFF
+
+#define LPM_MEM_DC_DI0_CONF_1__ADDR                             IPU_MEMORY_OFFSET+0x0040714
+#define LPM_MEM_DC_DI0_CONF_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040714,0x00000000
+#define LPM_MEM_DC_DI0_CONF_1__FULL                             IPU_MEMORY_OFFSET+0x0040714,0xffffffff
+#define LPM_MEM_DC_DI0_CONF_1__DI_READ_DATA_MASK_0              IPU_MEMORY_OFFSET+0x0040714,0xFFFFFFFF
+
+#define LPM_MEM_DC_DI0_CONF_2__ADDR                             IPU_MEMORY_OFFSET+0x0040718
+#define LPM_MEM_DC_DI0_CONF_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040718,0x00000000
+#define LPM_MEM_DC_DI0_CONF_2__FULL                             IPU_MEMORY_OFFSET+0x0040718,0xffffffff
+#define LPM_MEM_DC_DI0_CONF_2__DI_READ_DATA_ACK_VALUE_0         IPU_MEMORY_OFFSET+0x0040718,0xFFFFFFFF
+
+#define LPM_MEM_DC_DI1_CONF_1__ADDR                             IPU_MEMORY_OFFSET+0x004071C
+#define LPM_MEM_DC_DI1_CONF_1__EMPTY                            IPU_MEMORY_OFFSET+0x004071C,0x00000000
+#define LPM_MEM_DC_DI1_CONF_1__FULL                             IPU_MEMORY_OFFSET+0x004071C,0xffffffff
+#define LPM_MEM_DC_DI1_CONF_1__DI_READ_DATA_MASK_1              IPU_MEMORY_OFFSET+0x004071C,0xFFFFFFFF
+
+#define LPM_MEM_DC_DI1_CONF_2__ADDR                             IPU_MEMORY_OFFSET+0x0040720
+#define LPM_MEM_DC_DI1_CONF_2__EMPTY                            IPU_MEMORY_OFFSET+0x0040720,0x00000000
+#define LPM_MEM_DC_DI1_CONF_2__FULL                             IPU_MEMORY_OFFSET+0x0040720,0xffffffff
+#define LPM_MEM_DC_DI1_CONF_2__DI_READ_DATA_ACK_VALUE_1         IPU_MEMORY_OFFSET+0x0040720,0xFFFFFFFF
+
+#define LPM_MEM_DC_MAP_CONF_0__ADDR                             IPU_MEMORY_OFFSET+0x0040724
+#define LPM_MEM_DC_MAP_CONF_0__EMPTY                            IPU_MEMORY_OFFSET+0x0040724,0x00000000
+#define LPM_MEM_DC_MAP_CONF_0__FULL                             IPU_MEMORY_OFFSET+0x0040724,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_0__MAPPING_PNTR_BYTE2_1             IPU_MEMORY_OFFSET+0x0040724,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_0__MAPPING_PNTR_BYTE1_1             IPU_MEMORY_OFFSET+0x0040724,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_0__MAPPING_PNTR_BYTE0_1             IPU_MEMORY_OFFSET+0x0040724,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_0__MAPPING_PNTR_BYTE2_0             IPU_MEMORY_OFFSET+0x0040724,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_0__MAPPING_PNTR_BYTE1_0             IPU_MEMORY_OFFSET+0x0040724,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_0__MAPPING_PNTR_BYTE0_0             IPU_MEMORY_OFFSET+0x0040724,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_1__ADDR                             IPU_MEMORY_OFFSET+0x0040728
+#define LPM_MEM_DC_MAP_CONF_1__EMPTY                            IPU_MEMORY_OFFSET+0x0040728,0x00000000
+#define LPM_MEM_DC_MAP_CONF_1__FULL                             IPU_MEMORY_OFFSET+0x0040728,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_1__MAPPING_PNTR_BYTE2_3             IPU_MEMORY_OFFSET+0x0040728,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_1__MAPPING_PNTR_BYTE1_3             IPU_MEMORY_OFFSET+0x0040728,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_1__MAPPING_PNTR_BYTE0_3             IPU_MEMORY_OFFSET+0x0040728,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_1__MAPPING_PNTR_BYTE2_2             IPU_MEMORY_OFFSET+0x0040728,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_1__MAPPING_PNTR_BYTE1_2             IPU_MEMORY_OFFSET+0x0040728,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_1__MAPPING_PNTR_BYTE0_2             IPU_MEMORY_OFFSET+0x0040728,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_2__ADDR                             IPU_MEMORY_OFFSET+0x004072C
+#define LPM_MEM_DC_MAP_CONF_2__EMPTY                            IPU_MEMORY_OFFSET+0x004072C,0x00000000
+#define LPM_MEM_DC_MAP_CONF_2__FULL                             IPU_MEMORY_OFFSET+0x004072C,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_2__MAPPING_PNTR_BYTE2_5             IPU_MEMORY_OFFSET+0x004072C,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_2__MAPPING_PNTR_BYTE1_5             IPU_MEMORY_OFFSET+0x004072C,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_2__MAPPING_PNTR_BYTE0_5             IPU_MEMORY_OFFSET+0x004072C,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_2__MAPPING_PNTR_BYTE2_4             IPU_MEMORY_OFFSET+0x004072C,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_2__MAPPING_PNTR_BYTE1_4             IPU_MEMORY_OFFSET+0x004072C,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_2__MAPPING_PNTR_BYTE0_4             IPU_MEMORY_OFFSET+0x004072C,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_3__ADDR                             IPU_MEMORY_OFFSET+0x0040730
+#define LPM_MEM_DC_MAP_CONF_3__EMPTY                            IPU_MEMORY_OFFSET+0x0040730,0x00000000
+#define LPM_MEM_DC_MAP_CONF_3__FULL                             IPU_MEMORY_OFFSET+0x0040730,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_3__MAPPING_PNTR_BYTE2_7             IPU_MEMORY_OFFSET+0x0040730,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_3__MAPPING_PNTR_BYTE1_7             IPU_MEMORY_OFFSET+0x0040730,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_3__MAPPING_PNTR_BYTE0_7             IPU_MEMORY_OFFSET+0x0040730,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_3__MAPPING_PNTR_BYTE2_6             IPU_MEMORY_OFFSET+0x0040730,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_3__MAPPING_PNTR_BYTE1_6             IPU_MEMORY_OFFSET+0x0040730,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_3__MAPPING_PNTR_BYTE0_6             IPU_MEMORY_OFFSET+0x0040730,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_4__ADDR                             IPU_MEMORY_OFFSET+0x0040734
+#define LPM_MEM_DC_MAP_CONF_4__EMPTY                            IPU_MEMORY_OFFSET+0x0040734,0x00000000
+#define LPM_MEM_DC_MAP_CONF_4__FULL                             IPU_MEMORY_OFFSET+0x0040734,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_4__MAPPING_PNTR_BYTE2_9             IPU_MEMORY_OFFSET+0x0040734,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_4__MAPPING_PNTR_BYTE1_9             IPU_MEMORY_OFFSET+0x0040734,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_4__MAPPING_PNTR_BYTE0_9             IPU_MEMORY_OFFSET+0x0040734,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_4__MAPPING_PNTR_BYTE2_8             IPU_MEMORY_OFFSET+0x0040734,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_4__MAPPING_PNTR_BYTE1_8             IPU_MEMORY_OFFSET+0x0040734,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_4__MAPPING_PNTR_BYTE0_8             IPU_MEMORY_OFFSET+0x0040734,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_5__ADDR                             IPU_MEMORY_OFFSET+0x0040738
+#define LPM_MEM_DC_MAP_CONF_5__EMPTY                            IPU_MEMORY_OFFSET+0x0040738,0x00000000
+#define LPM_MEM_DC_MAP_CONF_5__FULL                             IPU_MEMORY_OFFSET+0x0040738,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_5__MAPPING_PNTR_BYTE2_11            IPU_MEMORY_OFFSET+0x0040738,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_5__MAPPING_PNTR_BYTE1_11            IPU_MEMORY_OFFSET+0x0040738,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_5__MAPPING_PNTR_BYTE0_11            IPU_MEMORY_OFFSET+0x0040738,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_5__MAPPING_PNTR_BYTE2_10            IPU_MEMORY_OFFSET+0x0040738,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_5__MAPPING_PNTR_BYTE1_10            IPU_MEMORY_OFFSET+0x0040738,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_5__MAPPING_PNTR_BYTE0_10            IPU_MEMORY_OFFSET+0x0040738,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_6__ADDR                             IPU_MEMORY_OFFSET+0x004073C
+#define LPM_MEM_DC_MAP_CONF_6__EMPTY                            IPU_MEMORY_OFFSET+0x004073C,0x00000000
+#define LPM_MEM_DC_MAP_CONF_6__FULL                             IPU_MEMORY_OFFSET+0x004073C,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_6__MAPPING_PNTR_BYTE2_13            IPU_MEMORY_OFFSET+0x004073C,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_6__MAPPING_PNTR_BYTE1_13            IPU_MEMORY_OFFSET+0x004073C,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_6__MAPPING_PNTR_BYTE0_13            IPU_MEMORY_OFFSET+0x004073C,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_6__MAPPING_PNTR_BYTE2_12            IPU_MEMORY_OFFSET+0x004073C,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_6__MAPPING_PNTR_BYTE1_12            IPU_MEMORY_OFFSET+0x004073C,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_6__MAPPING_PNTR_BYTE0_12            IPU_MEMORY_OFFSET+0x004073C,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_7__ADDR                             IPU_MEMORY_OFFSET+0x0040740
+#define LPM_MEM_DC_MAP_CONF_7__EMPTY                            IPU_MEMORY_OFFSET+0x0040740,0x00000000
+#define LPM_MEM_DC_MAP_CONF_7__FULL                             IPU_MEMORY_OFFSET+0x0040740,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_7__MAPPING_PNTR_BYTE2_15            IPU_MEMORY_OFFSET+0x0040740,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_7__MAPPING_PNTR_BYTE1_15            IPU_MEMORY_OFFSET+0x0040740,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_7__MAPPING_PNTR_BYTE0_15            IPU_MEMORY_OFFSET+0x0040740,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_7__MAPPING_PNTR_BYTE2_14            IPU_MEMORY_OFFSET+0x0040740,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_7__MAPPING_PNTR_BYTE1_14            IPU_MEMORY_OFFSET+0x0040740,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_7__MAPPING_PNTR_BYTE0_14            IPU_MEMORY_OFFSET+0x0040740,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_8__ADDR                             IPU_MEMORY_OFFSET+0x0040744
+#define LPM_MEM_DC_MAP_CONF_8__EMPTY                            IPU_MEMORY_OFFSET+0x0040744,0x00000000
+#define LPM_MEM_DC_MAP_CONF_8__FULL                             IPU_MEMORY_OFFSET+0x0040744,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_8__MAPPING_PNTR_BYTE2_17            IPU_MEMORY_OFFSET+0x0040744,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_8__MAPPING_PNTR_BYTE1_17            IPU_MEMORY_OFFSET+0x0040744,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_8__MAPPING_PNTR_BYTE0_17            IPU_MEMORY_OFFSET+0x0040744,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_8__MAPPING_PNTR_BYTE2_16            IPU_MEMORY_OFFSET+0x0040744,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_8__MAPPING_PNTR_BYTE1_16            IPU_MEMORY_OFFSET+0x0040744,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_8__MAPPING_PNTR_BYTE0_16            IPU_MEMORY_OFFSET+0x0040744,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_9__ADDR                             IPU_MEMORY_OFFSET+0x0040748
+#define LPM_MEM_DC_MAP_CONF_9__EMPTY                            IPU_MEMORY_OFFSET+0x0040748,0x00000000
+#define LPM_MEM_DC_MAP_CONF_9__FULL                             IPU_MEMORY_OFFSET+0x0040748,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_9__MAPPING_PNTR_BYTE2_19            IPU_MEMORY_OFFSET+0x0040748,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_9__MAPPING_PNTR_BYTE1_19            IPU_MEMORY_OFFSET+0x0040748,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_9__MAPPING_PNTR_BYTE0_19            IPU_MEMORY_OFFSET+0x0040748,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_9__MAPPING_PNTR_BYTE2_18            IPU_MEMORY_OFFSET+0x0040748,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_9__MAPPING_PNTR_BYTE1_18            IPU_MEMORY_OFFSET+0x0040748,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_9__MAPPING_PNTR_BYTE0_18            IPU_MEMORY_OFFSET+0x0040748,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_10__ADDR                            IPU_MEMORY_OFFSET+0x004074C
+#define LPM_MEM_DC_MAP_CONF_10__EMPTY                           IPU_MEMORY_OFFSET+0x004074C,0x00000000
+#define LPM_MEM_DC_MAP_CONF_10__FULL                            IPU_MEMORY_OFFSET+0x004074C,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_10__MAPPING_PNTR_BYTE2_21           IPU_MEMORY_OFFSET+0x004074C,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_10__MAPPING_PNTR_BYTE1_21           IPU_MEMORY_OFFSET+0x004074C,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_10__MAPPING_PNTR_BYTE0_21           IPU_MEMORY_OFFSET+0x004074C,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_10__MAPPING_PNTR_BYTE2_20           IPU_MEMORY_OFFSET+0x004074C,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_10__MAPPING_PNTR_BYTE1_20           IPU_MEMORY_OFFSET+0x004074C,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_10__MAPPING_PNTR_BYTE0_20           IPU_MEMORY_OFFSET+0x004074C,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_11__ADDR                            IPU_MEMORY_OFFSET+0x0040750
+#define LPM_MEM_DC_MAP_CONF_11__EMPTY                           IPU_MEMORY_OFFSET+0x0040750,0x00000000
+#define LPM_MEM_DC_MAP_CONF_11__FULL                            IPU_MEMORY_OFFSET+0x0040750,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_11__MAPPING_PNTR_BYTE2_23           IPU_MEMORY_OFFSET+0x0040750,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_11__MAPPING_PNTR_BYTE1_23           IPU_MEMORY_OFFSET+0x0040750,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_11__MAPPING_PNTR_BYTE0_23           IPU_MEMORY_OFFSET+0x0040750,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_11__MAPPING_PNTR_BYTE2_22           IPU_MEMORY_OFFSET+0x0040750,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_11__MAPPING_PNTR_BYTE1_22           IPU_MEMORY_OFFSET+0x0040750,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_11__MAPPING_PNTR_BYTE0_22           IPU_MEMORY_OFFSET+0x0040750,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_12__ADDR                            IPU_MEMORY_OFFSET+0x0040754
+#define LPM_MEM_DC_MAP_CONF_12__EMPTY                           IPU_MEMORY_OFFSET+0x0040754,0x00000000
+#define LPM_MEM_DC_MAP_CONF_12__FULL                            IPU_MEMORY_OFFSET+0x0040754,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_12__MAPPING_PNTR_BYTE2_25           IPU_MEMORY_OFFSET+0x0040754,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_12__MAPPING_PNTR_BYTE1_25           IPU_MEMORY_OFFSET+0x0040754,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_12__MAPPING_PNTR_BYTE0_25           IPU_MEMORY_OFFSET+0x0040754,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_12__MAPPING_PNTR_BYTE2_24           IPU_MEMORY_OFFSET+0x0040754,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_12__MAPPING_PNTR_BYTE1_24           IPU_MEMORY_OFFSET+0x0040754,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_12__MAPPING_PNTR_BYTE0_24           IPU_MEMORY_OFFSET+0x0040754,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_13__ADDR                            IPU_MEMORY_OFFSET+0x0040758
+#define LPM_MEM_DC_MAP_CONF_13__EMPTY                           IPU_MEMORY_OFFSET+0x0040758,0x00000000
+#define LPM_MEM_DC_MAP_CONF_13__FULL                            IPU_MEMORY_OFFSET+0x0040758,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_13__MAPPING_PNTR_BYTE2_27           IPU_MEMORY_OFFSET+0x0040758,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_13__MAPPING_PNTR_BYTE1_27           IPU_MEMORY_OFFSET+0x0040758,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_13__MAPPING_PNTR_BYTE0_27           IPU_MEMORY_OFFSET+0x0040758,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_13__MAPPING_PNTR_BYTE2_26           IPU_MEMORY_OFFSET+0x0040758,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_13__MAPPING_PNTR_BYTE1_26           IPU_MEMORY_OFFSET+0x0040758,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_13__MAPPING_PNTR_BYTE0_26           IPU_MEMORY_OFFSET+0x0040758,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_14__ADDR                            IPU_MEMORY_OFFSET+0x004075C
+#define LPM_MEM_DC_MAP_CONF_14__EMPTY                           IPU_MEMORY_OFFSET+0x004075C,0x00000000
+#define LPM_MEM_DC_MAP_CONF_14__FULL                            IPU_MEMORY_OFFSET+0x004075C,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_14__MAPPING_PNTR_BYTE2_29           IPU_MEMORY_OFFSET+0x004075C,0x7C000000
+#define LPM_MEM_DC_MAP_CONF_14__MAPPING_PNTR_BYTE1_29           IPU_MEMORY_OFFSET+0x004075C,0x03E00000
+#define LPM_MEM_DC_MAP_CONF_14__MAPPING_PNTR_BYTE0_29           IPU_MEMORY_OFFSET+0x004075C,0x001F0000
+#define LPM_MEM_DC_MAP_CONF_14__MAPPING_PNTR_BYTE2_28           IPU_MEMORY_OFFSET+0x004075C,0x00007C00
+#define LPM_MEM_DC_MAP_CONF_14__MAPPING_PNTR_BYTE1_28           IPU_MEMORY_OFFSET+0x004075C,0x000003E0
+#define LPM_MEM_DC_MAP_CONF_14__MAPPING_PNTR_BYTE0_28           IPU_MEMORY_OFFSET+0x004075C,0x0000001F
+
+#define LPM_MEM_DC_MAP_CONF_15__ADDR                            IPU_MEMORY_OFFSET+0x0040760
+#define LPM_MEM_DC_MAP_CONF_15__EMPTY                           IPU_MEMORY_OFFSET+0x0040760,0x00000000
+#define LPM_MEM_DC_MAP_CONF_15__FULL                            IPU_MEMORY_OFFSET+0x0040760,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_15__MD_OFFSET_1                     IPU_MEMORY_OFFSET+0x0040760,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_15__MD_MASK_1                       IPU_MEMORY_OFFSET+0x0040760,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_15__MD_OFFSET_0                     IPU_MEMORY_OFFSET+0x0040760,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_15__MD_MASK_0                       IPU_MEMORY_OFFSET+0x0040760,0x000000FF
+
+#define LPM_MEM_DC_MAP_CONF_16__ADDR                            IPU_MEMORY_OFFSET+0x0040764
+#define LPM_MEM_DC_MAP_CONF_16__EMPTY                           IPU_MEMORY_OFFSET+0x0040764,0x00000000
+#define LPM_MEM_DC_MAP_CONF_16__FULL                            IPU_MEMORY_OFFSET+0x0040764,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_16__MD_OFFSET_3                     IPU_MEMORY_OFFSET+0x0040764,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_16__MD_MASK_3                       IPU_MEMORY_OFFSET+0x0040764,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_16__MD_OFFSET_2                     IPU_MEMORY_OFFSET+0x0040764,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_16__MD_MASK_2                       IPU_MEMORY_OFFSET+0x0040764,0x000000FF
+
+#define LPM_MEM_DC_MAP_CONF_17__ADDR                            IPU_MEMORY_OFFSET+0x0040768
+#define LPM_MEM_DC_MAP_CONF_17__EMPTY                           IPU_MEMORY_OFFSET+0x0040768,0x00000000
+#define LPM_MEM_DC_MAP_CONF_17__FULL                            IPU_MEMORY_OFFSET+0x0040768,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_17__MD_OFFSET_5                     IPU_MEMORY_OFFSET+0x0040768,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_17__MD_MASK_5                       IPU_MEMORY_OFFSET+0x0040768,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_17__MD_OFFSET_4                     IPU_MEMORY_OFFSET+0x0040768,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_17__MD_MASK_4                       IPU_MEMORY_OFFSET+0x0040768,0x000000FF
+
+#define LPM_MEM_DC_MAP_CONF_18__ADDR                            IPU_MEMORY_OFFSET+0x004076C
+#define LPM_MEM_DC_MAP_CONF_18__EMPTY                           IPU_MEMORY_OFFSET+0x004076C,0x00000000
+#define LPM_MEM_DC_MAP_CONF_18__FULL                            IPU_MEMORY_OFFSET+0x004076C,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_18__MD_OFFSET_7                     IPU_MEMORY_OFFSET+0x004076C,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_18__MD_MASK_7                       IPU_MEMORY_OFFSET+0x004076C,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_18__MD_OFFSET_6                     IPU_MEMORY_OFFSET+0x004076C,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_18__MD_MASK_6                       IPU_MEMORY_OFFSET+0x004076C,0x000000FF
+
+#define LPM_MEM_DC_MAP_CONF_19__ADDR                            IPU_MEMORY_OFFSET+0x0040770
+#define LPM_MEM_DC_MAP_CONF_19__EMPTY                           IPU_MEMORY_OFFSET+0x0040770,0x00000000
+#define LPM_MEM_DC_MAP_CONF_19__FULL                            IPU_MEMORY_OFFSET+0x0040770,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_19__MD_OFFSET_9                     IPU_MEMORY_OFFSET+0x0040770,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_19__MD_MASK_9                       IPU_MEMORY_OFFSET+0x0040770,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_19__MD_OFFSET_8                     IPU_MEMORY_OFFSET+0x0040770,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_19__MD_MASK_8                       IPU_MEMORY_OFFSET+0x0040770,0x000000FF
+
+#define LPM_MEM_DC_MAP_CONF_20__ADDR                            IPU_MEMORY_OFFSET+0x0040774
+#define LPM_MEM_DC_MAP_CONF_20__EMPTY                           IPU_MEMORY_OFFSET+0x0040774,0x00000000
+#define LPM_MEM_DC_MAP_CONF_20__FULL                            IPU_MEMORY_OFFSET+0x0040774,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_20__MD_OFFSET_11                    IPU_MEMORY_OFFSET+0x0040774,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_20__MD_MASK_11                      IPU_MEMORY_OFFSET+0x0040774,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_20__MD_OFFSET_10                    IPU_MEMORY_OFFSET+0x0040774,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_20__MD_MASK_10                      IPU_MEMORY_OFFSET+0x0040774,0x000000FF
+
+#define LPM_MEM_DC_MAP_CONF_21__ADDR                            IPU_MEMORY_OFFSET+0x0040778
+#define LPM_MEM_DC_MAP_CONF_21__EMPTY                           IPU_MEMORY_OFFSET+0x0040778,0x00000000
+#define LPM_MEM_DC_MAP_CONF_21__FULL                            IPU_MEMORY_OFFSET+0x0040778,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_21__MD_OFFSET_13                    IPU_MEMORY_OFFSET+0x0040778,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_21__MD_MASK_13                      IPU_MEMORY_OFFSET+0x0040778,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_21__MD_OFFSET_12                    IPU_MEMORY_OFFSET+0x0040778,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_21__MD_MASK_12                      IPU_MEMORY_OFFSET+0x0040778,0x000000FF
+
+#define LPM_MEM_DC_MAP_CONF_22__ADDR                            IPU_MEMORY_OFFSET+0x004077C
+#define LPM_MEM_DC_MAP_CONF_22__EMPTY                           IPU_MEMORY_OFFSET+0x004077C,0x00000000
+#define LPM_MEM_DC_MAP_CONF_22__FULL                            IPU_MEMORY_OFFSET+0x004077C,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_22__MD_OFFSET_15                    IPU_MEMORY_OFFSET+0x004077C,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_22__MD_MASK_15                      IPU_MEMORY_OFFSET+0x004077C,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_22__MD_OFFSET_14                    IPU_MEMORY_OFFSET+0x004077C,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_22__MD_MASK_14                      IPU_MEMORY_OFFSET+0x004077C,0x000000FF
+
+#define LPM_MEM_DC_MAP_CONF_23__ADDR                            IPU_MEMORY_OFFSET+0x0040780
+#define LPM_MEM_DC_MAP_CONF_23__EMPTY                           IPU_MEMORY_OFFSET+0x0040780,0x00000000
+#define LPM_MEM_DC_MAP_CONF_23__FULL                            IPU_MEMORY_OFFSET+0x0040780,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_23__MD_OFFSET_17                    IPU_MEMORY_OFFSET+0x0040780,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_23__MD_MASK_17                      IPU_MEMORY_OFFSET+0x0040780,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_23__MD_OFFSET_16                    IPU_MEMORY_OFFSET+0x0040780,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_23__MD_MASK_16                      IPU_MEMORY_OFFSET+0x0040780,0x000000FF
+
+#define LPM_MEM_DC_MAP_CONF_24__ADDR                            IPU_MEMORY_OFFSET+0x0040784
+#define LPM_MEM_DC_MAP_CONF_24__EMPTY                           IPU_MEMORY_OFFSET+0x0040784,0x00000000
+#define LPM_MEM_DC_MAP_CONF_24__FULL                            IPU_MEMORY_OFFSET+0x0040784,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_24__MD_OFFSET_19                    IPU_MEMORY_OFFSET+0x0040784,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_24__MD_MASK_19                      IPU_MEMORY_OFFSET+0x0040784,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_24__MD_OFFSET_18                    IPU_MEMORY_OFFSET+0x0040784,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_24__MD_MASK_18                      IPU_MEMORY_OFFSET+0x0040784,0x000000FF
+
+#define LPM_MEM_DC_MAP_CONF_25__ADDR                            IPU_MEMORY_OFFSET+0x0040788
+#define LPM_MEM_DC_MAP_CONF_25__EMPTY                           IPU_MEMORY_OFFSET+0x0040788,0x00000000
+#define LPM_MEM_DC_MAP_CONF_25__FULL                            IPU_MEMORY_OFFSET+0x0040788,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_25__MD_OFFSET_21                    IPU_MEMORY_OFFSET+0x0040788,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_25__MD_MASK_21                      IPU_MEMORY_OFFSET+0x0040788,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_25__MD_OFFSET_20                    IPU_MEMORY_OFFSET+0x0040788,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_25__MD_MASK_20                      IPU_MEMORY_OFFSET+0x0040788,0x000000FF
+
+#define LPM_MEM_DC_MAP_CONF_26__ADDR                            IPU_MEMORY_OFFSET+0x004078C
+#define LPM_MEM_DC_MAP_CONF_26__EMPTY                           IPU_MEMORY_OFFSET+0x004078C,0x00000000
+#define LPM_MEM_DC_MAP_CONF_26__FULL                            IPU_MEMORY_OFFSET+0x004078C,0xffffffff
+#define LPM_MEM_DC_MAP_CONF_26__MD_OFFSET_23                    IPU_MEMORY_OFFSET+0x004078C,0x1F000000
+#define LPM_MEM_DC_MAP_CONF_26__MD_MASK_23                      IPU_MEMORY_OFFSET+0x004078C,0x00FF0000
+#define LPM_MEM_DC_MAP_CONF_26__MD_OFFSET_22                    IPU_MEMORY_OFFSET+0x004078C,0x00001F00
+#define LPM_MEM_DC_MAP_CONF_26__MD_MASK_22                      IPU_MEMORY_OFFSET+0x004078C,0x000000FF
+
+#define LPM_MEM_DC_UGDE0_0__ADDR                                IPU_MEMORY_OFFSET+0x0040790
+#define LPM_MEM_DC_UGDE0_0__EMPTY                               IPU_MEMORY_OFFSET+0x0040790,0x00000000
+#define LPM_MEM_DC_UGDE0_0__FULL                                IPU_MEMORY_OFFSET+0x0040790,0xffffffff
+#define LPM_MEM_DC_UGDE0_0__NF_NL_0                             IPU_MEMORY_OFFSET+0x0040790,0x18000000
+#define LPM_MEM_DC_UGDE0_0__AUTORESTART_0                       IPU_MEMORY_OFFSET+0x0040790,0x04000000
+#define LPM_MEM_DC_UGDE0_0__ODD_EN_0                            IPU_MEMORY_OFFSET+0x0040790,0x02000000
+#define LPM_MEM_DC_UGDE0_0__COD_ODD_START_0                     IPU_MEMORY_OFFSET+0x0040790,0x00FF0000
+#define LPM_MEM_DC_UGDE0_0__COD_EV_START_0                      IPU_MEMORY_OFFSET+0x0040790,0x0000FF00
+#define LPM_MEM_DC_UGDE0_0__COD_EV_PRIORITY_0                   IPU_MEMORY_OFFSET+0x0040790,0x00000078
+#define LPM_MEM_DC_UGDE0_0__ID_CODED_0                          IPU_MEMORY_OFFSET+0x0040790,0x00000007
+
+#define LPM_MEM_DC_UGDE0_1__ADDR                                IPU_MEMORY_OFFSET+0x0040794
+#define LPM_MEM_DC_UGDE0_1__EMPTY                               IPU_MEMORY_OFFSET+0x0040794,0x00000000
+#define LPM_MEM_DC_UGDE0_1__FULL                                IPU_MEMORY_OFFSET+0x0040794,0xffffffff
+#define LPM_MEM_DC_UGDE0_1__STEP_0                              IPU_MEMORY_OFFSET+0x0040794,0x1FFFFFFF
+
+#define LPM_MEM_DC_UGDE0_2__ADDR                                IPU_MEMORY_OFFSET+0x0040798
+#define LPM_MEM_DC_UGDE0_2__EMPTY                               IPU_MEMORY_OFFSET+0x0040798,0x00000000
+#define LPM_MEM_DC_UGDE0_2__FULL                                IPU_MEMORY_OFFSET+0x0040798,0xffffffff
+#define LPM_MEM_DC_UGDE0_2__OFFSET_DT_0                         IPU_MEMORY_OFFSET+0x0040798,0x1FFFFFFF
+
+#define LPM_MEM_DC_UGDE0_3__ADDR                                IPU_MEMORY_OFFSET+0x004079C
+#define LPM_MEM_DC_UGDE0_3__EMPTY                               IPU_MEMORY_OFFSET+0x004079C,0x00000000
+#define LPM_MEM_DC_UGDE0_3__FULL                                IPU_MEMORY_OFFSET+0x004079C,0xffffffff
+#define LPM_MEM_DC_UGDE0_3__STEP_REPEAT_0                       IPU_MEMORY_OFFSET+0x004079C,0x1FFFFFFF
+
+#define LPM_MEM_DC_UGDE1_0__ADDR                                IPU_MEMORY_OFFSET+0x00407A0
+#define LPM_MEM_DC_UGDE1_0__EMPTY                               IPU_MEMORY_OFFSET+0x00407A0,0x00000000
+#define LPM_MEM_DC_UGDE1_0__FULL                                IPU_MEMORY_OFFSET+0x00407A0,0xffffffff
+#define LPM_MEM_DC_UGDE1_0__NF_NL_1                             IPU_MEMORY_OFFSET+0x00407A0,0x18000000
+#define LPM_MEM_DC_UGDE1_0__AUTORESTART_1                       IPU_MEMORY_OFFSET+0x00407A0,0x04000000
+#define LPM_MEM_DC_UGDE1_0__ODD_EN_1                            IPU_MEMORY_OFFSET+0x00407A0,0x02000000
+#define LPM_MEM_DC_UGDE1_0__COD_ODD_START_1                     IPU_MEMORY_OFFSET+0x00407A0,0x00FF0000
+#define LPM_MEM_DC_UGDE1_0__COD_EV_START_1                      IPU_MEMORY_OFFSET+0x00407A0,0x00007F80
+#define LPM_MEM_DC_UGDE1_0__COD_EV_PRIORITY_1                   IPU_MEMORY_OFFSET+0x00407A0,0x00000078
+#define LPM_MEM_DC_UGDE1_0__ID_CODED_1                          IPU_MEMORY_OFFSET+0x00407A0,0x00000007
+
+#define LPM_MEM_DC_UGDE1_1__ADDR                                IPU_MEMORY_OFFSET+0x00407A4
+#define LPM_MEM_DC_UGDE1_1__EMPTY                               IPU_MEMORY_OFFSET+0x00407A4,0x00000000
+#define LPM_MEM_DC_UGDE1_1__FULL                                IPU_MEMORY_OFFSET+0x00407A4,0xffffffff
+#define LPM_MEM_DC_UGDE1_1__STEP_1                              IPU_MEMORY_OFFSET+0x00407A4,0x1FFFFFFF
+
+#define LPM_MEM_DC_UGDE1_2__ADDR                                IPU_MEMORY_OFFSET+0x00407A8
+#define LPM_MEM_DC_UGDE1_2__EMPTY                               IPU_MEMORY_OFFSET+0x00407A8,0x00000000
+#define LPM_MEM_DC_UGDE1_2__FULL                                IPU_MEMORY_OFFSET+0x00407A8,0xffffffff
+#define LPM_MEM_DC_UGDE1_2__OFFSET_DT_1                         IPU_MEMORY_OFFSET+0x00407A8,0x1FFFFFFF
+
+#define LPM_MEM_DC_UGDE1_3__ADDR                                IPU_MEMORY_OFFSET+0x00407AC
+#define LPM_MEM_DC_UGDE1_3__EMPTY                               IPU_MEMORY_OFFSET+0x00407AC,0x00000000
+#define LPM_MEM_DC_UGDE1_3__FULL                                IPU_MEMORY_OFFSET+0x00407AC,0xffffffff
+#define LPM_MEM_DC_UGDE1_3__STEP_REPEAT_1                       IPU_MEMORY_OFFSET+0x00407AC,0x1FFFFFFF
+
+#define LPM_MEM_DC_UGDE2_0__ADDR                                IPU_MEMORY_OFFSET+0x00407B0
+#define LPM_MEM_DC_UGDE2_0__EMPTY                               IPU_MEMORY_OFFSET+0x00407B0,0x00000000
+#define LPM_MEM_DC_UGDE2_0__FULL                                IPU_MEMORY_OFFSET+0x00407B0,0xffffffff
+#define LPM_MEM_DC_UGDE2_0__NF_NL_2                             IPU_MEMORY_OFFSET+0x00407B0,0x18000000
+#define LPM_MEM_DC_UGDE2_0__AUTORESTART_2                       IPU_MEMORY_OFFSET+0x00407B0,0x04000000
+#define LPM_MEM_DC_UGDE2_0__ODD_EN_2                            IPU_MEMORY_OFFSET+0x00407B0,0x02000000
+#define LPM_MEM_DC_UGDE2_0__COD_ODD_START_2                     IPU_MEMORY_OFFSET+0x00407B0,0x00FF0000
+#define LPM_MEM_DC_UGDE2_0__COD_EV_START_2                      IPU_MEMORY_OFFSET+0x00407B0,0x00007F80
+#define LPM_MEM_DC_UGDE2_0__COD_EV_PRIORITY_2                   IPU_MEMORY_OFFSET+0x00407B0,0x00000078
+#define LPM_MEM_DC_UGDE2_0__ID_CODED_2                          IPU_MEMORY_OFFSET+0x00407B0,0x00000007
+
+#define LPM_MEM_DC_UGDE2_1__ADDR                                IPU_MEMORY_OFFSET+0x00407B4
+#define LPM_MEM_DC_UGDE2_1__EMPTY                               IPU_MEMORY_OFFSET+0x00407B4,0x00000000
+#define LPM_MEM_DC_UGDE2_1__FULL                                IPU_MEMORY_OFFSET+0x00407B4,0xffffffff
+#define LPM_MEM_DC_UGDE2_1__STEP_2                              IPU_MEMORY_OFFSET+0x00407B4,0x1FFFFFFF
+
+#define LPM_MEM_DC_UGDE2_2__ADDR                                IPU_MEMORY_OFFSET+0x00407B8
+#define LPM_MEM_DC_UGDE2_2__EMPTY                               IPU_MEMORY_OFFSET+0x00407B8,0x00000000
+#define LPM_MEM_DC_UGDE2_2__FULL                                IPU_MEMORY_OFFSET+0x00407B8,0xffffffff
+#define LPM_MEM_DC_UGDE2_2__OFFSET_DT_2                         IPU_MEMORY_OFFSET+0x00407B8,0x1FFFFFFF
+
+#define LPM_MEM_DC_UGDE2_3__ADDR                                IPU_MEMORY_OFFSET+0x00407BC
+#define LPM_MEM_DC_UGDE2_3__EMPTY                               IPU_MEMORY_OFFSET+0x00407BC,0x00000000
+#define LPM_MEM_DC_UGDE2_3__FULL                                IPU_MEMORY_OFFSET+0x00407BC,0xffffffff
+#define LPM_MEM_DC_UGDE2_3__STEP_REPEAT_2                       IPU_MEMORY_OFFSET+0x00407BC,0x1FFFFFFF
+
+#define LPM_MEM_DC_UGDE3_0__ADDR                                IPU_MEMORY_OFFSET+0x00407C0
+#define LPM_MEM_DC_UGDE3_0__EMPTY                               IPU_MEMORY_OFFSET+0x00407C0,0x00000000
+#define LPM_MEM_DC_UGDE3_0__FULL                                IPU_MEMORY_OFFSET+0x00407C0,0xffffffff
+#define LPM_MEM_DC_UGDE3_0__NF_NL_3                             IPU_MEMORY_OFFSET+0x00407C0,0x18000000
+#define LPM_MEM_DC_UGDE3_0__AUTORESTART_3                       IPU_MEMORY_OFFSET+0x00407C0,0x04000000
+#define LPM_MEM_DC_UGDE3_0__ODD_EN_3                            IPU_MEMORY_OFFSET+0x00407C0,0x02000000
+#define LPM_MEM_DC_UGDE3_0__COD_ODD_START_3                     IPU_MEMORY_OFFSET+0x00407C0,0x00FF0000
+#define LPM_MEM_DC_UGDE3_0__COD_EV_START_3                      IPU_MEMORY_OFFSET+0x00407C0,0x00007F80
+#define LPM_MEM_DC_UGDE3_0__COD_EV_PRIORITY_3                   IPU_MEMORY_OFFSET+0x00407C0,0x00000078
+#define LPM_MEM_DC_UGDE3_0__ID_CODED_3                          IPU_MEMORY_OFFSET+0x00407C0,0x00000007
+
+#define LPM_MEM_DC_UGDE3_1__ADDR                                IPU_MEMORY_OFFSET+0x00407C4
+#define LPM_MEM_DC_UGDE3_1__EMPTY                               IPU_MEMORY_OFFSET+0x00407C4,0x00000000
+#define LPM_MEM_DC_UGDE3_1__FULL                                IPU_MEMORY_OFFSET+0x00407C4,0xffffffff
+#define LPM_MEM_DC_UGDE3_1__STEP_3                              IPU_MEMORY_OFFSET+0x00407C4,0x1FFFFFFF
+
+#define LPM_MEM_DC_UGDE3_2__ADDR                                IPU_MEMORY_OFFSET+0x00407C8
+#define LPM_MEM_DC_UGDE3_2__EMPTY                               IPU_MEMORY_OFFSET+0x00407C8,0x00000000
+#define LPM_MEM_DC_UGDE3_2__FULL                                IPU_MEMORY_OFFSET+0x00407C8,0xffffffff
+#define LPM_MEM_DC_UGDE3_2__OFFSET_DT_3                         IPU_MEMORY_OFFSET+0x00407C8,0x1FFFFFFF
+
+#define LPM_MEM_DC_UGDE3_3__ADDR                                IPU_MEMORY_OFFSET+0x00407CC
+#define LPM_MEM_DC_UGDE3_3__EMPTY                               IPU_MEMORY_OFFSET+0x00407CC,0x00000000
+#define LPM_MEM_DC_UGDE3_3__FULL                                IPU_MEMORY_OFFSET+0x00407CC,0xffffffff
+#define LPM_MEM_DC_UGDE3_3__STEP_REPEAT_3                       IPU_MEMORY_OFFSET+0x00407CC,0x1FFFFFFF
+
+#define LPM_MEM_DC_LLA0__ADDR                                   IPU_MEMORY_OFFSET+0x00407D0
+#define LPM_MEM_DC_LLA0__EMPTY                                  IPU_MEMORY_OFFSET+0x00407D0,0x00000000
+#define LPM_MEM_DC_LLA0__FULL                                   IPU_MEMORY_OFFSET+0x00407D0,0xffffffff
+#define LPM_MEM_DC_LLA0__MCU_RS_3_0                             IPU_MEMORY_OFFSET+0x00407D0,0xFF000000
+#define LPM_MEM_DC_LLA0__MCU_RS_2_0                             IPU_MEMORY_OFFSET+0x00407D0,0x00FF0000
+#define LPM_MEM_DC_LLA0__MCU_RS_1_0                             IPU_MEMORY_OFFSET+0x00407D0,0x0000FF00
+#define LPM_MEM_DC_LLA0__MCU_RS_0_0                             IPU_MEMORY_OFFSET+0x00407D0,0x000000FF
+
+#define LPM_MEM_DC_LLA1__ADDR                                   IPU_MEMORY_OFFSET+0x00407D4
+#define LPM_MEM_DC_LLA1__EMPTY                                  IPU_MEMORY_OFFSET+0x00407D4,0x00000000
+#define LPM_MEM_DC_LLA1__FULL                                   IPU_MEMORY_OFFSET+0x00407D4,0xffffffff
+#define LPM_MEM_DC_LLA1__MCU_RS_3_1                             IPU_MEMORY_OFFSET+0x00407D4,0xFF000000
+#define LPM_MEM_DC_LLA1__MCU_RS_2_1                             IPU_MEMORY_OFFSET+0x00407D4,0x00FF0000
+#define LPM_MEM_DC_LLA1__MCU_RS_1_1                             IPU_MEMORY_OFFSET+0x00407D4,0x0000FF00
+#define LPM_MEM_DC_LLA1__MCU_RS_0_1                             IPU_MEMORY_OFFSET+0x00407D4,0x000000FF
+
+#define LPM_MEM_DC_R_LLA0__ADDR                                 IPU_MEMORY_OFFSET+0x00407D8
+#define LPM_MEM_DC_R_LLA0__EMPTY                                IPU_MEMORY_OFFSET+0x00407D8,0x00000000
+#define LPM_MEM_DC_R_LLA0__FULL                                 IPU_MEMORY_OFFSET+0x00407D8,0xffffffff
+#define LPM_MEM_DC_R_LLA0__MCU_RS_R_3_0                         IPU_MEMORY_OFFSET+0x00407D8,0xFF000000
+#define LPM_MEM_DC_R_LLA0__MCU_RS_R_2_0                         IPU_MEMORY_OFFSET+0x00407D8,0x00FF0000
+#define LPM_MEM_DC_R_LLA0__MCU_RS_R_1_0                         IPU_MEMORY_OFFSET+0x00407D8,0x0000FF00
+#define LPM_MEM_DC_R_LLA0__MCU_RS_R_0_0                         IPU_MEMORY_OFFSET+0x00407D8,0x000000FF
+
+#define LPM_MEM_DC_R_LLA1__ADDR                                 IPU_MEMORY_OFFSET+0x00407DC
+#define LPM_MEM_DC_R_LLA1__EMPTY                                IPU_MEMORY_OFFSET+0x00407DC,0x00000000
+#define LPM_MEM_DC_R_LLA1__FULL                                 IPU_MEMORY_OFFSET+0x00407DC,0xffffffff
+#define LPM_MEM_DC_R_LLA1__MCU_RS_R_3_1                         IPU_MEMORY_OFFSET+0x00407DC,0xFF000000
+#define LPM_MEM_DC_R_LLA1__MCU_RS_R_2_1                         IPU_MEMORY_OFFSET+0x00407DC,0x00FF0000
+#define LPM_MEM_DC_R_LLA1__MCU_RS_R_1_1                         IPU_MEMORY_OFFSET+0x00407DC,0x0000FF00
+#define LPM_MEM_DC_R_LLA1__MCU_RS_R_0_1                         IPU_MEMORY_OFFSET+0x00407DC,0x000000FF
+
+#define LPM_MEM_DC_WR_CH_ADDR_5_ALT__ADDR                       IPU_MEMORY_OFFSET+0x00407E0
+#define LPM_MEM_DC_WR_CH_ADDR_5_ALT__EMPTY                      IPU_MEMORY_OFFSET+0x00407E0,0x00000000
+#define LPM_MEM_DC_WR_CH_ADDR_5_ALT__FULL                       IPU_MEMORY_OFFSET+0x00407E0,0xffffffff
+#define LPM_MEM_DC_WR_CH_ADDR_5_ALT__ST_ADDR_5_ALT              IPU_MEMORY_OFFSET+0x00407E0,0x1FFFFFFF
+
+#define LPM_MEM_DMFC_RD_CHAN__ADDR                              IPU_MEMORY_OFFSET+0x00405FC
+#define LPM_MEM_DMFC_RD_CHAN__EMPTY                             IPU_MEMORY_OFFSET+0x00405FC,0x00000000
+#define LPM_MEM_DMFC_RD_CHAN__FULL                              IPU_MEMORY_OFFSET+0x00405FC,0xffffffff
+#define LPM_MEM_DMFC_RD_CHAN__DMFC_PPW_C                        IPU_MEMORY_OFFSET+0x00405FC,0x03000000
+#define LPM_MEM_DMFC_RD_CHAN__DMFC_WM_CLR_0                     IPU_MEMORY_OFFSET+0x00405FC,0x00E00000
+#define LPM_MEM_DMFC_RD_CHAN__DMFC_WM_SET_0                     IPU_MEMORY_OFFSET+0x00405FC,0x001C0000
+#define LPM_MEM_DMFC_RD_CHAN__DMFC_WM_EN_0                      IPU_MEMORY_OFFSET+0x00405FC,0x00020000
+#define LPM_MEM_DMFC_RD_CHAN__DMFC_BURST_SIZE_0                 IPU_MEMORY_OFFSET+0x00405FC,0x000000C0
+
+#define LPM_MEM_DMFC_WR_CHAN__ADDR                              IPU_MEMORY_OFFSET+0x0040600
+#define LPM_MEM_DMFC_WR_CHAN__EMPTY                             IPU_MEMORY_OFFSET+0x0040600,0x00000000
+#define LPM_MEM_DMFC_WR_CHAN__FULL                              IPU_MEMORY_OFFSET+0x0040600,0xffffffff
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_BURST_SIZE_2C                IPU_MEMORY_OFFSET+0x0040600,0xC0000000
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_FIFO_SIZE_2C                 IPU_MEMORY_OFFSET+0x0040600,0x38000000
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_ST_ADDR_2C                   IPU_MEMORY_OFFSET+0x0040600,0x07000000
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_BURST_SIZE_1C                IPU_MEMORY_OFFSET+0x0040600,0x00C00000
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_FIFO_SIZE_1C                 IPU_MEMORY_OFFSET+0x0040600,0x00380000
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_ST_ADDR_1C                   IPU_MEMORY_OFFSET+0x0040600,0x00070000
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_BURST_SIZE_2                 IPU_MEMORY_OFFSET+0x0040600,0x0000C000
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_FIFO_SIZE_2                  IPU_MEMORY_OFFSET+0x0040600,0x00003800
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_ST_ADDR_2                    IPU_MEMORY_OFFSET+0x0040600,0x00000700
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_BURST_SIZE_1                 IPU_MEMORY_OFFSET+0x0040600,0x000000C0
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_FIFO_SIZE_1                  IPU_MEMORY_OFFSET+0x0040600,0x00000038
+#define LPM_MEM_DMFC_WR_CHAN__DMFC_ST_ADDR_1                    IPU_MEMORY_OFFSET+0x0040600,0x00000007
+
+#define LPM_MEM_DMFC_WR_CHAN_DEF__ADDR                          IPU_MEMORY_OFFSET+0x0040604
+#define LPM_MEM_DMFC_WR_CHAN_DEF__EMPTY                         IPU_MEMORY_OFFSET+0x0040604,0x00000000
+#define LPM_MEM_DMFC_WR_CHAN_DEF__FULL                          IPU_MEMORY_OFFSET+0x0040604,0xffffffff
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_CLR_2C                IPU_MEMORY_OFFSET+0x0040604,0xE0000000
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_SET_2C                IPU_MEMORY_OFFSET+0x0040604,0x1C000000
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_EN_2C                 IPU_MEMORY_OFFSET+0x0040604,0x02000000
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_CLR_1C                IPU_MEMORY_OFFSET+0x0040604,0x00E00000
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_SET_1C                IPU_MEMORY_OFFSET+0x0040604,0x001C0000
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_EN_1C                 IPU_MEMORY_OFFSET+0x0040604,0x00020000
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_CLR_2                 IPU_MEMORY_OFFSET+0x0040604,0x0000E000
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_SET_2                 IPU_MEMORY_OFFSET+0x0040604,0x00001C00
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_EN_2                  IPU_MEMORY_OFFSET+0x0040604,0x00000200
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_CLR_1                 IPU_MEMORY_OFFSET+0x0040604,0x000000E0
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_SET_1                 IPU_MEMORY_OFFSET+0x0040604,0x0000001C
+#define LPM_MEM_DMFC_WR_CHAN_DEF__DMFC_WM_EN_1                  IPU_MEMORY_OFFSET+0x0040604,0x00000002
+
+#define LPM_MEM_DMFC_DP_CHAN__ADDR                              IPU_MEMORY_OFFSET+0x0040608
+#define LPM_MEM_DMFC_DP_CHAN__EMPTY                             IPU_MEMORY_OFFSET+0x0040608,0x00000000
+#define LPM_MEM_DMFC_DP_CHAN__FULL                              IPU_MEMORY_OFFSET+0x0040608,0xffffffff
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_BURST_SIZE_6F                IPU_MEMORY_OFFSET+0x0040608,0xC0000000
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_FIFO_SIZE_6F                 IPU_MEMORY_OFFSET+0x0040608,0x38000000
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_ST_ADDR_6F                   IPU_MEMORY_OFFSET+0x0040608,0x07000000
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_BURST_SIZE_6B                IPU_MEMORY_OFFSET+0x0040608,0x00C00000
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_FIFO_SIZE_6B                 IPU_MEMORY_OFFSET+0x0040608,0x00380000
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_ST_ADDR_6B                   IPU_MEMORY_OFFSET+0x0040608,0x00070000
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_BURST_SIZE_5F                IPU_MEMORY_OFFSET+0x0040608,0x0000C000
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_FIFO_SIZE_5F                 IPU_MEMORY_OFFSET+0x0040608,0x00003800
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_ST_ADDR_5F                   IPU_MEMORY_OFFSET+0x0040608,0x00000700
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_BURST_SIZE_5B                IPU_MEMORY_OFFSET+0x0040608,0x000000C0
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_FIFO_SIZE_5B                 IPU_MEMORY_OFFSET+0x0040608,0x00000038
+#define LPM_MEM_DMFC_DP_CHAN__DMFC_ST_ADDR_5B                   IPU_MEMORY_OFFSET+0x0040608,0x00000007
+
+#define LPM_MEM_DMFC_DP_CHAN_DEF__ADDR                          IPU_MEMORY_OFFSET+0x004060C
+#define LPM_MEM_DMFC_DP_CHAN_DEF__EMPTY                         IPU_MEMORY_OFFSET+0x004060C,0x00000000
+#define LPM_MEM_DMFC_DP_CHAN_DEF__FULL                          IPU_MEMORY_OFFSET+0x004060C,0xffffffff
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_CLR_6F                IPU_MEMORY_OFFSET+0x004060C,0xE0000000
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_SET_6F                IPU_MEMORY_OFFSET+0x004060C,0x1C000000
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_EN_6F                 IPU_MEMORY_OFFSET+0x004060C,0x02000000
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_CLR_6B                IPU_MEMORY_OFFSET+0x004060C,0x00E00000
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_SET_6B                IPU_MEMORY_OFFSET+0x004060C,0x001C0000
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_EN_6B                 IPU_MEMORY_OFFSET+0x004060C,0x00020000
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_CLR_5F                IPU_MEMORY_OFFSET+0x004060C,0x0000E000
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_SET_5F                IPU_MEMORY_OFFSET+0x004060C,0x00001C00
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_EN_5F                 IPU_MEMORY_OFFSET+0x004060C,0x00000200
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_CLR_5B                IPU_MEMORY_OFFSET+0x004060C,0x000000E0
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_SET_5B                IPU_MEMORY_OFFSET+0x004060C,0x0000001C
+#define LPM_MEM_DMFC_DP_CHAN_DEF__DMFC_WM_EN_5B                 IPU_MEMORY_OFFSET+0x004060C,0x00000002
+
+#define LPM_MEM_DMFC_GENERAL1__ADDR                             IPU_MEMORY_OFFSET+0x0040610
+#define LPM_MEM_DMFC_GENERAL1__EMPTY                            IPU_MEMORY_OFFSET+0x0040610,0x00000000
+#define LPM_MEM_DMFC_GENERAL1__FULL                             IPU_MEMORY_OFFSET+0x0040610,0xffffffff
+#define LPM_MEM_DMFC_GENERAL1__WAIT4EOT_9                       IPU_MEMORY_OFFSET+0x0040610,0x01000000
+#define LPM_MEM_DMFC_GENERAL1__WAIT4EOT_6F                      IPU_MEMORY_OFFSET+0x0040610,0x00800000
+#define LPM_MEM_DMFC_GENERAL1__WAIT4EOT_6B                      IPU_MEMORY_OFFSET+0x0040610,0x00400000
+#define LPM_MEM_DMFC_GENERAL1__WAIT4EOT_5F                      IPU_MEMORY_OFFSET+0x0040610,0x00200000
+#define LPM_MEM_DMFC_GENERAL1__WAIT4EOT_5B                      IPU_MEMORY_OFFSET+0x0040610,0x00100000
+#define LPM_MEM_DMFC_GENERAL1__WAIT4EOT_4                       IPU_MEMORY_OFFSET+0x0040610,0x00080000
+#define LPM_MEM_DMFC_GENERAL1__WAIT4EOT_3                       IPU_MEMORY_OFFSET+0x0040610,0x00040000
+#define LPM_MEM_DMFC_GENERAL1__WAIT4EOT_2                       IPU_MEMORY_OFFSET+0x0040610,0x00020000
+#define LPM_MEM_DMFC_GENERAL1__WAIT4EOT_1                       IPU_MEMORY_OFFSET+0x0040610,0x00010000
+#define LPM_MEM_DMFC_GENERAL1__DMFC_WM_CLR_9                    IPU_MEMORY_OFFSET+0x0040610,0x0000E000
+#define LPM_MEM_DMFC_GENERAL1__DMFC_WM_SET_9                    IPU_MEMORY_OFFSET+0x0040610,0x00001C00
+#define LPM_MEM_DMFC_GENERAL1__DMFC_WM_EN_9                     IPU_MEMORY_OFFSET+0x0040610,0x00000200
+#define LPM_MEM_DMFC_GENERAL1__DMFC_BURST_SIZE_9                IPU_MEMORY_OFFSET+0x0040610,0x00000060
+#define LPM_MEM_DMFC_GENERAL1__DMFC_DCDP_SYNC_PR                IPU_MEMORY_OFFSET+0x0040610,0x00000003
+
+#define LPM_MEM_DMFC_GENERAL2__ADDR                             IPU_MEMORY_OFFSET+0x0040614
+#define LPM_MEM_DMFC_GENERAL2__EMPTY                            IPU_MEMORY_OFFSET+0x0040614,0x00000000
+#define LPM_MEM_DMFC_GENERAL2__FULL                             IPU_MEMORY_OFFSET+0x0040614,0xffffffff
+#define LPM_MEM_DMFC_GENERAL2__DMFC_FRAME_HEIGHT_RD             IPU_MEMORY_OFFSET+0x0040614,0x1FFF0000
+#define LPM_MEM_DMFC_GENERAL2__DMFC_FRAME_WIDTH_RD              IPU_MEMORY_OFFSET+0x0040614,0x00001FFF
+
+#define LPM_MEM_DMFC_IC_CTRL__ADDR                              IPU_MEMORY_OFFSET+0x0040618
+#define LPM_MEM_DMFC_IC_CTRL__EMPTY                             IPU_MEMORY_OFFSET+0x0040618,0x00000000
+#define LPM_MEM_DMFC_IC_CTRL__FULL                              IPU_MEMORY_OFFSET+0x0040618,0xffffffff
+#define LPM_MEM_DMFC_IC_CTRL__DMFC_IC_FRAME_HEIGHT_RD           IPU_MEMORY_OFFSET+0x0040618,0xFFF80000
+#define LPM_MEM_DMFC_IC_CTRL__DMFC_IC_FRAME_WIDTH_RD            IPU_MEMORY_OFFSET+0x0040618,0x0007FFC0
+#define LPM_MEM_DMFC_IC_CTRL__DMFC_IC_PPW_C                     IPU_MEMORY_OFFSET+0x0040618,0x00000030
+#define LPM_MEM_DMFC_IC_CTRL__DMFC_IC_IN_PORT                   IPU_MEMORY_OFFSET+0x0040618,0x00000007
+
+
+#endif
diff --git a/arch/arm/include/asm/imx-common/imx_pwm.h b/arch/arm/include/asm/imx-common/imx_pwm.h
new file mode 100755
index 0000000..accf013
--- /dev/null
+++ b/arch/arm/include/asm/imx-common/imx_pwm.h
@@ -0,0 +1,37 @@
+/*
+ * Copyright (C) 2011 Freescale Semiconductor, Inc.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __IMX_PWM_H__
+#define __IMX_PWM_H__
+
+struct pwm_device {
+	unsigned long mmio_base;
+	unsigned int pwm_id;
+	int pwmo_invert;
+	void (*enable_pwm_pad)(void);
+	void (*disable_pwm_pad)(void);
+	void (*enable_pwm_clk)(void);
+	void (*disable_pwm_clk)(void);
+};
+
+int imx_pwm_config(struct pwm_device pwm, int duty_ns, int period_ns);
+int imx_pwm_enable(struct pwm_device pwm);
+int imx_pwm_disable(struct pwm_device pwm);
+
+#endif
diff --git a/arch/arm/include/asm/imx-common/mxc_ipu.h b/arch/arm/include/asm/imx-common/mxc_ipu.h
new file mode 100644
index 0000000..e0cb95a
--- /dev/null
+++ b/arch/arm/include/asm/imx-common/mxc_ipu.h
@@ -0,0 +1,30 @@
+/*
+ * (C) Copyright 2008-2010 Freescale Semiconductor, Inc.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef _MXC_IPU_H__
+#define _MXC_IPU_H__
+#include <linux/types.h>
+
+int ipu_display_setup(void);
+int display_clk_config(u32 clk_type, u32 freq);
+
+#endif
diff --git a/board/chipsee/common/Makefile b/board/chipsee/common/Makefile
new file mode 100644
index 0000000..0c7fa21
--- /dev/null
+++ b/board/chipsee/common/Makefile
@@ -0,0 +1,85 @@
+#
+# (C) Copyright 2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+
+MINIMAL=
+
+ifdef CONFIG_SPL_BUILD
+ifdef CONFIG_SPL_INIT_MINIMAL
+MINIMAL=y
+endif
+endif
+
+ifdef MINIMAL
+# necessary to create built-in.o
+obj- := __dummy__.o
+else
+obj-$(CONFIG_FSL_CADMUS)	+= cadmus.o
+obj-$(CONFIG_FSL_VIA)		+= cds_via.o
+obj-$(CONFIG_FMAN_ENET)	+= fman.o
+obj-$(CONFIG_FSL_PIXIS)	+= pixis.o
+ifndef CONFIG_SPL_BUILD
+obj-$(CONFIG_FSL_NGPIXIS)	+= ngpixis.o
+obj-$(CONFIG_VID)		+= vid.o
+endif
+obj-$(CONFIG_FSL_QIXIS)	+= qixis.o
+obj-$(CONFIG_PQ_MDS_PIB)	+= pq-mds-pib.o
+ifndef CONFIG_SPL_BUILD
+obj-$(CONFIG_ID_EEPROM)	+= sys_eeprom.o
+endif
+obj-$(CONFIG_FSL_SGMII_RISER)	+= sgmii_riser.o
+ifndef CONFIG_RAMBOOT_PBL
+obj-$(CONFIG_FSL_FIXED_MMC_LOCATION)	+= sdhc_boot.o
+endif
+
+obj-$(CONFIG_FSL_DIU_CH7301)	+= diu_ch7301.o
+
+ifdef CONFIG_ARM
+obj-$(CONFIG_DEEP_SLEEP)		+= arm_sleep.o
+else
+obj-$(CONFIG_DEEP_SLEEP)		+= mpc85xx_sleep.o
+endif
+
+obj-$(CONFIG_FSL_DCU_SII9022A)    += dcu_sii9022a.o
+
+obj-$(CONFIG_MPC8541CDS)	+= cds_pci_ft.o
+obj-$(CONFIG_MPC8548CDS)	+= cds_pci_ft.o
+obj-$(CONFIG_MPC8555CDS)	+= cds_pci_ft.o
+
+obj-$(CONFIG_MPC8536DS)	+= ics307_clk.o
+obj-$(CONFIG_MPC8572DS)	+= ics307_clk.o
+obj-$(CONFIG_P1022DS)		+= ics307_clk.o
+obj-$(CONFIG_P2020DS)		+= ics307_clk.o
+obj-$(CONFIG_P3041DS)		+= ics307_clk.o
+obj-$(CONFIG_P4080DS)		+= ics307_clk.o
+obj-$(CONFIG_P5020DS)		+= ics307_clk.o
+obj-$(CONFIG_P5040DS)		+= ics307_clk.o
+obj-$(CONFIG_VSC_CROSSBAR)    += vsc3316_3308.o
+obj-$(CONFIG_IDT8T49N222A)	+= idt8t49n222a_serdes_clk.o
+obj-$(CONFIG_ZM7300)		+= zm7300.o
+obj-$(CONFIG_POWER_PFUZE100)	+= pfuze.o
+obj-$(CONFIG_MXC_EPDC)		+= epdc_setup.o
+ifdef CONFIG_FSL_FASTBOOT
+obj-${CONFIG_ANDROID_RECOVERY} += recovery.o
+endif
+
+obj-$(CONFIG_LS102XA_STREAM_ID)	+= ls102xa_stream_id.o
+
+# deal with common files for P-series corenet based devices
+obj-$(CONFIG_P2041RDB)	+= p_corenet/
+obj-$(CONFIG_P3041DS)	+= p_corenet/
+obj-$(CONFIG_P4080DS)	+= p_corenet/
+obj-$(CONFIG_P5020DS)	+= p_corenet/
+obj-$(CONFIG_P5040DS)	+= p_corenet/
+
+obj-$(CONFIG_LS102XA_NS_ACCESS)	+= ns_access.o
+
+ifdef CONFIG_SECURE_BOOT
+obj-$(CONFIG_CMD_ESBC_VALIDATE) += fsl_validate.o
+obj-$(CONFIG_CMD_ESBC_VALIDATE) += cmd_esbc_validate.o
+endif
+
+endif
diff --git a/board/chipsee/common/arm_sleep.c b/board/chipsee/common/arm_sleep.c
new file mode 100644
index 0000000..8edf878
--- /dev/null
+++ b/board/chipsee/common/arm_sleep.c
@@ -0,0 +1,95 @@
+/*
+ * Copyright 2014 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#if !defined(CONFIG_ARMV7_NONSEC) || !defined(CONFIG_ARMV7_VIRT)
+#error " Deep sleep needs non-secure mode support. "
+#else
+#include <asm/secure.h>
+#endif
+#include <asm/armv7.h>
+#include <asm/cache.h>
+
+#if defined(CONFIG_LS102XA)
+#include <asm/arch/immap_ls102xa.h>
+#endif
+
+#include "sleep.h"
+
+DECLARE_GLOBAL_DATA_PTR;
+
+void __weak board_mem_sleep_setup(void)
+{
+}
+
+void __weak board_sleep_prepare(void)
+{
+}
+
+bool is_warm_boot(void)
+{
+	struct ccsr_gur __iomem *gur = (void *)CONFIG_SYS_FSL_GUTS_ADDR;
+
+	if (in_be32(&gur->crstsr) & DCFG_CCSR_CRSTSR_WDRFR)
+		return 1;
+
+	return 0;
+}
+
+void fsl_dp_disable_console(void)
+{
+	gd->flags |= GD_FLG_SILENT | GD_FLG_DISABLE_CONSOLE;
+}
+
+/*
+ * When wakeup from deep sleep, the first 128 bytes space
+ * will be used to do DDR training which corrupts the data
+ * in there. This function will restore them.
+ */
+static void dp_ddr_restore(void)
+{
+	u64 *src, *dst;
+	int i;
+	struct ccsr_scfg __iomem *scfg = (void *)CONFIG_SYS_FSL_SCFG_ADDR;
+
+	/* get the address of ddr date from SPARECR3 */
+	src = (u64 *)in_le32(&scfg->sparecr[2]);
+	dst = (u64 *)CONFIG_SYS_SDRAM_BASE;
+
+	for (i = 0; i < DDR_BUFF_LEN / 8; i++)
+		*dst++ = *src++;
+
+	flush_dcache_all();
+}
+
+static void dp_resume_prepare(void)
+{
+	dp_ddr_restore();
+	board_sleep_prepare();
+	armv7_init_nonsec();
+	cleanup_before_linux();
+}
+
+int fsl_dp_resume(void)
+{
+	u32 start_addr;
+	void (*kernel_resume)(void);
+	struct ccsr_scfg __iomem *scfg = (void *)CONFIG_SYS_FSL_SCFG_ADDR;
+
+	if (!is_warm_boot())
+		return 0;
+
+	dp_resume_prepare();
+
+	/* Get the entry address and jump to kernel */
+	start_addr = in_le32(&scfg->sparecr[1]);
+	debug("Entry address is 0x%08x\n", start_addr);
+	kernel_resume = (void (*)(void))start_addr;
+	secure_ram_addr(_do_nonsec_entry)(kernel_resume, 0, 0, 0);
+
+	return 0;
+}
diff --git a/board/chipsee/common/cadmus.c b/board/chipsee/common/cadmus.c
new file mode 100644
index 0000000..dad6847
--- /dev/null
+++ b/board/chipsee/common/cadmus.c
@@ -0,0 +1,79 @@
+/*
+ * Copyright 2004, 2011 Freescale Semiconductor.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+
+#include <common.h>
+
+
+/*
+ * CADMUS Board System Registers
+ */
+#ifndef CONFIG_SYS_CADMUS_BASE_REG
+#define CONFIG_SYS_CADMUS_BASE_REG	(CADMUS_BASE_ADDR + 0x4000)
+#endif
+
+typedef struct cadmus_reg {
+    u_char cm_ver;		/* Board version */
+    u_char cm_csr;		/* General control/status */
+    u_char cm_rst;		/* Reset control */
+    u_char cm_hsclk;		/* High speed clock */
+    u_char cm_hsxclk;		/* High speed clock extended */
+    u_char cm_led;		/* LED data */
+    u_char cm_pci;		/* PCI control/status */
+    u_char cm_dma;		/* DMA control */
+    u_char cm_reserved[248];	/* Total 256 bytes */
+} cadmus_reg_t;
+
+
+unsigned int
+get_board_version(void)
+{
+	volatile cadmus_reg_t *cadmus = (cadmus_reg_t *)CONFIG_SYS_CADMUS_BASE_REG;
+
+	return cadmus->cm_ver;
+}
+
+
+unsigned long
+get_clock_freq(void)
+{
+	volatile cadmus_reg_t *cadmus = (cadmus_reg_t *)CONFIG_SYS_CADMUS_BASE_REG;
+
+	uint pci1_speed = (cadmus->cm_pci >> 2) & 0x3; /* PSPEED in [4:5] */
+
+	if (pci1_speed == 0) {
+		return 33333333;
+	} else if (pci1_speed == 1) {
+		return 66666666;
+	} else {
+		/* Really, unknown. Be safe? */
+		return 33333333;
+	}
+}
+
+
+unsigned int
+get_pci_slot(void)
+{
+	volatile cadmus_reg_t *cadmus = (cadmus_reg_t *)CONFIG_SYS_CADMUS_BASE_REG;
+
+	/*
+	 * PCI slot in USER bits CSR[6:7] by convention.
+	 */
+	return ((cadmus->cm_csr >> 6) & 0x3) + 1;
+}
+
+
+unsigned int
+get_pci_dual(void)
+{
+	volatile cadmus_reg_t *cadmus = (cadmus_reg_t *)CONFIG_SYS_CADMUS_BASE_REG;
+
+	/*
+	 * PCI DUAL in CM_PCI[3]
+	 */
+	return cadmus->cm_pci & 0x10;
+}
diff --git a/board/chipsee/common/cadmus.h b/board/chipsee/common/cadmus.h
new file mode 100644
index 0000000..7867192
--- /dev/null
+++ b/board/chipsee/common/cadmus.h
@@ -0,0 +1,38 @@
+/*
+ * Copyright 2004 Freescale Semiconductor.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __CADMUS_H_
+#define __CADMUS_H_
+
+
+/*
+ * CADMUS Board System Register interface.
+ */
+
+/*
+ * Returns board version register.
+ */
+extern unsigned int get_board_version(void);
+
+/*
+ * Returns either 33000000 or 66000000 as the SYS_CLK_FREQ.
+ */
+extern unsigned long get_clock_freq(void);
+
+
+/*
+ * Returns 1 - 4, as found in the USER CSR[6:7] bits.
+ */
+extern unsigned int get_pci_slot(void);
+
+
+/*
+ * Returns PCI DUAL as found in CM_PCI[3].
+ */
+extern unsigned int get_pci_dual(void);
+
+
+#endif	/* __CADMUS_H_ */
diff --git a/board/chipsee/common/cds_pci_ft.c b/board/chipsee/common/cds_pci_ft.c
new file mode 100644
index 0000000..571dfbb
--- /dev/null
+++ b/board/chipsee/common/cds_pci_ft.c
@@ -0,0 +1,76 @@
+/*
+ * Copyright 2004 Freescale Semiconductor.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <libfdt.h>
+#include <fdt_support.h>
+#include "cadmus.h"
+
+#if defined(CONFIG_OF_BOARD_SETUP)
+static void cds_pci_fixup(void *blob)
+{
+	int node;
+	const char *path;
+	int len, slot, i;
+	u32 *map = NULL, *piccells = NULL;
+	int off, cells;
+
+	node = fdt_path_offset(blob, "/aliases");
+	if (node >= 0) {
+		path = fdt_getprop(blob, node, "pci0", NULL);
+		if (path) {
+			node = fdt_path_offset(blob, path);
+			if (node >= 0) {
+				map = fdt_getprop_w(blob, node, "interrupt-map", &len);
+			}
+			/* Each item in "interrupt-map" property is translated with
+			 * following cells:
+			 * PCI #address-cells, PCI #interrupt-cells,
+			 * PIC address, PIC #address-cells, PIC #interrupt-cells.
+			 */
+			cells = fdt_getprop_u32_default(blob, path, "#address-cells", 1);
+			cells += fdt_getprop_u32_default(blob, path, "#interrupt-cells", 1);
+			off = fdt_node_offset_by_phandle(blob, fdt32_to_cpu(*(map+cells)));
+			if (off <= 0)
+				return;
+			cells += 1;
+			piccells = (u32 *)fdt_getprop(blob, off, "#address-cells", NULL);
+			if (piccells == NULL)
+				return;
+			cells += *piccells;
+			piccells = (u32 *)fdt_getprop(blob, off, "#interrupt-cells", NULL);
+			if (piccells == NULL)
+				return;
+			cells += *piccells;
+		}
+	}
+
+	if (map) {
+		len /= sizeof(u32);
+
+		slot = get_pci_slot();
+
+		for (i=0;i<len;i+=cells) {
+			/* We rotate the interrupt pins so that the mapping
+			 * changes depending on the slot the carrier card is in.
+			 */
+			map[3] = ((map[3] + slot - 2) % 4) + 1;
+			map+=cells;
+		}
+	}
+}
+
+int ft_board_setup(void *blob, bd_t *bd)
+{
+	ft_cpu_setup(blob, bd);
+#ifdef CONFIG_PCI
+	ft_pci_setup(blob, bd);
+	cds_pci_fixup(blob);
+#endif
+
+	return 0;
+}
+#endif
diff --git a/board/chipsee/common/cds_via.c b/board/chipsee/common/cds_via.c
new file mode 100644
index 0000000..028b093
--- /dev/null
+++ b/board/chipsee/common/cds_via.c
@@ -0,0 +1,93 @@
+/*
+ * Copyright 2006 Freescale Semiconductor.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <pci.h>
+
+/* Config the VIA chip */
+void mpc85xx_config_via(struct pci_controller *hose,
+			pci_dev_t dev, struct pci_config_table *tab)
+{
+	pci_dev_t bridge;
+	unsigned int cmdstat;
+
+	/* Enable USB and IDE functions */
+	pci_hose_write_config_byte(hose, dev, 0x48, 0x08);
+
+	pci_hose_read_config_dword(hose, dev, PCI_COMMAND, &cmdstat);
+	cmdstat |= PCI_COMMAND_IO | PCI_COMMAND_MEMORY| PCI_COMMAND_MASTER;
+	pci_hose_write_config_dword(hose, dev, PCI_COMMAND, cmdstat);
+	pci_hose_write_config_byte(hose, dev, PCI_CACHE_LINE_SIZE, 0x08);
+	pci_hose_write_config_byte(hose, dev, PCI_LATENCY_TIMER, 0x80);
+
+	/*
+	 * Force the backplane P2P bridge to have a window
+	 * open from 0x00000000-0x00001fff in PCI I/O space.
+	 * This allows legacy I/O (i8259, etc) on the VIA
+	 * southbridge to be accessed.
+	 */
+	bridge = PCI_BDF(0,BRIDGE_ID,0);
+	pci_hose_write_config_byte(hose, bridge, PCI_IO_BASE, 0);
+	pci_hose_write_config_word(hose, bridge, PCI_IO_BASE_UPPER16, 0);
+	pci_hose_write_config_byte(hose, bridge, PCI_IO_LIMIT, 0x10);
+	pci_hose_write_config_word(hose, bridge, PCI_IO_LIMIT_UPPER16, 0);
+}
+
+/* Function 1, IDE */
+void mpc85xx_config_via_usbide(struct pci_controller *hose,
+			       pci_dev_t dev, struct pci_config_table *tab)
+{
+	pciauto_config_device(hose, dev);
+	/*
+	 * Since the P2P window was forced to cover the fixed
+	 * legacy I/O addresses, it is necessary to manually
+	 * place the base addresses for the IDE and USB functions
+	 * within this window.
+	 */
+	pci_hose_write_config_dword(hose, dev, PCI_BASE_ADDRESS_0, 0x1ff8);
+	pci_hose_write_config_dword(hose, dev, PCI_BASE_ADDRESS_1, 0x1ff4);
+	pci_hose_write_config_dword(hose, dev, PCI_BASE_ADDRESS_2, 0x1fe8);
+	pci_hose_write_config_dword(hose, dev, PCI_BASE_ADDRESS_3, 0x1fe4);
+	pci_hose_write_config_dword(hose, dev, PCI_BASE_ADDRESS_4, 0x1fd0);
+}
+
+/* Function 2, USB ports 0-1 */
+void mpc85xx_config_via_usb(struct pci_controller *hose,
+			    pci_dev_t dev, struct pci_config_table *tab)
+{
+	pciauto_config_device(hose, dev);
+
+	pci_hose_write_config_dword(hose, dev, PCI_BASE_ADDRESS_4, 0x1fa0);
+}
+
+/* Function 3, USB ports 2-3 */
+void mpc85xx_config_via_usb2(struct pci_controller *hose,
+			     pci_dev_t dev, struct pci_config_table *tab)
+{
+	pciauto_config_device(hose, dev);
+
+	pci_hose_write_config_dword(hose, dev, PCI_BASE_ADDRESS_4, 0x1f80);
+}
+
+/* Function 5, Power Management */
+void mpc85xx_config_via_power(struct pci_controller *hose,
+			      pci_dev_t dev, struct pci_config_table *tab)
+{
+	pciauto_config_device(hose, dev);
+
+	pci_hose_write_config_dword(hose, dev, PCI_BASE_ADDRESS_0, 0x1e00);
+	pci_hose_write_config_dword(hose, dev, PCI_BASE_ADDRESS_1, 0x1dfc);
+	pci_hose_write_config_dword(hose, dev, PCI_BASE_ADDRESS_2, 0x1df8);
+}
+
+/* Function 6, AC97 Interface */
+void mpc85xx_config_via_ac97(struct pci_controller *hose,
+			     pci_dev_t dev, struct pci_config_table *tab)
+{
+	pciauto_config_device(hose, dev);
+
+	pci_hose_write_config_dword(hose, dev, PCI_BASE_ADDRESS_0, 0x1c00);
+}
diff --git a/board/chipsee/common/cmd_esbc_validate.c b/board/chipsee/common/cmd_esbc_validate.c
new file mode 100644
index 0000000..8500ba5
--- /dev/null
+++ b/board/chipsee/common/cmd_esbc_validate.c
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2015 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <command.h>
+#include <fsl_validate.h>
+
+static int do_esbc_validate(cmd_tbl_t *cmdtp, int flag, int argc,
+				char * const argv[])
+{
+	if (argc < 2)
+		return cmd_usage(cmdtp);
+
+	return fsl_secboot_validate(cmdtp, flag, argc, argv);
+}
+
+/***************************************************/
+static char esbc_validate_help_text[] =
+	"esbc_validate hdr_addr <hash_val> - Validates signature using\n"
+	"                          RSA verification\n"
+	"                          $hdr_addr Address of header of the image\n"
+	"                          to be validated.\n"
+	"                          $hash_val -Optional\n"
+	"                          It provides Hash of public/srk key to be\n"
+	"                          used to verify signature.\n";
+
+U_BOOT_CMD(
+	esbc_validate,	3,	0,	do_esbc_validate,
+	"Validates signature on a given image using RSA verification",
+	esbc_validate_help_text
+);
diff --git a/board/chipsee/common/dcu_sii9022a.c b/board/chipsee/common/dcu_sii9022a.c
new file mode 100644
index 0000000..2da627e
--- /dev/null
+++ b/board/chipsee/common/dcu_sii9022a.c
@@ -0,0 +1,153 @@
+/*
+ * Copyright 2014 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <asm/io.h>
+#include <common.h>
+#include <fsl_dcu_fb.h>
+#include <i2c.h>
+#include <linux/fb.h>
+
+#define PIXEL_CLK_LSB_REG		0x00
+#define PIXEL_CLK_MSB_REG		0x01
+#define VERT_FREQ_LSB_REG		0x02
+#define VERT_FREQ_MSB_REG		0x03
+#define TOTAL_PIXELS_LSB_REG		0x04
+#define TOTAL_PIXELS_MSB_REG		0x05
+#define TOTAL_LINES_LSB_REG		0x06
+#define TOTAL_LINES_MSB_REG		0x07
+#define TPI_INBUS_FMT_REG		0x08
+#define TPI_INPUT_FMT_REG		0x09
+#define TPI_OUTPUT_FMT_REG		0x0A
+#define TPI_SYS_CTRL_REG		0x1A
+#define TPI_PWR_STAT_REG		0x1E
+#define TPI_AUDIO_HANDING_REG		0x25
+#define TPI_AUDIO_INTF_REG		0x26
+#define TPI_AUDIO_FREQ_REG		0x27
+#define TPI_SET_PAGE_REG		0xBC
+#define TPI_SET_OFFSET_REG		0xBD
+#define TPI_RW_ACCESS_REG		0xBE
+#define TPI_TRANS_MODE_REG		0xC7
+
+#define TPI_INBUS_CLOCK_RATIO_1		(1 << 6)
+#define TPI_INBUS_FULL_PIXEL_WIDE	(1 << 5)
+#define TPI_INBUS_RISING_EDGE		(1 << 4)
+#define TPI_INPUT_CLR_DEPTH_8BIT	(0 << 6)
+#define TPI_INPUT_VRANGE_EXPAN_AUTO	(0 << 2)
+#define TPI_INPUT_CLR_RGB		(0 << 0)
+#define TPI_OUTPUT_CLR_DEPTH_8BIT	(0 << 6)
+#define TPI_OUTPUT_VRANGE_COMPRE_AUTO	(0 << 2)
+#define TPI_OUTPUT_CLR_HDMI_RGB		(0 << 0)
+#define TPI_SYS_TMDS_OUTPUT		(0 << 4)
+#define TPI_SYS_AV_NORAML		(0 << 3)
+#define TPI_SYS_AV_MUTE			(1 << 3)
+#define TPI_SYS_DVI_MODE		(0 << 0)
+#define TPI_SYS_HDMI_MODE		(1 << 0)
+#define TPI_PWR_STAT_MASK		(3 << 0)
+#define TPI_PWR_STAT_D0			(0 << 0)
+#define TPI_AUDIO_PASS_BASIC		(0 << 0)
+#define TPI_AUDIO_INTF_I2S		(2 << 6)
+#define TPI_AUDIO_INTF_NORMAL		(0 << 4)
+#define TPI_AUDIO_TYPE_PCM		(1 << 0)
+#define TPI_AUDIO_SAMP_SIZE_16BIT	(1 << 6)
+#define TPI_AUDIO_SAMP_FREQ_44K		(2 << 3)
+#define TPI_SET_PAGE_SII9022A		0x01
+#define TPI_SET_OFFSET_SII9022A		0x82
+#define TPI_RW_EN_SRC_TERMIN		(1 << 0)
+#define TPI_TRANS_MODE_ENABLE		(0 << 7)
+
+/* Programming of Silicon SIi9022a HDMI Transmitter */
+int dcu_set_dvi_encoder(struct fb_videomode *videomode)
+{
+	u8 temp;
+	u16 temp1, temp2;
+	u32 temp3;
+
+	i2c_set_bus_num(CONFIG_SYS_I2C_DVI_BUS_NUM);
+
+	/* Enable TPI transmitter mode */
+	temp = TPI_TRANS_MODE_ENABLE;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_TRANS_MODE_REG, 1, &temp, 1);
+
+	/* Enter into D0 state, full operation */
+	i2c_read(CONFIG_SYS_I2C_DVI_ADDR, TPI_PWR_STAT_REG, 1, &temp, 1);
+	temp &= ~TPI_PWR_STAT_MASK;
+	temp |= TPI_PWR_STAT_D0;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_PWR_STAT_REG, 1, &temp, 1);
+
+	/* Enable source termination */
+	temp = TPI_SET_PAGE_SII9022A;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_SET_PAGE_REG, 1, &temp, 1);
+	temp = TPI_SET_OFFSET_SII9022A;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_SET_OFFSET_REG, 1, &temp, 1);
+
+	i2c_read(CONFIG_SYS_I2C_DVI_ADDR, TPI_RW_ACCESS_REG, 1, &temp, 1);
+	temp |= TPI_RW_EN_SRC_TERMIN;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_RW_ACCESS_REG, 1, &temp, 1);
+
+	/* Set TPI system control */
+	temp = TPI_SYS_TMDS_OUTPUT | TPI_SYS_AV_NORAML | TPI_SYS_DVI_MODE;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_SYS_CTRL_REG, 1, &temp, 1);
+
+	/* Set pixel clock */
+	temp1 = PICOS2KHZ(videomode->pixclock) / 10;
+	temp = (u8)(temp1 & 0xFF);
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, PIXEL_CLK_LSB_REG, 1, &temp, 1);
+	temp = (u8)(temp1 >> 8);
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, PIXEL_CLK_MSB_REG, 1, &temp, 1);
+
+	/* Set total pixels per line */
+	temp1 = videomode->hsync_len + videomode->left_margin +
+		videomode->xres + videomode->right_margin;
+	temp = (u8)(temp1 & 0xFF);
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TOTAL_PIXELS_LSB_REG, 1, &temp, 1);
+	temp = (u8)(temp1 >> 8);
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TOTAL_PIXELS_MSB_REG, 1, &temp, 1);
+
+	/* Set total lines */
+	temp2 = videomode->vsync_len + videomode->upper_margin +
+		videomode->yres + videomode->lower_margin;
+	temp = (u8)(temp2 & 0xFF);
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TOTAL_LINES_LSB_REG, 1, &temp, 1);
+	temp = (u8)(temp2 >> 8);
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TOTAL_LINES_MSB_REG, 1, &temp, 1);
+
+	/* Set vertical frequency in Hz */
+	temp3 = temp1 * temp2;
+	temp3 = (PICOS2KHZ(videomode->pixclock) * 1000) / temp3;
+	temp1 = (u16)temp3 * 100;
+	temp = (u8)(temp1 & 0xFF);
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, VERT_FREQ_LSB_REG, 1, &temp, 1);
+	temp = (u8)(temp1 >> 8);
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, VERT_FREQ_MSB_REG, 1, &temp, 1);
+
+	/* Set TPI input bus and pixel repetition data */
+	temp = TPI_INBUS_CLOCK_RATIO_1 | TPI_INBUS_FULL_PIXEL_WIDE |
+		TPI_INBUS_RISING_EDGE;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_INBUS_FMT_REG, 1, &temp, 1);
+
+	/* Set TPI AVI Input format data */
+	temp = TPI_INPUT_CLR_DEPTH_8BIT | TPI_INPUT_VRANGE_EXPAN_AUTO |
+		TPI_INPUT_CLR_RGB;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_INPUT_FMT_REG, 1, &temp, 1);
+
+	/* Set TPI AVI Output format data */
+	temp = TPI_OUTPUT_CLR_DEPTH_8BIT | TPI_OUTPUT_VRANGE_COMPRE_AUTO |
+		TPI_OUTPUT_CLR_HDMI_RGB;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_OUTPUT_FMT_REG, 1, &temp, 1);
+
+	/* Set TPI audio configuration write data */
+	temp = TPI_AUDIO_PASS_BASIC;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_AUDIO_HANDING_REG, 1, &temp, 1);
+
+	temp = TPI_AUDIO_INTF_I2S | TPI_AUDIO_INTF_NORMAL |
+		TPI_AUDIO_TYPE_PCM;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_AUDIO_INTF_REG, 1, &temp, 1);
+
+	temp = TPI_AUDIO_SAMP_SIZE_16BIT | TPI_AUDIO_SAMP_FREQ_44K;
+	i2c_write(CONFIG_SYS_I2C_DVI_ADDR, TPI_AUDIO_FREQ_REG, 1, &temp, 1);
+
+	return 0;
+}
diff --git a/board/chipsee/common/dcu_sii9022a.h b/board/chipsee/common/dcu_sii9022a.h
new file mode 100644
index 0000000..de76733
--- /dev/null
+++ b/board/chipsee/common/dcu_sii9022a.h
@@ -0,0 +1,13 @@
+/*
+ * Copyright 2014 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+#ifndef __DCU_HDMI_SII9022A__
+#define __DCU_HDMI_SII9022A__
+
+/* Programming of Silicon SII9022A connector HDMI Transmitter*/
+int dcu_set_dvi_encoder(struct fb_videomode *videomode);
+
+#endif
diff --git a/board/chipsee/common/diu_ch7301.c b/board/chipsee/common/diu_ch7301.c
new file mode 100644
index 0000000..82ce870
--- /dev/null
+++ b/board/chipsee/common/diu_ch7301.c
@@ -0,0 +1,136 @@
+/*
+ * Copyright 2014 Freescale Semiconductor, Inc.
+ * Authors: Priyanka Jain <Priyanka.Jain@freescale.com>
+ *	    Wang Dongsheng <dongsheng.wang@freescale.com>
+ *
+ * This file is copied and modified from the original t1040qds/diu.c.
+ * Encoder can be used in T104x and LSx Platform.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <stdio_dev.h>
+#include <i2c.h>
+
+#define I2C_DVI_INPUT_DATA_FORMAT_REG		0x1F
+#define I2C_DVI_PLL_CHARGE_CNTL_REG		0x33
+#define I2C_DVI_PLL_DIVIDER_REG			0x34
+#define I2C_DVI_PLL_SUPPLY_CNTL_REG		0x35
+#define I2C_DVI_PLL_FILTER_REG			0x36
+#define I2C_DVI_TEST_PATTERN_REG		0x48
+#define I2C_DVI_POWER_MGMT_REG			0x49
+#define I2C_DVI_LOCK_STATE_REG			0x4D
+#define I2C_DVI_SYNC_POLARITY_REG		0x56
+
+/*
+ * Set VSYNC/HSYNC to active high. This is polarity of sync signals
+ * from DIU->DVI. The DIU default is active igh, so DVI is set to
+ * active high.
+ */
+#define I2C_DVI_INPUT_DATA_FORMAT_VAL		0x98
+
+#define I2C_DVI_PLL_CHARGE_CNTL_HIGH_SPEED_VAL	0x06
+#define I2C_DVI_PLL_DIVIDER_HIGH_SPEED_VAL	0x26
+#define I2C_DVI_PLL_FILTER_HIGH_SPEED_VAL	0xA0
+#define I2C_DVI_PLL_CHARGE_CNTL_LOW_SPEED_VAL	0x08
+#define I2C_DVI_PLL_DIVIDER_LOW_SPEED_VAL	0x16
+#define I2C_DVI_PLL_FILTER_LOW_SPEED_VAL	0x60
+
+/* Clear test pattern */
+#define I2C_DVI_TEST_PATTERN_VAL		0x18
+/* Exit Power-down mode */
+#define I2C_DVI_POWER_MGMT_VAL			0xC0
+
+/* Monitor polarity is handled via DVI Sync Polarity Register */
+#define I2C_DVI_SYNC_POLARITY_VAL		0x00
+
+/* Programming of HDMI Chrontel CH7301 connector */
+int diu_set_dvi_encoder(unsigned int pixclock)
+{
+	int ret;
+	u8 temp;
+
+	temp = I2C_DVI_TEST_PATTERN_VAL;
+	ret = i2c_write(CONFIG_SYS_I2C_DVI_ADDR, I2C_DVI_TEST_PATTERN_REG, 1,
+			&temp, 1);
+	if (ret) {
+		puts("I2C: failed to select proper dvi test pattern\n");
+		return ret;
+	}
+	temp = I2C_DVI_INPUT_DATA_FORMAT_VAL;
+	ret = i2c_write(CONFIG_SYS_I2C_DVI_ADDR, I2C_DVI_INPUT_DATA_FORMAT_REG,
+			1, &temp, 1);
+	if (ret) {
+		puts("I2C: failed to select dvi input data format\n");
+		return ret;
+	}
+
+	/* Set Sync polarity register */
+	temp = I2C_DVI_SYNC_POLARITY_VAL;
+	ret = i2c_write(CONFIG_SYS_I2C_DVI_ADDR, I2C_DVI_SYNC_POLARITY_REG, 1,
+			&temp, 1);
+	if (ret) {
+		puts("I2C: failed to select dvi syc polarity\n");
+		return ret;
+	}
+
+	/* Set PLL registers based on pixel clock rate*/
+	if (pixclock > 65000000) {
+		temp = I2C_DVI_PLL_CHARGE_CNTL_HIGH_SPEED_VAL;
+		ret = i2c_write(CONFIG_SYS_I2C_DVI_ADDR,
+				I2C_DVI_PLL_CHARGE_CNTL_REG, 1,	&temp, 1);
+		if (ret) {
+			puts("I2C: failed to select dvi pll charge_cntl\n");
+			return ret;
+		}
+		temp = I2C_DVI_PLL_DIVIDER_HIGH_SPEED_VAL;
+		ret = i2c_write(CONFIG_SYS_I2C_DVI_ADDR,
+				I2C_DVI_PLL_DIVIDER_REG, 1, &temp, 1);
+		if (ret) {
+			puts("I2C: failed to select dvi pll divider\n");
+			return ret;
+		}
+		temp = I2C_DVI_PLL_FILTER_HIGH_SPEED_VAL;
+		ret = i2c_write(CONFIG_SYS_I2C_DVI_ADDR,
+				I2C_DVI_PLL_FILTER_REG, 1, &temp, 1);
+		if (ret) {
+			puts("I2C: failed to select dvi pll filter\n");
+			return ret;
+		}
+	} else {
+		temp = I2C_DVI_PLL_CHARGE_CNTL_LOW_SPEED_VAL;
+		ret = i2c_write(CONFIG_SYS_I2C_DVI_ADDR,
+				I2C_DVI_PLL_CHARGE_CNTL_REG, 1, &temp, 1);
+		if (ret) {
+			puts("I2C: failed to select dvi pll charge_cntl\n");
+			return ret;
+		}
+		temp = I2C_DVI_PLL_DIVIDER_LOW_SPEED_VAL;
+		ret = i2c_write(CONFIG_SYS_I2C_DVI_ADDR,
+				I2C_DVI_PLL_DIVIDER_REG, 1, &temp, 1);
+		if (ret) {
+			puts("I2C: failed to select dvi pll divider\n");
+			return ret;
+		}
+		temp = I2C_DVI_PLL_FILTER_LOW_SPEED_VAL;
+		ret = i2c_write(CONFIG_SYS_I2C_DVI_ADDR,
+				I2C_DVI_PLL_FILTER_REG, 1, &temp, 1);
+		if (ret) {
+			puts("I2C: failed to select dvi pll filter\n");
+			return ret;
+		}
+	}
+
+	temp = I2C_DVI_POWER_MGMT_VAL;
+	ret = i2c_write(CONFIG_SYS_I2C_DVI_ADDR, I2C_DVI_POWER_MGMT_REG, 1,
+			&temp, 1);
+	if (ret) {
+		puts("I2C: failed to select dvi power mgmt\n");
+		return ret;
+	}
+
+	udelay(500);
+
+	return 0;
+}
diff --git a/board/chipsee/common/diu_ch7301.h b/board/chipsee/common/diu_ch7301.h
new file mode 100644
index 0000000..8b6ead0
--- /dev/null
+++ b/board/chipsee/common/diu_ch7301.h
@@ -0,0 +1,13 @@
+/*
+ * Copyright 2014 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+#ifndef __DIU_HDMI_CH7301__
+#define __DIU_HDMI_CH7301__
+
+/* Programming of HDMI Chrontel CH7301 connector */
+int diu_set_dvi_encoder(unsigned int pixclock);
+
+#endif
diff --git a/board/chipsee/common/eeprom.h b/board/chipsee/common/eeprom.h
new file mode 100644
index 0000000..efdba4e
--- /dev/null
+++ b/board/chipsee/common/eeprom.h
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2004 Freescale Semiconductor.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __EEPROM_H_
+#define __EEPROM_H_
+
+
+/*
+ * EEPROM Board System Register interface.
+ */
+
+
+/*
+ * CPU Board Revision
+ */
+#define MPC85XX_CPU_BOARD_REV(maj, min)	((((maj)&0xff) << 8) | ((min) & 0xff))
+#define MPC85XX_CPU_BOARD_MAJOR(rev)	(((rev) >> 8) & 0xff)
+#define MPC85XX_CPU_BOARD_MINOR(rev)	((rev) & 0xff)
+
+#define MPC85XX_CPU_BOARD_REV_UNKNOWN	MPC85XX_CPU_BOARD_REV(0,0)
+#define MPC85XX_CPU_BOARD_REV_1_0	MPC85XX_CPU_BOARD_REV(1,0)
+#define MPC85XX_CPU_BOARD_REV_1_1	MPC85XX_CPU_BOARD_REV(1,1)
+
+/*
+ * Returns CPU board revision register as a 16-bit value with
+ * the Major in the high byte, and Minor in the low byte.
+ */
+extern unsigned int get_cpu_board_revision(void);
+
+
+#endif	/* __CADMUS_H_ */
diff --git a/board/chipsee/common/epdc_setup.c b/board/chipsee/common/epdc_setup.c
new file mode 100644
index 0000000..8ca3595
--- /dev/null
+++ b/board/chipsee/common/epdc_setup.c
@@ -0,0 +1,219 @@
+/*
+ * Copyright (C) 2015 Freescale Semiconductor, Inc. All Rights Reserved.
+ *
+ * Peng Fan <Peng.Fan@freescale.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+#include <common.h>
+#include <lcd.h>
+#include <linux/err.h>
+#include <linux/types.h>
+#include <malloc.h>
+#include <mxc_epdc_fb.h>
+
+#define is_digit(c)	((c) >= '0' && (c) <= '9')
+__weak int mmc_get_env_devno(void)
+{
+	return 0;
+}
+__weak int check_mmc_autodetect(void)
+{
+	return 0;
+}
+
+int board_setup_waveform_file(ulong waveform_buf)
+{
+	char *fs_argv[5];
+	char addr[17];
+	ulong file_len, mmc_dev;
+
+	if (!check_mmc_autodetect())
+		mmc_dev = getenv_ulong("mmcdev", 10, 0);
+	else
+		mmc_dev = mmc_get_env_devno();
+
+	sprintf(addr, "%lx", waveform_buf);
+
+	fs_argv[0] = "fatload";
+	fs_argv[1] = "mmc";
+	fs_argv[2] = simple_itoa(mmc_dev);
+	fs_argv[3] = addr;
+	fs_argv[4] = getenv("epdc_waveform");
+
+	if (!fs_argv[4])
+		fs_argv[4] = "epdc_splash.bin";
+
+	if (do_fat_fsload(NULL, 0, 5, fs_argv)) {
+		printf("File %s not found on MMC Device %lu!\n", fs_argv[4], mmc_dev);
+		return -1;
+	}
+
+	file_len = getenv_hex("filesize", 0);
+	if (!file_len)
+		return -1;
+
+	flush_cache(waveform_buf, file_len);
+
+	return 0;
+}
+
+int board_setup_logo_file(void *display_buf)
+{
+	int logo_width, logo_height;
+	char *fs_argv[5];
+	char addr[17];
+	int array[3];
+	ulong file_len, mmc_dev;
+	char *buf, *s;
+	int arg = 0, val = 0, pos = 0;
+	int i, j, max_check_length;
+	int row, col, row_end, col_end;
+
+	if (!display_buf)
+		return -EINVAL;
+
+	/* Assume PGM header not exceeds 128 bytes */
+	max_check_length = 128;
+
+	if (!check_mmc_autodetect())
+		mmc_dev = getenv_ulong("mmcdev", 10, 0);
+	else
+		mmc_dev = mmc_get_env_devno();
+
+	memset(display_buf, 0xFF, panel_info.vl_col * panel_info.vl_row);
+
+	fs_argv[0] = "fatsize";
+	fs_argv[1] = "mmc";
+	fs_argv[2] = simple_itoa(mmc_dev);
+	fs_argv[3] = getenv("epdc_logo");
+	if (!fs_argv[3])
+		fs_argv[3] = "epdc_logo.pgm";
+	if (do_fat_size(NULL, 0, 4, fs_argv)) {
+		debug("File %s not found on MMC Device %lu, use black border\n", fs_argv[3], mmc_dev);
+		/* Draw black border around framebuffer*/
+		memset(lcd_base, 0x0, 24 * panel_info.vl_col);
+		for (i = 24; i < (panel_info.vl_row - 24); i++) {
+			memset((u8 *)lcd_base + i * panel_info.vl_col,
+			       0x00, 24);
+			memset((u8 *)lcd_base + i * panel_info.vl_col
+				+ panel_info.vl_col - 24, 0x00, 24);
+		}
+		memset((u8 *)lcd_base +
+		       panel_info.vl_col * (panel_info.vl_row - 24),
+		       0x00, 24 * panel_info.vl_col);
+		return 0;
+	}
+
+	file_len = getenv_hex("filesize", 0);
+	if (!file_len)
+		return -EINVAL;
+
+	buf = memalign(ARCH_DMA_MINALIGN, file_len);
+	if (!buf)
+		return -ENOMEM;
+
+	sprintf(addr, "%lx", (ulong)buf);
+
+	fs_argv[0] = "fatload";
+	fs_argv[1] = "mmc";
+	fs_argv[2] = simple_itoa(mmc_dev);
+	fs_argv[3] = addr;
+	fs_argv[4] = getenv("epdc_logo");
+
+	if (!fs_argv[4])
+		fs_argv[4] = "epdc_logo.pgm";
+
+	if (do_fat_fsload(NULL, 0, 5, fs_argv)) {
+		printf("File %s not found on MMC Device %lu!\n", fs_argv[4], mmc_dev);
+		free(buf);
+		return -1;
+	}
+
+	if (strncmp(buf, "P5", 2)) {
+		printf("Wrong format for epdc logo, use PGM-P5 format.\n");
+		free(buf);
+		return -EINVAL;
+	}
+	/* Skip P5\n */
+	pos += 3;
+	arg = 0;
+	for (i = 3; i < max_check_length; ) {
+		/* skip \n \t and space */
+		if ((buf[i] == '\n') || (buf[i] == '\t') || (buf[i] == ' ')) {
+			i++;
+			continue;
+		}
+		/* skip comment */
+		if (buf[i] == '#') {
+			while (buf[i++] != '\n')
+				;
+			continue;
+		}
+
+		/* HEIGTH, WIDTH, MAX PIXEL VLAUE total 3 args */
+		if (arg > 2)
+			break;
+		val = 0;
+		while (is_digit(buf[i])) {
+			val = val * 10 + buf[i] - '0';
+			i++;
+		}
+		array[arg++] = val;
+
+		i++;
+	}
+
+	/* Point to data area */
+	pos = i;
+
+	logo_width = array[0];
+	logo_height = array[1];
+
+	if ((logo_width > panel_info.vl_col) ||
+	    (logo_height > panel_info.vl_row)) {
+		printf("Picture: too big\n");
+		free(buf);
+		return -EINVAL;
+	}
+
+	/* m,m means center of screen */
+	row = 0;
+	col = 0;
+	s = getenv("splashpos");
+	if (s) {
+		if (s[0] == 'm')
+			col = (panel_info.vl_col  - logo_width) >> 1;
+		else
+			col = simple_strtol(s, NULL, 0);
+		s = strchr(s + 1, ',');
+		if (s != NULL) {
+			if (s[1] == 'm')
+				row = (panel_info.vl_row  - logo_height) >> 1;
+			else
+				row = simple_strtol(s + 1, NULL, 0);
+		}
+	}
+	if ((col + logo_width > panel_info.vl_col) ||
+	    (row + logo_height > panel_info.vl_row)) {
+		printf("Incorrect pos, use (0, 0)\n");
+		row = 0;
+		col = 0;
+	}
+
+	/* Draw picture at the center of screen */
+	row_end = row + logo_height;
+	col_end = col + logo_width;
+	for (i = row; i < row_end; i++) {
+		for (j = col; j < col_end; j++) {
+			*((u8 *)display_buf + i * (panel_info.vl_col) + j) =
+				 buf[pos++];
+		}
+	}
+
+	free(buf);
+
+	flush_cache((ulong)display_buf, file_len - pos - 1);
+
+	return 0;
+}
diff --git a/board/chipsee/common/fman.c b/board/chipsee/common/fman.c
new file mode 100644
index 0000000..9dc5402
--- /dev/null
+++ b/board/chipsee/common/fman.c
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2011 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <libfdt.h>
+#include <libfdt_env.h>
+#include <fdt_support.h>
+
+#include <fm_eth.h>
+#include <asm/fsl_serdes.h>
+
+/*
+ * Given the following ...
+ *
+ * 1) A pointer to an Fman Ethernet node (as identified by the 'compat'
+ * compatible string and 'addr' physical address)
+ *
+ * 2) The name of an alias that points to the ethernet-phy node (usually inside
+ * a virtual MDIO node)
+ *
+ * ... update that Ethernet node's phy-handle property to point to the
+ * ethernet-phy node.  This is how we link an Ethernet node to its PHY, so each
+ * PHY in a virtual MDIO node must have an alias.
+ *
+ * Returns 0 on success, or a negative FDT error code on error.
+ */
+int fdt_set_phy_handle(void *fdt, char *compat, phys_addr_t addr,
+			const char *alias)
+{
+	int offset;
+	unsigned int ph;
+	const char *path;
+
+	/* Get a path to the node that 'alias' points to */
+	path = fdt_get_alias(fdt, alias);
+	if (!path)
+		return -FDT_ERR_BADPATH;
+
+	/* Get the offset of that node */
+	offset = fdt_path_offset(fdt, path);
+	if (offset < 0)
+		return offset;
+
+	ph = fdt_create_phandle(fdt, offset);
+	if (!ph)
+		return -FDT_ERR_BADPHANDLE;
+
+	offset = fdt_node_offset_by_compat_reg(fdt, compat, addr);
+	if (offset < 0)
+		return offset;
+
+	return fdt_setprop(fdt, offset, "phy-handle", &ph, sizeof(ph));
+}
+
+/*
+ * Return the SerDes device enum for a given Fman port
+ *
+ * This function just maps the fm_port namespace to the srds_prtcl namespace.
+ */
+enum srds_prtcl serdes_device_from_fm_port(enum fm_port port)
+{
+	static const enum srds_prtcl srds_table[] = {
+		[FM1_DTSEC1] = SGMII_FM1_DTSEC1,
+		[FM1_DTSEC2] = SGMII_FM1_DTSEC2,
+		[FM1_DTSEC3] = SGMII_FM1_DTSEC3,
+		[FM1_DTSEC4] = SGMII_FM1_DTSEC4,
+		[FM1_DTSEC5] = SGMII_FM1_DTSEC5,
+		[FM1_10GEC1] = XAUI_FM1,
+		[FM2_DTSEC1] = SGMII_FM2_DTSEC1,
+		[FM2_DTSEC2] = SGMII_FM2_DTSEC2,
+		[FM2_DTSEC3] = SGMII_FM2_DTSEC3,
+		[FM2_DTSEC4] = SGMII_FM2_DTSEC4,
+		[FM2_DTSEC5] = SGMII_FM2_DTSEC5,
+		[FM2_10GEC1] = XAUI_FM2,
+	};
+
+	if ((port < FM1_DTSEC1) || (port > FM2_10GEC1))
+		return NONE;
+	else
+		return srds_table[port];
+}
diff --git a/board/chipsee/common/fman.h b/board/chipsee/common/fman.h
new file mode 100644
index 0000000..ff819c4
--- /dev/null
+++ b/board/chipsee/common/fman.h
@@ -0,0 +1,15 @@
+/*
+ * Copyright 2011 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __FMAN_BOARD_HELPER__
+#define __FMAN_BOARD_HELPER__
+
+int fdt_set_phy_handle(void *fdt, char *compat, phys_addr_t addr,
+			const char *alias);
+
+enum srds_prtcl serdes_device_from_fm_port(enum fm_port port);
+
+#endif
diff --git a/board/chipsee/common/fsl_validate.c b/board/chipsee/common/fsl_validate.c
new file mode 100644
index 0000000..5283648
--- /dev/null
+++ b/board/chipsee/common/fsl_validate.c
@@ -0,0 +1,840 @@
+/*
+ * Copyright 2015 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <fsl_validate.h>
+#include <fsl_secboot_err.h>
+#include <fsl_sfp.h>
+#include <fsl_sec.h>
+#include <command.h>
+#include <malloc.h>
+#include <dm/uclass.h>
+#include <u-boot/rsa-mod-exp.h>
+#include <hash.h>
+#include <fsl_secboot_err.h>
+#ifndef CONFIG_MPC85xx
+#include <asm/arch/immap_ls102xa.h>
+#endif
+
+#define SHA256_BITS	256
+#define SHA256_BYTES	(256/8)
+#define SHA256_NIBBLES	(256/4)
+#define NUM_HEX_CHARS	(sizeof(ulong) * 2)
+
+/* This array contains DER value for SHA-256 */
+static const u8 hash_identifier[] = { 0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60,
+		0x86, 0x48, 0x01, 0x65,	0x03, 0x04, 0x02, 0x01, 0x05, 0x00,
+		0x04, 0x20
+		};
+
+static u8 hash_val[SHA256_BYTES];
+static const u8 barker_code[ESBC_BARKER_LEN] = { 0x68, 0x39, 0x27, 0x81 };
+
+void branch_to_self(void) __attribute__ ((noreturn));
+
+/*
+ * This function will put core in infinite loop.
+ * This will be called when the ESBC can not proceed further due
+ * to some unknown errors.
+ */
+void branch_to_self(void)
+{
+	printf("Core is in infinite loop due to errors.\n");
+self:
+	goto self;
+}
+
+#if defined(CONFIG_FSL_ISBC_KEY_EXT)
+static u32 check_ie(struct fsl_secboot_img_priv *img)
+{
+	if (img->hdr.ie_flag)
+		return 1;
+
+	return 0;
+}
+
+/* This function returns the CSF Header Address of uboot
+ * For MPC85xx based platforms, the LAW mapping for NOR
+ * flash changes in uboot code. Hence the offset needs
+ * to be calculated and added to the new NOR flash base
+ * address
+ */
+#if defined(CONFIG_MPC85xx)
+int get_csf_base_addr(ulong *csf_addr, ulong *flash_base_addr)
+{
+	struct ccsr_gur __iomem *gur = (void *)(CONFIG_SYS_MPC85xx_GUTS_ADDR);
+	u32 csf_hdr_addr = in_be32(&gur->scratchrw[0]);
+	u32 csf_flash_offset = csf_hdr_addr & ~(CONFIG_SYS_PBI_FLASH_BASE);
+	ulong flash_addr, addr;
+	int found = 0;
+	int i = 0;
+
+	for (i = 0; i < CONFIG_SYS_MAX_FLASH_BANKS; i++) {
+		flash_addr = flash_info[i].start[0];
+		addr = flash_info[i].start[0] + csf_flash_offset;
+		if (memcmp((u8 *)addr, barker_code, ESBC_BARKER_LEN) == 0) {
+			debug("Barker found on addr %lx\n", addr);
+			found = 1;
+			break;
+		}
+	}
+
+	if (!found)
+		return -1;
+
+	*csf_addr = addr;
+	*flash_base_addr = flash_addr;
+
+	return 0;
+}
+#else
+/* For platforms like LS1020, correct flash address is present in
+ * the header. So the function reqturns flash base address as 0
+ */
+int get_csf_base_addr(ulong *csf_addr, ulong *flash_base_addr)
+{
+	struct ccsr_gur __iomem *gur = (void *)(CONFIG_SYS_FSL_GUTS_ADDR);
+	u32 csf_hdr_addr = in_be32(&gur->scratchrw[0]);
+
+	if (memcmp((u8 *)csf_hdr_addr, barker_code, ESBC_BARKER_LEN))
+		return -1;
+
+	*csf_addr = csf_hdr_addr;
+	*flash_base_addr = 0;
+	return 0;
+}
+#endif
+
+static int get_ie_info_addr(ulong *ie_addr)
+{
+	struct fsl_secboot_img_hdr *hdr;
+	struct fsl_secboot_sg_table *sg_tbl;
+	ulong flash_base_addr, csf_addr;
+
+	if (get_csf_base_addr(&csf_addr, &flash_base_addr))
+		return -1;
+
+	hdr = (struct fsl_secboot_img_hdr *)csf_addr;
+
+	/* For SoC's with Trust Architecture v1 with corenet bus
+	 * the sg table field in CSF header has absolute address
+	 * for sg table in memory. In other Trust Architecture,
+	 * this field specifies the offset of sg table from the
+	 * base address of CSF Header
+	 */
+#if defined(CONFIG_FSL_TRUST_ARCH_v1) && defined(CONFIG_FSL_CORENET)
+	sg_tbl = (struct fsl_secboot_sg_table *)
+		 (((ulong)hdr->psgtable & ~(CONFIG_SYS_PBI_FLASH_BASE)) +
+		  flash_base_addr);
+#else
+	sg_tbl = (struct fsl_secboot_sg_table *)(csf_addr +
+						 (ulong)hdr->psgtable);
+#endif
+
+	/* IE Key Table is the first entry in the SG Table */
+#if defined(CONFIG_MPC85xx)
+	*ie_addr = (sg_tbl->src_addr & ~(CONFIG_SYS_PBI_FLASH_BASE)) +
+		   flash_base_addr;
+#else
+	*ie_addr = sg_tbl->src_addr;
+#endif
+
+	debug("IE Table address is %lx\n", *ie_addr);
+	return 0;
+}
+
+#endif
+
+#ifdef CONFIG_KEY_REVOCATION
+/* This function checks srk_table_flag in header and set/reset srk_flag.*/
+static u32 check_srk(struct fsl_secboot_img_priv *img)
+{
+	if (img->hdr.len_kr.srk_table_flag & SRK_FLAG)
+		return 1;
+
+	return 0;
+}
+
+/* This function returns ospr's key_revoc values.*/
+static u32 get_key_revoc(void)
+{
+	struct ccsr_sfp_regs *sfp_regs = (void *)(CONFIG_SYS_SFP_ADDR);
+	return (sfp_in32(&sfp_regs->ospr) & OSPR_KEY_REVOC_MASK) >>
+		OSPR_KEY_REVOC_SHIFT;
+}
+
+/* This function checks if selected key is revoked or not.*/
+static u32 is_key_revoked(u32 keynum, u32 rev_flag)
+{
+	if (keynum == UNREVOCABLE_KEY)
+		return 0;
+
+	if ((u32)(1 << (ALIGN_REVOC_KEY - keynum)) & rev_flag)
+		return 1;
+
+	return 0;
+}
+
+/* It validates srk_table key lengths.*/
+static u32 validate_srk_tbl(struct srk_table *tbl, u32 num_entries)
+{
+	int i = 0;
+	for (i = 0; i < num_entries; i++) {
+		if (!((tbl[i].key_len == 2 * KEY_SIZE_BYTES/4) ||
+		      (tbl[i].key_len == 2 * KEY_SIZE_BYTES/2) ||
+		      (tbl[i].key_len == 2 * KEY_SIZE_BYTES)))
+			return ERROR_ESBC_CLIENT_HEADER_INV_SRK_ENTRY_KEYLEN;
+	}
+	return 0;
+}
+#endif
+
+/* This function return length of public key.*/
+static inline u32 get_key_len(struct fsl_secboot_img_priv *img)
+{
+	return img->key_len;
+}
+
+/*
+ * Handles the ESBC uboot client header verification failure.
+ * This  function  handles all the errors which might occur in the
+ * parsing and checking of ESBC uboot client header. It will also
+ * set the error bits in the SEC_MON.
+ */
+static void fsl_secboot_header_verification_failure(void)
+{
+	struct ccsr_sec_mon_regs *sec_mon_regs = (void *)
+						(CONFIG_SYS_SEC_MON_ADDR);
+	struct ccsr_sfp_regs *sfp_regs = (void *)(CONFIG_SYS_SFP_ADDR);
+	u32 sts = sec_mon_in32(&sec_mon_regs->hp_stat);
+
+	/* 29th bit of OSPR is ITS */
+	u32 its = sfp_in32(&sfp_regs->ospr) >> 2;
+
+	/*
+	 * Read the SEC_MON status register
+	 * Read SSM_ST field
+	 */
+	sts = sec_mon_in32(&sec_mon_regs->hp_stat);
+	if ((sts & HPSR_SSM_ST_MASK) == HPSR_SSM_ST_TRUST) {
+		if (its == 1)
+			change_sec_mon_state(HPSR_SSM_ST_TRUST,
+					     HPSR_SSM_ST_SOFT_FAIL);
+		else
+			change_sec_mon_state(HPSR_SSM_ST_TRUST,
+					     HPSR_SSM_ST_NON_SECURE);
+	}
+
+	printf("Generating reset request\n");
+	do_reset(NULL, 0, 0, NULL);
+}
+
+/*
+ * Handles the ESBC uboot client image verification failure.
+ * This  function  handles all the errors which might occur in the
+ * public key hash comparison and signature verification of
+ * ESBC uboot client image. It will also
+ * set the error bits in the SEC_MON.
+ */
+static void fsl_secboot_image_verification_failure(void)
+{
+	struct ccsr_sec_mon_regs *sec_mon_regs = (void *)
+						(CONFIG_SYS_SEC_MON_ADDR);
+	struct ccsr_sfp_regs *sfp_regs = (void *)(CONFIG_SYS_SFP_ADDR);
+	u32 sts = sec_mon_in32(&sec_mon_regs->hp_stat);
+
+	u32 its = sfp_in32(&sfp_regs->ospr) & ITS_MASK >> ITS_BIT;
+
+	/*
+	 * Read the SEC_MON status register
+	 * Read SSM_ST field
+	 */
+	sts = sec_mon_in32(&sec_mon_regs->hp_stat);
+	if ((sts & HPSR_SSM_ST_MASK) == HPSR_SSM_ST_TRUST) {
+		if (its == 1) {
+			change_sec_mon_state(HPSR_SSM_ST_TRUST,
+					     HPSR_SSM_ST_SOFT_FAIL);
+
+			printf("Generating reset request\n");
+			do_reset(NULL, 0, 0, NULL);
+		} else {
+			change_sec_mon_state(HPSR_SSM_ST_TRUST,
+					     HPSR_SSM_ST_NON_SECURE);
+		}
+	}
+}
+
+static void fsl_secboot_bootscript_parse_failure(void)
+{
+	fsl_secboot_header_verification_failure();
+}
+
+/*
+ * Handles the errors in esbc boot.
+ * This  function  handles all the errors which might occur in the
+ * esbc boot phase. It will call the appropriate api to log the
+ * errors and set the error bits in the SEC_MON.
+ */
+void fsl_secboot_handle_error(int error)
+{
+	const struct fsl_secboot_errcode *e;
+
+	for (e = fsl_secboot_errcodes; e->errcode != ERROR_ESBC_CLIENT_MAX;
+		e++) {
+		if (e->errcode == error)
+			printf("ERROR :: %x :: %s\n", error, e->name);
+	}
+
+	switch (error) {
+	case ERROR_ESBC_CLIENT_HEADER_BARKER:
+	case ERROR_ESBC_CLIENT_HEADER_IMG_SIZE:
+	case ERROR_ESBC_CLIENT_HEADER_KEY_LEN:
+	case ERROR_ESBC_CLIENT_HEADER_SIG_LEN:
+	case ERROR_ESBC_CLIENT_HEADER_KEY_LEN_NOT_TWICE_SIG_LEN:
+	case ERROR_ESBC_CLIENT_HEADER_KEY_MOD_1:
+	case ERROR_ESBC_CLIENT_HEADER_KEY_MOD_2:
+	case ERROR_ESBC_CLIENT_HEADER_SIG_KEY_MOD:
+	case ERROR_ESBC_CLIENT_HEADER_SG_ESBC_EP:
+	case ERROR_ESBC_CLIENT_HEADER_SG_ENTIRES_BAD:
+#ifdef CONFIG_KEY_REVOCATION
+	case ERROR_ESBC_CLIENT_HEADER_KEY_REVOKED:
+	case ERROR_ESBC_CLIENT_HEADER_INVALID_SRK_NUM_ENTRY:
+	case ERROR_ESBC_CLIENT_HEADER_INVALID_KEY_NUM:
+	case ERROR_ESBC_CLIENT_HEADER_INV_SRK_ENTRY_KEYLEN:
+#endif
+#if defined(CONFIG_FSL_ISBC_KEY_EXT)
+	/*@fallthrough@*/
+	case ERROR_ESBC_CLIENT_HEADER_IE_KEY_REVOKED:
+	case ERROR_ESBC_CLIENT_HEADER_INVALID_IE_NUM_ENTRY:
+	case ERROR_ESBC_CLIENT_HEADER_INVALID_IE_KEY_NUM:
+	case ERROR_ESBC_CLIENT_HEADER_INV_IE_ENTRY_KEYLEN:
+	case ERROR_IE_TABLE_NOT_FOUND:
+#endif
+		fsl_secboot_header_verification_failure();
+		break;
+	case ERROR_ESBC_SEC_RESET:
+	case ERROR_ESBC_SEC_DEQ:
+	case ERROR_ESBC_SEC_ENQ:
+	case ERROR_ESBC_SEC_DEQ_TO:
+	case ERROR_ESBC_SEC_JOBQ_STATUS:
+	case ERROR_ESBC_CLIENT_HASH_COMPARE_KEY:
+	case ERROR_ESBC_CLIENT_HASH_COMPARE_EM:
+		fsl_secboot_image_verification_failure();
+		break;
+	case ERROR_ESBC_MISSING_BOOTM:
+		fsl_secboot_bootscript_parse_failure();
+		break;
+	case ERROR_ESBC_WRONG_CMD:
+	default:
+		branch_to_self();
+		break;
+	}
+}
+
+static void fsl_secblk_handle_error(int error)
+{
+	switch (error) {
+	case ERROR_ESBC_SEC_ENQ:
+		fsl_secboot_handle_error(ERROR_ESBC_SEC_ENQ);
+		break;
+	case ERROR_ESBC_SEC_DEQ:
+		fsl_secboot_handle_error(ERROR_ESBC_SEC_DEQ);
+		break;
+	case ERROR_ESBC_SEC_DEQ_TO:
+		fsl_secboot_handle_error(ERROR_ESBC_SEC_DEQ_TO);
+		break;
+	default:
+		printf("Job Queue Output status %x\n", error);
+		fsl_secboot_handle_error(ERROR_ESBC_SEC_JOBQ_STATUS);
+		break;
+	}
+}
+
+/*
+ * Calculate hash of key obtained via offset present in ESBC uboot
+ * client hdr. This function calculates the hash of key which is obtained
+ * through offset present in ESBC uboot client header.
+ */
+static int calc_img_key_hash(struct fsl_secboot_img_priv *img)
+{
+	struct hash_algo *algo;
+	void *ctx;
+	int i, srk = 0;
+	int ret = 0;
+	const char *algo_name = "sha256";
+
+	/* Calculate hash of the esbc key */
+	ret = hash_progressive_lookup_algo(algo_name, &algo);
+	if (ret)
+		return ret;
+
+	ret = algo->hash_init(algo, &ctx);
+	if (ret)
+		return ret;
+
+	/* Update hash for ESBC key */
+#ifdef CONFIG_KEY_REVOCATION
+	if (check_srk(img)) {
+		ret = algo->hash_update(algo, ctx,
+			(u8 *)(img->ehdrloc + img->hdr.srk_tbl_off),
+			img->hdr.len_kr.num_srk * sizeof(struct srk_table), 1);
+		srk = 1;
+	}
+#endif
+	if (!srk)
+		ret = algo->hash_update(algo, ctx,
+			img->img_key, img->key_len, 1);
+	if (ret)
+		return ret;
+
+	/* Copy hash at destination buffer */
+	ret = algo->hash_finish(algo, ctx, hash_val, algo->digest_size);
+	if (ret)
+		return ret;
+
+	for (i = 0; i < SHA256_BYTES; i++)
+		img->img_key_hash[i] = hash_val[i];
+
+	return 0;
+}
+
+/*
+ * Calculate hash of ESBC hdr and ESBC. This function calculates the
+ * single hash of ESBC header and ESBC image. If SG flag is on, all
+ * SG entries are also hashed alongwith the complete SG table.
+ */
+static int calc_esbchdr_esbc_hash(struct fsl_secboot_img_priv *img)
+{
+	struct hash_algo *algo;
+	void *ctx;
+	int ret = 0;
+	int key_hash = 0;
+	const char *algo_name = "sha256";
+
+	/* Calculate the hash of the ESBC */
+	ret = hash_progressive_lookup_algo(algo_name, &algo);
+	if (ret)
+		return ret;
+
+	ret = algo->hash_init(algo, &ctx);
+	/* Copy hash at destination buffer */
+	if (ret)
+		return ret;
+
+	/* Update hash for CSF Header */
+	ret = algo->hash_update(algo, ctx,
+		(u8 *)&img->hdr, sizeof(struct fsl_secboot_img_hdr), 0);
+	if (ret)
+		return ret;
+
+	/* Update the hash with that of srk table if srk flag is 1
+	 * If IE Table is selected, key is not added in the hash
+	 * If neither srk table nor IE key table available, add key
+	 * from header in the hash calculation
+	 */
+#ifdef CONFIG_KEY_REVOCATION
+	if (check_srk(img)) {
+		ret = algo->hash_update(algo, ctx,
+			(u8 *)(img->ehdrloc + img->hdr.srk_tbl_off),
+			img->hdr.len_kr.num_srk * sizeof(struct srk_table), 0);
+		key_hash = 1;
+	}
+#endif
+#if defined(CONFIG_FSL_ISBC_KEY_EXT)
+	if (!key_hash && check_ie(img))
+		key_hash = 1;
+#endif
+	if (!key_hash)
+		ret = algo->hash_update(algo, ctx,
+			img->img_key, img->hdr.key_len, 0);
+	if (ret)
+		return ret;
+
+	/* Update hash for actual Image */
+	ret = algo->hash_update(algo, ctx,
+			(u8 *)img->hdr.pimg, img->hdr.img_size, 1);
+	if (ret)
+		return ret;
+
+	/* Copy hash at destination buffer */
+	ret = algo->hash_finish(algo, ctx, hash_val, algo->digest_size);
+	if (ret)
+		return ret;
+
+	return 0;
+}
+
+/*
+ * Construct encoded hash EM' wrt PKCSv1.5. This function calculates the
+ * pointers for padding, DER value and hash. And finally, constructs EM'
+ * which includes hash of complete CSF header and ESBC image. If SG flag
+ * is on, hash of SG table and entries is also included.
+ */
+static void construct_img_encoded_hash_second(struct fsl_secboot_img_priv *img)
+{
+	/*
+	 * RSA PKCSv1.5 encoding format for encoded message is below
+	 * EM = 0x0 || 0x1 || PS || 0x0 || DER || Hash
+	 * PS is Padding String
+	 * DER is DER value for SHA-256
+	 * Hash is SHA-256 hash
+	 * *********************************************************
+	 * representative points to first byte of EM initially and is
+	 * filled with 0x0
+	 * representative is incremented by 1 and second byte is filled
+	 * with 0x1
+	 * padding points to third byte of EM
+	 * digest points to full length of EM - 32 bytes
+	 * hash_id (DER value) points to 19 bytes before pDigest
+	 * separator is one byte which separates padding and DER
+	 */
+
+	size_t len;
+	u8 *representative;
+	u8 *padding, *digest;
+	u8 *hash_id, *separator;
+	int i;
+
+	len = (get_key_len(img) / 2) - 1;
+	representative = img->img_encoded_hash_second;
+	representative[0] = 0;
+	representative[1] = 1;  /* block type 1 */
+
+	padding = &representative[2];
+	digest = &representative[1] + len - 32;
+	hash_id = digest - sizeof(hash_identifier);
+	separator = hash_id - 1;
+
+	/* fill padding area pointed by padding with 0xff */
+	memset(padding, 0xff, separator - padding);
+
+	/* fill byte pointed by separator */
+	*separator = 0;
+
+	/* fill SHA-256 DER value  pointed by HashId */
+	memcpy(hash_id, hash_identifier, sizeof(hash_identifier));
+
+	/* fill hash pointed by Digest */
+	for (i = 0; i < SHA256_BYTES; i++)
+		digest[i] = hash_val[i];
+}
+
+/*
+ * Reads and validates the ESBC client header.
+ * This function reads key and signature from the ESBC client header.
+ * If Scatter/Gather flag is on, lengths and offsets of images
+ * present as SG entries are also read. This function also checks
+ * whether the header is valid or not.
+ */
+static int read_validate_esbc_client_header(struct fsl_secboot_img_priv *img)
+{
+	char buf[20];
+	struct fsl_secboot_img_hdr *hdr = &img->hdr;
+	void *esbc = (u8 *)img->ehdrloc;
+	u8 *k, *s;
+#ifdef CONFIG_KEY_REVOCATION
+	u32 ret;
+	u32 key_num, key_revoc_flag, size;
+#endif
+#if defined(CONFIG_FSL_ISBC_KEY_EXT)
+	struct ie_key_info *ie_info;
+	u32 ie_num, ie_revoc_flag, ie_key_len;
+#endif
+	int  key_found = 0;
+
+	/* check barker code */
+	if (memcmp(hdr->barker, barker_code, ESBC_BARKER_LEN))
+		return ERROR_ESBC_CLIENT_HEADER_BARKER;
+
+	sprintf(buf, "%p", hdr->pimg);
+	setenv("img_addr", buf);
+
+	if (!hdr->img_size)
+		return ERROR_ESBC_CLIENT_HEADER_IMG_SIZE;
+
+	/* Key checking*/
+#ifdef CONFIG_KEY_REVOCATION
+	if (check_srk(img)) {
+		if ((hdr->len_kr.num_srk == 0) ||
+		    (hdr->len_kr.num_srk > MAX_KEY_ENTRIES))
+			return ERROR_ESBC_CLIENT_HEADER_INVALID_SRK_NUM_ENTRY;
+
+		key_num = hdr->len_kr.srk_sel;
+		if (key_num == 0 || key_num > hdr->len_kr.num_srk)
+			return ERROR_ESBC_CLIENT_HEADER_INVALID_KEY_NUM;
+
+		/* Get revoc key from sfp */
+		key_revoc_flag = get_key_revoc();
+		ret = is_key_revoked(key_num, key_revoc_flag);
+		if (ret)
+			return ERROR_ESBC_CLIENT_HEADER_KEY_REVOKED;
+
+		size = hdr->len_kr.num_srk * sizeof(struct srk_table);
+
+		memcpy(&img->srk_tbl, esbc + hdr->srk_tbl_off, size);
+
+		ret = validate_srk_tbl(img->srk_tbl, hdr->len_kr.num_srk);
+
+		if (ret != 0)
+			return ret;
+
+		img->key_len = img->srk_tbl[key_num - 1].key_len;
+
+		memcpy(&img->img_key, &(img->srk_tbl[key_num - 1].pkey),
+		       img->key_len);
+
+		key_found = 1;
+	}
+#endif
+
+#if defined(CONFIG_FSL_ISBC_KEY_EXT)
+	if (!key_found && check_ie(img)) {
+		if (get_ie_info_addr(&img->ie_addr))
+			return ERROR_IE_TABLE_NOT_FOUND;
+		ie_info = (struct ie_key_info *)img->ie_addr;
+		if (ie_info->num_keys == 0 || ie_info->num_keys > 32)
+			return ERROR_ESBC_CLIENT_HEADER_INVALID_IE_NUM_ENTRY;
+
+		ie_num = hdr->ie_key_sel;
+		if (ie_num == 0 || ie_num > ie_info->num_keys)
+			return ERROR_ESBC_CLIENT_HEADER_INVALID_IE_KEY_NUM;
+
+		ie_revoc_flag = ie_info->key_revok;
+		if ((u32)(1 << (ie_num - 1)) & ie_revoc_flag)
+			return ERROR_ESBC_CLIENT_HEADER_IE_KEY_REVOKED;
+
+		ie_key_len = ie_info->ie_key_tbl[ie_num - 1].key_len;
+
+		if (!((ie_key_len == 2 * KEY_SIZE_BYTES / 4) ||
+		      (ie_key_len == 2 * KEY_SIZE_BYTES / 2) ||
+		      (ie_key_len == 2 * KEY_SIZE_BYTES)))
+			return ERROR_ESBC_CLIENT_HEADER_INV_IE_ENTRY_KEYLEN;
+
+		memcpy(&img->img_key, &(ie_info->ie_key_tbl[ie_num - 1].pkey),
+		       ie_key_len);
+
+		img->key_len = ie_key_len;
+		key_found = 1;
+	}
+#endif
+
+	if (key_found == 0) {
+		/* check key length */
+		if (!((hdr->key_len == 2 * KEY_SIZE_BYTES / 4) ||
+		      (hdr->key_len == 2 * KEY_SIZE_BYTES / 2) ||
+		      (hdr->key_len == 2 * KEY_SIZE_BYTES)))
+			return ERROR_ESBC_CLIENT_HEADER_KEY_LEN;
+
+		memcpy(&img->img_key, esbc + hdr->pkey, hdr->key_len);
+
+		img->key_len = hdr->key_len;
+
+		key_found = 1;
+	}
+
+	/* check signaure */
+	if (get_key_len(img) == 2 * hdr->sign_len) {
+		/* check signature length */
+		if (!((hdr->sign_len == KEY_SIZE_BYTES / 4) ||
+		      (hdr->sign_len == KEY_SIZE_BYTES / 2) ||
+		      (hdr->sign_len == KEY_SIZE_BYTES)))
+			return ERROR_ESBC_CLIENT_HEADER_SIG_LEN;
+	} else {
+		return ERROR_ESBC_CLIENT_HEADER_KEY_LEN_NOT_TWICE_SIG_LEN;
+	}
+
+	memcpy(&img->img_sign, esbc + hdr->psign, hdr->sign_len);
+
+	/* No SG support */
+	if (hdr->sg_flag)
+		return ERROR_ESBC_CLIENT_HEADER_SG;
+
+	/* modulus most significant bit should be set */
+	k = (u8 *)&img->img_key;
+
+	if ((k[0] & 0x80) == 0)
+		return ERROR_ESBC_CLIENT_HEADER_KEY_MOD_1;
+
+	/* modulus value should be odd */
+	if ((k[get_key_len(img) / 2 - 1] & 0x1) == 0)
+		return ERROR_ESBC_CLIENT_HEADER_KEY_MOD_2;
+
+	/* Check signature value < modulus value */
+	s = (u8 *)&img->img_sign;
+
+	if (!(memcmp(s, k, hdr->sign_len) < 0))
+		return ERROR_ESBC_CLIENT_HEADER_SIG_KEY_MOD;
+
+	return ESBC_VALID_HDR;
+}
+
+static inline int str2longbe(const char *p, ulong *num)
+{
+	char *endptr;
+	ulong tmp;
+
+	if (!p) {
+		return 0;
+	} else {
+		tmp = simple_strtoul(p, &endptr, 16);
+		if (sizeof(ulong) == 4)
+			*num = cpu_to_be32(tmp);
+		else
+			*num = cpu_to_be64(tmp);
+	}
+
+	return *p != '\0' && *endptr == '\0';
+}
+
+int fsl_secboot_validate(cmd_tbl_t *cmdtp, int flag, int argc,
+		char * const argv[])
+{
+	struct ccsr_sfp_regs *sfp_regs = (void *)(CONFIG_SYS_SFP_ADDR);
+	ulong hash[SHA256_BYTES/sizeof(ulong)];
+	char hash_str[NUM_HEX_CHARS + 1];
+	ulong addr = simple_strtoul(argv[1], NULL, 16);
+	struct fsl_secboot_img_priv *img;
+	struct fsl_secboot_img_hdr *hdr;
+	void *esbc;
+	int ret, i, hash_cmd = 0;
+	u32 srk_hash[8];
+	uint32_t key_len;
+	struct key_prop prop;
+#if !defined(USE_HOSTCC)
+	struct udevice *mod_exp_dev;
+#endif
+
+	if (argc == 3) {
+		char *cp = argv[2];
+		int i = 0;
+
+		if (*cp == '0' && *(cp + 1) == 'x')
+			cp += 2;
+
+		/* The input string expected is in hex, where
+		 * each 4 bits would be represented by a hex
+		 * sha256 hash is 256 bits long, which would mean
+		 * num of characters = 256 / 4
+		 */
+		if (strlen(cp) != SHA256_NIBBLES) {
+			printf("%s is not a 256 bits hex string as expected\n",
+			       argv[2]);
+			return -1;
+		}
+
+		for (i = 0; i < sizeof(hash)/sizeof(ulong); i++) {
+			strncpy(hash_str, cp + (i * NUM_HEX_CHARS),
+				NUM_HEX_CHARS);
+			hash_str[NUM_HEX_CHARS] = '\0';
+			if (!str2longbe(hash_str, &hash[i])) {
+				printf("%s is not a 256 bits hex string ",
+				       argv[2]);
+				return -1;
+			}
+		}
+
+		hash_cmd = 1;
+	}
+
+	img = malloc(sizeof(struct fsl_secboot_img_priv));
+
+	if (!img)
+		return -1;
+
+	memset(img, 0, sizeof(struct fsl_secboot_img_priv));
+
+	hdr = &img->hdr;
+	img->ehdrloc = addr;
+	esbc = (u8 *)img->ehdrloc;
+
+	memcpy(hdr, esbc, sizeof(struct fsl_secboot_img_hdr));
+
+	/* read and validate esbc header */
+	ret = read_validate_esbc_client_header(img);
+
+	if (ret != ESBC_VALID_HDR) {
+		fsl_secboot_handle_error(ret);
+		goto exit;
+	}
+
+	/* SRKH present in SFP */
+	for (i = 0; i < NUM_SRKH_REGS; i++)
+		srk_hash[i] = srk_in32(&sfp_regs->srk_hash[i]);
+
+	/*
+	 * Calculate hash of key obtained via offset present in
+	 * ESBC uboot client hdr
+	 */
+	ret = calc_img_key_hash(img);
+	if (ret) {
+		fsl_secblk_handle_error(ret);
+		goto exit;
+	}
+
+	/* Compare hash obtained above with SRK hash present in SFP */
+	if (hash_cmd)
+		ret = memcmp(&hash, &img->img_key_hash, SHA256_BYTES);
+	else
+		ret = memcmp(srk_hash, img->img_key_hash, SHA256_BYTES);
+
+#if defined(CONFIG_FSL_ISBC_KEY_EXT)
+	if (!hash_cmd && check_ie(img))
+		ret = 0;
+#endif
+
+	if (ret != 0) {
+		fsl_secboot_handle_error(ERROR_ESBC_CLIENT_HASH_COMPARE_KEY);
+		goto exit;
+	}
+
+	ret = calc_esbchdr_esbc_hash(img);
+	if (ret) {
+		fsl_secblk_handle_error(ret);
+		goto exit;
+	}
+
+	/* Construct encoded hash EM' wrt PKCSv1.5 */
+	construct_img_encoded_hash_second(img);
+
+	/* Fill prop structure for public key */
+	memset(&prop, 0, sizeof(struct key_prop));
+	key_len = get_key_len(img) / 2;
+	prop.modulus = img->img_key;
+	prop.public_exponent = img->img_key + key_len;
+	prop.num_bits = key_len * 8;
+	prop.exp_len = key_len;
+
+	ret = uclass_get_device(UCLASS_MOD_EXP, 0, &mod_exp_dev);
+	if (ret) {
+		printf("RSA: Can't find Modular Exp implementation\n");
+		return -EINVAL;
+	}
+
+	ret = rsa_mod_exp(mod_exp_dev, img->img_sign, img->hdr.sign_len,
+			  &prop, img->img_encoded_hash);
+	if (ret) {
+		fsl_secblk_handle_error(ret);
+		goto exit;
+	}
+
+	/*
+	 * compare the encoded messages EM' and EM wrt RSA PKCSv1.5
+	 * memcmp returns zero on success
+	 * memcmp returns non-zero on failure
+	 */
+	ret = memcmp(&img->img_encoded_hash_second, &img->img_encoded_hash,
+		img->hdr.sign_len);
+
+	if (ret) {
+		fsl_secboot_handle_error(ERROR_ESBC_CLIENT_HASH_COMPARE_EM);
+		goto exit;
+	}
+
+	printf("esbc_validate command successful\n");
+
+exit:
+	return 0;
+}
diff --git a/board/chipsee/common/ics307_clk.c b/board/chipsee/common/ics307_clk.c
new file mode 100644
index 0000000..e683be3
--- /dev/null
+++ b/board/chipsee/common/ics307_clk.c
@@ -0,0 +1,146 @@
+/*
+ * Copyright 2010-2011 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/io.h>
+
+#include "ics307_clk.h"
+
+#if defined(CONFIG_FSL_NGPIXIS)
+#include "ngpixis.h"
+#define fpga_reg pixis
+#elif defined(CONFIG_FSL_QIXIS)
+#include "qixis.h"
+#define fpga_reg ((struct qixis *)QIXIS_BASE)
+#else
+#include "pixis.h"
+#define fpga_reg pixis
+#endif
+
+/* define for SYS CLK or CLK1Frequency */
+#define TTL		1
+#define CLK2		0
+#define CRYSTAL		0
+#define MAX_VDW		(511 + 8)
+#define MAX_RDW		(127 + 2)
+#define MIN_VDW		(4 + 8)
+#define MIN_RDW		(1 + 2)
+#define NUM_OD_SETTING	8
+/*
+ * These defines cover the industrial temperature range part,
+ * for commercial, change below to 400000 and 55000, respectively
+ */
+#define MAX_VCO		360000
+#define MIN_VCO		60000
+
+/* decode S[0-2] to Output Divider (OD) */
+static u8 ics307_s_to_od[] = {
+	10, 2, 8, 4, 5, 7, 3, 6
+};
+
+/*
+ * Find one solution to generate required frequency for SYSCLK
+ * out_freq: KHz, required frequency to the SYSCLK
+ * the result will be retuned with component RDW, VDW, OD, TTL,
+ * CLK2 and crystal
+ */
+unsigned long ics307_sysclk_calculator(unsigned long out_freq)
+{
+	const unsigned long input_freq = CONFIG_ICS307_REFCLK_HZ;
+	unsigned long vdw, rdw, odp, s_vdw = 0, s_rdw = 0, s_odp = 0, od;
+	unsigned long tmp_out, diff, result = 0;
+	int found = 0;
+
+	for (odp = 0; odp < NUM_OD_SETTING; odp++) {
+		od = ics307_s_to_od[odp];
+		if (od * out_freq < MIN_VCO || od * out_freq > MAX_VCO)
+			continue;
+		for (rdw = MIN_RDW; rdw <= MAX_RDW; rdw++) {
+			/* Calculate the VDW */
+			vdw = out_freq * 1000 * od * rdw / (input_freq * 2);
+			if (vdw > MAX_VDW)
+				vdw = MAX_VDW;
+			if (vdw < MIN_VDW)
+				continue;
+			/* Calculate the temp out frequency */
+			tmp_out = input_freq * 2 * vdw / (rdw * od * 1000);
+			diff = max(out_freq, tmp_out) - min(out_freq, tmp_out);
+			/*
+			 * calculate the percent, the precision is 1/1000
+			 * If greater than 1/1000, continue
+			 * otherwise, we think the solution is we required
+			 */
+			if (diff * 1000 / out_freq > 1)
+				continue;
+			else {
+				s_vdw = vdw;
+				s_rdw = rdw;
+				s_odp = odp;
+				found = 1;
+				break;
+			}
+		}
+	}
+
+	if (found)
+		result = (s_rdw - 2) | (s_vdw - 8) << 7 | s_odp << 16 |
+			CLK2 << 19 | TTL << 21 | CRYSTAL << 22;
+
+	debug("ICS307-02: RDW: %ld, VDW: %ld, OD: %d\n", s_rdw - 2, s_vdw - 8,
+			ics307_s_to_od[s_odp]);
+	return result;
+}
+
+/*
+ * Calculate frequency being generated by ICS307-02 clock chip based upon
+ * the control bytes being programmed into it.
+ */
+static unsigned long ics307_clk_freq(u8 cw0, u8 cw1, u8 cw2)
+{
+	const unsigned long input_freq = CONFIG_ICS307_REFCLK_HZ;
+	unsigned long vdw = ((cw1 << 1) & 0x1FE) + ((cw2 >> 7) & 1);
+	unsigned long rdw = cw2 & 0x7F;
+	unsigned long od = ics307_s_to_od[cw0 & 0x7];
+	unsigned long freq;
+
+	/*
+	 * CLK1 Freq = Input Frequency * 2 * (VDW + 8) / ((RDW + 2) * OD)
+	 *
+	 * cw0:  C1 C0 TTL F1 F0 S2 S1 S0
+	 * cw1:  V8 V7 V6 V5 V4 V3 V2 V1
+	 * cw2:  V0 R6 R5 R4 R3 R2 R1 R0
+	 *
+	 * R6:R0 = Reference Divider Word (RDW)
+	 * V8:V0 = VCO Divider Word (VDW)
+	 * S2:S0 = Output Divider Select (OD)
+	 * F1:F0 = Function of CLK2 Output
+	 * TTL = duty cycle
+	 * C1:C0 = internal load capacitance for cyrstal
+	 *
+	 */
+
+	freq = input_freq * 2 * (vdw + 8) / ((rdw + 2) * od);
+
+	debug("ICS307: CW[0-2]: %02X %02X %02X => %lu Hz\n", cw0, cw1, cw2,
+			freq);
+	return freq;
+}
+
+unsigned long get_board_sys_clk(void)
+{
+	return ics307_clk_freq(
+			in_8(&fpga_reg->sclk[0]),
+			in_8(&fpga_reg->sclk[1]),
+			in_8(&fpga_reg->sclk[2]));
+}
+
+unsigned long get_board_ddr_clk(void)
+{
+	return ics307_clk_freq(
+			in_8(&fpga_reg->dclk[0]),
+			in_8(&fpga_reg->dclk[1]),
+			in_8(&fpga_reg->dclk[2]));
+}
diff --git a/board/chipsee/common/ics307_clk.h b/board/chipsee/common/ics307_clk.h
new file mode 100644
index 0000000..4c8a1c8
--- /dev/null
+++ b/board/chipsee/common/ics307_clk.h
@@ -0,0 +1,16 @@
+/*
+ * Copyright 2010-2011 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+#ifndef __ICS_CLK_H_
+#define __ICS_CLK_H_	1
+
+#ifndef __ASSEMBLY__
+
+extern unsigned long get_board_sys_clk(void);
+extern unsigned long get_board_ddr_clk(void);
+extern unsigned long ics307_sysclk_calculator(unsigned long out_freq);
+#endif
+
+#endif	/* __ICS_CLK_H_ */
diff --git a/board/chipsee/common/idt8t49n222a_serdes_clk.c b/board/chipsee/common/idt8t49n222a_serdes_clk.c
new file mode 100644
index 0000000..d347162
--- /dev/null
+++ b/board/chipsee/common/idt8t49n222a_serdes_clk.c
@@ -0,0 +1,207 @@
+/*
+ * Copyright 2013 Freescale Semiconductor, Inc.
+ * Author: Shaveta Leekha <shaveta@freescale.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include "idt8t49n222a_serdes_clk.h"
+
+#define DEVICE_ID_REG		0x00
+
+static int check_pll_status(u8 idt_addr)
+{
+	u8 val = 0;
+	int ret;
+
+	ret = i2c_read(idt_addr, 0x17, 1, &val, 1);
+	if (ret < 0) {
+		printf("IDT:0x%x could not read status register from device.\n",
+			idt_addr);
+		return ret;
+	}
+
+	if (val & 0x04) {
+		debug("idt8t49n222a PLL is LOCKED: %x\n", val);
+	} else {
+		printf("idt8t49n222a PLL is not LOCKED: %x\n", val);
+		return -1;
+	}
+
+	return 0;
+}
+
+int set_serdes_refclk(u8 idt_addr, u8 serdes_num,
+			enum serdes_refclk refclk1,
+			enum serdes_refclk refclk2, u8 feedback)
+{
+	u8 dev_id = 0;
+	int i, ret;
+
+	debug("IDT:Configuring idt8t49n222a device at I2C address: 0x%2x\n",
+		idt_addr);
+
+	ret = i2c_read(idt_addr, DEVICE_ID_REG, 1, &dev_id, 1);
+	if (ret < 0) {
+		debug("IDT:0x%x could not read DEV_ID from device.\n",
+			idt_addr);
+		return ret;
+	}
+
+	if ((dev_id != 0x00) && (dev_id != 0x24) && (dev_id != 0x2a)) {
+		debug("IDT: device at address 0x%x is not idt8t49n222a.\n",
+			idt_addr);
+	}
+
+	if (serdes_num != 1 && serdes_num != 2) {
+		debug("serdes_num should be 1 for SerDes1 and"
+			" 2 for SerDes2.\n");
+		return -1;
+	}
+
+	if ((refclk1 == SERDES_REFCLK_122_88 && refclk2 != SERDES_REFCLK_122_88)
+		|| (refclk1 != SERDES_REFCLK_122_88
+			&& refclk2 == SERDES_REFCLK_122_88)) {
+		debug("Only one refclk at 122.88MHz is not supported."
+			" Please set both refclk1 & refclk2 to 122.88MHz"
+			" or both not to 122.88MHz.\n");
+		return -1;
+	}
+
+	if (refclk1 != SERDES_REFCLK_100 && refclk1 != SERDES_REFCLK_122_88
+					&& refclk1 != SERDES_REFCLK_125
+					&& refclk1 != SERDES_REFCLK_156_25) {
+		debug("refclk1 should be 100MHZ, 122.88MHz, 125MHz"
+			" or 156.25MHz.\n");
+		return -1;
+	}
+
+	if (refclk2 != SERDES_REFCLK_100 && refclk2 != SERDES_REFCLK_122_88
+					&& refclk2 != SERDES_REFCLK_125
+					&& refclk2 != SERDES_REFCLK_156_25) {
+		debug("refclk2 should be 100MHZ, 122.88MHz, 125MHz"
+			" or 156.25MHz.\n");
+		return -1;
+	}
+
+	if (feedback != 0 && feedback != 1) {
+		debug("valid values for feedback are 0(default) or 1.\n");
+		return -1;
+	}
+
+	/* Configuring IDT for output refclks as
+	 * Refclk1 = 122.88MHz  Refclk2 = 122.88MHz
+	 */
+	if (refclk1 == SERDES_REFCLK_122_88 &&
+			refclk2 == SERDES_REFCLK_122_88) {
+		printf("Setting refclk1:122.88 and refclk2:122.88\n");
+		for (i = 0; i < NUM_IDT_REGS; i++)
+			i2c_reg_write(idt_addr, idt_conf_122_88[i][0],
+						idt_conf_122_88[i][1]);
+
+		if (feedback) {
+			for (i = 0; i < NUM_IDT_REGS_FEEDBACK; i++)
+				i2c_reg_write(idt_addr,
+					idt_conf_122_88_feedback[i][0],
+					idt_conf_122_88_feedback[i][1]);
+		}
+	}
+
+	if (refclk1 != SERDES_REFCLK_122_88 &&
+			refclk2 != SERDES_REFCLK_122_88) {
+		for (i = 0; i < NUM_IDT_REGS; i++)
+			i2c_reg_write(idt_addr, idt_conf_not_122_88[i][0],
+						idt_conf_not_122_88[i][1]);
+	}
+
+	/* Configuring IDT for output refclks as
+	 * Refclk1 = 100MHz  Refclk2 = 125MHz
+	 */
+	if (refclk1 == SERDES_REFCLK_100 && refclk2 == SERDES_REFCLK_125) {
+		printf("Setting refclk1:100 and refclk2:125\n");
+		i2c_reg_write(idt_addr, 0x11, 0x10);
+	}
+
+	/* Configuring IDT for output refclks as
+	 * Refclk1 = 125MHz  Refclk2 = 125MHz
+	 */
+	if (refclk1 == SERDES_REFCLK_125 && refclk2 == SERDES_REFCLK_125) {
+		printf("Setting refclk1:125 and refclk2:125\n");
+		i2c_reg_write(idt_addr, 0x10, 0x10);
+		i2c_reg_write(idt_addr, 0x11, 0x10);
+	}
+
+	/* Configuring IDT for output refclks as
+	 * Refclk1 = 125MHz  Refclk2 = 100MHz
+	 */
+	if (refclk1 == SERDES_REFCLK_125 && refclk2 == SERDES_REFCLK_100) {
+		printf("Setting refclk1:125 and refclk2:100\n");
+		i2c_reg_write(idt_addr, 0x10, 0x10);
+	}
+
+	/* Configuring IDT for output refclks as
+	 * Refclk1 = 156.25MHz  Refclk2 = 156.25MHz
+	 */
+	if (refclk1 == SERDES_REFCLK_156_25 &&
+			refclk2 == SERDES_REFCLK_156_25) {
+		printf("Setting refclk1:156.25 and refclk2:156.25\n");
+		for (i = 0; i < NUM_IDT_REGS_156_25; i++)
+			i2c_reg_write(idt_addr, idt_conf_156_25[i][0],
+						idt_conf_156_25[i][1]);
+	}
+
+	/* Configuring IDT for output refclks as
+	 * Refclk1 = 100MHz  Refclk2 = 156.25MHz
+	 */
+	if (refclk1 == SERDES_REFCLK_100 &&
+			refclk2 == SERDES_REFCLK_156_25) {
+		printf("Setting refclk1:100 and refclk2:156.25\n");
+		for (i = 0; i < NUM_IDT_REGS_156_25; i++)
+			i2c_reg_write(idt_addr, idt_conf_100_156_25[i][0],
+						idt_conf_100_156_25[i][1]);
+	}
+
+	/* Configuring IDT for output refclks as
+	 * Refclk1 = 125MHz  Refclk2 = 156.25MHz
+	 */
+	if (refclk1 == SERDES_REFCLK_125 &&
+			refclk2 == SERDES_REFCLK_156_25) {
+		printf("Setting refclk1:125 and refclk2:156.25\n");
+		for (i = 0; i < NUM_IDT_REGS_156_25; i++)
+			i2c_reg_write(idt_addr, idt_conf_125_156_25[i][0],
+						idt_conf_125_156_25[i][1]);
+	}
+
+	/* Configuring IDT for output refclks as
+	 * Refclk1 = 156.25MHz  Refclk2 = 100MHz
+	 */
+	if (refclk1 == SERDES_REFCLK_156_25 &&
+			refclk2 == SERDES_REFCLK_100) {
+		printf("Setting refclk1:156.25 and refclk2:100\n");
+		for (i = 0; i < NUM_IDT_REGS_156_25; i++)
+			i2c_reg_write(idt_addr, idt_conf_156_25_100[i][0],
+						idt_conf_156_25_100[i][1]);
+	}
+
+	/* Configuring IDT for output refclks as
+	 * Refclk1 = 156.25MHz  Refclk2 = 125MHz
+	 */
+	if (refclk1 == SERDES_REFCLK_156_25 &&
+			refclk2 == SERDES_REFCLK_125) {
+		printf("Setting refclk1:156.25 and refclk2:125\n");
+		for (i = 0; i < NUM_IDT_REGS_156_25; i++)
+			i2c_reg_write(idt_addr, idt_conf_156_25_125[i][0],
+						idt_conf_156_25_125[i][1]);
+	}
+
+	/* waiting for maximum of 1 second if PLL doesn'r get locked
+	 * initially. then check the status again.
+	 */
+	if (check_pll_status(idt_addr)) {
+		mdelay(1000);
+		if (check_pll_status(idt_addr))
+			return -1;
+	}
+
+	return 0;
+}
diff --git a/board/chipsee/common/idt8t49n222a_serdes_clk.h b/board/chipsee/common/idt8t49n222a_serdes_clk.h
new file mode 100644
index 0000000..787bdd9
--- /dev/null
+++ b/board/chipsee/common/idt8t49n222a_serdes_clk.h
@@ -0,0 +1,107 @@
+/*
+ * Copyright 2013 Freescale Semiconductor, Inc.
+ * Author: Shaveta Leekha <shaveta@freescale.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __IDT8T49N222A_SERDES_CLK_H_
+#define __IDT8T49N222A_SERDES_CLK_H_	1
+
+#include <common.h>
+#include <i2c.h>
+#include "qixis.h"
+#include "../b4860qds/b4860qds_qixis.h"
+#include <errno.h>
+
+#define NUM_IDT_REGS		23
+#define NUM_IDT_REGS_FEEDBACK	12
+#define NUM_IDT_REGS_156_25	11
+
+/* CLK */
+enum serdes_refclk {
+	SERDES_REFCLK_100,	/* refclk 100Mhz */
+	SERDES_REFCLK_122_88,	/* refclk 122.88Mhz */
+	SERDES_REFCLK_125,	/* refclk 125Mhz */
+	SERDES_REFCLK_156_25,	/* refclk 156.25Mhz */
+	SERDES_REFCLK_NONE = -1,
+};
+
+/* configuration values for IDT registers for Output Refclks:
+ * Refclk1 = 122.88MHz Refclk2 = 122.88MHz
+ */
+static const u8 idt_conf_122_88[23][2] = { {0x00, 0x3C}, {0x01, 0x00},
+		{0x02, 0x9F}, {0x03, 0x00}, {0x04, 0x0B}, {0x05, 0x00},
+		{0x06, 0x00}, {0x07, 0x00}, {0x08, 0x7D}, {0x09, 0x00},
+		{0x0A, 0x08}, {0x0B, 0x00}, {0x0C, 0xDC}, {0x0D, 0x00},
+		{0x0E, 0x00}, {0x0F, 0x00}, {0x10, 0x12}, {0x11, 0x12},
+		{0x12, 0xB9}, {0x13, 0xBC}, {0x14, 0x40}, {0x15, 0x08},
+		{0x16, 0xA0} };
+
+
+/* configuration values for IDT registers for Output Refclks:
+ * Refclk1 not equal to 122.88MHz Refclk2 not equal to 122.88MHz
+ */
+static const u8 idt_conf_not_122_88[23][2] = { {0x00, 0x00}, {0x01, 0x00},
+		{0x02, 0x00}, {0x03, 0x00}, {0x04, 0x0A}, {0x05, 0x00},
+		{0x06, 0x00}, {0x07, 0x00}, {0x08, 0x7D}, {0x09, 0x00},
+		{0x0A, 0x08}, {0x0B, 0x00}, {0x0C, 0xDC}, {0x0D, 0x00},
+		{0x0E, 0x00}, {0x0F, 0x00}, {0x10, 0x14}, {0x11, 0x14},
+		{0x12, 0x35}, {0x13, 0xBC}, {0x14, 0x40}, {0x15, 0x08},
+		{0x16, 0xA0} };
+
+/* Reconfiguration values for some of IDT registers for
+ * Output Refclks:
+ * Refclk1 = 122.88MHz Refclk2 = 122.88MHz
+ * and with feedback as 1
+ */
+static const u8 idt_conf_122_88_feedback[12][2] = { {0x00, 0x50}, {0x02, 0xD7},
+		{0x04, 0x89}, {0x06, 0xC3}, {0x08, 0xC0}, {0x0A, 0x07},
+		{0x0C, 0x80}, {0x10, 0x10}, {0x11, 0x10}, {0x12, 0x1B},
+		{0x14, 0x00}, {0x15, 0xE8} };
+
+/* configuration values for IDT registers for Output Refclks:
+ * Refclk1 : 156.25MHz Refclk2 : 156.25MHz
+ */
+static const u8 idt_conf_156_25[11][2] = { {0x04, 0x19}, {0x06, 0x03},
+		{0x08, 0xC0}, {0x0A, 0x07}, {0x0C, 0xA1}, {0x0E, 0x20},
+		{0x10, 0x10}, {0x11, 0x10}, {0x12, 0xB5}, {0x13, 0x3C},
+		{0x15, 0xE8} };
+
+/* configuration values for IDT registers for Output Refclks:
+ * Refclk1 : 100MHz Refclk2 : 156.25MHz
+ */
+static const u8 idt_conf_100_156_25[11][2] = { {0x04, 0x19}, {0x06, 0x03},
+		{0x08, 0xC0}, {0x0A, 0x07}, {0x0C, 0xA1}, {0x0E, 0x20},
+		{0x10, 0x19}, {0x11, 0x10}, {0x12, 0xB5}, {0x13, 0x3C},
+		{0x15, 0xE8} };
+
+/* configuration values for IDT registers for Output Refclks:
+ * Refclk1 : 125MHz Refclk2 : 156.25MHz
+ */
+static const u8 idt_conf_125_156_25[11][2] = { {0x04, 0x19}, {0x06, 0x03},
+		{0x08, 0xC0}, {0x0A, 0x07}, {0x0C, 0xA1}, {0x0E, 0x20},
+		{0x10, 0x14}, {0x11, 0x10}, {0x12, 0xB5}, {0x13, 0x3C},
+		{0x15, 0xE8} };
+
+/* configuration values for IDT registers for Output Refclks:
+ * Refclk1 : 156.25MHz Refclk2 : 100MHz
+ */
+static const u8 idt_conf_156_25_100[11][2] = { {0x04, 0x19}, {0x06, 0x03},
+		{0x08, 0xC0}, {0x0A, 0x07}, {0x0C, 0xA1}, {0x0E, 0x20},
+		{0x10, 0x10}, {0x11, 0x19}, {0x12, 0xB5}, {0x13, 0x3C},
+		{0x15, 0xE8} };
+
+/* configuration values for IDT registers for Output Refclks:
+ * Refclk1 : 156.25MHz Refclk2 : 125MHz
+ */
+static const u8 idt_conf_156_25_125[11][2] = { {0x04, 0x19}, {0x06, 0x03},
+		{0x08, 0xC0}, {0x0A, 0x07}, {0x0C, 0xA1}, {0x0E, 0x20},
+		{0x10, 0x10}, {0x11, 0x14}, {0x12, 0xB5}, {0x13, 0x3C},
+		{0x15, 0xE8} };
+
+int set_serdes_refclk(u8 idt_addr, u8 serdes_num,
+			enum serdes_refclk refclk1,
+			enum serdes_refclk refclk2, u8 feedback);
+
+#endif	/*__IDT8T49N222A_SERDES_CLK_H_ */
diff --git a/board/chipsee/common/ls102xa_stream_id.c b/board/chipsee/common/ls102xa_stream_id.c
new file mode 100644
index 0000000..f434269
--- /dev/null
+++ b/board/chipsee/common/ls102xa_stream_id.c
@@ -0,0 +1,33 @@
+/*
+ * Copyright 2014 Freescale Semiconductor
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/arch/ls102xa_stream_id.h>
+
+void ls102xa_config_smmu_stream_id(struct smmu_stream_id *id, uint32_t num)
+{
+	uint32_t *scfg = (uint32_t *)CONFIG_SYS_FSL_SCFG_ADDR;
+	int i;
+
+	for (i = 0; i < num; i++)
+		out_be32(scfg + id[i].offset, id[i].stream_id);
+}
+
+void ls1021x_config_caam_stream_id(struct liodn_id_table *tbl, int size)
+{
+	int i;
+	u32 liodn;
+
+	for (i = 0; i < size; i++) {
+		if (tbl[i].num_ids == 2)
+			liodn = (tbl[i].id[0] << 16) | tbl[i].id[1];
+		else
+			liodn = tbl[i].id[0];
+
+		out_le32((uint32_t *)(tbl[i].reg_offset), liodn);
+	}
+}
diff --git a/board/chipsee/common/mpc85xx_sleep.c b/board/chipsee/common/mpc85xx_sleep.c
new file mode 100644
index 0000000..f924e7f
--- /dev/null
+++ b/board/chipsee/common/mpc85xx_sleep.c
@@ -0,0 +1,88 @@
+/*
+ * Copyright 2014 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/immap_85xx.h>
+#include "sleep.h"
+
+DECLARE_GLOBAL_DATA_PTR;
+
+void __weak board_mem_sleep_setup(void)
+{
+}
+
+void __weak board_sleep_prepare(void)
+{
+}
+
+bool is_warm_boot(void)
+{
+	struct ccsr_gur __iomem *gur = (void *)CONFIG_SYS_MPC85xx_GUTS_ADDR;
+
+	if (in_be32(&gur->scrtsr[0]) & DCFG_CCSR_CRSTSR_WDRFR)
+		return 1;
+
+	return 0;
+}
+
+void fsl_dp_disable_console(void)
+{
+	gd->flags |= GD_FLG_SILENT | GD_FLG_DISABLE_CONSOLE;
+}
+
+/*
+ * When wakeup from deep sleep, the first 128 bytes space
+ * will be used to do DDR training which corrupts the data
+ * in there. This function will restore them.
+ */
+static void dp_ddr_restore(void)
+{
+	volatile u64 *src, *dst;
+	int i;
+	struct ccsr_scfg __iomem *scfg = (void *)CONFIG_SYS_MPC85xx_SCFG;
+
+	/* get the address of ddr date from SPARECR3 */
+	src = (u64 *)in_be32(&scfg->sparecr[2]);
+	dst = (u64 *)CONFIG_SYS_SDRAM_BASE;
+
+	for (i = 0; i < DDR_BUFF_LEN / 8; i++)
+		*dst++ = *src++;
+
+	flush_dcache();
+}
+
+static void dp_resume_prepare(void)
+{
+	dp_ddr_restore();
+
+	board_sleep_prepare();
+
+	l2cache_init();
+#if defined(CONFIG_RAMBOOT_PBL)
+	disable_cpc_sram();
+#endif
+	enable_cpc();
+}
+
+int fsl_dp_resume(void)
+{
+	u32 start_addr;
+	void (*kernel_resume)(void);
+	struct ccsr_scfg __iomem *scfg = (void *)CONFIG_SYS_MPC85xx_SCFG;
+
+	if (!is_warm_boot())
+		return 0;
+
+	dp_resume_prepare();
+
+	/* Get the entry address and jump to kernel */
+	start_addr = in_be32(&scfg->sparecr[1]);
+	debug("Entry address is 0x%08x\n", start_addr);
+	kernel_resume = (void (*)(void))start_addr;
+	kernel_resume();
+
+	return 0;
+}
diff --git a/board/chipsee/common/ngpixis.c b/board/chipsee/common/ngpixis.c
new file mode 100644
index 0000000..0cb076a
--- /dev/null
+++ b/board/chipsee/common/ngpixis.c
@@ -0,0 +1,250 @@
+/**
+ * Copyright 2010-2011 Freescale Semiconductor
+ * Author: Timur Tabi <timur@freescale.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * This file provides support for the ngPIXIS, a board-specific FPGA used on
+ * some Freescale reference boards.
+ *
+ * A "switch" is black rectangular block on the motherboard.  It contains
+ * eight "bits".  The ngPIXIS has a set of memory-mapped registers (SWx) that
+ * shadow the actual physical switches.  There is also another set of
+ * registers (ENx) that tell the ngPIXIS which bits of SWx should actually be
+ * used to override the values of the bits in the physical switches.
+ *
+ * The following macros need to be defined:
+ *
+ * PIXIS_BASE - The virtual address of the base of the PIXIS register map
+ *
+ * PIXIS_LBMAP_SWITCH - The switch number (i.e. the "x" in "SWx"). This value
+ *    is used in the PIXIS_SW() macro to determine which offset in
+ *    the PIXIS register map corresponds to the physical switch that controls
+ *    the boot bank.
+ *
+ * PIXIS_LBMAP_MASK - A bit mask the defines which bits in SWx to use.
+ *
+ * PIXIS_LBMAP_SHIFT - The shift value that corresponds to PIXIS_LBMAP_MASK.
+ *
+ * PIXIS_LBMAP_ALTBANK - The value to program into SWx to tell the ngPIXIS to
+ *    boot from the alternate bank.
+ */
+
+#include <common.h>
+#include <command.h>
+#include <asm/io.h>
+
+#include "ngpixis.h"
+
+static u8 __pixis_read(unsigned int reg)
+{
+	void *p = (void *)PIXIS_BASE;
+
+	return in_8(p + reg);
+}
+u8 pixis_read(unsigned int reg) __attribute__((weak, alias("__pixis_read")));
+
+static void __pixis_write(unsigned int reg, u8 value)
+{
+	void *p = (void *)PIXIS_BASE;
+
+	out_8(p + reg, value);
+}
+void pixis_write(unsigned int reg, u8 value)
+	__attribute__((weak, alias("__pixis_write")));
+
+/*
+ * Reset the board. This ignores the ENx registers.
+ */
+void __pixis_reset(void)
+{
+	PIXIS_WRITE(rst, 0);
+
+	while (1);
+}
+void pixis_reset(void) __attribute__((weak, alias("__pixis_reset")));
+
+/*
+ * Reset the board.  Like pixis_reset(), but it honors the ENx registers.
+ */
+void __pixis_bank_reset(void)
+{
+	PIXIS_WRITE(vctl, 0);
+	PIXIS_WRITE(vctl, 1);
+
+	while (1);
+}
+void pixis_bank_reset(void) __attribute__((weak, alias("__pixis_bank_reset")));
+
+/**
+ * Set the boot bank to the power-on default bank
+ */
+void __clear_altbank(void)
+{
+	u8 reg;
+
+	/* Tell the ngPIXIS to use this the bits in the physical switch for the
+	 * boot bank value, instead of the SWx register.  We need to be careful
+	 * only to set the bits in SWx that correspond to the boot bank.
+	 */
+	reg = PIXIS_READ(s[PIXIS_LBMAP_SWITCH - 1].en);
+	reg &= ~PIXIS_LBMAP_MASK;
+	PIXIS_WRITE(s[PIXIS_LBMAP_SWITCH - 1].en, reg);
+}
+void clear_altbank(void) __attribute__((weak, alias("__clear_altbank")));
+
+/**
+ * Set the boot bank to the alternate bank
+ */
+void __set_altbank(void)
+{
+	u8 reg;
+
+	/* Program the alternate bank number into the SWx register.
+	 */
+	reg = PIXIS_READ(s[PIXIS_LBMAP_SWITCH - 1].sw);
+	reg = (reg & ~PIXIS_LBMAP_MASK) | PIXIS_LBMAP_ALTBANK;
+	PIXIS_WRITE(s[PIXIS_LBMAP_SWITCH - 1].sw, reg);
+
+	/* Tell the ngPIXIS to use this the bits in the SWx register for the
+	 * boot bank value, instead of the physical switch.  We need to be
+	 * careful only to set the bits in SWx that correspond to the boot bank.
+	 */
+	reg = PIXIS_READ(s[PIXIS_LBMAP_SWITCH - 1].en);
+	reg |= PIXIS_LBMAP_MASK;
+	PIXIS_WRITE(s[PIXIS_LBMAP_SWITCH - 1].en, reg);
+}
+void set_altbank(void) __attribute__((weak, alias("__set_altbank")));
+
+#ifdef DEBUG
+static void pixis_dump_regs(void)
+{
+	unsigned int i;
+
+	printf("id=%02x\n", PIXIS_READ(id));
+	printf("arch=%02x\n", PIXIS_READ(arch));
+	printf("scver=%02x\n", PIXIS_READ(scver));
+	printf("csr=%02x\n", PIXIS_READ(csr));
+	printf("rst=%02x\n", PIXIS_READ(rst));
+	printf("aux=%02x\n", PIXIS_READ(aux));
+	printf("spd=%02x\n", PIXIS_READ(spd));
+	printf("brdcfg0=%02x\n", PIXIS_READ(brdcfg0));
+	printf("brdcfg1=%02x\n", PIXIS_READ(brdcfg1));
+	printf("addr=%02x\n", PIXIS_READ(addr));
+	printf("data=%02x\n", PIXIS_READ(data));
+	printf("led=%02x\n", PIXIS_READ(led));
+	printf("vctl=%02x\n", PIXIS_READ(vctl));
+	printf("vstat=%02x\n", PIXIS_READ(vstat));
+	printf("vcfgen0=%02x\n", PIXIS_READ(vcfgen0));
+	printf("ocmcsr=%02x\n", PIXIS_READ(ocmcsr));
+	printf("ocmmsg=%02x\n", PIXIS_READ(ocmmsg));
+	printf("gmdbg=%02x\n", PIXIS_READ(gmdbg));
+	printf("sclk=%02x%02x%02x\n",
+	       PIXIS_READ(sclk[0]), PIXIS_READ(sclk[1]), PIXIS_READ(sclk[2]));
+	printf("dclk=%02x%02x%02x\n",
+	       PIXIS_READ(dclk[0]), PIXIS_READ(dclk[1]), PIXIS_READ(dclk[2]));
+	printf("watch=%02x\n", PIXIS_READ(watch));
+
+	for (i = 0; i < 8; i++) {
+		printf("SW%u=%02x/%02x ", i + 1,
+			PIXIS_READ(s[i].sw), PIXIS_READ(s[i].en));
+	}
+	putc('\n');
+}
+#endif
+
+void pixis_sysclk_set(unsigned long sysclk)
+{
+	unsigned long freq_word;
+	u8 sclk0, sclk1, sclk2;
+
+	freq_word = ics307_sysclk_calculator(sysclk);
+	sclk2 = freq_word & 0xff;
+	sclk1 = (freq_word >> 8) & 0xff;
+	sclk0 = (freq_word >> 16) & 0xff;
+
+	/* set SYSCLK enable bit */
+	PIXIS_WRITE(vcfgen0, 0x01);
+
+	/* SYSCLK to required frequency */
+	PIXIS_WRITE(sclk[0], sclk0);
+	PIXIS_WRITE(sclk[1], sclk1);
+	PIXIS_WRITE(sclk[2], sclk2);
+}
+
+int pixis_reset_cmd(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
+{
+	unsigned int i;
+	unsigned long sysclk;
+	char *p_altbank = NULL;
+#ifdef DEBUG
+	char *p_dump = NULL;
+#endif
+	char *unknown_param = NULL;
+
+	/* No args is a simple reset request.
+	 */
+	if (argc <= 1)
+		pixis_reset();
+
+	for (i = 1; i < argc; i++) {
+		if (strcmp(argv[i], "altbank") == 0) {
+			p_altbank = argv[i];
+			continue;
+		}
+
+#ifdef DEBUG
+		if (strcmp(argv[i], "dump") == 0) {
+			p_dump = argv[i];
+			continue;
+		}
+#endif
+		if (strcmp(argv[i], "sysclk") == 0) {
+			sysclk = simple_strtoul(argv[i + 1], NULL, 0);
+			i += 1;
+			pixis_sysclk_set(sysclk);
+			continue;
+		}
+
+		unknown_param = argv[i];
+	}
+
+	if (unknown_param) {
+		printf("Invalid option: %s\n", unknown_param);
+		return 1;
+	}
+
+#ifdef DEBUG
+	if (p_dump) {
+		pixis_dump_regs();
+
+		/* 'dump' ignores other commands */
+		return 0;
+	}
+#endif
+
+	if (p_altbank)
+		set_altbank();
+	else
+		clear_altbank();
+
+	pixis_bank_reset();
+
+	/* Shouldn't be reached. */
+	return 0;
+}
+
+#ifdef CONFIG_SYS_LONGHELP
+static char pixis_help_text[] =
+	"- hard reset to default bank\n"
+	"pixis_reset altbank - reset to alternate bank\n"
+#ifdef DEBUG
+	"pixis_reset dump - display the PIXIS registers\n"
+#endif
+	"pixis_reset sysclk <SYSCLK_freq> - reset with SYSCLK frequency(KHz)\n";
+#endif
+
+U_BOOT_CMD(
+	pixis_reset, CONFIG_SYS_MAXARGS, 1, pixis_reset_cmd,
+	"Reset the board using the FPGA sequencer", pixis_help_text
+	);
diff --git a/board/chipsee/common/ngpixis.h b/board/chipsee/common/ngpixis.h
new file mode 100644
index 0000000..364e749
--- /dev/null
+++ b/board/chipsee/common/ngpixis.h
@@ -0,0 +1,61 @@
+/**
+ * Copyright 2010-2011 Freescale Semiconductor
+ * Author: Timur Tabi <timur@freescale.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * This file provides support for the ngPIXIS, a board-specific FPGA used on
+ * some Freescale reference boards.
+ */
+
+/* ngPIXIS register set. Hopefully, this won't change too much over time.
+ * Feel free to add board-specific #ifdefs where necessary.
+ */
+typedef struct ngpixis {
+	u8 id;
+	u8 arch;
+	u8 scver;
+	u8 csr;
+	u8 rst;
+	u8 serclk;
+	u8 aux;
+	u8 spd;
+	u8 brdcfg0;
+	u8 brdcfg1;	/* On some boards, this register is called 'dma' */
+	u8 addr;
+	u8 brdcfg2;
+	u8 gpiodir;
+	u8 data;
+	u8 led;
+	u8 tag;
+	u8 vctl;
+	u8 vstat;
+	u8 vcfgen0;
+	u8 res4;
+	u8 ocmcsr;
+	u8 ocmmsg;
+	u8 gmdbg;
+	u8 res5[2];
+	u8 sclk[3];
+	u8 dclk[3];
+	u8 watch;
+	struct {
+		u8 sw;
+		u8 en;
+	} s[9];		/* s[0]..s[7] is SW1..SW8, and s[8] is SW11 */
+} __attribute__ ((packed)) ngpixis_t;
+
+/* Pointer to the PIXIS register set */
+#define pixis ((ngpixis_t *)PIXIS_BASE)
+
+/* The PIXIS SW register that corresponds to board switch X, where x >= 1 */
+#define PIXIS_SW(x)		(pixis->s[(x) - 1].sw)
+
+/* The PIXIS EN register that corresponds to board switch X, where x >= 1 */
+#define PIXIS_EN(x)		(pixis->s[(x) - 1].en)
+
+u8 pixis_read(unsigned int reg);
+void pixis_write(unsigned int reg, u8 value);
+
+#define PIXIS_READ(reg) pixis_read(offsetof(ngpixis_t, reg))
+#define PIXIS_WRITE(reg, value) pixis_write(offsetof(ngpixis_t, reg), value)
diff --git a/board/chipsee/common/ns_access.c b/board/chipsee/common/ns_access.c
new file mode 100644
index 0000000..d7de982
--- /dev/null
+++ b/board/chipsee/common/ns_access.c
@@ -0,0 +1,30 @@
+/*
+ * Copyright 2014 Freescale Semiconductor
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/arch/ns_access.h>
+
+void enable_devices_ns_access(struct csu_ns_dev *ns_dev, uint32_t num)
+{
+	u32 *base = (u32 *)CONFIG_SYS_FSL_CSU_ADDR;
+	u32 *reg;
+	uint32_t val;
+	int i;
+
+	for (i = 0; i < num; i++) {
+		reg = base + ns_dev[i].ind / 2;
+		val = in_be32(reg);
+		if (ns_dev[i].ind % 2 == 0) {
+			val &= 0x0000ffff;
+			val |= ns_dev[i].val << 16;
+		} else {
+			val &= 0xffff0000;
+			val |= ns_dev[i].val;
+		}
+		out_be32(reg, val);
+	}
+}
diff --git a/board/chipsee/common/p_corenet/Makefile b/board/chipsee/common/p_corenet/Makefile
new file mode 100644
index 0000000..1f399d2
--- /dev/null
+++ b/board/chipsee/common/p_corenet/Makefile
@@ -0,0 +1,10 @@
+#
+# (C) Copyright 2002-2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+
+obj-y			+= law.o
+obj-$(CONFIG_PCI)	+= pci.o
+obj-y			+= tlb.o
diff --git a/board/chipsee/common/p_corenet/law.c b/board/chipsee/common/p_corenet/law.c
new file mode 100644
index 0000000..53af26a
--- /dev/null
+++ b/board/chipsee/common/p_corenet/law.c
@@ -0,0 +1,37 @@
+/*
+ * Copyright 2008-2011 Freescale Semiconductor, Inc.
+ *
+ * (C) Copyright 2000
+ * Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/fsl_law.h>
+#include <asm/mmu.h>
+
+struct law_entry law_table[] = {
+	SET_LAW(CONFIG_SYS_FLASH_BASE_PHYS, LAW_SIZE_256M, LAW_TRGT_IF_LBC),
+#ifdef CONFIG_SYS_BMAN_MEM_PHYS
+	SET_LAW(CONFIG_SYS_BMAN_MEM_PHYS, LAW_SIZE_2M, LAW_TRGT_IF_BMAN),
+#endif
+#ifdef CONFIG_SYS_QMAN_MEM_PHYS
+	SET_LAW(CONFIG_SYS_QMAN_MEM_PHYS, LAW_SIZE_2M, LAW_TRGT_IF_QMAN),
+#endif
+#ifdef PIXIS_BASE_PHYS
+	SET_LAW(PIXIS_BASE_PHYS, LAW_SIZE_4K, LAW_TRGT_IF_LBC),
+#endif
+#ifdef CPLD_BASE_PHYS
+	SET_LAW(CPLD_BASE_PHYS, LAW_SIZE_4K, LAW_TRGT_IF_LBC),
+#endif
+#ifdef CONFIG_SYS_DCSRBAR_PHYS
+	/* Limit DCSR to 32M to access NPC Trace Buffer */
+	SET_LAW(CONFIG_SYS_DCSRBAR_PHYS, LAW_SIZE_32M, LAW_TRGT_IF_DCSR),
+#endif
+#ifdef CONFIG_SYS_NAND_BASE_PHYS
+	SET_LAW(CONFIG_SYS_NAND_BASE_PHYS, LAW_SIZE_1M, LAW_TRGT_IF_LBC),
+#endif
+};
+
+int num_law_entries = ARRAY_SIZE(law_table);
diff --git a/board/chipsee/common/p_corenet/pci.c b/board/chipsee/common/p_corenet/pci.c
new file mode 100644
index 0000000..9f4f808
--- /dev/null
+++ b/board/chipsee/common/p_corenet/pci.c
@@ -0,0 +1,23 @@
+/*
+ * Copyright 2007-2011 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <command.h>
+#include <pci.h>
+#include <asm/fsl_pci.h>
+#include <libfdt.h>
+#include <fdt_support.h>
+#include <asm/fsl_serdes.h>
+
+void pci_init_board(void)
+{
+	fsl_pcie_init_board(0);
+}
+
+void pci_of_setup(void *blob, bd_t *bd)
+{
+	FT_FSL_PCI_SETUP;
+}
diff --git a/board/chipsee/common/p_corenet/tlb.c b/board/chipsee/common/p_corenet/tlb.c
new file mode 100644
index 0000000..8148e46
--- /dev/null
+++ b/board/chipsee/common/p_corenet/tlb.c
@@ -0,0 +1,146 @@
+/*
+ * Copyright 2008-2011 Freescale Semiconductor, Inc.
+ *
+ * (C) Copyright 2000
+ * Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/mmu.h>
+
+struct fsl_e_tlb_entry tlb_table[] = {
+	/* TLB 0 - for temp stack in cache */
+	SET_TLB_ENTRY(0, CONFIG_SYS_INIT_RAM_ADDR,
+		      CONFIG_SYS_INIT_RAM_ADDR_PHYS,
+		      MAS3_SW|MAS3_SR, 0,
+		      0, 0, BOOKE_PAGESZ_4K, 0),
+	SET_TLB_ENTRY(0, CONFIG_SYS_INIT_RAM_ADDR + 4 * 1024,
+		      CONFIG_SYS_INIT_RAM_ADDR_PHYS + 4 * 1024,
+		      MAS3_SW|MAS3_SR, 0,
+		      0, 0, BOOKE_PAGESZ_4K, 0),
+	SET_TLB_ENTRY(0, CONFIG_SYS_INIT_RAM_ADDR + 8 * 1024,
+		      CONFIG_SYS_INIT_RAM_ADDR_PHYS + 8 * 1024,
+		      MAS3_SW|MAS3_SR, 0,
+		      0, 0, BOOKE_PAGESZ_4K, 0),
+	SET_TLB_ENTRY(0, CONFIG_SYS_INIT_RAM_ADDR + 12 * 1024,
+		      CONFIG_SYS_INIT_RAM_ADDR_PHYS + 12 * 1024,
+		      MAS3_SW|MAS3_SR, 0,
+		      0, 0, BOOKE_PAGESZ_4K, 0),
+#ifdef CPLD_BASE
+	SET_TLB_ENTRY(0, CPLD_BASE, CPLD_BASE_PHYS,
+		      MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 0, BOOKE_PAGESZ_4K, 0),
+#endif
+
+#ifdef PIXIS_BASE
+	SET_TLB_ENTRY(0, PIXIS_BASE, PIXIS_BASE_PHYS,
+		      MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 0, BOOKE_PAGESZ_4K, 0),
+#endif
+
+	/* TLB 1 */
+	/* *I*** - Covers boot page */
+#if defined(CONFIG_SYS_RAMBOOT) && defined(CONFIG_SYS_INIT_L3_ADDR)
+	/*
+	 * *I*G - L3SRAM. When L3 is used as 1M SRAM, the address of the
+	 * SRAM is at 0xfff00000, it covered the 0xfffff000.
+	 */
+	SET_TLB_ENTRY(1, CONFIG_SYS_INIT_L3_ADDR, CONFIG_SYS_INIT_L3_ADDR,
+			MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+			0, 0, BOOKE_PAGESZ_1M, 1),
+#elif defined(CONFIG_SRIO_PCIE_BOOT_SLAVE)
+	/*
+	 * SRIO_PCIE_BOOT-SLAVE. When slave boot, the address of the
+	 * space is at 0xfff00000, it covered the 0xfffff000.
+	 */
+	SET_TLB_ENTRY(1, CONFIG_SYS_SRIO_PCIE_BOOT_SLAVE_ADDR,
+			CONFIG_SYS_SRIO_PCIE_BOOT_SLAVE_ADDR_PHYS,
+			MAS3_SX|MAS3_SW|MAS3_SR, MAS2_W|MAS2_G,
+			0, 0, BOOKE_PAGESZ_1M, 1),
+#else
+	SET_TLB_ENTRY(1, 0xfffff000, 0xfffff000,
+		      MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 0, BOOKE_PAGESZ_4K, 1),
+#endif
+
+	/* *I*G* - CCSRBAR */
+	SET_TLB_ENTRY(1, CONFIG_SYS_CCSRBAR, CONFIG_SYS_CCSRBAR_PHYS,
+		      MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 1, BOOKE_PAGESZ_16M, 1),
+
+	/* *I*G* - Flash, localbus */
+	/* This will be changed to *I*G* after relocation to RAM. */
+	SET_TLB_ENTRY(1, CONFIG_SYS_FLASH_BASE, CONFIG_SYS_FLASH_BASE_PHYS,
+		      MAS3_SX|MAS3_SR, MAS2_W|MAS2_G,
+		      0, 2, BOOKE_PAGESZ_256M, 1),
+
+	/* *I*G* - PCI */
+	SET_TLB_ENTRY(1, CONFIG_SYS_PCIE1_MEM_VIRT, CONFIG_SYS_PCIE1_MEM_PHYS,
+		      MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 3, BOOKE_PAGESZ_1G, 1),
+
+	/* *I*G* - PCI */
+	SET_TLB_ENTRY(1, CONFIG_SYS_PCIE1_MEM_VIRT + 0x40000000,
+		      CONFIG_SYS_PCIE1_MEM_PHYS + 0x40000000,
+		      MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 4, BOOKE_PAGESZ_256M, 1),
+
+	SET_TLB_ENTRY(1, CONFIG_SYS_PCIE1_MEM_VIRT + 0x50000000,
+		      CONFIG_SYS_PCIE1_MEM_PHYS + 0x50000000,
+		      MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 5, BOOKE_PAGESZ_256M, 1),
+
+	/* *I*G* - PCI I/O */
+	SET_TLB_ENTRY(1, CONFIG_SYS_PCIE1_IO_VIRT, CONFIG_SYS_PCIE1_IO_PHYS,
+		      MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 6, BOOKE_PAGESZ_256K, 1),
+
+	/* Bman/Qman */
+#ifdef CONFIG_SYS_BMAN_MEM_PHYS
+	SET_TLB_ENTRY(1, CONFIG_SYS_BMAN_MEM_BASE, CONFIG_SYS_BMAN_MEM_PHYS,
+		      MAS3_SW|MAS3_SR, 0,
+		      0, 9, BOOKE_PAGESZ_1M, 1),
+	SET_TLB_ENTRY(1, CONFIG_SYS_BMAN_MEM_BASE + 0x00100000,
+		      CONFIG_SYS_BMAN_MEM_PHYS + 0x00100000,
+		      MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 10, BOOKE_PAGESZ_1M, 1),
+#endif
+#ifdef CONFIG_SYS_QMAN_MEM_PHYS
+	SET_TLB_ENTRY(1, CONFIG_SYS_QMAN_MEM_BASE, CONFIG_SYS_QMAN_MEM_PHYS,
+		      MAS3_SW|MAS3_SR, 0,
+		      0, 11, BOOKE_PAGESZ_1M, 1),
+	SET_TLB_ENTRY(1, CONFIG_SYS_QMAN_MEM_BASE + 0x00100000,
+		      CONFIG_SYS_QMAN_MEM_PHYS + 0x00100000,
+		      MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 12, BOOKE_PAGESZ_1M, 1),
+#endif
+#ifdef CONFIG_SYS_DCSRBAR_PHYS
+	SET_TLB_ENTRY(1, CONFIG_SYS_DCSRBAR, CONFIG_SYS_DCSRBAR_PHYS,
+		      MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+		      0, 13, BOOKE_PAGESZ_4M, 1),
+#endif
+#ifdef CONFIG_SYS_NAND_BASE
+	/*
+	 * *I*G - NAND
+	 * entry 14 and 15 has been used hard coded, they will be disabled
+	 * in cpu_init_f, so we use entry 16 for nand.
+	 */
+	SET_TLB_ENTRY(1, CONFIG_SYS_NAND_BASE, CONFIG_SYS_NAND_BASE_PHYS,
+			MAS3_SX|MAS3_SW|MAS3_SR, MAS2_I|MAS2_G,
+			0, 16, BOOKE_PAGESZ_1M, 1),
+#endif
+#ifdef CONFIG_SRIO_PCIE_BOOT_SLAVE
+	/*
+	 * SRIO_PCIE_BOOT-SLAVE. 1M space from 0xffe00000 for
+	 * fetching ucode and ENV from master
+	 */
+	SET_TLB_ENTRY(1, CONFIG_SYS_SRIO_PCIE_BOOT_UCODE_ENV_ADDR,
+		CONFIG_SYS_SRIO_PCIE_BOOT_UCODE_ENV_ADDR_PHYS,
+		MAS3_SX|MAS3_SW|MAS3_SR, MAS2_G,
+		0, 17, BOOKE_PAGESZ_1M, 1),
+#endif
+};
+
+int num_tlb_entries = ARRAY_SIZE(tlb_table);
diff --git a/board/chipsee/common/pfuze.c b/board/chipsee/common/pfuze.c
new file mode 100644
index 0000000..d6a209e
--- /dev/null
+++ b/board/chipsee/common/pfuze.c
@@ -0,0 +1,92 @@
+/*
+ * Copyright 2014 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <errno.h>
+#include <power/pmic.h>
+#include <power/pfuze100_pmic.h>
+
+int pfuze_mode_init(struct pmic *p, u32 mode)
+{
+	unsigned char offset, i, switch_num;
+	u32 id, ret;
+
+	pmic_reg_read(p, PFUZE100_DEVICEID, &id);
+	id = id & 0xf;
+
+	if (id == 0) {
+		switch_num = 6;
+		offset = PFUZE100_SW1CMODE;
+	} else if (id == 1) {
+		switch_num = 4;
+		offset = PFUZE100_SW2MODE;
+	} else {
+		printf("Not supported, id=%d\n", id);
+		return -EINVAL;
+	}
+
+	ret = pmic_reg_write(p, PFUZE100_SW1ABMODE, mode);
+	if (ret < 0) {
+		printf("Set SW1AB mode error!\n");
+		return ret;
+	}
+
+	for (i = 0; i < switch_num - 1; i++) {
+		ret = pmic_reg_write(p, offset + i * SWITCH_SIZE, mode);
+		if (ret < 0) {
+			printf("Set switch 0x%x mode error!\n",
+			       offset + i * SWITCH_SIZE);
+			return ret;
+		}
+	}
+
+	return ret;
+}
+
+struct pmic *pfuze_common_init(unsigned char i2cbus)
+{
+	struct pmic *p;
+	int ret;
+	unsigned int reg;
+
+	ret = power_pfuze100_init(i2cbus);
+	if (ret)
+		return NULL;
+
+	p = pmic_get("PFUZE100");
+	ret = pmic_probe(p);
+	if (ret)
+		return NULL;
+
+	pmic_reg_read(p, PFUZE100_DEVICEID, &reg);
+	printf("PMIC:  PFUZE100 ID=0x%02x\n", reg);
+
+	/* Set SW1AB stanby volage to 0.975V */
+	pmic_reg_read(p, PFUZE100_SW1ABSTBY, &reg);
+	reg &= ~SW1x_STBY_MASK;
+	reg |= SW1x_0_975V;
+	pmic_reg_write(p, PFUZE100_SW1ABSTBY, reg);
+
+	/* Set SW1AB/VDDARM step ramp up time from 16us to 4us/25mV */
+	pmic_reg_read(p, PFUZE100_SW1ABCONF, &reg);
+	reg &= ~SW1xCONF_DVSSPEED_MASK;
+	reg |= SW1xCONF_DVSSPEED_4US;
+	pmic_reg_write(p, PFUZE100_SW1ABCONF, reg);
+
+	/* Set SW1C standby voltage to 0.975V */
+	pmic_reg_read(p, PFUZE100_SW1CSTBY, &reg);
+	reg &= ~SW1x_STBY_MASK;
+	reg |= SW1x_0_975V;
+	pmic_reg_write(p, PFUZE100_SW1CSTBY, reg);
+
+	/* Set SW1C/VDDSOC step ramp up time from 16us to 4us/25mV */
+	pmic_reg_read(p, PFUZE100_SW1CCONF, &reg);
+	reg &= ~SW1xCONF_DVSSPEED_MASK;
+	reg |= SW1xCONF_DVSSPEED_4US;
+	pmic_reg_write(p, PFUZE100_SW1CCONF, reg);
+
+	return p;
+}
diff --git a/board/chipsee/common/pfuze.h b/board/chipsee/common/pfuze.h
new file mode 100644
index 0000000..53cfc99
--- /dev/null
+++ b/board/chipsee/common/pfuze.h
@@ -0,0 +1,13 @@
+/*
+ * Copyright 2014 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __PFUZE_BOARD_HELPER__
+#define __PFUZE_BOARD_HELPER__
+
+struct pmic *pfuze_common_init(unsigned char i2cbus);
+int pfuze_mode_init(struct pmic *p, u32 mode);
+
+#endif
diff --git a/board/chipsee/common/pixis.c b/board/chipsee/common/pixis.c
new file mode 100644
index 0000000..cbba399
--- /dev/null
+++ b/board/chipsee/common/pixis.c
@@ -0,0 +1,542 @@
+/*
+ * Copyright 2006,2010 Freescale Semiconductor
+ * Jeff Brown
+ * Srikanth Srinivasan (srikanth.srinivasan@freescale.com)
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <command.h>
+#include <asm/io.h>
+
+#define pixis_base (u8 *)PIXIS_BASE
+
+/*
+ * Simple board reset.
+ */
+void pixis_reset(void)
+{
+	out_8(pixis_base + PIXIS_RST, 0);
+
+	while (1);
+}
+
+/*
+ * Per table 27, page 58 of MPC8641HPCN spec.
+ */
+static int set_px_sysclk(unsigned long sysclk)
+{
+	u8 sysclk_s, sysclk_r, sysclk_v, vclkh, vclkl, sysclk_aux;
+
+	switch (sysclk) {
+	case 33:
+		sysclk_s = 0x04;
+		sysclk_r = 0x04;
+		sysclk_v = 0x07;
+		sysclk_aux = 0x00;
+		break;
+	case 40:
+		sysclk_s = 0x01;
+		sysclk_r = 0x1F;
+		sysclk_v = 0x20;
+		sysclk_aux = 0x01;
+		break;
+	case 50:
+		sysclk_s = 0x01;
+		sysclk_r = 0x1F;
+		sysclk_v = 0x2A;
+		sysclk_aux = 0x02;
+		break;
+	case 66:
+		sysclk_s = 0x01;
+		sysclk_r = 0x04;
+		sysclk_v = 0x04;
+		sysclk_aux = 0x03;
+		break;
+	case 83:
+		sysclk_s = 0x01;
+		sysclk_r = 0x1F;
+		sysclk_v = 0x4B;
+		sysclk_aux = 0x04;
+		break;
+	case 100:
+		sysclk_s = 0x01;
+		sysclk_r = 0x1F;
+		sysclk_v = 0x5C;
+		sysclk_aux = 0x05;
+		break;
+	case 134:
+		sysclk_s = 0x06;
+		sysclk_r = 0x1F;
+		sysclk_v = 0x3B;
+		sysclk_aux = 0x06;
+		break;
+	case 166:
+		sysclk_s = 0x06;
+		sysclk_r = 0x1F;
+		sysclk_v = 0x4B;
+		sysclk_aux = 0x07;
+		break;
+	default:
+		printf("Unsupported SYSCLK frequency.\n");
+		return 0;
+	}
+
+	vclkh = (sysclk_s << 5) | sysclk_r;
+	vclkl = sysclk_v;
+
+	out_8(pixis_base + PIXIS_VCLKH, vclkh);
+	out_8(pixis_base + PIXIS_VCLKL, vclkl);
+
+	out_8(pixis_base + PIXIS_AUX, sysclk_aux);
+
+	return 1;
+}
+
+/* Set the CFG_SYSPLL bits
+ *
+ * This only has effect if PX_VCFGEN0[SYSPLL]=1, which is true if
+ * read_from_px_regs() is called.
+ */
+static int set_px_mpxpll(unsigned long mpxpll)
+{
+	switch (mpxpll) {
+	case 2:
+	case 4:
+	case 6:
+	case 8:
+	case 10:
+	case 12:
+	case 14:
+	case 16:
+		clrsetbits_8(pixis_base + PIXIS_VSPEED1, 0x1F, mpxpll);
+		return 1;
+	}
+
+	printf("Unsupported MPXPLL ratio.\n");
+	return 0;
+}
+
+static int set_px_corepll(unsigned long corepll)
+{
+	u8 val;
+
+	switch (corepll) {
+	case 20:
+		val = 0x08;
+		break;
+	case 25:
+		val = 0x0C;
+		break;
+	case 30:
+		val = 0x10;
+		break;
+	case 35:
+		val = 0x1C;
+		break;
+	case 40:
+		val = 0x14;
+		break;
+	case 45:
+		val = 0x0E;
+		break;
+	default:
+		printf("Unsupported COREPLL ratio.\n");
+		return 0;
+	}
+
+	clrsetbits_8(pixis_base + PIXIS_VSPEED0, 0x1F, val);
+	return 1;
+}
+
+#ifndef CONFIG_SYS_PIXIS_VCFGEN0_ENABLE
+#define CONFIG_SYS_PIXIS_VCFGEN0_ENABLE		0x1C
+#endif
+
+/* Tell the PIXIS where to find the COREPLL, MPXPLL, SYSCLK values
+ *
+ * The PIXIS can be programmed to look at either the on-board dip switches
+ * or various other PIXIS registers to determine the values for COREPLL,
+ * MPXPLL, and SYSCLK.
+ *
+ * CONFIG_SYS_PIXIS_VCFGEN0_ENABLE is the value to write to the PIXIS_VCFGEN0
+ * register that tells the pixis to use the various PIXIS register.
+ */
+static void read_from_px_regs(int set)
+{
+	u8 tmp = in_8(pixis_base + PIXIS_VCFGEN0);
+
+	if (set)
+		tmp = tmp | CONFIG_SYS_PIXIS_VCFGEN0_ENABLE;
+	else
+		tmp = tmp & ~CONFIG_SYS_PIXIS_VCFGEN0_ENABLE;
+
+	out_8(pixis_base + PIXIS_VCFGEN0, tmp);
+}
+
+/* CONFIG_SYS_PIXIS_VBOOT_ENABLE is the value to write to the PX_VCFGEN1
+ * register that tells the pixis to use the PX_VBOOT[LBMAP] register.
+ */
+#ifndef CONFIG_SYS_PIXIS_VBOOT_ENABLE
+#define CONFIG_SYS_PIXIS_VBOOT_ENABLE	0x04
+#endif
+
+/* Configure the source of the boot location
+ *
+ * The PIXIS can be programmed to look at either the on-board dip switches
+ * or the PX_VBOOT[LBMAP] register to determine where we should boot.
+ *
+ * If we want to boot from the alternate boot bank, we need to tell the PIXIS
+ * to ignore the on-board dip switches and use the PX_VBOOT[LBMAP] instead.
+ */
+static void read_from_px_regs_altbank(int set)
+{
+	u8 tmp = in_8(pixis_base + PIXIS_VCFGEN1);
+
+	if (set)
+		tmp = tmp | CONFIG_SYS_PIXIS_VBOOT_ENABLE;
+	else
+		tmp = tmp & ~CONFIG_SYS_PIXIS_VBOOT_ENABLE;
+
+	out_8(pixis_base + PIXIS_VCFGEN1, tmp);
+}
+
+/* CONFIG_SYS_PIXIS_VBOOT_MASK contains the bits to set in VBOOT register that
+ * tells the PIXIS what the alternate flash bank is.
+ *
+ * Note that it's not really a mask.  It contains the actual LBMAP bits that
+ * must be set to select the alternate bank.  This code assumes that the
+ * primary bank has these bits set to 0, and the alternate bank has these
+ * bits set to 1.
+ */
+#ifndef CONFIG_SYS_PIXIS_VBOOT_MASK
+#define CONFIG_SYS_PIXIS_VBOOT_MASK	(0x40)
+#endif
+
+/* Tell the PIXIS to boot from the default flash bank
+ *
+ * Program the default flash bank into the VBOOT register.  This register is
+ * used only if PX_VCFGEN1[FLASH]=1.
+ */
+static void clear_altbank(void)
+{
+	clrbits_8(pixis_base + PIXIS_VBOOT, CONFIG_SYS_PIXIS_VBOOT_MASK);
+}
+
+/* Tell the PIXIS to boot from the alternate flash bank
+ *
+ * Program the alternate flash bank into the VBOOT register.  This register is
+ * used only if PX_VCFGEN1[FLASH]=1.
+ */
+static void set_altbank(void)
+{
+	setbits_8(pixis_base + PIXIS_VBOOT, CONFIG_SYS_PIXIS_VBOOT_MASK);
+}
+
+/* Reset the board with watchdog disabled.
+ *
+ * This respects the altbank setting.
+ */
+static void set_px_go(void)
+{
+	/* Disable the VELA sequencer and watchdog */
+	clrbits_8(pixis_base + PIXIS_VCTL, 9);
+
+	/* Reboot by starting the VELA sequencer */
+	setbits_8(pixis_base + PIXIS_VCTL, 0x1);
+
+	while (1);
+}
+
+/* Reset the board with watchdog enabled.
+ *
+ * This respects the altbank setting.
+ */
+static void set_px_go_with_watchdog(void)
+{
+	/* Disable the VELA sequencer */
+	clrbits_8(pixis_base + PIXIS_VCTL, 1);
+
+	/* Enable the watchdog and reboot by starting the VELA sequencer */
+	setbits_8(pixis_base + PIXIS_VCTL, 0x9);
+
+	while (1);
+}
+
+/* Disable the watchdog
+ *
+ */
+static int pixis_disable_watchdog_cmd(cmd_tbl_t *cmdtp, int flag, int argc,
+				      char * const argv[])
+{
+	/* Disable the VELA sequencer and the watchdog */
+	clrbits_8(pixis_base + PIXIS_VCTL, 9);
+
+	return 0;
+}
+
+U_BOOT_CMD(
+	diswd, 1, 0, pixis_disable_watchdog_cmd,
+	"Disable watchdog timer",
+	""
+);
+
+#ifdef CONFIG_PIXIS_SGMII_CMD
+
+/* Enable or disable SGMII mode for a TSEC
+ */
+static int pixis_set_sgmii(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
+{
+	int which_tsec = -1;
+	unsigned char mask;
+	unsigned char switch_mask;
+
+	if ((argc > 2) && (strcmp(argv[1], "all") != 0))
+		which_tsec = simple_strtoul(argv[1], NULL, 0);
+
+	switch (which_tsec) {
+#ifdef CONFIG_TSEC1
+	case 1:
+		mask = PIXIS_VSPEED2_TSEC1SER;
+		switch_mask = PIXIS_VCFGEN1_TSEC1SER;
+		break;
+#endif
+#ifdef CONFIG_TSEC2
+	case 2:
+		mask = PIXIS_VSPEED2_TSEC2SER;
+		switch_mask = PIXIS_VCFGEN1_TSEC2SER;
+		break;
+#endif
+#ifdef CONFIG_TSEC3
+	case 3:
+		mask = PIXIS_VSPEED2_TSEC3SER;
+		switch_mask = PIXIS_VCFGEN1_TSEC3SER;
+		break;
+#endif
+#ifdef CONFIG_TSEC4
+	case 4:
+		mask = PIXIS_VSPEED2_TSEC4SER;
+		switch_mask = PIXIS_VCFGEN1_TSEC4SER;
+		break;
+#endif
+	default:
+		mask = PIXIS_VSPEED2_MASK;
+		switch_mask = PIXIS_VCFGEN1_MASK;
+		break;
+	}
+
+	/* Toggle whether the switches or FPGA control the settings */
+	if (!strcmp(argv[argc - 1], "switch"))
+		clrbits_8(pixis_base + PIXIS_VCFGEN1, switch_mask);
+	else
+		setbits_8(pixis_base + PIXIS_VCFGEN1, switch_mask);
+
+	/* If it's not the switches, enable or disable SGMII, as specified */
+	if (!strcmp(argv[argc - 1], "on"))
+		clrbits_8(pixis_base + PIXIS_VSPEED2, mask);
+	else if (!strcmp(argv[argc - 1], "off"))
+		setbits_8(pixis_base + PIXIS_VSPEED2, mask);
+
+	return 0;
+}
+
+U_BOOT_CMD(
+	pixis_set_sgmii, CONFIG_SYS_MAXARGS, 1, pixis_set_sgmii,
+	"pixis_set_sgmii"
+	" - Enable or disable SGMII mode for a given TSEC \n",
+	"\npixis_set_sgmii [TSEC num] <on|off|switch>\n"
+	"    TSEC num: 1,2,3,4 or 'all'.  'all' is default.\n"
+	"    on - enables SGMII\n"
+	"    off - disables SGMII\n"
+	"    switch - use switch settings"
+);
+
+#endif
+
+/*
+ * This function takes the non-integral cpu:mpx pll ratio
+ * and converts it to an integer that can be used to assign
+ * FPGA register values.
+ * input: strptr i.e. argv[2]
+ */
+static unsigned long strfractoint(char *strptr)
+{
+	int i, j;
+	int mulconst;
+	int no_dec = 0;
+	unsigned long intval = 0, decval = 0;
+	char intarr[3], decarr[3];
+
+	/* Assign the integer part to intarr[]
+	 * If there is no decimal point i.e.
+	 * if the ratio is an integral value
+	 * simply create the intarr.
+	 */
+	i = 0;
+	while (strptr[i] != '.') {
+		if (strptr[i] == 0) {
+			no_dec = 1;
+			break;
+		}
+		intarr[i] = strptr[i];
+		i++;
+	}
+
+	intarr[i] = '\0';
+
+	if (no_dec) {
+		/* Currently needed only for single digit corepll ratios */
+		mulconst = 10;
+		decval = 0;
+	} else {
+		j = 0;
+		i++;		/* Skipping the decimal point */
+		while ((strptr[i] >= '0') && (strptr[i] <= '9')) {
+			decarr[j] = strptr[i];
+			i++;
+			j++;
+		}
+
+		decarr[j] = '\0';
+
+		mulconst = 1;
+		for (i = 0; i < j; i++)
+			mulconst *= 10;
+		decval = simple_strtoul(decarr, NULL, 10);
+	}
+
+	intval = simple_strtoul(intarr, NULL, 10);
+	intval = intval * mulconst;
+
+	return intval + decval;
+}
+
+static int pixis_reset_cmd(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
+{
+	unsigned int i;
+	char *p_cf = NULL;
+	char *p_cf_sysclk = NULL;
+	char *p_cf_corepll = NULL;
+	char *p_cf_mpxpll = NULL;
+	char *p_altbank = NULL;
+	char *p_wd = NULL;
+	int unknown_param = 0;
+
+	/*
+	 * No args is a simple reset request.
+	 */
+	if (argc <= 1) {
+		pixis_reset();
+		/* not reached */
+	}
+
+	for (i = 1; i < argc; i++) {
+		if (strcmp(argv[i], "cf") == 0) {
+			p_cf = argv[i];
+			if (i + 3 >= argc) {
+				break;
+			}
+			p_cf_sysclk = argv[i+1];
+			p_cf_corepll = argv[i+2];
+			p_cf_mpxpll = argv[i+3];
+			i += 3;
+			continue;
+		}
+
+		if (strcmp(argv[i], "altbank") == 0) {
+			p_altbank = argv[i];
+			continue;
+		}
+
+		if (strcmp(argv[i], "wd") == 0) {
+			p_wd = argv[i];
+			continue;
+		}
+
+		unknown_param = 1;
+	}
+
+	/*
+	 * Check that cf has all required parms
+	 */
+	if ((p_cf && !(p_cf_sysclk && p_cf_corepll && p_cf_mpxpll))
+	    ||	unknown_param) {
+#ifdef CONFIG_SYS_LONGHELP
+		puts(cmdtp->help);
+		putc('\n');
+#endif
+		return 1;
+	}
+
+	/*
+	 * PIXIS seems to be sensitive to the ordering of
+	 * the registers that are touched.
+	 */
+	read_from_px_regs(0);
+
+	if (p_altbank)
+		read_from_px_regs_altbank(0);
+
+	clear_altbank();
+
+	/*
+	 * Clock configuration specified.
+	 */
+	if (p_cf) {
+		unsigned long sysclk;
+		unsigned long corepll;
+		unsigned long mpxpll;
+
+		sysclk = simple_strtoul(p_cf_sysclk, NULL, 10);
+		corepll = strfractoint(p_cf_corepll);
+		mpxpll = simple_strtoul(p_cf_mpxpll, NULL, 10);
+
+		if (!(set_px_sysclk(sysclk)
+		      && set_px_corepll(corepll)
+		      && set_px_mpxpll(mpxpll))) {
+#ifdef CONFIG_SYS_LONGHELP
+			puts(cmdtp->help);
+			putc('\n');
+#endif
+			return 1;
+		}
+		read_from_px_regs(1);
+	}
+
+	/*
+	 * Altbank specified
+	 *
+	 * NOTE CHANGE IN BEHAVIOR: previous code would default
+	 * to enabling watchdog if altbank is specified.
+	 * Now the watchdog must be enabled explicitly using 'wd'.
+	 */
+	if (p_altbank) {
+		set_altbank();
+		read_from_px_regs_altbank(1);
+	}
+
+	/*
+	 * Reset with watchdog specified.
+	 */
+	if (p_wd)
+		set_px_go_with_watchdog();
+	else
+		set_px_go();
+
+	/*
+	 * Shouldn't be reached.
+	 */
+	return 0;
+}
+
+
+U_BOOT_CMD(
+	pixis_reset, CONFIG_SYS_MAXARGS, 1, pixis_reset_cmd,
+	"Reset the board using the FPGA sequencer",
+	"    pixis_reset\n"
+	"    pixis_reset [altbank]\n"
+	"    pixis_reset altbank wd\n"
+	"    pixis_reset altbank cf <SYSCLK freq> <COREPLL ratio> <MPXPLL ratio>\n"
+	"    pixis_reset cf <SYSCLK freq> <COREPLL ratio> <MPXPLL ratio>"
+);
diff --git a/board/chipsee/common/pixis.h b/board/chipsee/common/pixis.h
new file mode 100644
index 0000000..9328404
--- /dev/null
+++ b/board/chipsee/common/pixis.h
@@ -0,0 +1,166 @@
+/*
+ * Copyright 2010 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+#ifndef __PIXIS_H_
+#define __PIXIS_H_	1
+
+/* PIXIS register set. */
+#if defined(CONFIG_MPC8536DS)
+typedef struct pixis {
+	u8 id;
+	u8 ver;
+	u8 pver;
+	u8 csr;
+	u8 rst;
+	u8 rst2;
+	u8 aux1;
+	u8 spd;
+	u8 aux2;
+	u8 csr2;
+	u8 watch;
+	u8 led;
+	u8 pwr;
+	u8 res[3];
+	u8 vctl;
+	u8 vstat;
+	u8 vcfgen0;
+	u8 vcfgen1;
+	u8 vcore0;
+	u8 res1;
+	u8 vboot;
+	u8 vspeed[3];
+	u8 sclk[3];
+	u8 dclk[3];
+	u8 i2cdacr;
+	u8 vcoreacc[4];
+	u8 vcorecnt[3];
+	u8 vcoremax[2];
+	u8 vplatacc[4];
+	u8 vplatcnt[3];
+	u8 vplatmax[2];
+	u8 vtempacc[4];
+	u8 vtempcnt[3];
+	u8 vtempmax[2];
+	u8 res2[4];
+} __attribute__ ((packed)) pixis_t;
+
+#elif defined(CONFIG_MPC8544DS)
+typedef struct pixis {
+	u8 id;
+	u8 ver;
+	u8 pver;
+	u8 csr;
+	u8 rst;
+	u8 pwr;
+	u8 aux1;
+	u8 spd;
+	u8 res[8];
+	u8 vctl;
+	u8 vstat;
+	u8 vcfgen0;
+	u8 vcfgen1;
+	u8 vcore0;
+	u8 res1;
+	u8 vboot;
+	u8 vspeed[2];
+	u8 vclkh;
+	u8 vclkl;
+	u8 watch;
+	u8 led;
+	u8 vspeed2;
+	u8 res2[34];
+} __attribute__ ((packed)) pixis_t;
+
+#elif defined(CONFIG_MPC8572DS)
+typedef struct pixis {
+	u8 id;
+	u8 ver;
+	u8 pver;
+	u8 csr;
+	u8 rst;
+	u8 pwr1;
+	u8 aux1;
+	u8 spd;
+	u8 aux2;
+	u8 res[7];
+	u8 vctl;
+	u8 vstat;
+	u8 vcfgen0;
+	u8 vcfgen1;
+	u8 vcore0;
+	u8 res1;
+	u8 vboot;
+	u8 vspeed[3];
+	u8 res2[2];
+	u8 sclk[3];
+	u8 dclk[3];
+	u8 res3[2];
+	u8 watch;
+	u8 led;
+	u8 res4[25];
+} __attribute__ ((packed)) pixis_t;
+
+#elif defined(CONFIG_MPC8610HPCD)
+typedef struct pixis {
+	u8 id;
+	u8 ver;	/* also called arch */
+	u8 pver;
+	u8 csr;
+	u8 rst;
+	u8 pwr;
+	u8 aux;
+	u8 spd;
+	u8 brdcfg0;
+	u8 brdcfg1;
+	u8 res[4];
+	u8 led;
+	u8 serno;
+	u8 vctl;
+	u8 vstat;
+	u8 vcfgen0;
+	u8 vcfgen1;
+	u8 vcore0;
+	u8 res1;
+	u8 vboot;
+	u8 vspeed[2];
+	u8 res2;
+	u8 sclk[3];
+	u8 res3;
+	u8 watch;
+	u8 res4[33];
+} __attribute__ ((packed)) pixis_t;
+
+#elif defined(CONFIG_MPC8641HPCN)
+typedef struct pixis {
+	u8 id;
+	u8 ver;
+	u8 pver;
+	u8 csr;
+	u8 rst;
+	u8 pwr;
+	u8 aux;
+	u8 spd;
+	u8 res[8];
+	u8 vctl;
+	u8 vstat;
+	u8 vcfgen0;
+	u8 vcfgen1;
+	u8 vcore0;
+	u8 res1;
+	u8 vboot;
+	u8 vspeed[2];
+	u8 vclkh;
+	u8 vclkl;
+	u8 watch;
+	u8 res3[36];
+} __attribute__ ((packed)) pixis_t;
+#else
+#error Need to define pixis_t for this board
+#endif
+
+/* Pointer to the PIXIS register set */
+#define pixis ((pixis_t *)PIXIS_BASE)
+
+#endif	/* __PIXIS_H_ */
diff --git a/board/chipsee/common/pq-mds-pib.c b/board/chipsee/common/pq-mds-pib.c
new file mode 100644
index 0000000..1eb3786
--- /dev/null
+++ b/board/chipsee/common/pq-mds-pib.c
@@ -0,0 +1,102 @@
+/*
+ * Copyright (C) 2007 Freescale Semiconductor, Inc.
+ *
+ * Tony Li <tony.li@freescale.com>
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation;
+ */
+
+#include <common.h>
+#include <i2c.h>
+#include <asm/io.h>
+
+#include "pq-mds-pib.h"
+
+int pib_init(void)
+{
+	u8 val8;
+	u8 orig_i2c_bus;
+
+	/* Switch temporarily to I2C bus #2 */
+	orig_i2c_bus = i2c_get_bus_num();
+	i2c_set_bus_num(1);
+
+	val8 = 0;
+#if defined(CONFIG_PCI) && !defined(CONFIG_PCISLAVE)
+	/* Assign PIB PMC slot to desired PCI bus */
+	i2c_write(0x23, 0x6, 1, &val8, 1);
+	i2c_write(0x23, 0x7, 1, &val8, 1);
+	val8 = 0xff;
+	i2c_write(0x23, 0x2, 1, &val8, 1);
+	i2c_write(0x23, 0x3, 1, &val8, 1);
+
+	val8 = 0;
+	i2c_write(0x26, 0x6, 1, &val8, 1);
+	val8 = 0x34;
+	i2c_write(0x26, 0x7, 1, &val8, 1);
+#if defined(CONFIG_MPC832XEMDS)
+	val8 = 0xf9;            /* PMC2, PMC3 slot to PCI bus */
+#else
+	val8 = 0xf3;		/* PMC1, PMC2, PMC3 slot to PCI bus */
+#endif
+	i2c_write(0x26, 0x2, 1, &val8, 1);
+	val8 = 0xff;
+	i2c_write(0x26, 0x3, 1, &val8, 1);
+
+	val8 = 0;
+	i2c_write(0x27, 0x6, 1, &val8, 1);
+	i2c_write(0x27, 0x7, 1, &val8, 1);
+	val8 = 0xff;
+	i2c_write(0x27, 0x2, 1, &val8, 1);
+	val8 = 0xef;
+	i2c_write(0x27, 0x3, 1, &val8, 1);
+
+	eieio();
+
+#if defined(CONFIG_MPC832XEMDS)
+	printf("PCI 32bit bus on PMC2 &PMC3\n");
+#else
+	printf("PCI 32bit bus on PMC1 & PMC2 &PMC3\n");
+#endif
+#endif
+
+#if defined(CONFIG_PQ_MDS_PIB_ATM)
+#if defined(CONFIG_MPC8569MDS)
+	val8 = 0;
+	i2c_write(0x20, 0x6, 1, &val8, 1);
+	i2c_write(0x20, 0x7, 1, &val8, 1);
+
+	val8 = 0xdf;
+	i2c_write(0x20, 0x2, 1, &val8, 1);
+	val8 = 0xf7;
+	i2c_write(0x20, 0x3, 1, &val8, 1);
+
+	eieio();
+
+	printf("QOC3 ATM card on PMC0\n");
+#elif defined(CONFIG_MPC832XEMDS)
+	val8 = 0;
+	i2c_write(0x26, 0x7, 1, &val8, 1);
+	val8 = 0xf7;
+	i2c_write(0x26, 0x3, 1, &val8, 1);
+
+	val8 = 0;
+	i2c_write(0x21, 0x6, 1, &val8, 1);
+	i2c_write(0x21, 0x7, 1, &val8, 1);
+
+	val8 = 0xdf;
+	i2c_write(0x21, 0x2, 1, &val8, 1);
+	val8 = 0xef;
+	i2c_write(0x21, 0x3, 1, &val8, 1);
+
+	eieio();
+
+	printf("QOC3 ATM card on PMC1\n");
+#endif
+#endif
+	/* Reset to original I2C bus */
+	i2c_set_bus_num(orig_i2c_bus);
+	return 0;
+}
diff --git a/board/chipsee/common/pq-mds-pib.h b/board/chipsee/common/pq-mds-pib.h
new file mode 100644
index 0000000..67066fd
--- /dev/null
+++ b/board/chipsee/common/pq-mds-pib.h
@@ -0,0 +1,9 @@
+/*
+ * Copyright (C) 2007 Freescale Semiconductor, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation;
+ */
+
+extern int pib_init(void);
diff --git a/board/chipsee/common/qixis.c b/board/chipsee/common/qixis.c
new file mode 100644
index 0000000..a49e300
--- /dev/null
+++ b/board/chipsee/common/qixis.c
@@ -0,0 +1,251 @@
+/*
+ * Copyright 2011 Freescale Semiconductor
+ * Author: Shengzhou Liu <Shengzhou.Liu@freescale.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * This file provides support for the QIXIS of some Freescale reference boards.
+ */
+
+#include <common.h>
+#include <command.h>
+#include <asm/io.h>
+#include <linux/time.h>
+#include <i2c.h>
+#include "qixis.h"
+
+#ifdef CONFIG_SYS_I2C_FPGA_ADDR
+u8 qixis_read_i2c(unsigned int reg)
+{
+	return i2c_reg_read(CONFIG_SYS_I2C_FPGA_ADDR, reg);
+}
+
+void qixis_write_i2c(unsigned int reg, u8 value)
+{
+	u8 val = value;
+	i2c_reg_write(CONFIG_SYS_I2C_FPGA_ADDR, reg, val);
+}
+#endif
+
+u8 qixis_read(unsigned int reg)
+{
+	void *p = (void *)QIXIS_BASE;
+
+	return in_8(p + reg);
+}
+
+void qixis_write(unsigned int reg, u8 value)
+{
+	void *p = (void *)QIXIS_BASE;
+
+	out_8(p + reg, value);
+}
+
+u16 qixis_read_minor(void)
+{
+	u16 minor;
+
+	/* this data is in little endian */
+	QIXIS_WRITE(tagdata, 5);
+	minor = QIXIS_READ(tagdata);
+	QIXIS_WRITE(tagdata, 6);
+	minor += QIXIS_READ(tagdata) << 8;
+
+	return minor;
+}
+
+char *qixis_read_time(char *result)
+{
+	time_t time = 0;
+	int i;
+
+	/* timestamp is in 32-bit big endian */
+	for (i = 8; i <= 11; i++) {
+		QIXIS_WRITE(tagdata, i);
+		time =  (time << 8) + QIXIS_READ(tagdata);
+	}
+
+	return ctime_r(&time, result);
+}
+
+char *qixis_read_tag(char *buf)
+{
+	int i;
+	char tag, *ptr = buf;
+
+	for (i = 16; i <= 63; i++) {
+		QIXIS_WRITE(tagdata, i);
+		tag = QIXIS_READ(tagdata);
+		*(ptr++) = tag;
+		if (!tag)
+			break;
+	}
+	if (i > 63)
+		*ptr = '\0';
+
+	return buf;
+}
+
+/*
+ * return the string of binary of u8 in the format of
+ * 1010 10_0. The masked bit is filled as underscore.
+ */
+const char *byte_to_binary_mask(u8 val, u8 mask, char *buf)
+{
+	char *ptr;
+	int i;
+
+	ptr = buf;
+	for (i = 0x80; i > 0x08 ; i >>= 1, ptr++)
+		*ptr = (val & i) ? '1' : ((mask & i) ? '_' : '0');
+	*(ptr++) = ' ';
+	for (i = 0x08; i > 0 ; i >>= 1, ptr++)
+		*ptr = (val & i) ? '1' : ((mask & i) ? '_' : '0');
+
+	*ptr = '\0';
+
+	return buf;
+}
+
+#ifdef QIXIS_RST_FORCE_MEM
+void board_assert_mem_reset(void)
+{
+	u8 rst;
+
+	rst = QIXIS_READ(rst_frc[0]);
+	if (!(rst & QIXIS_RST_FORCE_MEM))
+		QIXIS_WRITE(rst_frc[0], rst | QIXIS_RST_FORCE_MEM);
+}
+
+void board_deassert_mem_reset(void)
+{
+	u8 rst;
+
+	rst = QIXIS_READ(rst_frc[0]);
+	if (rst & QIXIS_RST_FORCE_MEM)
+		QIXIS_WRITE(rst_frc[0], rst & ~QIXIS_RST_FORCE_MEM);
+}
+#endif
+
+void qixis_reset(void)
+{
+	QIXIS_WRITE(rst_ctl, QIXIS_RST_CTL_RESET);
+}
+
+void qixis_bank_reset(void)
+{
+	QIXIS_WRITE(rcfg_ctl, QIXIS_RCFG_CTL_RECONFIG_IDLE);
+	QIXIS_WRITE(rcfg_ctl, QIXIS_RCFG_CTL_RECONFIG_START);
+}
+
+/* Set the boot bank to the power-on default bank */
+void clear_altbank(void)
+{
+	u8 reg;
+
+	reg = QIXIS_READ(brdcfg[0]);
+	reg = (reg & ~QIXIS_LBMAP_MASK) | QIXIS_LBMAP_DFLTBANK;
+	QIXIS_WRITE(brdcfg[0], reg);
+}
+
+/* Set the boot bank to the alternate bank */
+void set_altbank(void)
+{
+	u8 reg;
+
+	reg = QIXIS_READ(brdcfg[0]);
+	reg = (reg & ~QIXIS_LBMAP_MASK) | QIXIS_LBMAP_ALTBANK;
+	QIXIS_WRITE(brdcfg[0], reg);
+}
+
+static void qixis_dump_regs(void)
+{
+	int i;
+
+	printf("id	= %02x\n", QIXIS_READ(id));
+	printf("arch	= %02x\n", QIXIS_READ(arch));
+	printf("scver	= %02x\n", QIXIS_READ(scver));
+	printf("model	= %02x\n", QIXIS_READ(model));
+	printf("rst_ctl	= %02x\n", QIXIS_READ(rst_ctl));
+	printf("aux	= %02x\n", QIXIS_READ(aux));
+	for (i = 0; i < 16; i++)
+		printf("brdcfg%02d = %02x\n", i, QIXIS_READ(brdcfg[i]));
+	for (i = 0; i < 16; i++)
+		printf("dutcfg%02d = %02x\n", i, QIXIS_READ(dutcfg[i]));
+	printf("sclk	= %02x%02x%02x\n", QIXIS_READ(sclk[0]),
+		QIXIS_READ(sclk[1]), QIXIS_READ(sclk[2]));
+	printf("dclk	= %02x%02x%02x\n", QIXIS_READ(dclk[0]),
+		QIXIS_READ(dclk[1]), QIXIS_READ(dclk[2]));
+	printf("aux     = %02x\n", QIXIS_READ(aux));
+	printf("watch	= %02x\n", QIXIS_READ(watch));
+	printf("ctl_sys	= %02x\n", QIXIS_READ(ctl_sys));
+	printf("rcw_ctl = %02x\n", QIXIS_READ(rcw_ctl));
+	printf("present = %02x\n", QIXIS_READ(present));
+	printf("present2 = %02x\n", QIXIS_READ(present2));
+	printf("clk_spd = %02x\n", QIXIS_READ(clk_spd));
+	printf("stat_dut = %02x\n", QIXIS_READ(stat_dut));
+	printf("stat_sys = %02x\n", QIXIS_READ(stat_sys));
+	printf("stat_alrm = %02x\n", QIXIS_READ(stat_alrm));
+}
+
+static void __qixis_dump_switch(void)
+{
+	puts("Reverse engineering switch is not implemented for this board\n");
+}
+
+void qixis_dump_switch(void)
+	__attribute__((weak, alias("__qixis_dump_switch")));
+
+int qixis_reset_cmd(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
+{
+	int i;
+
+	if (argc <= 1) {
+		clear_altbank();
+		qixis_reset();
+	} else if (strcmp(argv[1], "altbank") == 0) {
+		set_altbank();
+		qixis_bank_reset();
+	} else if (strcmp(argv[1], "watchdog") == 0) {
+		static char *period[9] = {"2s", "4s", "8s", "16s", "32s",
+					  "1min", "2min", "4min", "8min"};
+		u8 rcfg = QIXIS_READ(rcfg_ctl);
+
+		if (argv[2] == NULL) {
+			printf("qixis watchdog <watchdog_period>\n");
+			return 0;
+		}
+		for (i = 0; i < ARRAY_SIZE(period); i++) {
+			if (strcmp(argv[2], period[i]) == 0) {
+				/* disable watchdog */
+				QIXIS_WRITE(rcfg_ctl,
+					rcfg & ~QIXIS_RCFG_CTL_WATCHDOG_ENBLE);
+				QIXIS_WRITE(watch, ((i<<2) - 1));
+				QIXIS_WRITE(rcfg_ctl, rcfg);
+				return 0;
+			}
+		}
+	} else if (strcmp(argv[1], "dump") == 0) {
+		qixis_dump_regs();
+		return 0;
+	} else if (strcmp(argv[1], "switch") == 0) {
+		qixis_dump_switch();
+		return 0;
+	} else {
+		printf("Invalid option: %s\n", argv[1]);
+		return 1;
+	}
+
+	return 0;
+}
+
+U_BOOT_CMD(
+	qixis_reset, CONFIG_SYS_MAXARGS, 1, qixis_reset_cmd,
+	"Reset the board using the FPGA sequencer",
+	"- hard reset to default bank\n"
+	"qixis_reset altbank - reset to alternate bank\n"
+	"qixis watchdog <watchdog_period> - set the watchdog period\n"
+	"	period: 1s 2s 4s 8s 16s 32s 1min 2min 4min 8min\n"
+	"qixis_reset dump - display the QIXIS registers\n"
+	"qixis_reset switch - display switch\n"
+	);
diff --git a/board/chipsee/common/qixis.h b/board/chipsee/common/qixis.h
new file mode 100644
index 0000000..52d2021
--- /dev/null
+++ b/board/chipsee/common/qixis.h
@@ -0,0 +1,118 @@
+/*
+ * Copyright 2011 Freescale Semiconductor
+ * Author: Shengzhou Liu <Shengzhou.Liu@freescale.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * This file provides support for the QIXIS of some Freescale reference boards.
+ */
+
+#ifndef __QIXIS_H_
+#define __QIXIS_H_
+
+struct qixis {
+	u8 id;      /* ID value uniquely identifying each QDS board type */
+	u8 arch;    /* Board version information */
+	u8 scver;   /* QIXIS Version Register */
+	u8 model;   /* Information of software programming model version */
+	u8 tagdata;
+	u8 ctl_sys;
+	u8 aux;         /* Auxiliary Register,0x06 */
+	u8 clk_spd;
+	u8 stat_dut;
+	u8 stat_sys;
+	u8 stat_alrm;
+	u8 present;
+	u8 present2;    /* Presence Status Register 2,0x0c */
+	u8 rcw_ctl;
+	u8 ctl_led;
+	u8 i2cblk;
+	u8 rcfg_ctl;    /* Reconfig Control Register,0x10 */
+	u8 rcfg_st;
+	u8 dcm_ad;
+	u8 dcm_da;
+	u8 dcmd;
+	u8 dmsg;
+	u8 gdc;
+	u8 gdd;         /* DCM Debug Data Register,0x17 */
+	u8 dmack;
+	u8 res1[6];
+	u8 watch;       /* Watchdog Register,0x1F */
+	u8 pwr_ctl[2];  /* Power Control Register,0x20 */
+	u8 res2[2];
+	u8 pwr_stat[4]; /* Power Status Register,0x24 */
+	u8 res3[8];
+	u8 clk_spd2[2];  /* SYSCLK clock Speed Register,0x30 */
+	u8 res4[2];
+	u8 sclk[3];  /* Clock Configuration Registers,0x34 */
+	u8 res5;
+	u8 dclk[3];
+	u8 res6;
+	u8 clk_dspd[3];
+	u8 res7;
+	u8 rst_ctl;     /* Reset Control Register,0x40 */
+	u8 rst_stat;    /* Reset Status Register */
+	u8 rst_rsn;     /* Reset Reason Register */
+	u8 rst_frc[2];  /* Reset Force Registers,0x43 */
+	u8 res8[11];
+	u8 brdcfg[16];  /* Board Configuration Register,0x50 */
+	u8 dutcfg[16];
+	u8 rcw_ad[2];   /* RCW SRAM Address Registers,0x70 */
+	u8 rcw_data;
+	u8 res9[5];
+	u8 post_ctl;
+	u8 post_stat;
+	u8 post_dat[2];
+	u8 pi_d[4];
+	u8 gpio_io[4];
+	u8 gpio_dir[4];
+	u8 res10[20];
+	u8 rjtag_ctl;
+	u8 rjtag_dat;
+	u8 res11[2];
+	u8 trig_src[4];
+	u8 trig_dst[4];
+	u8 trig_stat;
+	u8 res12[3];
+	u8 trig_ctr[4];
+	u8 res13[16];
+	u8 clk_freq[6];	/* Clock Measurement Registers */
+	u8 res_c6[8];
+	u8 clk_base[2];	/* Clock Frequency Base Reg */
+	u8 res_d0[8];
+	u8 cms[2];	/* Core Management Space Address Register, 0xD8 */
+	u8 res_c0[6];
+	u8 aux2[4];	/* Auxiliary Registers,0xE0 */
+	u8 res14[10];
+	u8 aux_ad;
+	u8 aux_da;
+	u8 res15[16];
+};
+
+u8 qixis_read(unsigned int reg);
+void qixis_write(unsigned int reg, u8 value);
+u16 qixis_read_minor(void);
+char *qixis_read_time(char *result);
+char *qixis_read_tag(char *buf);
+const char *byte_to_binary_mask(u8 val, u8 mask, char *buf);
+#ifdef CONFIG_SYS_I2C_FPGA_ADDR
+u8 qixis_read_i2c(unsigned int reg);
+void qixis_write_i2c(unsigned int reg, u8 value);
+#endif
+
+#if defined(CONFIG_QIXIS_I2C_ACCESS) && defined(CONFIG_SYS_I2C_FPGA_ADDR)
+#define QIXIS_READ(reg) qixis_read_i2c(offsetof(struct qixis, reg))
+#define QIXIS_WRITE(reg, value) \
+	qixis_write_i2c(offsetof(struct qixis, reg), value)
+#else
+#define QIXIS_READ(reg) qixis_read(offsetof(struct qixis, reg))
+#define QIXIS_WRITE(reg, value) qixis_write(offsetof(struct qixis, reg), value)
+#endif
+
+#ifdef CONFIG_SYS_I2C_FPGA_ADDR
+#define QIXIS_READ_I2C(reg) qixis_read_i2c(offsetof(struct qixis, reg))
+#define QIXIS_WRITE_I2C(reg, value) \
+			qixis_write_i2c(offsetof(struct qixis, reg), value)
+#endif
+
+#endif
diff --git a/board/chipsee/common/recovery.c b/board/chipsee/common/recovery.c
new file mode 100644
index 0000000..e6f2137
--- /dev/null
+++ b/board/chipsee/common/recovery.c
@@ -0,0 +1,78 @@
+/*
+ * Copyright (C) 2010-2014 Freescale Semiconductor, Inc. All Rights Reserved.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+#include <common.h>
+#include <malloc.h>
+#include <recovery.h>
+#ifdef CONFIG_MXC_KPD
+#include <mxc_keyb.h>
+#endif
+#include <asm/imx-common/boot_mode.h>
+
+#ifdef CONFIG_MXC_KPD
+#define PRESSED_VOL_DOWN	0x01
+#define PRESSED_POWER	    0x02
+#define RECOVERY_KEY_MASK (PRESSED_VOL_DOWN | PRESSED_POWER)
+
+inline int test_key(int value, struct kpp_key_info *ki)
+{
+	return (ki->val == value) && (ki->evt == KDepress);
+}
+
+int check_key_pressing(void)
+{
+	struct kpp_key_info *key_info = NULL;
+	int state = 0, keys, i;
+
+	int ret = 0;
+
+	mxc_kpp_init();
+	/* due to glitch suppression circuit,
+	   wait sometime to let all keys scanned. */
+	udelay(1000);
+	keys = mxc_kpp_getc(&key_info);
+
+	printf("Detecting VOL_DOWN+POWER key for recovery(%d:%d) ...\n",
+		keys, keys ? key_info->val : 0);
+	if (keys > 1) {
+		for (i = 0; i < keys; i++) {
+			if (test_key(CONFIG_POWER_KEY, &key_info[i]))
+				state |= PRESSED_POWER;
+			else if (test_key(CONFIG_VOL_DOWN_KEY, &key_info[i]))
+				state |= PRESSED_VOL_DOWN;
+		}
+	}
+	if ((state & RECOVERY_KEY_MASK) == RECOVERY_KEY_MASK)
+		ret = 1;
+	if (key_info)
+		free(key_info);
+	return ret;
+}
+#else
+/* If not using mxc keypad, currently we will detect power key on board */
+int check_key_pressing(void)
+{
+	return 0;
+}
+#endif
+
+void setup_recovery_env(void)
+{
+	board_recovery_setup();
+}
+
+/* export to lib_arm/board.c */
+void check_recovery_mode(void)
+{
+	if (check_key_pressing()) {
+		puts("Fastboot: Recovery key pressing got!\n");
+		setup_recovery_env();
+	} else if (check_recovery_cmd_file()) {
+		puts("Fastboot: Recovery command file found!\n");
+		setup_recovery_env();
+	} else {
+		puts("Fastboot: Normal\n");
+	}
+}
diff --git a/board/chipsee/common/sdhc_boot.c b/board/chipsee/common/sdhc_boot.c
new file mode 100644
index 0000000..022f38b
--- /dev/null
+++ b/board/chipsee/common/sdhc_boot.c
@@ -0,0 +1,76 @@
+/*
+ * Copyright 2011 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <mmc.h>
+#include <malloc.h>
+
+/*
+ * The environment variables are written to just after the u-boot image
+ * on SDCard, so we must read the MBR to get the start address and code
+ * length of the u-boot image, then calculate the address of the env.
+ */
+#define ESDHC_BOOT_IMAGE_SIZE	0x48
+#define ESDHC_BOOT_IMAGE_ADDR	0x50
+
+#define ESDHC_DEFAULT_ENVADDR	0x400
+
+int mmc_get_env_addr(struct mmc *mmc, int copy, u32 *env_addr)
+{
+	u8 *tmp_buf;
+	u32 blklen, code_offset, code_len, n;
+
+	blklen = mmc->read_bl_len;
+	tmp_buf = malloc(blklen);
+	if (!tmp_buf)
+		return 1;
+
+	/* read out the first block, get the config data information */
+	n = mmc->block_dev.block_read(mmc->block_dev.dev, 0, 1, tmp_buf);
+	if (!n) {
+		free(tmp_buf);
+		return 1;
+	}
+
+	/* Get the Source Address, from offset 0x50 */
+	code_offset = *(u32 *)(tmp_buf + ESDHC_BOOT_IMAGE_ADDR);
+
+	/* Get the code size from offset 0x48 */
+	code_len = *(u32 *)(tmp_buf + ESDHC_BOOT_IMAGE_SIZE);
+
+#ifdef CONFIG_ESDHC_HC_BLK_ADDR
+	/*
+	 * On soc BSC9131, BSC9132:
+	 * In High Capacity SD Cards (> 2 GBytes), the 32-bit source address and
+	 * code length of these soc specify the memory address in block address
+	 * format. Block length is fixed to 512 bytes as per the SD High
+	 * Capacity specification.
+	 */
+	u64 tmp;
+
+	if (mmc->high_capacity) {
+		tmp = (u64)code_offset * blklen;
+		tmp += code_len * blklen;
+	} else
+		tmp = code_offset + code_len;
+
+	if ((tmp + CONFIG_ENV_SIZE > mmc->capacity) ||
+			(tmp > 0xFFFFFFFFU))
+		*env_addr = ESDHC_DEFAULT_ENVADDR;
+	else
+		*env_addr = tmp;
+
+	free(tmp_buf);
+
+	return 0;
+#endif
+
+	*env_addr = code_offset + code_len;
+
+	free(tmp_buf);
+
+	return 0;
+}
diff --git a/board/chipsee/common/sgmii_riser.c b/board/chipsee/common/sgmii_riser.c
new file mode 100644
index 0000000..5c3c593
--- /dev/null
+++ b/board/chipsee/common/sgmii_riser.c
@@ -0,0 +1,129 @@
+/*
+ * Freescale SGMII Riser Card
+ *
+ * This driver supports the SGMII Riser card found on the
+ * "DS" style of development board from Freescale.
+ *
+ * This software may be used and distributed according to the
+ * terms of the GNU Public License, Version 2, incorporated
+ * herein by reference.
+ *
+ * Copyright 2008 Freescale Semiconductor, Inc.
+ *
+ */
+
+#include <config.h>
+#include <common.h>
+#include <net.h>
+#include <libfdt.h>
+#include <tsec.h>
+#include <fdt_support.h>
+
+void fsl_sgmii_riser_init(struct tsec_info_struct *tsec_info, int num)
+{
+	int i;
+
+	for (i = 0; i < num; i++)
+		if (tsec_info[i].flags & TSEC_SGMII)
+			tsec_info[i].phyaddr += SGMII_RISER_PHY_OFFSET;
+}
+
+void fsl_sgmii_riser_fdt_fixup(void *fdt)
+{
+	struct eth_device *dev;
+	int node;
+	int mdio_node;
+	int i = -1;
+	int etsec_num = 0;
+
+	node = fdt_path_offset(fdt, "/aliases");
+	if (node < 0)
+		return;
+
+	while ((dev = eth_get_dev_by_index(++i)) != NULL) {
+		struct tsec_private *priv;
+		int phy_node;
+		int enet_node;
+		uint32_t ph;
+		char sgmii_phy[16];
+		char enet[16];
+		const u32 *phyh;
+		const char *model;
+		const char *path;
+
+		if (!strstr(dev->name, "eTSEC"))
+			continue;
+
+		priv = dev->priv;
+		if (!(priv->flags & TSEC_SGMII)) {
+			etsec_num++;
+			continue;
+		}
+
+		mdio_node = fdt_node_offset_by_compatible(fdt, -1,
+				"fsl,gianfar-mdio");
+		if (mdio_node < 0)
+			return;
+
+		sprintf(sgmii_phy, "sgmii-phy@%d", etsec_num);
+		phy_node = fdt_subnode_offset(fdt, mdio_node, sgmii_phy);
+		if (phy_node > 0) {
+			fdt_increase_size(fdt, 32);
+			ph = fdt_create_phandle(fdt, phy_node);
+			if (!ph)
+				continue;
+		}
+
+		sprintf(enet, "ethernet%d", etsec_num++);
+		path = fdt_getprop(fdt, node, enet, NULL);
+		if (!path) {
+			debug("No alias for %s\n", enet);
+			continue;
+		}
+
+		enet_node = fdt_path_offset(fdt, path);
+		if (enet_node < 0)
+			continue;
+
+		model = fdt_getprop(fdt, enet_node, "model", NULL);
+
+		/*
+		 * We only want to do this to eTSECs.  On some platforms
+		 * there are more than one type of gianfar-style ethernet
+		 * controller, and as we are creating an implicit connection
+		 * between ethernet nodes and eTSEC devices, it is best to
+		 * make the connection use as much explicit information
+		 * as exists.
+		 */
+		if (!strstr(model, "TSEC"))
+			continue;
+
+		if (phy_node < 0) {
+			/*
+			 * This part is only for old device tree without
+			 * sgmii_phy nodes. It's kept just for compatible
+			 * reason. Soon to be deprecated if all device tree
+			 * get updated.
+			 */
+			phyh = fdt_getprop(fdt, enet_node, "phy-handle", NULL);
+			if (!phyh)
+				continue;
+
+			phy_node = fdt_node_offset_by_phandle(fdt,
+					fdt32_to_cpu(*phyh));
+
+			priv = dev->priv;
+
+			if (priv->flags & TSEC_SGMII)
+				fdt_setprop_cell(fdt, phy_node, "reg",
+						priv->phyaddr);
+		} else {
+			fdt_setprop(fdt, enet_node, "phy-handle", &ph,
+					sizeof(ph));
+			fdt_setprop_string(fdt, enet_node,
+					"phy-connection-type",
+					phy_string_for_interface(
+						PHY_INTERFACE_MODE_SGMII));
+		}
+	}
+}
diff --git a/board/chipsee/common/sgmii_riser.h b/board/chipsee/common/sgmii_riser.h
new file mode 100644
index 0000000..e1fcc85
--- /dev/null
+++ b/board/chipsee/common/sgmii_riser.h
@@ -0,0 +1,16 @@
+/*
+ * Freescale SGMII Riser Card
+ *
+ * This driver supports the SGMII Riser card found on the
+ * "DS" style of development board from Freescale.
+ *
+ * This software may be used and distributed according to the
+ * terms of the GNU Public License, Version 2, incorporated
+ * herein by reference.
+ *
+ * Copyright 2008 Freescale Semiconductor, Inc.
+ *
+ */
+
+void fsl_sgmii_riser_init(struct tsec_info_struct *tsec_info, int num);
+void fsl_sgmii_riser_fdt_fixup(void *fdt);
diff --git a/board/chipsee/common/sleep.h b/board/chipsee/common/sleep.h
new file mode 100644
index 0000000..c26c542
--- /dev/null
+++ b/board/chipsee/common/sleep.h
@@ -0,0 +1,21 @@
+/*
+ * Copyright 2014 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier: GPL-2.0+
+ */
+
+#ifndef __SLEEP_H
+#define __SLEEP_H
+
+#define DCFG_CCSR_CRSTSR_WDRFR	(1 << 3)
+#define DDR_BUFF_LEN			128
+
+/* determine if it is a wakeup from deep sleep */
+bool is_warm_boot(void);
+
+/* disable console output */
+void fsl_dp_disable_console(void);
+
+/* clean up everything and jump to kernel */
+int fsl_dp_resume(void);
+#endif
diff --git a/board/chipsee/common/sys_eeprom.c b/board/chipsee/common/sys_eeprom.c
new file mode 100644
index 0000000..5cb7570
--- /dev/null
+++ b/board/chipsee/common/sys_eeprom.c
@@ -0,0 +1,543 @@
+/*
+ * Copyright 2006, 2008-2009, 2011 Freescale Semiconductor
+ * York Sun (yorksun@freescale.com)
+ * Haiying Wang (haiying.wang@freescale.com)
+ * Timur Tabi (timur@freescale.com)
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <command.h>
+#include <i2c.h>
+#include <linux/ctype.h>
+
+#ifdef CONFIG_SYS_I2C_EEPROM_CCID
+#include "../common/eeprom.h"
+#define MAX_NUM_PORTS	8
+#endif
+
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+/* some boards with non-256-bytes EEPROM have special define */
+/* for MAX_NUM_PORTS in board-specific file */
+#ifndef MAX_NUM_PORTS
+#define MAX_NUM_PORTS	16
+#endif
+#define NXID_VERSION	1
+#endif
+
+/**
+ * static eeprom: EEPROM layout for CCID or NXID formats
+ *
+ * See application note AN3638 for details.
+ */
+static struct __attribute__ ((__packed__)) eeprom {
+#ifdef CONFIG_SYS_I2C_EEPROM_CCID
+	u8 id[4];         /* 0x00 - 0x03 EEPROM Tag 'CCID' */
+	u8 major;         /* 0x04        Board revision, major */
+	u8 minor;         /* 0x05        Board revision, minor */
+	u8 sn[10];        /* 0x06 - 0x0F Serial Number*/
+	u8 errata[2];     /* 0x10 - 0x11 Errata Level */
+	u8 date[6];       /* 0x12 - 0x17 Build Date */
+	u8 res_0[40];     /* 0x18 - 0x3f Reserved */
+	u8 mac_count;     /* 0x40        Number of MAC addresses */
+	u8 mac_flag;      /* 0x41        MAC table flags */
+	u8 mac[MAX_NUM_PORTS][6];     /* 0x42 - 0x71 MAC addresses */
+	u32 crc;          /* 0x72        CRC32 checksum */
+#endif
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+	u8 id[4];         /* 0x00 - 0x03 EEPROM Tag 'NXID' */
+	u8 sn[12];        /* 0x04 - 0x0F Serial Number */
+	u8 errata[5];     /* 0x10 - 0x14 Errata Level */
+	u8 date[6];       /* 0x15 - 0x1a Build Date */
+	u8 res_0;         /* 0x1b        Reserved */
+	u32 version;      /* 0x1c - 0x1f NXID Version */
+	u8 tempcal[8];    /* 0x20 - 0x27 Temperature Calibration Factors */
+	u8 tempcalsys[2]; /* 0x28 - 0x29 System Temperature Calibration Factors */
+	u8 tempcalflags;  /* 0x2a        Temperature Calibration Flags */
+	u8 res_1[21];     /* 0x2b - 0x3f Reserved */
+	u8 mac_count;     /* 0x40        Number of MAC addresses */
+	u8 mac_flag;      /* 0x41        MAC table flags */
+	u8 mac[MAX_NUM_PORTS][6];     /* 0x42 - 0xa1 MAC addresses */
+	u8 res_2[90];     /* 0xa2 - 0xfb Reserved */	
+	u32 crc;          /* 0xfc - 0xff CRC32 checksum */
+#endif
+} e;
+
+/* Set to 1 if we've read EEPROM into memory */
+static int has_been_read = 0;
+
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+/* Is this a valid NXID EEPROM? */
+#define is_valid ((e.id[0] == 'N') || (e.id[1] == 'X') || \
+		  (e.id[2] == 'I') || (e.id[3] == 'D'))
+#endif
+
+#ifdef CONFIG_SYS_I2C_EEPROM_CCID
+/* Is this a valid CCID EEPROM? */
+#define is_valid ((e.id[0] == 'C') || (e.id[1] == 'C') || \
+		  (e.id[2] == 'I') || (e.id[3] == 'D'))
+#endif
+
+/**
+ * show_eeprom - display the contents of the EEPROM
+ */
+static void show_eeprom(void)
+{
+	int i;
+	unsigned int crc;
+
+	/* EEPROM tag ID, either CCID or NXID */
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+	printf("ID: %c%c%c%c v%u\n", e.id[0], e.id[1], e.id[2], e.id[3],
+	       e.version);
+#else
+	printf("ID: %c%c%c%c\n", e.id[0], e.id[1], e.id[2], e.id[3]);
+#endif
+
+	/* Serial number */
+	printf("SN: %s\n", e.sn);
+
+	/* Errata level. */
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+	printf("Errata: %s\n", e.errata);
+#else
+	printf("Errata: %c%c\n",
+		e.errata[0] ? e.errata[0] : '.',
+		e.errata[1] ? e.errata[1] : '.');
+#endif
+
+	/* Build date, BCD date values, as YYMMDDhhmmss */
+	printf("Build date: 20%02x/%02x/%02x %02x:%02x:%02x %s\n",
+		e.date[0], e.date[1], e.date[2],
+		e.date[3] & 0x7F, e.date[4], e.date[5],
+		e.date[3] & 0x80 ? "PM" : "");
+
+	/* Show MAC addresses  */
+	for (i = 0; i < min(e.mac_count, (u8)MAX_NUM_PORTS); i++) {
+
+		u8 *p = e.mac[i];
+
+		printf("Eth%u: %02x:%02x:%02x:%02x:%02x:%02x\n", i,
+			p[0], p[1], p[2], p[3],	p[4], p[5]);
+	}
+
+	crc = crc32(0, (void *)&e, sizeof(e) - 4);
+
+	if (crc == be32_to_cpu(e.crc))
+		printf("CRC: %08x\n", be32_to_cpu(e.crc));
+	else
+		printf("CRC: %08x (should be %08x)\n",
+			be32_to_cpu(e.crc), crc);
+
+#ifdef DEBUG
+	printf("EEPROM dump: (0x%x bytes)\n", sizeof(e));
+	for (i = 0; i < sizeof(e); i++) {
+		if ((i % 16) == 0)
+			printf("%02X: ", i);
+		printf("%02X ", ((u8 *)&e)[i]);
+		if (((i % 16) == 15) || (i == sizeof(e) - 1))
+			printf("\n");
+	}
+#endif
+}
+
+/**
+ * read_eeprom - read the EEPROM into memory
+ */
+static int read_eeprom(void)
+{
+	int ret;
+#ifdef CONFIG_SYS_EEPROM_BUS_NUM
+	unsigned int bus;
+#endif
+
+	if (has_been_read)
+		return 0;
+
+#ifdef CONFIG_SYS_EEPROM_BUS_NUM
+	bus = i2c_get_bus_num();
+	i2c_set_bus_num(CONFIG_SYS_EEPROM_BUS_NUM);
+#endif
+
+	ret = i2c_read(CONFIG_SYS_I2C_EEPROM_ADDR, 0, CONFIG_SYS_I2C_EEPROM_ADDR_LEN,
+		(void *)&e, sizeof(e));
+
+#ifdef CONFIG_SYS_EEPROM_BUS_NUM
+	i2c_set_bus_num(bus);
+#endif
+
+#ifdef DEBUG
+	show_eeprom();
+#endif
+
+	has_been_read = (ret == 0) ? 1 : 0;
+
+	return ret;
+}
+
+/**
+ *  update_crc - update the CRC
+ *
+ *  This function should be called after each update to the EEPROM structure,
+ *  to make sure the CRC is always correct.
+ */
+static void update_crc(void)
+{
+	u32 crc;
+
+	crc = crc32(0, (void *)&e, sizeof(e) - 4);
+	e.crc = cpu_to_be32(crc);
+}
+
+/**
+ * prog_eeprom - write the EEPROM from memory
+ */
+static int prog_eeprom(void)
+{
+	int ret = 0;
+	int i;
+	void *p;
+#ifdef CONFIG_SYS_EEPROM_BUS_NUM
+	unsigned int bus;
+#endif
+
+	/* Set the reserved values to 0xFF   */
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+	e.res_0 = 0xFF;
+	memset(e.res_1, 0xFF, sizeof(e.res_1));
+#else
+	memset(e.res_0, 0xFF, sizeof(e.res_0));
+#endif
+	update_crc();
+
+#ifdef CONFIG_SYS_EEPROM_BUS_NUM
+	bus = i2c_get_bus_num();
+	i2c_set_bus_num(CONFIG_SYS_EEPROM_BUS_NUM);
+#endif
+
+	/*
+	 * The AT24C02 datasheet says that data can only be written in page
+	 * mode, which means 8 bytes at a time, and it takes up to 5ms to
+	 * complete a given write.
+	 */
+	for (i = 0, p = &e; i < sizeof(e); i += 8, p += 8) {
+		ret = i2c_write(CONFIG_SYS_I2C_EEPROM_ADDR, i, CONFIG_SYS_I2C_EEPROM_ADDR_LEN,
+				p, min((int)(sizeof(e) - i), 8));
+		if (ret)
+			break;
+		udelay(5000);	/* 5ms write cycle timing */
+	}
+
+	if (!ret) {
+		/* Verify the write by reading back the EEPROM and comparing */
+		struct eeprom e2;
+
+		ret = i2c_read(CONFIG_SYS_I2C_EEPROM_ADDR, 0,
+			CONFIG_SYS_I2C_EEPROM_ADDR_LEN, (void *)&e2, sizeof(e2));
+		if (!ret && memcmp(&e, &e2, sizeof(e)))
+			ret = -1;
+	}
+
+#ifdef CONFIG_SYS_EEPROM_BUS_NUM
+	i2c_set_bus_num(bus);
+#endif
+
+	if (ret) {
+		printf("Programming failed.\n");
+		has_been_read = 0;
+		return -1;
+	}
+
+	printf("Programming passed.\n");
+	return 0;
+}
+
+/**
+ * h2i - converts hex character into a number
+ *
+ * This function takes a hexadecimal character (e.g. '7' or 'C') and returns
+ * the integer equivalent.
+ */
+static inline u8 h2i(char p)
+{
+	if ((p >= '0') && (p <= '9'))
+		return p - '0';
+
+	if ((p >= 'A') && (p <= 'F'))
+		return (p - 'A') + 10;
+
+	if ((p >= 'a') && (p <= 'f'))
+		return (p - 'a') + 10;
+
+	return 0;
+}
+
+/**
+ * set_date - stores the build date into the EEPROM
+ *
+ * This function takes a pointer to a string in the format "YYMMDDhhmmss"
+ * (2-digit year, 2-digit month, etc), converts it to a 6-byte BCD string,
+ * and stores it in the build date field of the EEPROM local copy.
+ */
+static void set_date(const char *string)
+{
+	unsigned int i;
+
+	if (strlen(string) != 12) {
+		printf("Usage: mac date YYMMDDhhmmss\n");
+		return;
+	}
+
+	for (i = 0; i < 6; i++)
+		e.date[i] = h2i(string[2 * i]) << 4 | h2i(string[2 * i + 1]);
+
+	update_crc();
+}
+
+/**
+ * set_mac_address - stores a MAC address into the EEPROM
+ *
+ * This function takes a pointer to MAC address string
+ * (i.e."XX:XX:XX:XX:XX:XX", where "XX" is a two-digit hex number) and
+ * stores it in one of the MAC address fields of the EEPROM local copy.
+ */
+static void set_mac_address(unsigned int index, const char *string)
+{
+	char *p = (char *) string;
+	unsigned int i;
+
+	if ((index >= MAX_NUM_PORTS) || !string) {
+		printf("Usage: mac <n> XX:XX:XX:XX:XX:XX\n");
+		return;
+	}
+
+	for (i = 0; *p && (i < 6); i++) {
+		e.mac[index][i] = simple_strtoul(p, &p, 16);
+		if (*p == ':')
+			p++;
+	}
+
+	update_crc();
+}
+
+int do_mac(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
+{
+	char cmd;
+
+	if (argc == 1) {
+		show_eeprom();
+		return 0;
+	}
+
+	cmd = argv[1][0];
+
+	if (cmd == 'r') {
+		read_eeprom();
+		return 0;
+	}
+
+	if (cmd == 'i') {
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+		memcpy(e.id, "NXID", sizeof(e.id));
+		e.version = NXID_VERSION;
+#else
+		memcpy(e.id, "CCID", sizeof(e.id));
+#endif
+		update_crc();
+		return 0;
+	}
+
+	if (!is_valid) {
+		printf("Please read the EEPROM ('r') and/or set the ID ('i') first.\n");
+		return 0;
+	}
+
+	if (argc == 2) {
+		switch (cmd) {
+		case 's':	/* save */
+			prog_eeprom();
+			break;
+		default:
+			return cmd_usage(cmdtp);
+		}
+
+		return 0;
+	}
+
+	/* We know we have at least one parameter  */
+
+	switch (cmd) {
+	case 'n':	/* serial number */
+		memset(e.sn, 0, sizeof(e.sn));
+		strncpy((char *)e.sn, argv[2], sizeof(e.sn) - 1);
+		update_crc();
+		break;
+	case 'e':	/* errata */
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+		memset(e.errata, 0, 5);
+		strncpy((char *)e.errata, argv[2], 4);
+#else
+		e.errata[0] = argv[2][0];
+		e.errata[1] = argv[2][1];
+#endif
+		update_crc();
+		break;
+	case 'd':	/* date BCD format YYMMDDhhmmss */
+		set_date(argv[2]);
+		break;
+	case 'p':	/* MAC table size */
+		e.mac_count = simple_strtoul(argv[2], NULL, 16);
+		update_crc();
+		break;
+	case '0' ... '9':	/* "mac 0" through "mac 22" */
+		set_mac_address(simple_strtoul(argv[1], NULL, 10), argv[2]);
+		break;
+	case 'h':	/* help */
+	default:
+		return cmd_usage(cmdtp);
+	}
+
+	return 0;
+}
+
+/**
+ * mac_read_from_eeprom - read the MAC addresses from EEPROM
+ *
+ * This function reads the MAC addresses from EEPROM and sets the
+ * appropriate environment variables for each one read.
+ *
+ * The environment variables are only set if they haven't been set already.
+ * This ensures that any user-saved variables are never overwritten.
+ *
+ * This function must be called after relocation.
+ *
+ * For NXID v1 EEPROMs, we support loading and up-converting the older NXID v0
+ * format.  In a v0 EEPROM, there are only eight MAC addresses and the CRC is
+ * located at a different offset.
+ */
+int mac_read_from_eeprom(void)
+{
+	unsigned int i;
+	u32 crc, crc_offset = offsetof(struct eeprom, crc);
+	u32 *crcp; /* Pointer to the CRC in the data read from the EEPROM */
+
+	puts("EEPROM: ");
+
+	if (read_eeprom()) {
+		printf("Read failed.\n");
+		return 0;
+	}
+
+	if (!is_valid) {
+		printf("Invalid ID (%02x %02x %02x %02x)\n",
+		       e.id[0], e.id[1], e.id[2], e.id[3]);
+		return 0;
+	}
+
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+	/*
+	 * If we've read an NXID v0 EEPROM, then we need to set the CRC offset
+	 * to where it is in v0.
+	 */
+	if (e.version == 0)
+		crc_offset = 0x72;
+#endif
+
+	crc = crc32(0, (void *)&e, crc_offset);
+	crcp = (void *)&e + crc_offset;
+	if (crc != be32_to_cpu(*crcp)) {
+		printf("CRC mismatch (%08x != %08x)\n", crc, be32_to_cpu(e.crc));
+		return 0;
+	}
+
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+	/*
+	 * MAC address #9 in v1 occupies the same position as the CRC in v0.
+	 * Erase it so that it's not mistaken for a MAC address.  We'll
+	 * update the CRC later.
+	 */
+	if (e.version == 0)
+		memset(e.mac[8], 0xff, 6);
+#endif
+
+	for (i = 0; i < min(e.mac_count, (u8)MAX_NUM_PORTS); i++) {
+		if (memcmp(&e.mac[i], "\0\0\0\0\0\0", 6) &&
+		    memcmp(&e.mac[i], "\xFF\xFF\xFF\xFF\xFF\xFF", 6)) {
+			char ethaddr[18];
+			char enetvar[9];
+
+			sprintf(ethaddr, "%02X:%02X:%02X:%02X:%02X:%02X",
+				e.mac[i][0],
+				e.mac[i][1],
+				e.mac[i][2],
+				e.mac[i][3],
+				e.mac[i][4],
+				e.mac[i][5]);
+			sprintf(enetvar, i ? "eth%daddr" : "ethaddr", i);
+			/* Only initialize environment variables that are blank
+			 * (i.e. have not yet been set)
+			 */
+			if (!getenv(enetvar))
+				setenv(enetvar, ethaddr);
+		}
+	}
+
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+	printf("%c%c%c%c v%u\n", e.id[0], e.id[1], e.id[2], e.id[3],
+	       e.version);
+#else
+	printf("%c%c%c%c\n", e.id[0], e.id[1], e.id[2], e.id[3]);
+#endif
+
+#ifdef CONFIG_SYS_I2C_EEPROM_NXID
+	/*
+	 * Now we need to upconvert the data into v1 format.  We do this last so
+	 * that at boot time, U-Boot will still say "NXID v0".
+	 */
+	if (e.version == 0) {
+		e.version = NXID_VERSION;
+		update_crc();
+	}
+#endif
+
+	return 0;
+}
+
+#ifdef CONFIG_SYS_I2C_EEPROM_CCID
+
+/**
+ * get_cpu_board_revision - get the CPU board revision on 85xx boards
+ *
+ * Read the EEPROM to determine the board revision.
+ *
+ * This function is called before relocation, so we need to read a private
+ * copy of the EEPROM into a local variable on the stack.
+ *
+ * Also, we assume that CONFIG_SYS_EEPROM_BUS_NUM == CONFIG_SYS_SPD_BUS_NUM.  The global
+ * variable i2c_bus_num must be compile-time initialized to CONFIG_SYS_SPD_BUS_NUM,
+ * so that the SPD code will work.  This means that all pre-relocation I2C
+ * operations can only occur on the CONFIG_SYS_SPD_BUS_NUM bus.  So if
+ * CONFIG_SYS_EEPROM_BUS_NUM != CONFIG_SYS_SPD_BUS_NUM, then we can't read the EEPROM when
+ * this function is called.  Oh well.
+ */
+unsigned int get_cpu_board_revision(void)
+{
+	struct board_eeprom {
+		u32 id;           /* 0x00 - 0x03 EEPROM Tag 'CCID' */
+		u8 major;         /* 0x04        Board revision, major */
+		u8 minor;         /* 0x05        Board revision, minor */
+	} be;
+
+	i2c_read(CONFIG_SYS_I2C_EEPROM_ADDR, 0, CONFIG_SYS_I2C_EEPROM_ADDR_LEN,
+		(void *)&be, sizeof(be));
+
+	if (be.id != (('C' << 24) | ('C' << 16) | ('I' << 8) | 'D'))
+		return MPC85XX_CPU_BOARD_REV(0, 0);
+
+	if ((be.major == 0xff) && (be.minor == 0xff))
+		return MPC85XX_CPU_BOARD_REV(0, 0);
+
+	return MPC85XX_CPU_BOARD_REV(be.major, be.minor);
+}
+#endif
diff --git a/board/chipsee/common/via.h b/board/chipsee/common/via.h
new file mode 100644
index 0000000..77cfacc
--- /dev/null
+++ b/board/chipsee/common/via.h
@@ -0,0 +1,18 @@
+#ifndef _MPC85xx_VIA_H
+void mpc85xx_config_via(struct pci_controller* hose, pci_dev_t dev, struct pci_config_table *tab);
+
+/* Function 1, IDE */
+void mpc85xx_config_via_usbide(struct pci_controller* hose, pci_dev_t dev, struct pci_config_table *tab);
+
+/* Function 2, USB ports 0-1 */
+void mpc85xx_config_via_usb(struct pci_controller* hose, pci_dev_t dev, struct pci_config_table *tab);
+
+/* Function 3, USB ports 2-3 */
+void mpc85xx_config_via_usb2(struct pci_controller* hose, pci_dev_t dev, struct pci_config_table *tab);
+
+/* Function 5, Power Management */
+void mpc85xx_config_via_power(struct pci_controller* hose, pci_dev_t dev, struct pci_config_table *tab);
+
+/* Function 6, AC97 Interface */
+void mpc85xx_config_via_ac97(struct pci_controller* hose, pci_dev_t dev, struct pci_config_table *tab);
+#endif /* _MPC85xx_VIA_H */
diff --git a/board/chipsee/common/vid.c b/board/chipsee/common/vid.c
new file mode 100644
index 0000000..6b8af14
--- /dev/null
+++ b/board/chipsee/common/vid.c
@@ -0,0 +1,491 @@
+/*
+ * Copyright 2014 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+#include <common.h>
+#include <command.h>
+#include <i2c.h>
+#include <asm/immap_85xx.h>
+#include "vid.h"
+
+DECLARE_GLOBAL_DATA_PTR;
+
+int __weak i2c_multiplexer_select_vid_channel(u8 channel)
+{
+	return 0;
+}
+
+/*
+ * Compensate for a board specific voltage drop between regulator and SoC
+ * return a value in mV
+ */
+int __weak board_vdd_drop_compensation(void)
+{
+	return 0;
+}
+
+/*
+ * Get the i2c address configuration for the IR regulator chip
+ *
+ * There are some variance in the RDB HW regarding the I2C address configuration
+ * for the IR regulator chip, which is likely a problem of external resistor
+ * accuracy. So we just check each address in a hopefully non-intrusive mode
+ * and use the first one that seems to work
+ *
+ * The IR chip can show up under the following addresses:
+ * 0x08 (Verified on T1040RDB-PA,T4240RDB-PB,X-T4240RDB-16GPA)
+ * 0x09 (Verified on T1040RDB-PA)
+ * 0x38 (Verified on T2080QDS, T2081QDS)
+ */
+static int find_ir_chip_on_i2c(void)
+{
+	int i2caddress;
+	int ret;
+	u8 byte;
+	int i;
+	const int ir_i2c_addr[] = {0x38, 0x08, 0x09};
+
+	/* Check all the address */
+	for (i = 0; i < (sizeof(ir_i2c_addr)/sizeof(ir_i2c_addr[0])); i++) {
+		i2caddress = ir_i2c_addr[i];
+		ret = i2c_read(i2caddress,
+			       IR36021_MFR_ID_OFFSET, 1, (void *)&byte,
+			       sizeof(byte));
+		if ((ret >= 0) && (byte == IR36021_MFR_ID))
+			return i2caddress;
+	}
+	return -1;
+}
+
+/* Maximum loop count waiting for new voltage to take effect */
+#define MAX_LOOP_WAIT_NEW_VOL		100
+/* Maximum loop count waiting for the voltage to be stable */
+#define MAX_LOOP_WAIT_VOL_STABLE	100
+/*
+ * read_voltage from sensor on I2C bus
+ * We use average of 4 readings, waiting for WAIT_FOR_ADC before
+ * another reading
+ */
+#define NUM_READINGS    4       /* prefer to be power of 2 for efficiency */
+
+/* If an INA220 chip is available, we can use it to read back the voltage
+ * as it may have a higher accuracy than the IR chip for the same purpose
+ */
+#ifdef CONFIG_VOL_MONITOR_INA220
+#define WAIT_FOR_ADC	532	/* wait for 532 microseconds for ADC */
+#define ADC_MIN_ACCURACY	4
+#else
+#define WAIT_FOR_ADC	138	/* wait for 138 microseconds for ADC */
+#define ADC_MIN_ACCURACY	4
+#endif
+
+#ifdef CONFIG_VOL_MONITOR_INA220
+static int read_voltage_from_INA220(int i2caddress)
+{
+	int i, ret, voltage_read = 0;
+	u16 vol_mon;
+	u8 buf[2];
+
+	for (i = 0; i < NUM_READINGS; i++) {
+		ret = i2c_read(I2C_VOL_MONITOR_ADDR,
+			       I2C_VOL_MONITOR_BUS_V_OFFSET, 1,
+			       (void *)&buf, 2);
+		if (ret) {
+			printf("VID: failed to read core voltage\n");
+			return ret;
+		}
+		vol_mon = (buf[0] << 8) | buf[1];
+		if (vol_mon & I2C_VOL_MONITOR_BUS_V_OVF) {
+			printf("VID: Core voltage sensor error\n");
+			return -1;
+		}
+		debug("VID: bus voltage reads 0x%04x\n", vol_mon);
+		/* LSB = 4mv */
+		voltage_read += (vol_mon >> I2C_VOL_MONITOR_BUS_V_SHIFT) * 4;
+		udelay(WAIT_FOR_ADC);
+	}
+	/* calculate the average */
+	voltage_read /= NUM_READINGS;
+
+	return voltage_read;
+}
+#endif
+
+/* read voltage from IR */
+#ifdef CONFIG_VOL_MONITOR_IR36021_READ
+static int read_voltage_from_IR(int i2caddress)
+{
+	int i, ret, voltage_read = 0;
+	u16 vol_mon;
+	u8 buf;
+
+	for (i = 0; i < NUM_READINGS; i++) {
+		ret = i2c_read(i2caddress,
+			       IR36021_LOOP1_VOUT_OFFSET,
+			       1, (void *)&buf, 1);
+		if (ret) {
+			printf("VID: failed to read vcpu\n");
+			return ret;
+		}
+		vol_mon = buf;
+		if (!vol_mon) {
+			printf("VID: Core voltage sensor error\n");
+			return -1;
+		}
+		debug("VID: bus voltage reads 0x%02x\n", vol_mon);
+		/* Resolution is 1/128V. We scale up here to get 1/128mV
+		 * and divide at the end
+		 */
+		voltage_read += vol_mon * 1000;
+		udelay(WAIT_FOR_ADC);
+	}
+	/* Scale down to the real mV as IR resolution is 1/128V, rounding up */
+	voltage_read = DIV_ROUND_UP(voltage_read, 128);
+
+	/* calculate the average */
+	voltage_read /= NUM_READINGS;
+
+	/* Compensate for a board specific voltage drop between regulator and
+	 * SoC before converting into an IR VID value
+	 */
+	voltage_read -= board_vdd_drop_compensation();
+
+	return voltage_read;
+}
+#endif
+
+static int read_voltage(int i2caddress)
+{
+	int voltage_read;
+#ifdef CONFIG_VOL_MONITOR_INA220
+	voltage_read = read_voltage_from_INA220(i2caddress);
+#elif defined CONFIG_VOL_MONITOR_IR36021_READ
+	voltage_read = read_voltage_from_IR(i2caddress);
+#else
+	return -1;
+#endif
+	return voltage_read;
+}
+
+/*
+ * We need to calculate how long before the voltage stops to drop
+ * or increase. It returns with the loop count. Each loop takes
+ * several readings (WAIT_FOR_ADC)
+ */
+static int wait_for_new_voltage(int vdd, int i2caddress)
+{
+	int timeout, vdd_current;
+
+	vdd_current = read_voltage(i2caddress);
+	/* wait until voltage starts to reach the target. Voltage slew
+	 * rates by typical regulators will always lead to stable readings
+	 * within each fairly long ADC interval in comparison to the
+	 * intended voltage delta change until the target voltage is
+	 * reached. The fairly small voltage delta change to any target
+	 * VID voltage also means that this function will always complete
+	 * within few iterations. If the timeout was ever reached, it would
+	 * point to a serious failure in the regulator system.
+	 */
+	for (timeout = 0;
+	     abs(vdd - vdd_current) > (IR_VDD_STEP_UP + IR_VDD_STEP_DOWN) &&
+	     timeout < MAX_LOOP_WAIT_NEW_VOL; timeout++) {
+		vdd_current = read_voltage(i2caddress);
+	}
+	if (timeout >= MAX_LOOP_WAIT_NEW_VOL) {
+		printf("VID: Voltage adjustment timeout\n");
+		return -1;
+	}
+	return timeout;
+}
+
+/*
+ * this function keeps reading the voltage until it is stable or until the
+ * timeout expires
+ */
+static int wait_for_voltage_stable(int i2caddress)
+{
+	int timeout, vdd_current, vdd;
+
+	vdd = read_voltage(i2caddress);
+	udelay(NUM_READINGS * WAIT_FOR_ADC);
+
+	/* wait until voltage is stable */
+	vdd_current = read_voltage(i2caddress);
+	/* The maximum timeout is
+	 * MAX_LOOP_WAIT_VOL_STABLE * NUM_READINGS * WAIT_FOR_ADC
+	 */
+	for (timeout = MAX_LOOP_WAIT_VOL_STABLE;
+	     abs(vdd - vdd_current) > ADC_MIN_ACCURACY &&
+	     timeout > 0; timeout--) {
+		vdd = vdd_current;
+		udelay(NUM_READINGS * WAIT_FOR_ADC);
+		vdd_current = read_voltage(i2caddress);
+	}
+	if (timeout == 0)
+		return -1;
+	return vdd_current;
+}
+
+#ifdef CONFIG_VOL_MONITOR_IR36021_SET
+/* Set the voltage to the IR chip */
+static int set_voltage_to_IR(int i2caddress, int vdd)
+{
+	int wait, vdd_last;
+	int ret;
+	u8 vid;
+
+	/* Compensate for a board specific voltage drop between regulator and
+	 * SoC before converting into an IR VID value
+	 */
+	vdd += board_vdd_drop_compensation();
+	vid = DIV_ROUND_UP(vdd - 245, 5);
+
+	ret = i2c_write(i2caddress, IR36021_LOOP1_MANUAL_ID_OFFSET,
+			1, (void *)&vid, sizeof(vid));
+	if (ret) {
+		printf("VID: failed to write VID\n");
+		return -1;
+	}
+	wait = wait_for_new_voltage(vdd, i2caddress);
+	if (wait < 0)
+		return -1;
+	debug("VID: Waited %d us\n", wait * NUM_READINGS * WAIT_FOR_ADC);
+
+	vdd_last = wait_for_voltage_stable(i2caddress);
+	if (vdd_last < 0)
+		return -1;
+	debug("VID: Current voltage is %d mV\n", vdd_last);
+	return vdd_last;
+}
+#endif
+
+static int set_voltage(int i2caddress, int vdd)
+{
+	int vdd_last = -1;
+
+#ifdef CONFIG_VOL_MONITOR_IR36021_SET
+	vdd_last = set_voltage_to_IR(i2caddress, vdd);
+#else
+	#error Specific voltage monitor must be defined
+#endif
+	return vdd_last;
+}
+
+int adjust_vdd(ulong vdd_override)
+{
+	int re_enable = disable_interrupts();
+	ccsr_gur_t __iomem *gur =
+		(void __iomem *)(CONFIG_SYS_MPC85xx_GUTS_ADDR);
+	u32 fusesr;
+	u8 vid;
+	int vdd_target, vdd_current, vdd_last;
+	int ret, i2caddress;
+	unsigned long vdd_string_override;
+	char *vdd_string;
+	static const uint16_t vdd[32] = {
+		0,      /* unused */
+		9875,   /* 0.9875V */
+		9750,
+		9625,
+		9500,
+		9375,
+		9250,
+		9125,
+		9000,
+		8875,
+		8750,
+		8625,
+		8500,
+		8375,
+		8250,
+		8125,
+		10000,  /* 1.0000V */
+		10125,
+		10250,
+		10375,
+		10500,
+		10625,
+		10750,
+		10875,
+		11000,
+		0,      /* reserved */
+	};
+	struct vdd_drive {
+		u8 vid;
+		unsigned voltage;
+	};
+
+	ret = i2c_multiplexer_select_vid_channel(I2C_MUX_CH_VOL_MONITOR);
+	if (ret) {
+		debug("VID: I2C failed to switch channel\n");
+		ret = -1;
+		goto exit;
+	}
+	ret = find_ir_chip_on_i2c();
+	if (ret < 0) {
+		printf("VID: Could not find voltage regulator on I2C.\n");
+		ret = -1;
+		goto exit;
+	} else {
+		i2caddress = ret;
+		debug("VID: IR Chip found on I2C address 0x%02x\n", i2caddress);
+	}
+
+	/* get the voltage ID from fuse status register */
+	fusesr = in_be32(&gur->dcfg_fusesr);
+	/*
+	 * VID is used according to the table below
+	 *                ---------------------------------------
+	 *                |                DA_V                 |
+	 *                |-------------------------------------|
+	 *                | 5b00000 | 5b00001-5b11110 | 5b11111 |
+	 * ---------------+---------+-----------------+---------|
+	 * | D | 5b00000  | NO VID  | VID = DA_V      | NO VID  |
+	 * | A |----------+---------+-----------------+---------|
+	 * | _ | 5b00001  |VID =    | VID =           |VID =    |
+	 * | V |   ~      | DA_V_ALT|   DA_V_ALT      | DA_A_VLT|
+	 * | _ | 5b11110  |         |                 |         |
+	 * | A |----------+---------+-----------------+---------|
+	 * | L | 5b11111  | No VID  | VID = DA_V      | NO VID  |
+	 * | T |          |         |                 |         |
+	 * ------------------------------------------------------
+	 */
+	vid = (fusesr >> FSL_CORENET_DCFG_FUSESR_ALTVID_SHIFT) &
+		FSL_CORENET_DCFG_FUSESR_ALTVID_MASK;
+	if ((vid == 0) || (vid == FSL_CORENET_DCFG_FUSESR_ALTVID_MASK)) {
+		vid = (fusesr >> FSL_CORENET_DCFG_FUSESR_VID_SHIFT) &
+			FSL_CORENET_DCFG_FUSESR_VID_MASK;
+	}
+	vdd_target = vdd[vid];
+
+	/* check override variable for overriding VDD */
+	vdd_string = getenv(CONFIG_VID_FLS_ENV);
+	if (vdd_override == 0 && vdd_string &&
+	    !strict_strtoul(vdd_string, 10, &vdd_string_override))
+		vdd_override = vdd_string_override;
+	if (vdd_override >= VDD_MV_MIN && vdd_override <= VDD_MV_MAX) {
+		vdd_target = vdd_override * 10; /* convert to 1/10 mV */
+		debug("VDD override is %lu\n", vdd_override);
+	} else if (vdd_override != 0) {
+		printf("Invalid value.\n");
+	}
+	if (vdd_target == 0) {
+		debug("VID: VID not used\n");
+		ret = 0;
+		goto exit;
+	} else {
+		/* divide and round up by 10 to get a value in mV */
+		vdd_target = DIV_ROUND_UP(vdd_target, 10);
+		debug("VID: vid = %d mV\n", vdd_target);
+	}
+
+	/*
+	 * Read voltage monitor to check real voltage.
+	 */
+	vdd_last = read_voltage(i2caddress);
+	if (vdd_last < 0) {
+		printf("VID: Couldn't read sensor abort VID adjustment\n");
+		ret = -1;
+		goto exit;
+	}
+	vdd_current = vdd_last;
+	debug("VID: Core voltage is currently at %d mV\n", vdd_last);
+	/*
+	  * Adjust voltage to at or one step above target.
+	  * As measurements are less precise than setting the values
+	  * we may run through dummy steps that cancel each other
+	  * when stepping up and then down.
+	  */
+	while (vdd_last > 0 &&
+	       vdd_last < vdd_target) {
+		vdd_current += IR_VDD_STEP_UP;
+		vdd_last = set_voltage(i2caddress, vdd_current);
+	}
+	while (vdd_last > 0 &&
+	       vdd_last > vdd_target + (IR_VDD_STEP_DOWN - 1)) {
+		vdd_current -= IR_VDD_STEP_DOWN;
+		vdd_last = set_voltage(i2caddress, vdd_current);
+	}
+
+	if (vdd_last > 0)
+		printf("VID: Core voltage after adjustment is at %d mV\n",
+		       vdd_last);
+	else
+		ret = -1;
+exit:
+	if (re_enable)
+		enable_interrupts();
+	return ret;
+}
+
+static int print_vdd(void)
+{
+	int vdd_last, ret, i2caddress;
+
+	ret = i2c_multiplexer_select_vid_channel(I2C_MUX_CH_VOL_MONITOR);
+	if (ret) {
+		debug("VID : I2c failed to switch channel\n");
+		return -1;
+	}
+	ret = find_ir_chip_on_i2c();
+	if (ret < 0) {
+		printf("VID: Could not find voltage regulator on I2C.\n");
+		return -1;
+	} else {
+		i2caddress = ret;
+		debug("VID: IR Chip found on I2C address 0x%02x\n", i2caddress);
+	}
+
+	/*
+	 * Read voltage monitor to check real voltage.
+	 */
+	vdd_last = read_voltage(i2caddress);
+	if (vdd_last < 0) {
+		printf("VID: Couldn't read sensor abort VID adjustment\n");
+		return -1;
+	}
+	printf("VID: Core voltage is at %d mV\n", vdd_last);
+
+	return 0;
+}
+
+static int do_vdd_override(cmd_tbl_t *cmdtp,
+			   int flag, int argc,
+			   char * const argv[])
+{
+	ulong override;
+
+	if (argc < 2)
+		return CMD_RET_USAGE;
+
+	if (!strict_strtoul(argv[1], 10, &override))
+		adjust_vdd(override);   /* the value is checked by callee */
+	else
+		return CMD_RET_USAGE;
+	return 0;
+}
+
+static int do_vdd_read(cmd_tbl_t *cmdtp,
+			 int flag, int argc,
+			 char * const argv[])
+{
+	if (argc < 1)
+		return CMD_RET_USAGE;
+	print_vdd();
+
+	return 0;
+}
+
+U_BOOT_CMD(
+	vdd_override, 2, 0, do_vdd_override,
+	"override VDD",
+	" - override with the voltage specified in mV, eg. 1050"
+);
+
+U_BOOT_CMD(
+	vdd_read, 1, 0, do_vdd_read,
+	"read VDD",
+	" - Read the voltage specified in mV"
+)
diff --git a/board/chipsee/common/vid.h b/board/chipsee/common/vid.h
new file mode 100644
index 0000000..a9c7bb4
--- /dev/null
+++ b/board/chipsee/common/vid.h
@@ -0,0 +1,20 @@
+/*
+ * Copyright 2014 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+#ifndef __VID_H_
+#define __VID_H_
+
+#define IR36021_LOOP1_MANUAL_ID_OFFSET	0x6A
+#define IR36021_LOOP1_VOUT_OFFSET	0x9A
+#define IR36021_MFR_ID_OFFSET		0x92
+#define IR36021_MFR_ID			0x43
+
+/* step the IR regulator in 5mV increments */
+#define IR_VDD_STEP_DOWN		5
+#define IR_VDD_STEP_UP			5
+int adjust_vdd(ulong vdd_override);
+
+#endif  /* __VID_H_ */
diff --git a/board/chipsee/common/vsc3316_3308.c b/board/chipsee/common/vsc3316_3308.c
new file mode 100644
index 0000000..dd9c37e
--- /dev/null
+++ b/board/chipsee/common/vsc3316_3308.c
@@ -0,0 +1,276 @@
+/*
+ * Copyright 2012 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include "vsc3316_3308.h"
+
+#define REVISION_ID_REG		0x7E
+#define INTERFACE_MODE_REG		0x79
+#define CURRENT_PAGE_REGISTER		0x7F
+#define CONNECTION_CONFIG_PAGE		0x00
+#define INPUT_STATE_REG		0x13
+#define GLOBAL_INPUT_ISE1		0x51
+#define GLOBAL_INPUT_ISE2		0x52
+#define GLOBAL_INPUT_GAIN		0x53
+#define GLOBAL_INPUT_LOS		0x55
+#define GLOBAL_OUTPUT_PE1		0x56
+#define GLOBAL_OUTPUT_PE2		0x57
+#define GLOBAL_OUTPUT_LEVEL		0x58
+#define GLOBAL_OUTPUT_TERMINATION	0x5A
+#define GLOBAL_CORE_CNTRL		0x5D
+#define OUTPUT_MODE_PAGE		0x23
+#define CORE_CONTROL_PAGE		0x25
+#define CORE_CONFIG_REG		0x75
+
+int vsc_if_enable(unsigned int vsc_addr)
+{
+	u8 data;
+
+	debug("VSC:Configuring VSC at I2C address 0x%2x"
+			" for 2-wire interface\n", vsc_addr);
+
+	/* enable 2-wire Serial InterFace (I2C) */
+	data = 0x02;
+	return i2c_write(vsc_addr, INTERFACE_MODE_REG, 1, &data, 1);
+}
+
+int vsc3316_config(unsigned int vsc_addr, int8_t con_arr[][2],
+		unsigned int num_con)
+{
+	unsigned int i;
+	u8 rev_id = 0;
+	int ret;
+
+	debug("VSC:Initializing VSC3316 at I2C address 0x%2x"
+		" for Tx\n", vsc_addr);
+
+	ret = i2c_read(vsc_addr, REVISION_ID_REG, 1, &rev_id, 1);
+	if (ret < 0) {
+		printf("VSC:0x%x could not read REV_ID from device.\n",
+			vsc_addr);
+		return ret;
+	}
+
+	if (rev_id != 0xab) {
+		printf("VSC: device at address 0x%x is not VSC3316/3308.\n",
+			vsc_addr);
+		return -ENODEV;
+	}
+
+	ret = vsc_if_enable(vsc_addr);
+	if (ret) {
+		printf("VSC:0x%x could not configured for 2-wire I/F.\n",
+			vsc_addr);
+		return ret;
+	}
+
+	/* config connections - page 0x00 */
+	i2c_reg_write(vsc_addr, CURRENT_PAGE_REGISTER, CONNECTION_CONFIG_PAGE);
+
+	/* Making crosspoint connections, by connecting required
+	 * input to output */
+	for (i = 0; i < num_con ; i++)
+		i2c_reg_write(vsc_addr, con_arr[i][1], con_arr[i][0]);
+
+	/* input state - page 0x13 */
+	i2c_reg_write(vsc_addr, CURRENT_PAGE_REGISTER, INPUT_STATE_REG);
+	/* Configuring the required input of the switch */
+	for (i = 0; i < num_con ; i++)
+		i2c_reg_write(vsc_addr, con_arr[i][0], 0x80);
+
+	/* Setting Global Input LOS threshold value */
+	i2c_reg_write(vsc_addr, GLOBAL_INPUT_LOS, 0x60);
+
+	/* config output mode - page 0x23 */
+	i2c_reg_write(vsc_addr, CURRENT_PAGE_REGISTER, OUTPUT_MODE_PAGE);
+	/* Turn ON the Output driver correspond to required output*/
+	for (i = 0; i < num_con ; i++)
+		i2c_reg_write(vsc_addr,  con_arr[i][1], 0);
+
+	/* configure global core control register, Turn on Global core power */
+	i2c_reg_write(vsc_addr, GLOBAL_CORE_CNTRL, 0);
+
+	vsc_wp_config(vsc_addr);
+
+	return 0;
+}
+
+#ifdef CONFIG_SYS_FSL_B4860QDS_XFI_ERR
+int vsc3308_config_adjust(unsigned int vsc_addr, const int8_t con_arr[][2],
+		unsigned int num_con)
+{
+	unsigned int i;
+	u8 rev_id = 0;
+	int ret;
+
+	debug("VSC:Initializing VSC3308 at I2C address 0x%x for Tx\n",
+	      vsc_addr);
+
+	ret = i2c_read(vsc_addr, REVISION_ID_REG, 1, &rev_id, 1);
+	if (ret < 0) {
+		printf("VSC:0x%x could not read REV_ID from device.\n",
+		       vsc_addr);
+		return ret;
+	}
+
+	if (rev_id != 0xab) {
+		printf("VSC: device at address 0x%x is not VSC3316/3308.\n",
+		       vsc_addr);
+		return -ENODEV;
+	}
+
+	ret = vsc_if_enable(vsc_addr);
+	if (ret) {
+		printf("VSC:0x%x could not configured for 2-wire I/F.\n",
+		       vsc_addr);
+		return ret;
+	}
+
+	/* config connections - page 0x00 */
+	i2c_reg_write(vsc_addr, CURRENT_PAGE_REGISTER, CONNECTION_CONFIG_PAGE);
+
+	/* Configure Global Input ISE */
+	i2c_reg_write(vsc_addr, GLOBAL_INPUT_ISE1, 0);
+	i2c_reg_write(vsc_addr, GLOBAL_INPUT_ISE2, 0);
+
+	/* Configure Tx/Rx Global Output PE1 */
+	i2c_reg_write(vsc_addr, GLOBAL_OUTPUT_PE1, 0);
+
+	/* Configure Tx/Rx Global Output PE2 */
+	i2c_reg_write(vsc_addr, GLOBAL_OUTPUT_PE2, 0);
+
+	/* Configure Tx/Rx Global Input GAIN */
+	i2c_reg_write(vsc_addr, GLOBAL_INPUT_GAIN, 0x3F);
+
+	/* Setting Global Input LOS threshold value */
+	i2c_reg_write(vsc_addr, GLOBAL_INPUT_LOS, 0xE0);
+
+	/* Setting Global output termination */
+	i2c_reg_write(vsc_addr, GLOBAL_OUTPUT_TERMINATION, 0);
+
+	/* Configure Tx/Rx Global Output level */
+	if (vsc_addr == VSC3308_TX_ADDRESS)
+		i2c_reg_write(vsc_addr, GLOBAL_OUTPUT_LEVEL, 4);
+	else
+		i2c_reg_write(vsc_addr, GLOBAL_OUTPUT_LEVEL, 2);
+
+	/* Making crosspoint connections, by connecting required
+	 * input to output */
+	for (i = 0; i < num_con ; i++)
+		i2c_reg_write(vsc_addr, con_arr[i][1], con_arr[i][0]);
+
+	/* input state - page 0x13 */
+	i2c_reg_write(vsc_addr, CURRENT_PAGE_REGISTER, INPUT_STATE_REG);
+	/* Turning off all the required input of the switch */
+	for (i = 0; i < num_con; i++)
+		i2c_reg_write(vsc_addr, con_arr[i][0], 1);
+
+	/* only turn on specific Tx/Rx requested by the XFI erratum */
+	if (vsc_addr == VSC3308_TX_ADDRESS) {
+		i2c_reg_write(vsc_addr, 2, 0);
+		i2c_reg_write(vsc_addr, 3, 0);
+	} else {
+		i2c_reg_write(vsc_addr, 0, 0);
+		i2c_reg_write(vsc_addr, 1, 0);
+	}
+
+	/* config output mode - page 0x23 */
+	i2c_reg_write(vsc_addr, CURRENT_PAGE_REGISTER, OUTPUT_MODE_PAGE);
+	/* Turn off the Output driver correspond to required output*/
+	for (i = 0; i < num_con ; i++)
+		i2c_reg_write(vsc_addr,  con_arr[i][1], 1);
+
+	/* only turn on specific Tx/Rx requested by the XFI erratum */
+	if (vsc_addr == VSC3308_TX_ADDRESS) {
+		i2c_reg_write(vsc_addr, 0, 0);
+		i2c_reg_write(vsc_addr, 1, 0);
+	} else {
+		i2c_reg_write(vsc_addr, 3, 0);
+		i2c_reg_write(vsc_addr, 4, 0);
+	}
+
+	/* configure global core control register, Turn on Global core power */
+	i2c_reg_write(vsc_addr, GLOBAL_CORE_CNTRL, 0);
+
+	vsc_wp_config(vsc_addr);
+
+	return 0;
+}
+#endif
+
+int vsc3308_config(unsigned int vsc_addr, const int8_t con_arr[][2],
+		unsigned int num_con)
+{
+	unsigned int i;
+	u8 rev_id = 0;
+	int ret;
+
+	debug("VSC:Initializing VSC3308 at I2C address 0x%x"
+		" for Tx\n", vsc_addr);
+
+	ret = i2c_read(vsc_addr, REVISION_ID_REG, 1, &rev_id, 1);
+	if (ret < 0) {
+		printf("VSC:0x%x could not read REV_ID from device.\n",
+			vsc_addr);
+		return ret;
+	}
+
+	if (rev_id != 0xab) {
+		printf("VSC: device at address 0x%x is not VSC3316/3308.\n",
+			vsc_addr);
+		return -ENODEV;
+	}
+
+	ret = vsc_if_enable(vsc_addr);
+	if (ret) {
+		printf("VSC:0x%x could not configured for 2-wire I/F.\n",
+			vsc_addr);
+		return ret;
+	}
+
+	/* config connections - page 0x00 */
+	i2c_reg_write(vsc_addr, CURRENT_PAGE_REGISTER, CONNECTION_CONFIG_PAGE);
+
+	/* Making crosspoint connections, by connecting required
+	 * input to output */
+	for (i = 0; i < num_con ; i++)
+		i2c_reg_write(vsc_addr, con_arr[i][1], con_arr[i][0]);
+
+	/*Configure Global Input ISE and gain */
+	i2c_reg_write(vsc_addr, GLOBAL_INPUT_ISE1, 0x12);
+	i2c_reg_write(vsc_addr, GLOBAL_INPUT_ISE2, 0x12);
+
+	/* input state - page 0x13 */
+	i2c_reg_write(vsc_addr, CURRENT_PAGE_REGISTER, INPUT_STATE_REG);
+	/* Turning ON the required input of the switch */
+	for (i = 0; i < num_con ; i++)
+		i2c_reg_write(vsc_addr, con_arr[i][0], 0);
+
+	/* Setting Global Input LOS threshold value */
+	i2c_reg_write(vsc_addr, GLOBAL_INPUT_LOS, 0x60);
+
+	/* config output mode - page 0x23 */
+	i2c_reg_write(vsc_addr, CURRENT_PAGE_REGISTER, OUTPUT_MODE_PAGE);
+	/* Turn ON the Output driver correspond to required output*/
+	for (i = 0; i < num_con ; i++)
+		i2c_reg_write(vsc_addr,  con_arr[i][1], 0);
+
+	/* configure global core control register, Turn on Global core power */
+	i2c_reg_write(vsc_addr, GLOBAL_CORE_CNTRL, 0);
+
+	vsc_wp_config(vsc_addr);
+
+	return 0;
+}
+
+void vsc_wp_config(unsigned int vsc_addr)
+{
+	debug("VSC:Configuring VSC at address:0x%x for WP\n", vsc_addr);
+
+	/* For new crosspoint configuration to occur, WP bit of
+	 * CORE_CONFIG_REG should be set 1 and then reset to 0 */
+	i2c_reg_write(vsc_addr, CORE_CONFIG_REG, 0x01);
+	i2c_reg_write(vsc_addr, CORE_CONFIG_REG, 0x0);
+}
diff --git a/board/chipsee/common/vsc3316_3308.h b/board/chipsee/common/vsc3316_3308.h
new file mode 100644
index 0000000..d722ea3
--- /dev/null
+++ b/board/chipsee/common/vsc3316_3308.h
@@ -0,0 +1,25 @@
+/*
+ * Copyright 2012 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __VSC_CROSSBAR_H_
+#define __VSC_CROSSBAR_H	1_
+
+#include <common.h>
+#include <i2c.h>
+#include <errno.h>
+
+int vsc_if_enable(unsigned int vsc_addr);
+int vsc3316_config(unsigned int vsc_addr, int8_t con_arr[][2],
+		unsigned int num_con);
+#ifdef CONFIG_SYS_FSL_B4860QDS_XFI_ERR
+int vsc3308_config_adjust(unsigned int vsc_addr, const int8_t con_arr[][2],
+		unsigned int num_con);
+#endif
+int vsc3308_config(unsigned int vsc_addr, const int8_t con_arr[][2],
+		unsigned int num_con);
+void vsc_wp_config(unsigned int vsc_addr);
+
+#endif	/* __VSC_CROSSBAR_H_ */
diff --git a/board/chipsee/common/zm7300.c b/board/chipsee/common/zm7300.c
new file mode 100644
index 0000000..be5953a
--- /dev/null
+++ b/board/chipsee/common/zm7300.c
@@ -0,0 +1,235 @@
+/*
+ * Copyright 2013 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+/* Power-One ZM7300 DPM */
+#include "zm7300.h"
+
+#define DPM_WP 0x96
+#define WRP_OPCODE 0x01
+#define WRM_OPCODE 0x02
+#define RRP_OPCODE 0x11
+
+#define DPM_SUCCESS 0x01
+#define DPM_EXEC_FAIL 0x00
+
+static const uint16_t hex_to_1_10mv[] = {
+	5000,
+	5125,
+	5250,
+	5375,
+	5500,
+	5625,
+	5750,
+	5875,
+	6000,
+	6125,
+	6250,
+	6375,
+	6500,
+	6625,
+	6750,
+	6875,
+	7000,
+	7125,
+	7250,
+	7375,
+	7500,
+	7625,
+	7750,
+	7875,
+	8000,
+	8125,
+	8250,
+	8375,
+	8500,
+	8625,
+	8750,
+	8875,
+	9000,
+	9125,
+	9250,
+	9375,
+	9500,  /* 0.95mV */
+	9625,
+	9750,
+	9875,
+	10000,  /* 1.0V */
+	10125,
+	10250,
+	10375,
+	10500,
+	10625,
+	10750,
+	10875,
+	11000,
+	11125,
+	11250,
+	11375,
+	11500,
+	11625,
+	11750,
+	11875,
+	12000,
+	12125,
+	12250,
+	12375,
+	0,	/* reserved */
+};
+
+
+/* Read Data d from Register r of POL p */
+u8 dpm_rrp(uchar r)
+{
+	u8 ret[5];
+
+	ret[0] = RRP_OPCODE;
+	/* POL is 0 */
+	ret[1] = 0;
+	ret[2] = r;
+	i2c_read(I2C_DPM_ADDR, 0, -3, ret, 2);
+	if (ret[1] == DPM_SUCCESS) { /* the DPM returned success as status */
+		debug("RRP_OPCODE returned success data is %x\n", ret[0]);
+		return ret[0];
+	} else {
+		return -1;
+	}
+}
+
+/* Write Data d into DPM register r (RAM) */
+int dpm_wrm(u8 r, u8 d)
+{
+	u8 ret[5];
+
+	ret[0] = WRM_OPCODE;
+	ret[1] = r;
+	ret[2] = d;
+	i2c_read(I2C_DPM_ADDR, 0, -3, ret, 1);
+	if (ret[0] == DPM_SUCCESS) { /* the DPM returned success as status */
+		debug("WRM_OPCODE returned success data is %x\n", ret[0]);
+		return ret[0];
+	} else {
+		return -1;
+	}
+}
+
+/* Write Data d into Register r of POL(s) a */
+int dpm_wrp(u8 r, u8 d)
+{
+	u8 ret[7];
+
+	ret[0] = WRP_OPCODE;
+	/* only POL0 is present */
+	ret[1] = 0x01;
+	ret[2] = 0x00;
+	ret[3] = 0x00;
+	ret[4] = 0x00;
+	ret[5] = r;
+	ret[6] = d;
+	i2c_read(I2C_DPM_ADDR, 0, -7, ret, 1);
+	if (ret[0] == DPM_SUCCESS) { /* the DPM returned success as status */
+		debug("WRP_OPCODE returned success data is %x\n", ret[0]);
+		return 0;
+	} else {
+		return -1;
+	}
+}
+
+/* Uses the DPM command RRP */
+u8 zm_read(uchar reg)
+{
+	u8 d;
+	d = dpm_rrp(reg);
+	return d;
+}
+
+/* ZM_write --
+	Steps:
+	a. Write data to the register
+	b. Read data from register and compare to written value
+	c. Return return_code & voltage_read
+*/
+u8 zm_write(u8 reg, u8 data)
+{
+	u8 d;
+
+	/* write data to register */
+	dpm_wrp(reg, data);
+
+	/* read register and compare to written value */
+	d = dpm_rrp(reg);
+	if (d != data) {
+		printf("zm_write : Comparison register data failed\n");
+		return -1;
+	}
+
+	return d;
+}
+
+/* zm_write_out_voltage
+ * voltage in 1/10 mV
+ */
+int zm_write_voltage(int voltage)
+{
+	u8 reg = 0x7, vid;
+	uint16_t voltage_read;
+	u8 ret;
+
+	vid =  (voltage - 5000) / ZM_STEP;
+
+	ret = zm_write(reg, vid);
+	if (ret != -1) {
+		voltage_read = hex_to_1_10mv[ret];
+		debug("voltage set to %dmV\n", voltage_read/10);
+		return voltage_read;
+	}
+	return -1;
+}
+
+/* zm_read_out_voltage
+ * voltage in 1/10 mV
+ */
+int zm_read_voltage(void)
+{
+	u8 reg = 0x7;
+	u8 ret;
+	int voltage;
+
+	ret = zm_read(reg);
+	if (ret != -1) {
+		voltage =  hex_to_1_10mv[ret];
+		debug("Voltage read is %dmV\n", voltage/10);
+		return voltage;
+	} else {
+		return -1;
+	}
+}
+
+int zm_disable_wp()
+{
+	u8 new_wp_value;
+
+	/* Disable using Write-Protect register 0x96 */
+	new_wp_value = 0x8;
+	if ((dpm_wrm(DPM_WP, new_wp_value)) < 0) {
+		printf("Disable Write-Protect register failed\n");
+		return -1;
+	}
+	return 0;
+}
+
+int zm_enable_wp()
+{
+	u8 orig_wp_value;
+	orig_wp_value = 0x0;
+
+	/* Enable using Write-Protect register 0x96 */
+	if ((dpm_wrm(DPM_WP, orig_wp_value)) < 0) {
+		printf("Enable Write-Protect register failed\n");
+		return -1;
+	}
+	return 0;
+}
+
diff --git a/board/chipsee/common/zm7300.h b/board/chipsee/common/zm7300.h
new file mode 100644
index 0000000..6b4d035
--- /dev/null
+++ b/board/chipsee/common/zm7300.h
@@ -0,0 +1,22 @@
+/*
+ * Copyright 2013 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+#ifndef __ZM7300_H_
+#define __ZM7300_H	1_
+
+#include <common.h>
+#include <i2c.h>
+#include <errno.h>
+#include <asm/io.h>
+
+#define ZM_STEP 125
+int zm7300_set_voltage(int voltage_1_10mv);
+int zm_write_voltage(int voltage);
+int zm_read_voltage(void);
+int zm_disable_wp(void);
+int zm_enable_wp(void);
+
+#endif	/* __ZM7300_H_ */
diff --git a/board/chipsee/mx6eisd/Kconfig b/board/chipsee/mx6eisd/Kconfig
new file mode 100644
index 0000000..8b50f8d
--- /dev/null
+++ b/board/chipsee/mx6eisd/Kconfig
@@ -0,0 +1,15 @@
+if TARGET_MX6EISD
+
+config SYS_BOARD
+	default "mx6eisd"
+
+config SYS_VENDOR
+	default "chipsee"
+
+config SYS_SOC
+	default "mx6"
+
+config SYS_CONFIG_NAME
+	default "mx6eisd"
+
+endif
diff --git a/board/chipsee/mx6eisd/MAINTAINERS b/board/chipsee/mx6eisd/MAINTAINERS
new file mode 100644
index 0000000..f7fe400
--- /dev/null
+++ b/board/chipsee/mx6eisd/MAINTAINERS
@@ -0,0 +1,7 @@
+MX6EISD BOARD
+M:	xiaoqiang liu <lxq@chipsee.com>
+S:	Maintained
+F:	board/chipsee/mx6eisd/
+F:	include/configs/mx6eisd.h
+F:	configs/mx6dleisd_1g_defconfig
+F:	configs/mx6dleisd_2g_defconfig
diff --git a/board/chipsee/mx6eisd/Makefile b/board/chipsee/mx6eisd/Makefile
new file mode 100644
index 0000000..f96b5f0
--- /dev/null
+++ b/board/chipsee/mx6eisd/Makefile
@@ -0,0 +1,11 @@
+#
+# Chipsee Information Technology Co., Ltd.
+# http://www.chipsee.com
+# lxq <lxq@chipsee.com>
+#
+
+obj-y  := mx6eisd.o
+
+extra-$(CONFIG_USE_PLUGIN) :=  plugin.bin
+$(obj)/plugin.bin: $(obj)/plugin.o
+	$(OBJCOPY) -O binary --gap-fill 0xff $< $@
diff --git a/board/chipsee/mx6eisd/mx6dl_16x_mt41K128.cfg b/board/chipsee/mx6eisd/mx6dl_16x_mt41K128.cfg
new file mode 100644
index 0000000..1fc89b6
--- /dev/null
+++ b/board/chipsee/mx6eisd/mx6dl_16x_mt41K128.cfg
@@ -0,0 +1,142 @@
+/*
+ * Copyright (C) 2014-2015 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Refer docs/README.imxmage for more details about how-to configure
+ * and create imximage boot image
+ *
+ * The syntax is taken as close as possible with the kwbimage
+ */
+
+#define __ASSEMBLY__
+#include <config.h>
+/* image version */
+
+IMAGE_VERSION 2
+
+/*
+ * Boot Device : one of
+ * spi, sd (the board has no nand neither onenand)
+ */
+
+BOOT_FROM	sd
+#ifdef CONFIG_USE_PLUGIN
+/*PLUGIN    plugin-binary-file    IRAM_FREE_START_ADDR*/
+PLUGIN board/freescale/mx6sabresd/plugin.bin 0x00907000
+#else
+
+#ifdef CONFIG_SECURE_BOOT
+CSF CONFIG_CSF_SIZE
+#endif
+
+/*
+ * Device Configuration Data (DCD)
+ *
+ * Each entry must have the format:
+ * Addr-type           Address        Value
+ *
+ * where:
+ *	Addr-type register length (1,2 or 4 bytes)
+ *	Address	  absolute address of the register
+ *	value	  value to be stored in the register
+ */
+DATA 4	0x020e0774 0x000C0000
+DATA 4	0x020e0754 0x00000000
+DATA 4	0x020e04ac 0x00000030
+DATA 4	0x020e04b0 0x00000030
+DATA 4	0x020e0464 0x00000030
+DATA 4	0x020e0490 0x00000030
+DATA 4	0x020e074c 0x00000030
+DATA 4	0x020e0494 0x00000030
+DATA 4	0x020e04a0 0x00000000
+DATA 4	0x020e04b4 0x00000030
+DATA 4	0x020e04b8 0x00000030
+DATA 4	0x020e076c 0x00000030
+DATA 4	0x020e0750 0x00020000
+DATA 4	0x020e04bc 0x00000018
+DATA 4	0x020e04c0 0x00000018
+DATA 4	0x020e04c4 0x00000018
+DATA 4	0x020e04c8 0x00000018
+DATA 4	0x020e04cc 0x00000018
+DATA 4	0x020e04d0 0x00000018
+DATA 4	0x020e04d4 0x00000018
+DATA 4	0x020e04d8 0x00000018
+DATA 4	0x020e0760 0x00020000
+DATA 4	0x020e0764 0x00000018
+DATA 4	0x020e0770 0x00000018
+DATA 4	0x020e0778 0x00000018
+DATA 4	0x020e077c 0x00000018
+DATA 4	0x020e0780 0x00000018
+DATA 4	0x020e0784 0x00000018
+DATA 4	0x020e078c 0x00000018
+DATA 4	0x020e0748 0x00000018
+DATA 4	0x020e0470 0x00000018
+DATA 4	0x020e0474 0x00000018
+DATA 4	0x020e0478 0x00000018
+DATA 4	0x020e047c 0x00000018
+DATA 4	0x020e0480 0x00000018
+DATA 4	0x020e0484 0x00000018
+DATA 4	0x020e0488 0x00000018
+DATA 4	0x020e048c 0x00000018
+DATA 4	0x021b0800 0xa1390003
+DATA 4	0x021b080c 0x0044004C
+DATA 4	0x021b0810 0x0033003E
+DATA 4	0x021b480c 0x001A0022
+DATA 4	0x021b4810 0x0024002D
+DATA 4	0x021b083c 0x42440240
+DATA 4	0x021b0840 0x02200224
+DATA 4	0x021b483c 0x42140218
+DATA 4	0x021b4840 0x0214021C
+DATA 4	0x021b0848 0x424C4848
+DATA 4	0x021b4848 0x4A484C40
+DATA 4	0x021b0850 0x3A322E32
+DATA 4	0x021b4850 0x3234322C
+DATA 4	0x021b081c 0x33333333
+DATA 4	0x021b0820 0x33333333
+DATA 4	0x021b0824 0x33333333
+DATA 4	0x021b0828 0x33333333
+DATA 4	0x021b481c 0x33333333
+DATA 4	0x021b4820 0x33333333
+DATA 4	0x021b4824 0x33333333
+DATA 4	0x021b4828 0x33333333
+DATA 4	0x021b08b8 0x00000800
+DATA 4	0x021b48b8 0x00000800
+DATA 4	0x021b0004 0x0002002D
+DATA 4	0x021b0008 0x00333040
+DATA 4	0x021b000c 0x3F4352F3
+DATA 4	0x021b0010 0xB66D8B63
+DATA 4	0x021b0014 0x01FF00DB
+DATA 4	0x021b0018 0x00011740
+DATA 4	0x021b001c 0x00008000
+DATA 4	0x021b002c 0x000026d2
+DATA 4	0x021b0030 0x00431023
+DATA 4	0x021b0040 0x00000027
+DATA 4	0x021b0000 0x831A0000
+DATA 4	0x021b001c 0x02008032
+DATA 4	0x021b001c 0x00008033
+DATA 4	0x021b001c 0x00048031
+DATA 4	0x021b001c 0x15208030
+DATA 4  0x021b001c 0x04008040
+DATA 4	0x021b0020 0x00007800
+DATA 4	0x021b0818 0x00022227
+DATA 4	0x021b4818 0x00022227
+DATA 4	0x021b0004 0x0002556D
+DATA 4	0x021b0404 0x00011006
+DATA 4	0x021b001c 0x00000000
+
+/* set the default clock gate to save power */
+DATA 4 0x020c4068 0x00C03F3F
+DATA 4 0x020c406c 0x0030FC03
+DATA 4 0x020c4070 0x0FFFC000
+DATA 4 0x020c4074 0x3FF00000
+DATA 4 0x020c4078 0x00FFF300
+DATA 4 0x020c407c 0x0F0000C3
+DATA 4 0x020c4080 0x000003FF
+
+/* enable AXI cache for VDOA/VPU/IPU */
+DATA 4 0x020e0010 0xF00000CF
+/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
+DATA 4 0x020e0018 0x007F007F
+DATA 4 0x020e001c 0x007F007F
+#endif
diff --git a/board/chipsee/mx6eisd/mx6dl_16x_mt41K256.cfg b/board/chipsee/mx6eisd/mx6dl_16x_mt41K256.cfg
new file mode 100644
index 0000000..64d6ed0
--- /dev/null
+++ b/board/chipsee/mx6eisd/mx6dl_16x_mt41K256.cfg
@@ -0,0 +1,142 @@
+/*
+ * Copyright (C) 2014-2015 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Refer docs/README.imxmage for more details about how-to configure
+ * and create imximage boot image
+ *
+ * The syntax is taken as close as possible with the kwbimage
+ */
+
+#define __ASSEMBLY__
+#include <config.h>
+/* image version */
+
+IMAGE_VERSION 2
+
+/*
+ * Boot Device : one of
+ * spi, sd (the board has no nand neither onenand)
+ */
+
+BOOT_FROM	sd
+#ifdef CONFIG_USE_PLUGIN
+/*PLUGIN    plugin-binary-file    IRAM_FREE_START_ADDR*/
+PLUGIN board/freescale/mx6sabresd/plugin.bin 0x00907000
+#else
+
+#ifdef CONFIG_SECURE_BOOT
+CSF CONFIG_CSF_SIZE
+#endif
+
+/*
+ * Device Configuration Data (DCD)
+ *
+ * Each entry must have the format:
+ * Addr-type           Address        Value
+ *
+ * where:
+ *	Addr-type register length (1,2 or 4 bytes)
+ *	Address	  absolute address of the register
+ *	value	  value to be stored in the register
+ */
+DATA 4	0x020e0774 0x000C0000
+DATA 4	0x020e0754 0x00000000
+DATA 4	0x020e04ac 0x00000030
+DATA 4	0x020e04b0 0x00000030
+DATA 4	0x020e0464 0x00000030
+DATA 4	0x020e0490 0x00000030
+DATA 4	0x020e074c 0x00000030
+DATA 4	0x020e0494 0x00000030
+DATA 4	0x020e04a0 0x00000000
+DATA 4	0x020e04b4 0x00000030
+DATA 4	0x020e04b8 0x00000030
+DATA 4	0x020e076c 0x00000030
+DATA 4	0x020e0750 0x00020000
+DATA 4	0x020e04bc 0x00000018
+DATA 4	0x020e04c0 0x00000018
+DATA 4	0x020e04c4 0x00000018
+DATA 4	0x020e04c8 0x00000018
+DATA 4	0x020e04cc 0x00000018
+DATA 4	0x020e04d0 0x00000018
+DATA 4	0x020e04d4 0x00000018
+DATA 4	0x020e04d8 0x00000018
+DATA 4	0x020e0760 0x00020000
+DATA 4	0x020e0764 0x00000018
+DATA 4	0x020e0770 0x00000018
+DATA 4	0x020e0778 0x00000018
+DATA 4	0x020e077c 0x00000018
+DATA 4	0x020e0780 0x00000018
+DATA 4	0x020e0784 0x00000018
+DATA 4	0x020e078c 0x00000018
+DATA 4	0x020e0748 0x00000018
+DATA 4	0x020e0470 0x00000018
+DATA 4	0x020e0474 0x00000018
+DATA 4	0x020e0478 0x00000018
+DATA 4	0x020e047c 0x00000018
+DATA 4	0x020e0480 0x00000018
+DATA 4	0x020e0484 0x00000018
+DATA 4	0x020e0488 0x00000018
+DATA 4	0x020e048c 0x00000018
+DATA 4	0x021b0800 0xa1390003
+DATA 4	0x021b080c 0x003E0048
+DATA 4	0x021b0810 0x00300038
+DATA 4	0x021b480c 0x0010001A
+DATA 4	0x021b4810 0x001E0028
+DATA 4	0x021b083c 0x4244023C
+DATA 4	0x021b0840 0x02200220
+DATA 4	0x021b483c 0x4218021C
+DATA 4	0x021b4840 0x0218021C
+DATA 4	0x021b0848 0x444A4C46
+DATA 4	0x021b4848 0x4C464E46
+DATA 4	0x021b0850 0x3A343030
+DATA 4	0x021b4850 0x3634322E
+DATA 4	0x021b081c 0x33333333
+DATA 4	0x021b0820 0x33333333
+DATA 4	0x021b0824 0x33333333
+DATA 4	0x021b0828 0x33333333
+DATA 4	0x021b481c 0x33333333
+DATA 4	0x021b4820 0x33333333
+DATA 4	0x021b4824 0x33333333
+DATA 4	0x021b4828 0x33333333
+DATA 4	0x021b08b8 0x00000800
+DATA 4	0x021b48b8 0x00000800
+DATA 4	0x021b0004 0x0002002D
+DATA 4	0x021b0008 0x00333040
+DATA 4	0x021b000c 0x676B52F3
+DATA 4	0x021b0010 0xB66D8B63
+DATA 4	0x021b0014 0x01FF00DB
+DATA 4	0x021b0018 0x00011740
+DATA 4	0x021b001c 0x00008000
+DATA 4	0x021b002c 0x000026d2
+DATA 4	0x021b0030 0x006B1023
+DATA 4	0x021b0040 0x00000047
+DATA 4	0x021b0000 0x841A0000
+DATA 4	0x021b001c 0x02008032
+DATA 4	0x021b001c 0x00008033
+DATA 4	0x021b001c 0x00048031
+DATA 4	0x021b001c 0x15208030
+DATA 4  0x021b001c 0x04008040
+DATA 4	0x021b0020 0x00007800
+DATA 4	0x021b0818 0x00022227
+DATA 4	0x021b4818 0x00022227
+DATA 4	0x021b0004 0x0002556D
+DATA 4	0x021b0404 0x00011006
+DATA 4	0x021b001c 0x00000000
+
+/* set the default clock gate to save power */
+DATA 4 0x020c4068 0x00C03F3F
+DATA 4 0x020c406c 0x0030FC03
+DATA 4 0x020c4070 0x0FFFC000
+DATA 4 0x020c4074 0x3FF00000
+DATA 4 0x020c4078 0x00FFF300
+DATA 4 0x020c407c 0x0F0000C3
+DATA 4 0x020c4080 0x000003FF
+
+/* enable AXI cache for VDOA/VPU/IPU */
+DATA 4 0x020e0010 0xF00000CF
+/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
+DATA 4 0x020e0018 0x007F007F
+DATA 4 0x020e001c 0x007F007F
+#endif
diff --git a/board/chipsee/mx6eisd/mx6dleisd.cfg b/board/chipsee/mx6eisd/mx6dleisd.cfg
new file mode 100644
index 0000000..c1e9606
--- /dev/null
+++ b/board/chipsee/mx6eisd/mx6dleisd.cfg
@@ -0,0 +1,173 @@
+/*
+ * Copyright (C) 2014-2015 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Refer docs/README.imxmage for more details about how-to configure
+ * and create imximage boot image
+ *
+ * The syntax is taken as close as possible with the kwbimage
+ */
+
+#define __ASSEMBLY__
+#include <config.h>
+/* image version */
+
+IMAGE_VERSION 2
+
+/*
+ * Boot Device : one of
+ * spi, sd (the board has no nand neither onenand)
+ */
+
+BOOT_FROM	sd
+#ifdef CONFIG_USE_PLUGIN
+/*PLUGIN    plugin-binary-file    IRAM_FREE_START_ADDR*/
+PLUGIN board/freescale/mx6sabresd/plugin.bin 0x00907000
+#else
+
+#ifdef CONFIG_SECURE_BOOT
+CSF CONFIG_CSF_SIZE
+#endif
+
+/*
+ * Device Configuration Data (DCD)
+ *
+ * Each entry must have the format:
+ * Addr-type           Address        Value
+ *
+ * where:
+ *	Addr-type register length (1,2 or 4 bytes)
+ *	Address	  absolute address of the register
+ *	value	  value to be stored in the register
+ */
+DATA 4	0x020e0774 0x000C0000
+DATA 4	0x020e0754 0x00000000
+DATA 4	0x020e04ac 0x00000030
+DATA 4	0x020e04b0 0x00000030
+DATA 4	0x020e0464 0x00000030
+DATA 4	0x020e0490 0x00000030
+DATA 4	0x020e074c 0x00000030
+DATA 4	0x020e0494 0x00000030
+DATA 4	0x020e04a0 0x00000000
+DATA 4	0x020e04b4 0x00000030
+DATA 4	0x020e04b8 0x00000030
+DATA 4	0x020e076c 0x00000030
+DATA 4	0x020e0750 0x00020000
+DATA 4	0x020e04bc 0x00000018
+DATA 4	0x020e04c0 0x00000018
+DATA 4	0x020e04c4 0x00000018
+DATA 4	0x020e04c8 0x00000018
+DATA 4	0x020e04cc 0x00000018
+DATA 4	0x020e04d0 0x00000018
+DATA 4	0x020e04d4 0x00000018
+DATA 4	0x020e04d8 0x00000018
+DATA 4	0x020e0760 0x00020000
+DATA 4	0x020e0764 0x00000018
+DATA 4	0x020e0770 0x00000018
+DATA 4	0x020e0778 0x00000018
+DATA 4	0x020e077c 0x00000018
+DATA 4	0x020e0780 0x00000018
+DATA 4	0x020e0784 0x00000018
+DATA 4	0x020e078c 0x00000018
+DATA 4	0x020e0748 0x00000018
+DATA 4	0x020e0470 0x00000018
+DATA 4	0x020e0474 0x00000018
+DATA 4	0x020e0478 0x00000018
+DATA 4	0x020e047c 0x00000018
+DATA 4	0x020e0480 0x00000018
+DATA 4	0x020e0484 0x00000018
+DATA 4	0x020e0488 0x00000018
+DATA 4	0x020e048c 0x00000018
+DATA 4	0x021b0800 0xa1390003
+
+#if (CONFIG_DRAM_SIZE == 1024)
+DATA 4	0x021b080c 0x0044004C
+DATA 4	0x021b0810 0x0033003E
+DATA 4	0x021b480c 0x001A0022
+DATA 4	0x021b4810 0x0024002D
+DATA 4	0x021b083c 0x42440240
+DATA 4	0x021b0840 0x02200224
+DATA 4	0x021b483c 0x42140218
+DATA 4	0x021b4840 0x0214021C
+DATA 4	0x021b0848 0x424C4848
+DATA 4	0x021b4848 0x4A484C40
+DATA 4	0x021b0850 0x3A322E32
+DATA 4	0x021b4850 0x3234322C
+#else
+DATA 4	0x021b080c 0x003E0048
+DATA 4	0x021b0810 0x00300038
+DATA 4	0x021b480c 0x0010001A
+DATA 4	0x021b4810 0x001E0028
+DATA 4	0x021b083c 0x4244023C
+DATA 4	0x021b0840 0x02200220
+DATA 4	0x021b483c 0x4218021C
+DATA 4	0x021b4840 0x0218021C
+DATA 4	0x021b0848 0x444A4C46
+DATA 4	0x021b4848 0x4C464E46
+DATA 4	0x021b0850 0x3A343030
+DATA 4	0x021b4850 0x3634322E
+#endif
+
+DATA 4	0x021b081c 0x33333333
+DATA 4	0x021b0820 0x33333333
+DATA 4	0x021b0824 0x33333333
+DATA 4	0x021b0828 0x33333333
+DATA 4	0x021b481c 0x33333333
+DATA 4	0x021b4820 0x33333333
+DATA 4	0x021b4824 0x33333333
+DATA 4	0x021b4828 0x33333333
+DATA 4	0x021b08b8 0x00000800
+DATA 4	0x021b48b8 0x00000800
+DATA 4	0x021b0004 0x0002002D
+DATA 4	0x021b0008 0x00333040
+
+#if (CONFIG_DRAM_SIZE == 1024)
+DATA 4	0x021b000c 0x3F4352F3
+#else
+DATA 4	0x021b000c 0x676B52F3
+#endif
+
+DATA 4	0x021b0010 0xB66D8B63
+DATA 4	0x021b0014 0x01FF00DB
+DATA 4	0x021b0018 0x00011740
+DATA 4	0x021b001c 0x00008000
+DATA 4	0x021b002c 0x000026d2
+
+#if (CONFIG_DRAM_SIZE == 1024)
+DATA 4	0x021b0030 0x00431023
+DATA 4	0x021b0040 0x00000027
+DATA 4	0x021b0000 0x831A0000
+#else
+DATA 4	0x021b0030 0x006B1023
+DATA 4	0x021b0040 0x00000047
+DATA 4	0x021b0000 0x841A0000
+#endif
+
+DATA 4	0x021b001c 0x02008032
+DATA 4	0x021b001c 0x00008033
+DATA 4	0x021b001c 0x00048031
+DATA 4	0x021b001c 0x15208030
+DATA 4  0x021b001c 0x04008040
+DATA 4	0x021b0020 0x00007800
+DATA 4	0x021b0818 0x00022227
+DATA 4	0x021b4818 0x00022227
+DATA 4	0x021b0004 0x0002556D
+DATA 4	0x021b0404 0x00011006
+DATA 4	0x021b001c 0x00000000
+
+/* set the default clock gate to save power */
+DATA 4 0x020c4068 0x00C03F3F
+DATA 4 0x020c406c 0x0030FC03
+DATA 4 0x020c4070 0x0FFFC000
+DATA 4 0x020c4074 0x3FF00000
+DATA 4 0x020c4078 0x00FFF300
+DATA 4 0x020c407c 0x0F0000C3
+DATA 4 0x020c4080 0x000003FF
+
+/* enable AXI cache for VDOA/VPU/IPU */
+DATA 4 0x020e0010 0xF00000CF
+/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
+DATA 4 0x020e0018 0x007F007F
+DATA 4 0x020e001c 0x007F007F
+#endif
diff --git a/board/chipsee/mx6eisd/mx6eisd.c b/board/chipsee/mx6eisd/mx6eisd.c
new file mode 100644
index 0000000..a4550d4
--- /dev/null
+++ b/board/chipsee/mx6eisd/mx6eisd.c
@@ -0,0 +1,1932 @@
+/*
+ * Copyright (C) 2012-2015 Freescale Semiconductor, Inc.
+ *
+ * Author: Fabio Estevam <fabio.estevam@freescale.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <asm/arch/clock.h>
+#include <asm/arch/imx-regs.h>
+#include <asm/arch/iomux.h>
+#include <asm/arch/mx6-pins.h>
+#include <asm/errno.h>
+#include <asm/gpio.h>
+#include <asm/imx-common/mxc_i2c.h>
+#include <asm/imx-common/iomux-v3.h>
+#include <asm/imx-common/boot_mode.h>
+#include <asm/imx-common/video.h>
+#include <mmc.h>
+#include <fsl_esdhc.h>
+#include <miiphy.h>
+#include <netdev.h>
+
+#if defined(CONFIG_MX6DL) && defined(CONFIG_MXC_EPDC)
+#include <lcd.h>
+#include <mxc_epdc_fb.h>
+#endif
+#include <asm/arch/mxc_hdmi.h>
+#include <asm/arch/crm_regs.h>
+#include <asm/io.h>
+#include <asm/arch/sys_proto.h>
+#include <i2c.h>
+#include <ipu_pixfmt.h>
+#include <linux/fb.h>
+#include <power/pmic.h>
+#include <power/pfuze100_pmic.h>
+#include "../common/pfuze.h"
+#include <asm/arch/mx6-ddr.h>
+#include <usb.h>
+
+#if defined(CONFIG_MX6DL) && defined(CONFIG_MXC_EPDC)
+#include <lcd.h>
+#include <mxc_epdc_fb.h>
+#endif
+#ifdef CONFIG_CMD_SATA
+#include <asm/imx-common/sata.h>
+#endif
+#ifdef CONFIG_FSL_FASTBOOT
+#include <fsl_fastboot.h>
+#ifdef CONFIG_ANDROID_RECOVERY
+#include <recovery.h>
+#endif
+#endif /*CONFIG_FSL_FASTBOOT*/
+
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+#include <asm/imx-common/imx_pwm.h>
+#include <asm/imx-common/mxc_ipu.h>
+#endif
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define UART_PAD_CTRL  (PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm |			\
+	PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
+
+#define USDHC_PAD_CTRL (PAD_CTL_PUS_47K_UP |			\
+	PAD_CTL_SPEED_LOW | PAD_CTL_DSE_34ohm |			\
+	PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
+
+#define ENET_PAD_CTRL  (PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS)
+
+#define SPI_PAD_CTRL (PAD_CTL_HYS | PAD_CTL_SPEED_MED | \
+		      PAD_CTL_DSE_40ohm | PAD_CTL_SRE_FAST)
+
+#define I2C_PAD_CTRL  (PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS |	\
+	PAD_CTL_ODE | PAD_CTL_SRE_FAST)
+
+#define EPDC_PAD_CTRL    (PAD_CTL_PKE | PAD_CTL_SPEED_MED |	\
+	PAD_CTL_DSE_40ohm | PAD_CTL_HYS)
+
+#define OTG_ID_PAD_CTRL (PAD_CTL_PKE | PAD_CTL_PUE |		\
+	PAD_CTL_PUS_47K_UP  | PAD_CTL_SPEED_LOW |		\
+	PAD_CTL_DSE_80ohm   | PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
+
+
+#define I2C_PMIC	1
+
+#define I2C_PAD MUX_PAD_CTRL(I2C_PAD_CTRL)
+
+#define DISP0_PWR_EN	IMX_GPIO_NR(1, 21)
+#define LVDS_PWR_EN     IMX_GPIO_NR(1, 21)
+#define LVDS_PWR_EN2     IMX_GPIO_NR(1, 16)
+#define EPDC_PAD_CTRL    (PAD_CTL_PKE | PAD_CTL_SPEED_MED |	\
+	PAD_CTL_DSE_40ohm | PAD_CTL_HYS)
+
+/* Enable split mode leavs_20161024 */
+//#define LVDS_SPLIT_MODE
+#define PWM1
+
+int dram_init(void)
+{
+	gd->ram_size = imx_ddr_size();
+	return 0;
+}
+
+static iomux_v3_cfg_t const uart1_pads[] = {
+	MX6_PAD_SD3_DAT7__UART1_TX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+	MX6_PAD_SD3_DAT6__UART1_RX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+};
+
+static iomux_v3_cfg_t const enet_pads[] = {
+	MX6_PAD_ENET_MDIO__ENET_MDIO		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_MDC__ENET_MDC		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TXC__RGMII_TXC	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TD0__RGMII_TD0	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TD1__RGMII_TD1	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TD2__RGMII_TD2	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TD3__RGMII_TD3	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TX_CTL__RGMII_TX_CTL	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_REF_CLK__ENET_TX_CLK	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RXC__RGMII_RXC	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RD0__RGMII_RD0	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RD1__RGMII_RD1	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RD2__RGMII_RD2	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RD3__RGMII_RD3	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RX_CTL__RGMII_RX_CTL	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	/* AR8031 PHY Reset */
+	MX6_PAD_ENET_CRS_DV__GPIO1_IO25		| MUX_PAD_CTRL(NO_PAD_CTRL),
+};
+
+static void setup_iomux_enet(void)
+{
+	imx_iomux_v3_setup_multiple_pads(enet_pads, ARRAY_SIZE(enet_pads));
+
+	/* Reset AR8031 PHY */
+	gpio_direction_output(IMX_GPIO_NR(1, 25) , 0);
+	udelay(500);
+	gpio_set_value(IMX_GPIO_NR(1, 25), 1);
+}
+
+static iomux_v3_cfg_t const usdhc2_pads[] = {
+	MX6_PAD_SD2_CLK__SD2_CLK	| MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD2_CMD__SD2_CMD	| MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD2_DAT0__SD2_DATA0	| MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD2_DAT1__SD2_DATA1	| MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD2_DAT2__SD2_DATA2	| MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD2_DAT3__SD2_DATA3	| MUX_PAD_CTRL(USDHC_PAD_CTRL),
+};
+
+static iomux_v3_cfg_t const usdhc3_pads[] = {
+	MX6_PAD_SD3_CLK__SD3_CLK   | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD3_CMD__SD3_CMD   | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD3_DAT0__SD3_DATA0 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD3_DAT1__SD3_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD3_DAT2__SD3_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD3_DAT3__SD3_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_NANDF_D0__GPIO2_IO00    | MUX_PAD_CTRL(NO_PAD_CTRL), /* CD */
+};
+
+static iomux_v3_cfg_t const usdhc4_pads[] = {
+	MX6_PAD_SD4_CLK__SD4_CLK   | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD4_CMD__SD4_CMD   | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD4_DAT0__SD4_DATA0 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD4_DAT1__SD4_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD4_DAT2__SD4_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD4_DAT3__SD4_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD4_DAT4__SD4_DATA4 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD4_DAT5__SD4_DATA5 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD4_DAT6__SD4_DATA6 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD4_DAT7__SD4_DATA7 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+};
+
+#ifdef CONFIG_MXC_SPI
+static iomux_v3_cfg_t const ecspi1_pads[] = {
+	MX6_PAD_KEY_COL0__ECSPI1_SCLK | MUX_PAD_CTRL(SPI_PAD_CTRL),
+	MX6_PAD_KEY_COL1__ECSPI1_MISO | MUX_PAD_CTRL(SPI_PAD_CTRL),
+	MX6_PAD_KEY_ROW0__ECSPI1_MOSI | MUX_PAD_CTRL(SPI_PAD_CTRL),
+	MX6_PAD_KEY_ROW1__GPIO4_IO09 | MUX_PAD_CTRL(NO_PAD_CTRL),
+};
+
+static void setup_spi(void)
+{
+	imx_iomux_v3_setup_multiple_pads(ecspi1_pads, ARRAY_SIZE(ecspi1_pads));
+}
+
+int board_spi_cs_gpio(unsigned bus, unsigned cs)
+{
+	return (bus == 0 && cs == 0) ? (IMX_GPIO_NR(4, 9)) : -1;
+}
+#endif
+
+static iomux_v3_cfg_t const rgb_pads[] = {
+	MX6_PAD_DI0_DISP_CLK__IPU1_DI0_DISP_CLK | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DI0_PIN15__IPU1_DI0_PIN15 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DI0_PIN2__IPU1_DI0_PIN02 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DI0_PIN3__IPU1_DI0_PIN03 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DI0_PIN4__IPU1_DI0_PIN04 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT0__IPU1_DISP0_DATA00 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT1__IPU1_DISP0_DATA01 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT2__IPU1_DISP0_DATA02 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT3__IPU1_DISP0_DATA03 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT4__IPU1_DISP0_DATA04 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT5__IPU1_DISP0_DATA05 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT6__IPU1_DISP0_DATA06 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT7__IPU1_DISP0_DATA07 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT8__IPU1_DISP0_DATA08 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT9__IPU1_DISP0_DATA09 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT10__IPU1_DISP0_DATA10 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT11__IPU1_DISP0_DATA11 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT12__IPU1_DISP0_DATA12 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT13__IPU1_DISP0_DATA13 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT14__IPU1_DISP0_DATA14 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT15__IPU1_DISP0_DATA15 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT16__IPU1_DISP0_DATA16 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT17__IPU1_DISP0_DATA17 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT18__IPU1_DISP0_DATA18 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT19__IPU1_DISP0_DATA19 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT20__IPU1_DISP0_DATA20 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT21__IPU1_DISP0_DATA21 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT22__IPU1_DISP0_DATA22 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_DISP0_DAT23__IPU1_DISP0_DATA23 | MUX_PAD_CTRL(NO_PAD_CTRL),
+};
+
+static void enable_rgb(struct display_info_t const *dev)
+{
+	imx_iomux_v3_setup_multiple_pads(rgb_pads, ARRAY_SIZE(rgb_pads));
+//	gpio_direction_output(DISP0_PWR_EN, 1);
+}
+
+/* leavs patched for lvds power */
+static iomux_v3_cfg_t const lvds_pads[] = {
+#ifdef PWM1
+        MX6_PAD_SD1_DAT3__GPIO1_IO21 | MUX_PAD_CTRL(NO_PAD_CTRL), //PWM1
+#else
+        MX6_PAD_SD1_CMD__GPIO1_IO18 | MUX_PAD_CTRL(NO_PAD_CTRL), //PWM4
+#endif
+
+};
+
+static struct i2c_pads_info i2c_pad_info1 = {
+	.scl = {
+		.i2c_mode = MX6_PAD_KEY_COL3__I2C2_SCL | I2C_PAD,
+		.gpio_mode = MX6_PAD_KEY_COL3__GPIO4_IO12 | I2C_PAD,
+		.gp = IMX_GPIO_NR(4, 12)
+	},
+	.sda = {
+		.i2c_mode = MX6_PAD_KEY_ROW3__I2C2_SDA | I2C_PAD,
+		.gpio_mode = MX6_PAD_KEY_ROW3__GPIO4_IO13 | I2C_PAD,
+		.gp = IMX_GPIO_NR(4, 13)
+	}
+};
+
+iomux_v3_cfg_t const pcie_pads[] = {
+	MX6_PAD_EIM_D19__GPIO3_IO19 | MUX_PAD_CTRL(NO_PAD_CTRL),	/* POWER */
+	MX6_PAD_GPIO_17__GPIO7_IO12 | MUX_PAD_CTRL(NO_PAD_CTRL),	/* RESET */
+};
+
+static void setup_pcie(void)
+{
+	imx_iomux_v3_setup_multiple_pads(pcie_pads, ARRAY_SIZE(pcie_pads));
+}
+
+iomux_v3_cfg_t const di0_pads[] = {
+	MX6_PAD_DI0_DISP_CLK__IPU1_DI0_DISP_CLK,	/* DISP0_CLK */
+	MX6_PAD_DI0_PIN2__IPU1_DI0_PIN02,		/* DISP0_HSYNC */
+	MX6_PAD_DI0_PIN3__IPU1_DI0_PIN03,		/* DISP0_VSYNC */
+};
+
+#if defined(CONFIG_MX6DL) && defined(CONFIG_MXC_EPDC)
+static iomux_v3_cfg_t const epdc_enable_pads[] = {
+	MX6_PAD_EIM_A16__EPDC_DATA00	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_DA10__EPDC_DATA01	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_DA12__EPDC_DATA02	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_DA11__EPDC_DATA03	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_LBA__EPDC_DATA04	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_EB2__EPDC_DATA05	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_CS0__EPDC_DATA06	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_RW__EPDC_DATA07	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_A21__EPDC_GDCLK	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_A22__EPDC_GDSP	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_A23__EPDC_GDOE	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_A24__EPDC_GDRL	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_D31__EPDC_SDCLK_P	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_D27__EPDC_SDOE	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_DA1__EPDC_SDLE	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_EB1__EPDC_SDSHR	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_DA2__EPDC_BDR0	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_DA4__EPDC_SDCE0	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_DA5__EPDC_SDCE1	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+	MX6_PAD_EIM_DA6__EPDC_SDCE2	| MUX_PAD_CTRL(EPDC_PAD_CTRL),
+};
+
+static iomux_v3_cfg_t const epdc_disable_pads[] = {
+	MX6_PAD_EIM_A16__GPIO2_IO22,
+	MX6_PAD_EIM_DA10__GPIO3_IO10,
+	MX6_PAD_EIM_DA12__GPIO3_IO12,
+	MX6_PAD_EIM_DA11__GPIO3_IO11,
+	MX6_PAD_EIM_LBA__GPIO2_IO27,
+	MX6_PAD_EIM_EB2__GPIO2_IO30,
+	MX6_PAD_EIM_CS0__GPIO2_IO23,
+	MX6_PAD_EIM_RW__GPIO2_IO26,
+	MX6_PAD_EIM_A21__GPIO2_IO17,
+	MX6_PAD_EIM_A22__GPIO2_IO16,
+	MX6_PAD_EIM_A23__GPIO6_IO06,
+	MX6_PAD_EIM_A24__GPIO5_IO04,
+	MX6_PAD_EIM_D31__GPIO3_IO31,
+	MX6_PAD_EIM_D27__GPIO3_IO27,
+	MX6_PAD_EIM_DA1__GPIO3_IO01,
+	MX6_PAD_EIM_EB1__GPIO2_IO29,
+	MX6_PAD_EIM_DA2__GPIO3_IO02,
+	MX6_PAD_EIM_DA4__GPIO3_IO04,
+	MX6_PAD_EIM_DA5__GPIO3_IO05,
+	MX6_PAD_EIM_DA6__GPIO3_IO06,
+};
+#endif
+
+static void setup_iomux_uart(void)
+{
+	imx_iomux_v3_setup_multiple_pads(uart1_pads, ARRAY_SIZE(uart1_pads));
+}
+
+#ifdef CONFIG_FSL_ESDHC
+struct fsl_esdhc_cfg usdhc_cfg[3] = {
+	{USDHC2_BASE_ADDR},
+	{USDHC3_BASE_ADDR},
+	{USDHC4_BASE_ADDR},
+};
+
+int mmc_get_env_devno(void)
+{
+	u32 soc_sbmr = readl(SRC_BASE_ADDR + 0x4);
+	u32 dev_no;
+	u32 bootsel;
+
+	bootsel = (soc_sbmr & 0x000000FF) >> 6 ;
+
+	/* If not boot from sd/mmc, use default value */
+	if (bootsel != 1)
+		return CONFIG_SYS_MMC_ENV_DEV;
+
+	/* BOOT_CFG2[3] and BOOT_CFG2[4] */
+	dev_no = (soc_sbmr & 0x00001800) >> 11;
+
+	/* need ubstract 1 to map to the mmc device id
+	 * see the comments in board_mmc_init function
+	 */
+
+	dev_no--;
+
+	return dev_no;
+}
+
+int mmc_map_to_kernel_blk(int dev_no)
+{
+	return dev_no + 1;
+}
+
+#define USDHC2_CD_GPIO	IMX_GPIO_NR(1, 4)
+#define USDHC3_CD_GPIO	IMX_GPIO_NR(2, 0)
+
+int board_mmc_getcd(struct mmc *mmc)
+{
+	struct fsl_esdhc_cfg *cfg = (struct fsl_esdhc_cfg *)mmc->priv;
+	int ret = 0;
+
+	switch (cfg->esdhc_base) {
+	case USDHC2_BASE_ADDR:
+		ret = !gpio_get_value(USDHC2_CD_GPIO);
+		break;
+	case USDHC3_BASE_ADDR:
+		ret = !gpio_get_value(USDHC3_CD_GPIO);
+		break;
+	case USDHC4_BASE_ADDR:
+		ret = 1; /* eMMC/uSDHC4 is always present */
+		break;
+	}
+
+	return ret;
+}
+
+int board_mmc_init(bd_t *bis)
+{
+#ifndef CONFIG_SPL_BUILD
+	int ret;
+	int i;
+
+	/*
+	 * According to the board_mmc_init() the following map is done:
+	 * (U-boot device node)    (Physical Port)
+	 * mmc0                    SD2
+	 * mmc1                    SD3
+	 * mmc2                    eMMC
+	 */
+	for (i = 0; i < CONFIG_SYS_FSL_USDHC_NUM; i++) {
+		switch (i) {
+		case 0:
+			imx_iomux_v3_setup_multiple_pads(
+				usdhc2_pads, ARRAY_SIZE(usdhc2_pads));
+			gpio_direction_input(USDHC2_CD_GPIO);
+			usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
+			break;
+		case 1:
+			imx_iomux_v3_setup_multiple_pads(
+				usdhc3_pads, ARRAY_SIZE(usdhc3_pads));
+			gpio_direction_input(USDHC3_CD_GPIO);
+			usdhc_cfg[1].sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
+			break;
+		case 2:
+			imx_iomux_v3_setup_multiple_pads(
+				usdhc4_pads, ARRAY_SIZE(usdhc4_pads));
+			usdhc_cfg[2].sdhc_clk = mxc_get_clock(MXC_ESDHC4_CLK);
+			break;
+		default:
+			printf("Warning: you configured more USDHC controllers"
+			       "(%d) then supported by the board (%d)\n",
+			       i + 1, CONFIG_SYS_FSL_USDHC_NUM);
+			return -EINVAL;
+		}
+
+		ret = fsl_esdhc_initialize(bis, &usdhc_cfg[i]);
+		if (ret)
+			return ret;
+	}
+
+	return 0;
+#else
+	struct src *psrc = (struct src *)SRC_BASE_ADDR;
+	unsigned reg = readl(&psrc->sbmr1) >> 11;
+	/*
+	 * Upon reading BOOT_CFG register the following map is done:
+	 * Bit 11 and 12 of BOOT_CFG register can determine the current
+	 * mmc port
+	 * 0x1                  SD1
+	 * 0x2                  SD2
+	 * 0x3                  SD4
+	 */
+
+	switch (reg & 0x3) {
+	case 0x1:
+		imx_iomux_v3_setup_multiple_pads(
+			usdhc2_pads, ARRAY_SIZE(usdhc2_pads));
+		usdhc_cfg[0].esdhc_base = USDHC2_BASE_ADDR;
+		usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
+		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
+		break;
+	case 0x2:
+		imx_iomux_v3_setup_multiple_pads(
+			usdhc3_pads, ARRAY_SIZE(usdhc3_pads));
+		usdhc_cfg[0].esdhc_base = USDHC3_BASE_ADDR;
+		usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
+		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
+		break;
+	case 0x3:
+		imx_iomux_v3_setup_multiple_pads(
+			usdhc4_pads, ARRAY_SIZE(usdhc4_pads));
+		usdhc_cfg[0].esdhc_base = USDHC4_BASE_ADDR;
+		usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC4_CLK);
+		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
+		break;
+	}
+
+	return fsl_esdhc_initialize(bis, &usdhc_cfg[0]);
+#endif
+}
+#endif
+
+int check_mmc_autodetect(void)
+{
+	char *autodetect_str = getenv("mmcautodetect");
+
+	if ((autodetect_str != NULL) &&
+		(strcmp(autodetect_str, "yes") == 0)) {
+		return 1;
+	}
+
+	return 0;
+}
+
+void board_late_mmc_env_init(void)
+{
+	char cmd[32];
+	char mmcblk[32];
+	u32 dev_no = mmc_get_env_devno();
+
+	if (!check_mmc_autodetect())
+		return;
+
+	setenv_ulong("mmcdev", dev_no);
+
+	/* Set mmcblk env */
+	sprintf(mmcblk, "/dev/mmcblk%dp2 rootwait rw",
+		mmc_map_to_kernel_blk(dev_no));
+	setenv("mmcroot", mmcblk);
+
+	sprintf(cmd, "mmc dev %d", dev_no);
+	run_command(cmd, 0);
+}
+
+#if defined(CONFIG_MX6DL) && defined(CONFIG_MXC_EPDC)
+vidinfo_t panel_info = {
+	.vl_refresh = 85,
+	.vl_col = 800,
+	.vl_row = 600,
+	.vl_pixclock = 26666667,
+	.vl_left_margin = 8,
+	.vl_right_margin = 100,
+	.vl_upper_margin = 4,
+	.vl_lower_margin = 8,
+	.vl_hsync = 4,
+	.vl_vsync = 1,
+	.vl_sync = 0,
+	.vl_mode = 0,
+	.vl_flag = 0,
+	.vl_bpix = 3,
+	.cmap = 0,
+};
+
+struct epdc_timing_params panel_timings = {
+	.vscan_holdoff = 4,
+	.sdoed_width = 10,
+	.sdoed_delay = 20,
+	.sdoez_width = 10,
+	.sdoez_delay = 20,
+	.gdclk_hp_offs = 419,
+	.gdsp_offs = 20,
+	.gdoe_offs = 0,
+	.gdclk_offs = 5,
+	.num_ce = 1,
+};
+
+static void setup_epdc_power(void)
+{
+	/* Setup epdc voltage */
+
+	/* EIM_A17 - GPIO2[21] for PWR_GOOD status */
+	imx_iomux_v3_setup_pad(MX6_PAD_EIM_A17__GPIO2_IO21 |
+				MUX_PAD_CTRL(EPDC_PAD_CTRL));
+	/* Set as input */
+	gpio_direction_input(IMX_GPIO_NR(2, 21));
+
+	/* EIM_D17 - GPIO3[17] for VCOM control */
+	imx_iomux_v3_setup_pad(MX6_PAD_EIM_D17__GPIO3_IO17 |
+				MUX_PAD_CTRL(EPDC_PAD_CTRL));
+
+	/* Set as output */
+	gpio_direction_output(IMX_GPIO_NR(3, 17), 1);
+
+	/* EIM_D20 - GPIO3[20] for EPD PMIC WAKEUP */
+	imx_iomux_v3_setup_pad(MX6_PAD_EIM_D20__GPIO3_IO20 |
+				MUX_PAD_CTRL(EPDC_PAD_CTRL));
+	/* Set as output */
+	gpio_direction_output(IMX_GPIO_NR(3, 20), 1);
+
+	/* EIM_A18 - GPIO2[20] for EPD PWR CTL0 */
+	imx_iomux_v3_setup_pad(MX6_PAD_EIM_A18__GPIO2_IO20 |
+				MUX_PAD_CTRL(EPDC_PAD_CTRL));
+	/* Set as output */
+	gpio_direction_output(IMX_GPIO_NR(2, 20), 1);
+}
+
+static void epdc_enable_pins(void)
+{
+	/* epdc iomux settings */
+	imx_iomux_v3_setup_multiple_pads(epdc_enable_pads,
+				ARRAY_SIZE(epdc_enable_pads));
+}
+
+static void epdc_disable_pins(void)
+{
+	/* Configure MUX settings for EPDC pins to GPIO */
+	imx_iomux_v3_setup_multiple_pads(epdc_disable_pads,
+				ARRAY_SIZE(epdc_disable_pads));
+}
+
+static void setup_epdc(void)
+{
+	unsigned int reg;
+	struct mxc_ccm_reg *ccm_regs = (struct mxc_ccm_reg *)CCM_BASE_ADDR;
+
+	/*** epdc Maxim PMIC settings ***/
+
+	/* EPDC PWRSTAT - GPIO2[21] for PWR_GOOD status */
+	imx_iomux_v3_setup_pad(MX6_PAD_EIM_A17__GPIO2_IO21 |
+				MUX_PAD_CTRL(EPDC_PAD_CTRL));
+
+	/* EPDC VCOM0 - GPIO3[17] for VCOM control */
+	imx_iomux_v3_setup_pad(MX6_PAD_EIM_D17__GPIO3_IO17 |
+				MUX_PAD_CTRL(EPDC_PAD_CTRL));
+
+	/* UART4 TXD - GPIO3[20] for EPD PMIC WAKEUP */
+	imx_iomux_v3_setup_pad(MX6_PAD_EIM_D20__GPIO3_IO20 |
+				MUX_PAD_CTRL(EPDC_PAD_CTRL));
+
+	/* EIM_A18 - GPIO2[20] for EPD PWR CTL0 */
+	imx_iomux_v3_setup_pad(MX6_PAD_EIM_A18__GPIO2_IO20 |
+				MUX_PAD_CTRL(EPDC_PAD_CTRL));
+
+	/*** Set pixel clock rates for EPDC ***/
+
+	/* EPDC AXI clk (IPU2_CLK) from PFD_400M, set to 396/2 = 198MHz */
+	reg = readl(&ccm_regs->cscdr3);
+	reg &= ~0x7C000;
+	reg |= (1 << 16) | (1 << 14);
+	writel(reg, &ccm_regs->cscdr3);
+
+	/* EPDC AXI clk enable */
+	reg = readl(&ccm_regs->CCGR3);
+	reg |= 0x00C0;
+	writel(reg, &ccm_regs->CCGR3);
+
+	/* EPDC PIX clk (IPU2_DI1_CLK) from PLL5, set to 650/4/6 = ~27MHz */
+	reg = readl(&ccm_regs->cscdr2);
+	reg &= ~0x3FE00;
+	reg |= (2 << 15) | (5 << 12);
+	writel(reg, &ccm_regs->cscdr2);
+
+	/* PLL5 enable (defaults to 650) */
+	reg = readl(&ccm_regs->analog_pll_video);
+	reg &= ~((1 << 16) | (1 << 12));
+	reg |= (1 << 13);
+	writel(reg, &ccm_regs->analog_pll_video);
+
+	/* EPDC PIX clk enable */
+	reg = readl(&ccm_regs->CCGR3);
+	reg |= 0x0C00;
+	writel(reg, &ccm_regs->CCGR3);
+
+	panel_info.epdc_data.wv_modes.mode_init = 0;
+	panel_info.epdc_data.wv_modes.mode_du = 1;
+	panel_info.epdc_data.wv_modes.mode_gc4 = 3;
+	panel_info.epdc_data.wv_modes.mode_gc8 = 2;
+	panel_info.epdc_data.wv_modes.mode_gc16 = 2;
+	panel_info.epdc_data.wv_modes.mode_gc32 = 2;
+
+	panel_info.epdc_data.epdc_timings = panel_timings;
+
+	setup_epdc_power();
+}
+
+void epdc_power_on(void)
+{
+	unsigned int reg;
+	struct gpio_regs *gpio_regs = (struct gpio_regs *)GPIO2_BASE_ADDR;
+
+	/* Set EPD_PWR_CTL0 to high - enable EINK_VDD (3.15) */
+	gpio_set_value(IMX_GPIO_NR(2, 20), 1);
+	udelay(1000);
+
+	/* Enable epdc signal pin */
+	epdc_enable_pins();
+
+	/* Set PMIC Wakeup to high - enable Display power */
+	gpio_set_value(IMX_GPIO_NR(3, 20), 1);
+
+	/* Wait for PWRGOOD == 1 */
+	while (1) {
+		reg = readl(&gpio_regs->gpio_psr);
+		if (!(reg & (1 << 21)))
+			break;
+
+		udelay(100);
+	}
+
+	/* Enable VCOM */
+	gpio_set_value(IMX_GPIO_NR(3, 17), 1);
+
+	udelay(500);
+}
+
+void epdc_power_off(void)
+{
+	/* Set PMIC Wakeup to low - disable Display power */
+	gpio_set_value(IMX_GPIO_NR(3, 20), 0);
+
+	/* Disable VCOM */
+	gpio_set_value(IMX_GPIO_NR(3, 17), 0);
+
+	epdc_disable_pins();
+
+	/* Set EPD_PWR_CTL0 to low - disable EINK_VDD (3.15) */
+	gpio_set_value(IMX_GPIO_NR(2, 20), 0);
+}
+#endif
+
+int mx6_rgmii_rework(struct phy_device *phydev)
+{
+	unsigned short val;
+
+	/* To enable AR8031 ouput a 125MHz clk from CLK_25M */
+	phy_write(phydev, MDIO_DEVAD_NONE, 0xd, 0x7);
+	phy_write(phydev, MDIO_DEVAD_NONE, 0xe, 0x8016);
+	phy_write(phydev, MDIO_DEVAD_NONE, 0xd, 0x4007);
+
+	val = phy_read(phydev, MDIO_DEVAD_NONE, 0xe);
+	val &= 0xffe3;
+	val |= 0x18;
+	phy_write(phydev, MDIO_DEVAD_NONE, 0xe, val);
+
+	/* introduce tx clock delay */
+	phy_write(phydev, MDIO_DEVAD_NONE, 0x1d, 0x5);
+	val = phy_read(phydev, MDIO_DEVAD_NONE, 0x1e);
+	val |= 0x0100;
+	phy_write(phydev, MDIO_DEVAD_NONE, 0x1e, val);
+
+	return 0;
+}
+
+int board_phy_config(struct phy_device *phydev)
+{
+	mx6_rgmii_rework(phydev);
+
+	if (phydev->drv->config)
+		phydev->drv->config(phydev);
+
+	return 0;
+}
+
+#if defined(CONFIG_VIDEO_IPUV3)
+static void disable_lvds(struct display_info_t const *dev)
+{
+	struct iomuxc *iomux = (struct iomuxc *)IOMUXC_BASE_ADDR;
+
+	int reg = readl(&iomux->gpr[2]);
+
+	reg &= ~(IOMUXC_GPR2_LVDS_CH0_MODE_MASK |
+		 IOMUXC_GPR2_LVDS_CH1_MODE_MASK);
+
+	writel(reg, &iomux->gpr[2]);
+}
+
+static void do_enable_hdmi(struct display_info_t const *dev)
+{
+	disable_lvds(dev);
+	imx_enable_hdmi_phy();
+}
+
+static void enable_lvds(struct display_info_t const *dev)
+{
+	/* leavs patched for uboot backlight PWM1(GPIO1_21)*/
+        imx_iomux_v3_setup_multiple_pads(lvds_pads, ARRAY_SIZE(lvds_pads));
+#ifdef PWM1
+        gpio_direction_output(LVDS_PWR_EN, 1);
+#else
+        gpio_direction_output(IMX_GPIO_NR(1, 18), 0);
+#endif
+
+	/* leavs patched for lvds power en GPIO1_16 */
+	imx_iomux_v3_setup_pad(MX6_PAD_SD1_DAT0__GPIO1_IO16 | MUX_PAD_CTRL(NO_PAD_CTRL));
+	gpio_direction_output(IMX_GPIO_NR(1, 16), 1);
+
+	struct iomuxc *iomux = (struct iomuxc *)
+				IOMUXC_BASE_ADDR;
+	u32 reg = readl(&iomux->gpr[2]);
+	
+	/* leavs patched */
+        //reg |= IOMUXC_GPR2_DATA_WIDTH_CH0_18BIT |
+        //      IOMUXC_GPR2_DATA_WIDTH_CH1_18BIT;
+        reg |= IOMUXC_GPR2_DATA_WIDTH_CH0_24BIT |
+#ifdef LVDS_SPLIT_MODE
+        /* enable split mode leavs_20161012 */
+               IOMUXC_GPR2_SPLIT_MODE_EN_MASK |
+#else
+#endif
+               IOMUXC_GPR2_DATA_WIDTH_CH1_24BIT;
+        writel(reg, &iomux->gpr[2]);
+
+}
+/* Leavs patched for CHIMEI-WXGA LCD  */
+struct display_info_t const displays[] = {{
+	.bus	= -1,
+	.addr	= 0,
+	.pixfmt	= IPU_PIX_FMT_RGB666,
+	.detect	= NULL,
+	.enable	= enable_lvds,
+	.mode	= {
+		.name           = "Hannstar-XGA",
+		.refresh        = 60,
+		.xres           = 1024,
+		.yres           = 768,
+		.pixclock       = 15385,
+		.left_margin    = 220,
+		.right_margin   = 40,
+		.upper_margin   = 21,
+		.lower_margin   = 7,
+		.hsync_len      = 60,
+		.vsync_len      = 10,
+		.sync           = FB_SYNC_EXT,
+		.vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus    = -1,
+        .addr   = 0,
+        .pixfmt = IPU_PIX_FMT_RGB24,
+        .detect = NULL,
+        .enable = enable_lvds,
+        .mode   = {
+                .name           = "INNOLUX7",
+                .refresh        = 60,
+                .xres           = 1024,
+                .yres           = 600,
+                .pixclock       = 19531,
+                .left_margin    = 220,
+                .right_margin   = 40,
+                .upper_margin   = 20,
+                .lower_margin   = 5,
+                .hsync_len      = 60,
+                .vsync_len      = 10,
+                .sync           = FB_SYNC_EXT,
+                .vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus    = -1,
+        .addr   = 0,
+        .pixfmt = IPU_PIX_FMT_RGB24,
+        .detect = NULL,
+        .enable = enable_lvds,
+        .mode   = {
+                .name           = "CHIMEI101",
+                .refresh        = 60,
+                .xres           = 1280,
+                .yres           = 800,
+                .pixclock       = 14065,
+                .left_margin    = 40,
+                .right_margin   = 40,
+                .upper_margin   = 10,
+                .lower_margin   = 3,
+                .hsync_len      = 80,
+                .vsync_len      = 10,
+                .sync           = FB_SYNC_EXT,
+                .vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus    = -1,
+        .addr   = 0,
+        .pixfmt = IPU_PIX_FMT_RGB24,
+        .detect = NULL,
+        .enable = enable_lvds,
+        .mode   = {
+                .name           = "AUO104",
+                .refresh        = 60,
+                .xres           = 800,
+                .yres           = 600,
+                .pixclock       = 20000,
+                .left_margin    = 125,
+                .right_margin   = 125,
+                .upper_margin   = 10,
+                .lower_margin   = 10,
+                .hsync_len      = 6,
+                .vsync_len      = 8,
+                .sync           = FB_SYNC_EXT,
+                .vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus    = -1,
+        .addr   = 0,
+        .pixfmt = IPU_PIX_FMT_RGB24,
+        .detect = NULL,
+        .enable = enable_lvds,
+        .mode   = {
+                .name           = "SHARP121",
+                .refresh        = 60,
+                .xres           = 800,
+                .yres           = 600,
+                .pixclock       = 20000,
+                .left_margin    = 127,
+                .right_margin   = 127,
+                .upper_margin   = 32,
+                .lower_margin   = 32,
+                .hsync_len      = 2,
+                .vsync_len      = 2,
+                .sync           = FB_SYNC_EXT,
+                .vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus    = -1,
+        .addr   = 0,
+        .pixfmt = IPU_PIX_FMT_RGB24,
+        .detect = NULL,
+        .enable = enable_lvds,
+        .mode   = {
+                .name           = "IVO150-120",
+                .refresh        = 60,
+                .xres           = 1024,
+                .yres           = 768,
+                .pixclock       = 15385,
+                .left_margin    = 48,
+                .right_margin   = 240,
+                .upper_margin   = 3,
+                .lower_margin   = 23,
+                .hsync_len      = 32,
+                .vsync_len      = 12,
+                .sync           = FB_SYNC_EXT,
+                .vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus    = -1,
+        .addr   = 0,
+        .pixfmt = IPU_PIX_FMT_RGB24,
+        .detect = NULL,
+        .enable = enable_lvds,
+        .mode   = {
+                .name           = "AUO170",
+                .refresh        = 60,
+                .xres           = 1280,
+                .yres           = 1024,
+                .pixclock       = 9259,
+                .left_margin    = 150,
+                .right_margin   = 150,
+                .upper_margin   = 40,
+                .lower_margin   = 40,
+                .hsync_len      = 108,
+                .vsync_len      = 4,
+                .sync           = FB_SYNC_EXT,
+                .vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus    = -1,
+        .addr   = 0,
+        .pixfmt = IPU_PIX_FMT_RGB24,
+        .detect = NULL,
+        .enable = enable_lvds,
+        .mode   = {
+                .name           = "BOE185",
+                .refresh        = 60,
+                .xres           = 1366,
+                .yres           = 768,
+                .pixclock       = 12820,
+                .left_margin    = 119,
+                .right_margin   = 119,
+                .upper_margin   = 19,
+                .lower_margin   = 19,
+                .hsync_len      = 2,
+                .vsync_len      = 2,
+                .sync           = FB_SYNC_EXT,
+                .vmode          = FB_VMODE_NONINTERLACED
+} }, {
+        .bus    = -1,
+        .addr   = 0,
+        .pixfmt = IPU_PIX_FMT_RGB24,
+        .detect = NULL,
+        .enable = enable_lvds,
+        .mode   = {
+                .name           = "CHIMEI19",
+                .refresh        = 60,
+                .xres           = 1440,
+                .yres           = 900,
+                .pixclock       = 11261,
+                .left_margin    = 60,
+                .right_margin   = 60,
+                .upper_margin   = 20,
+                .lower_margin   = 20,
+                .hsync_len      = 40,
+                .vsync_len      = 12,
+                .sync           = FB_SYNC_EXT,
+                .vmode          = FB_VMODE_NONINTERLACED
+} }, {
+        .bus    = -1,
+        .addr   = 0,
+        .pixfmt = IPU_PIX_FMT_RGB24,
+        .detect = NULL,
+        .enable = enable_lvds,
+        .mode   = {
+                .name           = "CHIMEI215",
+                .refresh        = 60,
+                .xres           = 1920,
+                .yres           = 1080,
+                .pixclock       = 6727,
+                .left_margin    = 100,
+                .right_margin   = 100,
+                .upper_margin   = 40,
+                .lower_margin   = 40,
+                .hsync_len      = 80,
+                .vsync_len      = 10,
+                .sync           = FB_SYNC_EXT,
+                .vmode          = FB_VMODE_NONINTERLACED
+} }, {
+        .bus    = -1,
+        .addr   = 0,
+        .pixfmt = IPU_PIX_FMT_RGB24,
+        .detect = NULL,
+        .enable = enable_lvds,
+        .mode   = {
+                .name           = "BOE280",
+                .refresh        = 60,
+                .xres           = 1920,
+                .yres           = 360,
+                .pixclock       = 6734,
+                .left_margin    = 139,
+                .right_margin   = 139,
+                .upper_margin   = 22,
+                .lower_margin   = 22,
+                .hsync_len      = 2,
+                .vsync_len      = 1,
+                .sync           = FB_SYNC_EXT,
+                .vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus	= -1,
+	.addr	= 0,
+	.pixfmt	= IPU_PIX_FMT_RGB24,
+	.detect	= NULL,
+	.enable	= do_enable_hdmi,
+	.mode	= {
+		.name           = "HDMI",
+		.refresh        = 60,
+		.xres           = 640,
+		.yres           = 480,
+		.pixclock       = 39721,
+		.left_margin    = 48,
+		.right_margin   = 16,
+		.upper_margin   = 33,
+		.lower_margin   = 10,
+		.hsync_len      = 96,
+		.vsync_len      = 2,
+		.sync           = 0,
+		.vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus	= 0,
+	.addr	= 0,
+	.pixfmt	= IPU_PIX_FMT_RGB24,
+	.detect	= NULL,
+	.enable	= enable_rgb,
+	.mode	= {
+		.name           = "SEIKO-WVGA",
+		.refresh        = 60,
+		.xres           = 800,
+		.yres           = 480,
+		.pixclock       = 29850,
+		.left_margin    = 89,
+		.right_margin   = 164,
+		.upper_margin   = 23,
+		.lower_margin   = 10,
+		.hsync_len      = 10,
+		.vsync_len      = 10,
+		.sync           = 0,
+		.vmode          = FB_VMODE_NONINTERLACED
+} } };
+size_t display_count = ARRAY_SIZE(displays);
+
+static void setup_display(void)
+{
+	struct mxc_ccm_reg *mxc_ccm = (struct mxc_ccm_reg *)CCM_BASE_ADDR;
+	struct iomuxc *iomux = (struct iomuxc *)IOMUXC_BASE_ADDR;
+	int reg;
+
+	/* Setup HSYNC, VSYNC, DISP_CLK for debugging purposes */
+	imx_iomux_v3_setup_multiple_pads(di0_pads, ARRAY_SIZE(di0_pads));
+
+	enable_ipu_clock();
+	imx_setup_hdmi();
+
+	/* Turn on LDB0, LDB1, IPU,IPU DI0 clocks */
+	reg = readl(&mxc_ccm->CCGR3);
+	reg |=  MXC_CCM_CCGR3_LDB_DI0_MASK | MXC_CCM_CCGR3_LDB_DI1_MASK;
+	writel(reg, &mxc_ccm->CCGR3);
+
+	/* set LDB0, LDB1 clk select to 011/011 */
+	reg = readl(&mxc_ccm->cs2cdr);
+	reg &= ~(MXC_CCM_CS2CDR_LDB_DI0_CLK_SEL_MASK
+		 | MXC_CCM_CS2CDR_LDB_DI1_CLK_SEL_MASK);
+	reg |= (3 << MXC_CCM_CS2CDR_LDB_DI0_CLK_SEL_OFFSET)
+	      | (3 << MXC_CCM_CS2CDR_LDB_DI1_CLK_SEL_OFFSET);
+	writel(reg, &mxc_ccm->cs2cdr);
+
+	reg = readl(&mxc_ccm->cscmr2);
+#ifdef LVDS_SPLIT_MODE
+        /* Set ipu_di clock to ldb_di_clk/3.5 leavs_20161012*/
+        reg &= ~(MXC_CCM_CSCMR2_LDB_DI0_IPU_DIV | MXC_CCM_CSCMR2_LDB_DI1_IPU_DIV);
+#else
+        /* Set ipu_di clock to ldb_di_clk/7 */
+	reg |= MXC_CCM_CSCMR2_LDB_DI0_IPU_DIV | MXC_CCM_CSCMR2_LDB_DI1_IPU_DIV;
+#endif
+	writel(reg, &mxc_ccm->cscmr2);
+
+	reg = readl(&mxc_ccm->chsccdr);
+	reg |= (CHSCCDR_CLK_SEL_LDB_DI0
+		<< MXC_CCM_CHSCCDR_IPU1_DI0_CLK_SEL_OFFSET);
+	reg |= (CHSCCDR_CLK_SEL_LDB_DI0
+		<< MXC_CCM_CHSCCDR_IPU1_DI1_CLK_SEL_OFFSET);
+	writel(reg, &mxc_ccm->chsccdr);
+
+	/* Leavs patched for change lvds 20160622 */
+	reg = IOMUXC_GPR2_BGREF_RRMODE_EXTERNAL_RES
+	     | IOMUXC_GPR2_DI1_VS_POLARITY_ACTIVE_LOW
+	     | IOMUXC_GPR2_DI0_VS_POLARITY_ACTIVE_LOW
+	     | IOMUXC_GPR2_BIT_MAPPING_CH1_SPWG
+	     //| IOMUXC_GPR2_DATA_WIDTH_CH1_18BIT
+	     | IOMUXC_GPR2_DATA_WIDTH_CH1_24BIT
+	     | IOMUXC_GPR2_BIT_MAPPING_CH0_SPWG
+	     //| IOMUXC_GPR2_DATA_WIDTH_CH0_18BIT
+	     | IOMUXC_GPR2_DATA_WIDTH_CH0_24BIT
+	     //| IOMUXC_GPR2_LVDS_CH0_MODE_DISABLED
+#ifdef LVDS_SPLIT_MODE
+        /* enable split mode leavs_20161012 */
+             | IOMUXC_GPR2_SPLIT_MODE_EN_MASK
+#else
+#endif
+	     | IOMUXC_GPR2_LVDS_CH0_MODE_ENABLED_DI0
+	     | IOMUXC_GPR2_LVDS_CH1_MODE_ENABLED_DI0;
+	writel(reg, &iomux->gpr[2]);
+
+	reg = readl(&iomux->gpr[3]);
+	//reg = (reg & ~(IOMUXC_GPR3_LVDS1_MUX_CTL_MASK
+	reg = (reg & ~(IOMUXC_GPR3_LVDS0_MUX_CTL_MASK
+			| IOMUXC_GPR3_LVDS1_MUX_CTL_MASK
+			| IOMUXC_GPR3_HDMI_MUX_CTL_MASK))
+	    | (IOMUXC_GPR3_MUX_SRC_IPU1_DI0
+	       << IOMUXC_GPR3_LVDS1_MUX_CTL_OFFSET)
+	    | (IOMUXC_GPR3_MUX_SRC_IPU1_DI0
+	       << IOMUXC_GPR3_LVDS0_MUX_CTL_OFFSET);
+	writel(reg, &iomux->gpr[3]);
+}
+#endif /* CONFIG_VIDEO_IPUV3 */
+
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+#ifdef IPU_OUTPUT_MODE_LCD
+static void ipu_iomux_config(void)
+{
+	iomux_v3_cfg_t display_pads[] = {
+		MX6_PAD_DI0_DISP_CLK__IPU1_DI0_DISP_CLK | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DI0_PIN15__IPU1_DI0_PIN15 | MUX_PAD_CTRL(NO_PAD_CTRL), 	/* DE */
+		MX6_PAD_DI0_PIN2__IPU1_DI0_PIN02 | MUX_PAD_CTRL(NO_PAD_CTRL),		/* HSync */
+		MX6_PAD_DI0_PIN3__IPU1_DI0_PIN03 | MUX_PAD_CTRL(NO_PAD_CTRL),		/* VSync */
+		MX6_PAD_DISP0_DAT0__IPU1_DISP0_DATA00 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT1__IPU1_DISP0_DATA01 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT2__IPU1_DISP0_DATA02 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT3__IPU1_DISP0_DATA03 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT4__IPU1_DISP0_DATA04 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT5__IPU1_DISP0_DATA05 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT6__IPU1_DISP0_DATA06 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT7__IPU1_DISP0_DATA07 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT8__IPU1_DISP0_DATA08 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT9__IPU1_DISP0_DATA09 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT10__IPU1_DISP0_DATA10 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT11__IPU1_DISP0_DATA11 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT12__IPU1_DISP0_DATA12 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT13__IPU1_DISP0_DATA13 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT14__IPU1_DISP0_DATA14 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT15__IPU1_DISP0_DATA15 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT16__IPU1_DISP0_DATA16 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT17__IPU1_DISP0_DATA17 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT18__IPU1_DISP0_DATA18 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT19__IPU1_DISP0_DATA19 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT20__IPU1_DISP0_DATA20 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT21__IPU1_DISP0_DATA21 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT22__IPU1_DISP0_DATA22 | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_DISP0_DAT23__IPU1_DISP0_DATA23 | MUX_PAD_CTRL(NO_PAD_CTRL),
+	};
+
+	imx_iomux_v3_setup_multiple_pads(display_pads,
+			ARRAY_SIZE(display_pads));
+}
+#endif
+
+#ifdef IPU_OUTPUT_MODE_LVDS
+static void setup_lvds_iomux(void)
+{
+	struct pwm_device pwm = {
+#ifdef PWM1
+                .pwm_id = 0,
+                .pwmo_invert = 0,
+#else
+                .pwm_id = 3,
+                .pwmo_invert = 0,
+#endif
+	};
+
+	imx_pwm_config(pwm,50000, 50000);
+	imx_pwm_enable(pwm);
+
+	/* GPIO backlight */
+#ifdef PWM1
+        imx_iomux_v3_setup_pad(MX6_PAD_SD1_DAT3__PWM1_OUT | MUX_PAD_CTRL(NO_PAD_CTRL));
+#else
+	imx_iomux_v3_setup_pad(MX6_PAD_SD1_DAT0__GPIO1_IO16 | MUX_PAD_CTRL(NO_PAD_CTRL));
+        gpio_direction_output(LVDS_PWR_EN2, 1);	
+        imx_iomux_v3_setup_pad(MX6_PAD_SD1_CMD__PWM4_OUT | MUX_PAD_CTRL(NO_PAD_CTRL));
+#endif
+}
+#endif
+
+#ifdef IPU_OUTPUT_MODE_LCD
+static void setup_lcd_iomux(void)
+{
+	unsigned int reg;
+	struct pwm_device pwm = {
+		.pwm_id = 0,
+		.pwmo_invert = 0,
+	};
+
+	imx_pwm_config(pwm, 25000, 50000);
+	imx_pwm_enable(pwm);
+
+	/* LCD Power */
+	imx_iomux_v3_setup_pad(MX6_PAD_ENET_TXD0__GPIO1_IO30 | MUX_PAD_CTRL(NO_PAD_CTRL));
+	/* LCD reset */
+	imx_iomux_v3_setup_pad(MX6_PAD_EIM_DA8__GPIO3_IO08 | MUX_PAD_CTRL(NO_PAD_CTRL));
+	/* Backlight */
+	imx_iomux_v3_setup_pad(MX6_PAD_SD1_DAT3__PWM1_OUT | MUX_PAD_CTRL(NO_PAD_CTRL));
+
+	/* Set LCD Power to high. */
+	gpio_direction_output(IMX_GPIO_NR(1, 30), 1);
+
+	/* Set LCD reset to high. */
+	gpio_direction_output(IMX_GPIO_NR(3, 8), 1);
+}
+#endif
+
+#ifdef IPU_OUTPUT_MODE_HDMI
+static void setup_hdmi_iomux(void)
+{
+	iomux_v3_cfg_t hdmi_i2c_pads[] = {
+		MX6_PAD_KEY_COL3__HDMI_TX_DDC_SCL | MUX_PAD_CTRL(NO_PAD_CTRL),
+		MX6_PAD_KEY_ROW3__HDMI_TX_DDC_SDA | MUX_PAD_CTRL(NO_PAD_CTRL),
+	};
+
+	imx_iomux_v3_setup_multiple_pads(hdmi_i2c_pads,
+			ARRAY_SIZE(hdmi_i2c_pads));
+}
+#endif
+
+#endif  //CONFIG_UBOOT_LOGO_ENABLE
+
+
+/*
+ * Do not overwrite the console
+ * Use always serial for U-Boot console
+ */
+int overwrite_console(void)
+{
+	return 1;
+}
+
+int board_eth_init(bd_t *bis)
+{
+	setup_iomux_enet();
+	setup_pcie();
+
+	return cpu_eth_init(bis);
+}
+
+#ifdef CONFIG_USB_EHCI_MX6
+#define USB_OTHERREGS_OFFSET	0x800
+#define UCTRL_PWR_POL		(1 << 9)
+
+static iomux_v3_cfg_t const usb_otg_pads[] = {
+	MX6_PAD_EIM_D22__USB_OTG_PWR | MUX_PAD_CTRL(NO_PAD_CTRL),
+	MX6_PAD_ENET_RX_ER__USB_OTG_ID | MUX_PAD_CTRL(OTG_ID_PAD_CTRL),
+};
+
+static iomux_v3_cfg_t const usb_hc1_pads[] = {
+	MX6_PAD_ENET_TXD1__GPIO1_IO29 | MUX_PAD_CTRL(NO_PAD_CTRL),
+};
+
+static void setup_usb(void)
+{
+	imx_iomux_v3_setup_multiple_pads(usb_otg_pads,
+					 ARRAY_SIZE(usb_otg_pads));
+
+	/*
+	 * set daisy chain for otg_pin_id on 6q.
+	 * for 6dl, this bit is reserved
+	 */
+	imx_iomux_set_gpr_register(1, 13, 1, 0);
+
+	imx_iomux_v3_setup_multiple_pads(usb_hc1_pads,
+					 ARRAY_SIZE(usb_hc1_pads));
+}
+
+static iomux_v3_cfg_t const audio_pads[] = {
+	MX6_PAD_EIM_BCLK__GPIO6_IO31 | MUX_PAD_CTRL(NO_PAD_CTRL),
+};
+
+static void setup_audio(void)
+{
+	imx_iomux_v3_setup_multiple_pads(audio_pads,
+					ARRAY_SIZE(audio_pads));
+
+	gpio_direction_output(IMX_GPIO_NR(6, 31), 1);
+}
+
+int board_ehci_hcd_init(int port)
+{
+	u32 *usbnc_usb_ctrl;
+
+	if (port > 1)
+		return -EINVAL;
+
+	usbnc_usb_ctrl = (u32 *)(USB_BASE_ADDR + USB_OTHERREGS_OFFSET +
+				 port * 4);
+
+	setbits_le32(usbnc_usb_ctrl, UCTRL_PWR_POL);
+
+	return 0;
+}
+
+int board_ehci_power(int port, int on)
+{
+	switch (port) {
+	case 0:
+		break;
+	case 1:
+		if (on)
+			gpio_direction_output(IMX_GPIO_NR(1, 29), 1);
+		else
+			gpio_direction_output(IMX_GPIO_NR(1, 29), 0);
+		break;
+	default:
+		printf("MXC USB port %d not yet supported\n", port);
+		return -EINVAL;
+	}
+
+	return 0;
+}
+#endif
+
+int board_early_init_f(void)
+{
+	setup_iomux_uart();
+#if defined(CONFIG_VIDEO_IPUV3)
+	setup_display();
+#endif
+
+	return 0;
+}
+
+int board_init(void)
+{
+	/* address of boot parameters */
+	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
+
+#ifdef CONFIG_MXC_SPI
+	setup_spi();
+#endif
+	setup_i2c(1, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info1);
+
+#ifdef CONFIG_USB_EHCI_MX6
+	setup_usb();
+#endif
+	/* enable audio power leavs_20161014 */
+	setup_audio();
+
+#if defined(CONFIG_MX6DL) && defined(CONFIG_MXC_EPDC)
+	setup_epdc();
+#endif
+
+#ifdef CONFIG_CMD_SATA
+	setup_sata();
+#endif
+
+	return 0;
+}
+
+static struct pmic *pfuze;
+#if 0	//Leavs disable PMIC
+int power_init_board(void)
+{
+	unsigned int reg, ret;
+
+	pfuze = pfuze_common_init(I2C_PMIC);
+	if (!pfuze)
+		return -ENODEV;
+
+	if (is_mx6dqp())
+		ret = pfuze_mode_init(pfuze, APS_APS);
+	else
+		ret = pfuze_mode_init(pfuze, APS_PFM);
+
+	if (ret < 0)
+		return ret;
+
+	/* Increase VGEN3 from 2.5 to 2.8V */
+	pmic_reg_read(pfuze, PFUZE100_VGEN3VOL, &reg);
+	reg &= ~LDO_VOL_MASK;
+	reg |= LDOB_2_80V;
+	pmic_reg_write(pfuze, PFUZE100_VGEN3VOL, reg);
+
+	/* Increase VGEN5 from 2.8 to 3V */
+	pmic_reg_read(pfuze, PFUZE100_VGEN5VOL, &reg);
+	reg &= ~LDO_VOL_MASK;
+	reg |= LDOB_3_00V;
+	pmic_reg_write(pfuze, PFUZE100_VGEN5VOL, reg);
+
+	if (is_mx6dqp()) {
+		/* set SW1C staby volatage 1.075V*/
+		pmic_reg_read(pfuze, PFUZE100_SW1CSTBY, &reg);
+		reg &= ~0x3f;
+		reg |= 0x1f;
+		pmic_reg_write(pfuze, PFUZE100_SW1CSTBY, reg);
+
+		/* set SW1C/VDDSOC step ramp up time to from 16us to 4us/25mV */
+		pmic_reg_read(pfuze, PFUZE100_SW1CCONF, &reg);
+		reg &= ~0xc0;
+		reg |= 0x40;
+		pmic_reg_write(pfuze, PFUZE100_SW1CCONF, reg);
+
+		/* set SW2/VDDARM staby volatage 0.975V*/
+		pmic_reg_read(pfuze, PFUZE100_SW2STBY, &reg);
+		reg &= ~0x3f;
+		reg |= 0x17;
+		pmic_reg_write(pfuze, PFUZE100_SW2STBY, reg);
+
+		/* set SW2/VDDARM step ramp up time to from 16us to 4us/25mV */
+		pmic_reg_read(pfuze, PFUZE100_SW2CONF, &reg);
+		reg &= ~0xc0;
+		reg |= 0x40;
+		pmic_reg_write(pfuze, PFUZE100_SW2CONF, reg);
+	} else {
+		/* set SW1AB staby volatage 0.975V*/
+		pmic_reg_read(pfuze, PFUZE100_SW1ABSTBY, &reg);
+		reg &= ~0x3f;
+		reg |= 0x1b;
+		pmic_reg_write(pfuze, PFUZE100_SW1ABSTBY, reg);
+
+		/* set SW1AB/VDDARM step ramp up time from 16us to 4us/25mV */
+		pmic_reg_read(pfuze, PFUZE100_SW1ABCONF, &reg);
+		reg &= ~0xc0;
+		reg |= 0x40;
+		pmic_reg_write(pfuze, PFUZE100_SW1ABCONF, reg);
+
+		/* set SW1C staby volatage 0.975V*/
+		pmic_reg_read(pfuze, PFUZE100_SW1CSTBY, &reg);
+		reg &= ~0x3f;
+		reg |= 0x1b;
+		pmic_reg_write(pfuze, PFUZE100_SW1CSTBY, reg);
+
+		/* set SW1C/VDDSOC step ramp up time to from 16us to 4us/25mV */
+		pmic_reg_read(pfuze, PFUZE100_SW1CCONF, &reg);
+		reg &= ~0xc0;
+		reg |= 0x40;
+		pmic_reg_write(pfuze, PFUZE100_SW1CCONF, reg);
+	}
+
+	return 0;
+}
+#endif
+
+#ifdef CONFIG_LDO_BYPASS_CHECK
+void ldo_mode_set(int ldo_bypass)
+{
+	unsigned int value;
+	int is_400M;
+	unsigned char vddarm;
+	struct pmic *p = pfuze;
+
+	if (!p) {
+		printf("No PMIC found!\n");
+		return;
+	}
+
+	/* increase VDDARM/VDDSOC to support 1.2G chip */
+	if (check_1_2G()) {
+		ldo_bypass = 0;	/* ldo_enable on 1.2G chip */
+		printf("1.2G chip, increase VDDARM_IN/VDDSOC_IN\n");
+		if (is_mx6dqp()) {
+			/* increase VDDARM to 1.425V */
+			pmic_reg_read(p, PFUZE100_SW2VOL, &value);
+			value &= ~0x3f;
+			value |= 0x29;
+			pmic_reg_write(p, PFUZE100_SW2VOL, value);
+		} else {
+			/* increase VDDARM to 1.425V */
+			pmic_reg_read(p, PFUZE100_SW1ABVOL, &value);
+			value &= ~0x3f;
+			value |= 0x2d;
+			pmic_reg_write(p, PFUZE100_SW1ABVOL, value);
+		}
+		/* increase VDDSOC to 1.425V */
+		pmic_reg_read(p, PFUZE100_SW1CVOL, &value);
+		value &= ~0x3f;
+		value |= 0x2d;
+		pmic_reg_write(p, PFUZE100_SW1CVOL, value);
+	}
+	/* switch to ldo_bypass mode , boot on 800Mhz */
+	if (ldo_bypass) {
+		prep_anatop_bypass();
+		if (is_mx6dqp()) {
+			/* decrease VDDARM for 400Mhz DQP:1.1V*/
+			pmic_reg_read(p, PFUZE100_SW2VOL, &value);
+			value &= ~0x3f;
+			value |= 0x1c;
+			pmic_reg_write(p, PFUZE100_SW2VOL, value);
+		} else {
+			/* decrease VDDARM for 400Mhz DQ:1.1V, DL:1.275V */
+			pmic_reg_read(p, PFUZE100_SW1ABVOL, &value);
+			value &= ~0x3f;
+#if defined(CONFIG_MX6DL)
+			value |= 0x27;
+#else
+			value |= 0x20;
+#endif
+
+			pmic_reg_write(p, PFUZE100_SW1ABVOL, value);
+		}
+		/* increase VDDSOC to 1.3V */
+		pmic_reg_read(p, PFUZE100_SW1CVOL, &value);
+		value &= ~0x3f;
+		value |= 0x28;
+		pmic_reg_write(p, PFUZE100_SW1CVOL, value);
+
+		/*
+		 * MX6Q/DQP:
+		 * VDDARM:1.15V@800M; VDDSOC:1.175V@800M
+		 * VDDARM:0.975V@400M; VDDSOC:1.175V@400M
+		 * MX6DL:
+		 * VDDARM:1.175V@800M; VDDSOC:1.175V@800M
+		 * VDDARM:1.075V@400M; VDDSOC:1.175V@400M
+		 */
+		is_400M = set_anatop_bypass(2);
+		if (is_mx6dqp()) {
+			pmic_reg_read(p, PFUZE100_SW2VOL, &value);
+			value &= ~0x3f;
+			if (is_400M)
+				value |= 0x17;
+			else
+				value |= 0x1e;
+			pmic_reg_write(p, PFUZE100_SW2VOL, value);
+		}
+
+		if (is_400M)
+#if defined(CONFIG_MX6DL)
+			vddarm = 0x1f;
+#else
+			vddarm = 0x1b;
+#endif
+		else
+#if defined(CONFIG_MX6DL)
+			vddarm = 0x23;
+#else
+			vddarm = 0x22;
+#endif
+		pmic_reg_read(p, PFUZE100_SW1ABVOL, &value);
+		value &= ~0x3f;
+		value |= vddarm;
+		pmic_reg_write(p, PFUZE100_SW1ABVOL, value);
+
+		/* decrease VDDSOC to 1.175V */
+		pmic_reg_read(p, PFUZE100_SW1CVOL, &value);
+		value &= ~0x3f;
+		value |= 0x23;
+		pmic_reg_write(p, PFUZE100_SW1CVOL, value);
+
+		finish_anatop_bypass();
+		printf("switch to ldo_bypass mode!\n");
+	}
+}
+#endif
+
+#ifdef CONFIG_CMD_BMODE
+static const struct boot_mode board_boot_modes[] = {
+	/* 4 bit bus width */
+	{"sd2",	 MAKE_CFGVAL(0x40, 0x28, 0x00, 0x00)},
+	{"sd3",	 MAKE_CFGVAL(0x40, 0x30, 0x00, 0x00)},
+	/* 8 bit bus width */
+	{"emmc", MAKE_CFGVAL(0x40, 0x38, 0x00, 0x00)},
+	{NULL,	 0},
+};
+#endif
+
+int board_late_init(void)
+{
+
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+	unsigned int size = DISPLAY_WIDTH * DISPLAY_HEIGHT * (DISPLAY_BPP / 8);
+	unsigned char * pData;
+	unsigned int start, count;
+	int i, bmpReady = 0;
+	int mmc_dev = mmc_get_env_devno();
+	struct mmc *mmc = find_mmc_device(mmc_dev);
+
+	pData = (unsigned char *)CONFIG_FB_BASE;
+
+	if (mmc)	{
+		if (mmc_init(mmc) == 0) {
+			start = ALIGN(UBOOT_LOGO_BMP_ADDR, mmc->read_bl_len) / mmc->read_bl_len;
+			count = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+			mmc->block_dev.block_read(mmc_dev, start, count, pData);
+			bmpReady = 1;
+		}
+	}
+
+	//bmpReady = 0;
+
+	if (bmpReady == 0) {
+		// Fill RGB frame buffer
+		// Red
+		for (i = 0; i < (DISPLAY_WIDTH * DISPLAY_HEIGHT * (DISPLAY_BPP / 8) / 3); i += (DISPLAY_BPP / 8)) {
+#if (DISPLAY_BPP == 16)
+			pData[i + 0] = 0x00;
+			pData[i + 1] = 0xF8;
+#else
+			pData[i + 0] = 0x00;
+			pData[i + 1] = 0x00;
+			pData[i + 2] = 0xFF;
+#endif
+		}
+
+		// Green
+		for (; i < (DISPLAY_WIDTH * DISPLAY_HEIGHT * (DISPLAY_BPP / 8) / 3) * 2; i += (DISPLAY_BPP / 8)) {
+#if (DISPLAY_BPP == 16)
+			pData[i + 0] = 0xE0;
+			pData[i + 1] = 0x07;
+#else
+			pData[i + 0] = 0x00;
+			pData[i + 1] = 0xFF;
+			pData[i + 2] = 0x00;
+#endif
+		}
+
+		// Blue
+		for (; i < DISPLAY_WIDTH * DISPLAY_HEIGHT * (DISPLAY_BPP / 8); i += (DISPLAY_BPP / 8)) {
+#if (DISPLAY_BPP == 16)
+			pData[i + 0] = 0x1F;
+			pData[i + 1] = 0x00;
+#else
+			pData[i + 0] = 0xFF;
+			pData[i + 1] = 0x00;
+			pData[i + 2] = 0x00;
+#endif
+		}
+	}
+
+#ifndef CONFIG_SYS_DCACHE_OFF
+	flush_dcache_range((u32)pData, (u32)(pData + DISPLAY_WIDTH * DISPLAY_HEIGHT * (DISPLAY_BPP / 8)));
+#endif
+
+#ifdef IPU_OUTPUT_MODE_LVDS
+	setup_lvds_iomux();
+#endif
+
+#ifdef IPU_OUTPUT_MODE_LCD
+	ipu_iomux_config();
+	setup_lcd_iomux();
+#endif
+
+#ifdef IPU_OUTPUT_MODE_HDMI
+	setup_hdmi_iomux();
+#endif
+
+	ipu_display_setup();
+#endif
+
+#ifdef CONFIG_CMD_BMODE
+	add_board_boot_modes(board_boot_modes);
+#endif
+
+#ifdef CONFIG_ENV_IS_IN_MMC
+	board_late_mmc_env_init();
+#endif
+	return 0;
+}
+
+int checkboard(void)
+{
+	puts("Board: MX6-SabreSD\n");
+	return 0;
+}
+
+#ifdef CONFIG_FSL_FASTBOOT
+
+void board_fastboot_setup(void)
+{
+	switch (get_boot_device()) {
+#if defined(CONFIG_FASTBOOT_STORAGE_SATA)
+	case SATA_BOOT:
+		if (!getenv("fastboot_dev"))
+			setenv("fastboot_dev", "sata");
+		if (!getenv("bootcmd"))
+			setenv("bootcmd", "boota sata");
+		break;
+#endif /*CONFIG_FASTBOOT_STORAGE_SATA*/
+#if defined(CONFIG_FASTBOOT_STORAGE_MMC)
+	case SD2_BOOT:
+	case MMC2_BOOT:
+	    if (!getenv("fastboot_dev"))
+			setenv("fastboot_dev", "mmc0");
+	    if (!getenv("bootcmd"))
+			setenv("bootcmd", "boota mmc0");
+	    break;
+	case SD3_BOOT:
+	case MMC3_BOOT:
+	    if (!getenv("fastboot_dev"))
+			setenv("fastboot_dev", "mmc1");
+	    if (!getenv("bootcmd"))
+			setenv("bootcmd", "boota mmc1");
+	    break;
+	case MMC4_BOOT:
+	    if (!getenv("fastboot_dev"))
+			setenv("fastboot_dev", "mmc2");
+	    if (!getenv("bootcmd"))
+			setenv("bootcmd", "boota mmc2");
+	    break;
+#endif /*CONFIG_FASTBOOT_STORAGE_MMC*/
+	default:
+		printf("unsupported boot devices\n");
+		break;
+	}
+
+}
+
+#ifdef CONFIG_ANDROID_RECOVERY
+
+#define GPIO_VOL_DN_KEY IMX_GPIO_NR(1, 5)
+iomux_v3_cfg_t const recovery_key_pads[] = {
+	(MX6_PAD_GPIO_5__GPIO1_IO05 | MUX_PAD_CTRL(NO_PAD_CTRL)),
+};
+
+int check_recovery_cmd_file(void)
+{
+    int button_pressed = 0;
+    int recovery_mode = 0;
+
+    recovery_mode = recovery_check_and_clean_flag();
+
+    /* Check Recovery Combo Button press or not. */
+	imx_iomux_v3_setup_multiple_pads(recovery_key_pads,
+			ARRAY_SIZE(recovery_key_pads));
+
+    gpio_direction_input(GPIO_VOL_DN_KEY);
+
+    if (gpio_get_value(GPIO_VOL_DN_KEY) == 0) { /* VOL_DN key is low assert */
+		button_pressed = 1;
+		printf("Recovery key pressed\n");
+    }
+
+    return recovery_mode || button_pressed;
+}
+
+void board_recovery_setup(void)
+{
+	int bootdev = get_boot_device();
+
+	switch (bootdev) {
+#if defined(CONFIG_FASTBOOT_STORAGE_SATA)
+	case SATA_BOOT:
+		if (!getenv("bootcmd_android_recovery"))
+			setenv("bootcmd_android_recovery",
+				"boota sata recovery");
+		break;
+#endif /*CONFIG_FASTBOOT_STORAGE_SATA*/
+#if defined(CONFIG_FASTBOOT_STORAGE_MMC)
+	case SD2_BOOT:
+	case MMC2_BOOT:
+		if (!getenv("bootcmd_android_recovery"))
+			setenv("bootcmd_android_recovery",
+				"boota mmc0 recovery");
+		break;
+	case SD3_BOOT:
+	case MMC3_BOOT:
+		if (!getenv("bootcmd_android_recovery"))
+			setenv("bootcmd_android_recovery",
+				"boota mmc1 recovery");
+		break;
+	case MMC4_BOOT:
+		if (!getenv("bootcmd_android_recovery"))
+			setenv("bootcmd_android_recovery",
+				"boota mmc2 recovery");
+		break;
+#endif /*CONFIG_FASTBOOT_STORAGE_MMC*/
+	default:
+		printf("Unsupported bootup device for recovery: dev: %d\n",
+			bootdev);
+		return;
+	}
+
+	printf("setup env for recovery..\n");
+	setenv("bootcmd", "run bootcmd_android_recovery");
+}
+
+#endif /*CONFIG_ANDROID_RECOVERY*/
+
+#endif /*CONFIG_FSL_FASTBOOT*/
+
+#ifdef CONFIG_SPL_BUILD
+#include <spl.h>
+#include <libfdt.h>
+
+const struct mx6dq_iomux_ddr_regs mx6_ddr_ioregs = {
+	.dram_sdclk_0 =  0x00020030,
+	.dram_sdclk_1 =  0x00020030,
+	.dram_cas =  0x00020030,
+	.dram_ras =  0x00020030,
+	.dram_reset =  0x00020030,
+	.dram_sdcke0 =  0x00003000,
+	.dram_sdcke1 =  0x00003000,
+	.dram_sdba2 =  0x00000000,
+	.dram_sdodt0 =  0x00003030,
+	.dram_sdodt1 =  0x00003030,
+	.dram_sdqs0 =  0x00000030,
+	.dram_sdqs1 =  0x00000030,
+	.dram_sdqs2 =  0x00000030,
+	.dram_sdqs3 =  0x00000030,
+	.dram_sdqs4 =  0x00000030,
+	.dram_sdqs5 =  0x00000030,
+	.dram_sdqs6 =  0x00000030,
+	.dram_sdqs7 =  0x00000030,
+	.dram_dqm0 =  0x00020030,
+	.dram_dqm1 =  0x00020030,
+	.dram_dqm2 =  0x00020030,
+	.dram_dqm3 =  0x00020030,
+	.dram_dqm4 =  0x00020030,
+	.dram_dqm5 =  0x00020030,
+	.dram_dqm6 =  0x00020030,
+	.dram_dqm7 =  0x00020030,
+};
+
+const struct mx6dq_iomux_grp_regs mx6_grp_ioregs = {
+	.grp_ddr_type =  0x000C0000,
+	.grp_ddrmode_ctl =  0x00020000,
+	.grp_ddrpke =  0x00000000,
+	.grp_addds =  0x00000030,
+	.grp_ctlds =  0x00000030,
+	.grp_ddrmode =  0x00020000,
+	.grp_b0ds =  0x00000030,
+	.grp_b1ds =  0x00000030,
+	.grp_b2ds =  0x00000030,
+	.grp_b3ds =  0x00000030,
+	.grp_b4ds =  0x00000030,
+	.grp_b5ds =  0x00000030,
+	.grp_b6ds =  0x00000030,
+	.grp_b7ds =  0x00000030,
+};
+
+const struct mx6_mmdc_calibration mx6_mmcd_calib = {
+	.p0_mpwldectrl0 =  0x001F001F,
+	.p0_mpwldectrl1 =  0x001F001F,
+	.p1_mpwldectrl0 =  0x00440044,
+	.p1_mpwldectrl1 =  0x00440044,
+	.p0_mpdgctrl0 =  0x434B0350,
+	.p0_mpdgctrl1 =  0x034C0359,
+	.p1_mpdgctrl0 =  0x434B0350,
+	.p1_mpdgctrl1 =  0x03650348,
+	.p0_mprddlctl =  0x4436383B,
+	.p1_mprddlctl =  0x39393341,
+	.p0_mpwrdlctl =  0x35373933,
+	.p1_mpwrdlctl =  0x48254A36,
+};
+
+static struct mx6_ddr3_cfg mem_ddr = {
+	.mem_speed = 1600,
+	.density = 4,
+	.width = 64,
+	.banks = 8,
+	.rowaddr = 14,
+	.coladdr = 10,
+	.pagesz = 2,
+	.trcd = 1375,
+	.trcmin = 4875,
+	.trasmin = 3500,
+};
+
+static void ccgr_init(void)
+{
+	struct mxc_ccm_reg *ccm = (struct mxc_ccm_reg *)CCM_BASE_ADDR;
+
+	writel(0x00C03F3F, &ccm->CCGR0);
+	writel(0x0030FC03, &ccm->CCGR1);
+	writel(0x0FFFC000, &ccm->CCGR2);
+	writel(0x3FF00000, &ccm->CCGR3);
+	writel(0x00FFF300, &ccm->CCGR4);
+	writel(0x0F0000C3, &ccm->CCGR5);
+	writel(0x000003FF, &ccm->CCGR6);
+}
+
+static void gpr_init(void)
+{
+	struct iomuxc *iomux = (struct iomuxc *)IOMUXC_BASE_ADDR;
+
+	/* enable AXI cache for VDOA/VPU/IPU */
+	writel(0xF00000CF, &iomux->gpr[4]);
+	/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
+	writel(0x007F007F, &iomux->gpr[6]);
+	writel(0x007F007F, &iomux->gpr[7]);
+}
+
+/*
+ * This section requires the differentiation between iMX6 Sabre boards, but
+ * for now, it will configure only for the mx6q variant.
+ */
+static void spl_dram_init(void)
+{
+	struct mx6_ddr_sysinfo sysinfo = {
+		/* width of data bus:0=16,1=32,2=64 */
+		.dsize = mem_ddr.width/32,
+		/* config for full 4GB range so that get_mem_size() works */
+		.cs_density = 32, /* 32Gb per CS */
+		/* single chip select */
+		.ncs = 1,
+		.cs1_mirror = 0,
+		.rtt_wr = 1 /*DDR3_RTT_60_OHM*/,	/* RTT_Wr = RZQ/4 */
+#ifdef RTT_NOM_120OHM
+		.rtt_nom = 2 /*DDR3_RTT_120_OHM*/,	/* RTT_Nom = RZQ/2 */
+#else
+		.rtt_nom = 1 /*DDR3_RTT_60_OHM*/,	/* RTT_Nom = RZQ/4 */
+#endif
+		.walat = 1,	/* Write additional latency */
+		.ralat = 5,	/* Read additional latency */
+		.mif3_mode = 3,	/* Command prediction working mode */
+		.bi_on = 1,	/* Bank interleaving enabled */
+		.sde_to_rst = 0x10,	/* 14 cycles, 200us (JEDEC default) */
+		.rst_to_cke = 0x23,	/* 33 cycles, 500us (JEDEC default) */
+	};
+
+	mx6dq_dram_iocfg(mem_ddr.width, &mx6_ddr_ioregs, &mx6_grp_ioregs);
+	mx6_dram_cfg(&sysinfo, &mx6_mmcd_calib, &mem_ddr);
+}
+
+void board_init_f(ulong dummy)
+{
+	/* setup AIPS and disable watchdog */
+	arch_cpu_init();
+
+	ccgr_init();
+	gpr_init();
+
+	/* iomux and setup of i2c */
+	board_early_init_f();
+
+	/* setup GP timer */
+	timer_init();
+
+	/* UART clocks enabled and gd valid - init serial console */
+	preloader_console_init();
+
+	/* DDR initialization */
+	spl_dram_init();
+
+	/* Clear the BSS. */
+	memset(__bss_start, 0, __bss_end - __bss_start);
+
+	/* load/boot image from boot device */
+	board_init_r(NULL, 0);
+}
+
+void reset_cpu(ulong addr)
+{
+}
+#endif
diff --git a/board/chipsee/mx6eisd/mx6q_8x_mt41K256.cfg b/board/chipsee/mx6eisd/mx6q_8x_mt41K256.cfg
new file mode 100644
index 0000000..d836327
--- /dev/null
+++ b/board/chipsee/mx6eisd/mx6q_8x_mt41K256.cfg
@@ -0,0 +1,158 @@
+/*
+ * Copyright (C) 2011-2014 Freescale Semiconductor, Inc.
+ * Jason Liu <r64343@freescale.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Refer doc/README.imximage for more details about how-to configure
+ * and create imximage boot image
+ *
+ * The syntax is taken as close as possible with the kwbimage
+ */
+
+#define __ASSEMBLY__
+#include <config.h>
+/* image version */
+IMAGE_VERSION 2
+
+/*
+ * Boot Device : one of spi, sd, sata
+ * the board has no nand and eimnor
+ * spinor: flash_offset: 0x0400
+ * sata:   flash_offset: 0x0400
+ * sd/mmc: flash_offset: 0x0400
+ */
+
+/* the same flash_offset as sd */
+BOOT_FROM      sd
+
+#ifdef CONFIG_USE_PLUGIN
+/*PLUGIN    plugin-binary-file    IRAM_FREE_START_ADDR*/
+PLUGIN	board/freescale/mx6sabresd/plugin.bin 0x00907000
+#else
+
+#ifdef CONFIG_SECURE_BOOT
+CSF CONFIG_CSF_SIZE
+#endif
+
+/*
+ * Device Configuration Data (DCD)
+ *
+ * Each entry must have the format:
+ * Addr-type           Address        Value
+ *
+ * where:
+ *      Addr-type register length (1,2 or 4 bytes)
+ *      Address   absolute address of the register
+ *      value     value to be stored in the register
+ */
+DATA 4, 0x020e0798, 0x000C0000
+DATA 4, 0x020e0758, 0x00000000
+DATA 4, 0x020e0588, 0x00000030
+DATA 4, 0x020e0594, 0x00000030
+DATA 4, 0x020e056c, 0x00000030
+DATA 4, 0x020e0578, 0x00000030
+DATA 4, 0x020e074c, 0x00000030
+DATA 4, 0x020e057c, 0x00000030
+DATA 4, 0x020e058c, 0x00000000
+DATA 4, 0x020e059c, 0x00000030
+DATA 4, 0x020e05a0, 0x00000030
+DATA 4, 0x020e078c, 0x00000030
+DATA 4, 0x020e0750, 0x00020000
+DATA 4, 0x020e05a8, 0x00000018
+DATA 4, 0x020e05b0, 0x00000018
+DATA 4, 0x020e0524, 0x00000018
+DATA 4, 0x020e051c, 0x00000018
+DATA 4, 0x020e0518, 0x00000018
+DATA 4, 0x020e050c, 0x00000018
+DATA 4, 0x020e05b8, 0x00000018
+DATA 4, 0x020e05c0, 0x00000018
+DATA 4, 0x020e0774, 0x00020000
+DATA 4, 0x020e0784, 0x00000018
+DATA 4, 0x020e0788, 0x00000018
+DATA 4, 0x020e0794, 0x00000018
+DATA 4, 0x020e079c, 0x00000018
+DATA 4, 0x020e07a0, 0x00000018
+DATA 4, 0x020e07a4, 0x00000018
+DATA 4, 0x020e07a8, 0x00000018
+DATA 4, 0x020e0748, 0x00000018
+DATA 4, 0x020e05ac, 0x00000018
+DATA 4, 0x020e05b4, 0x00000018
+DATA 4, 0x020e0528, 0x00000018
+DATA 4, 0x020e0520, 0x00000018
+DATA 4, 0x020e0514, 0x00000018
+DATA 4, 0x020e0510, 0x00000018
+DATA 4, 0x020e05bc, 0x00000018
+DATA 4, 0x020e05c4, 0x00000018
+DATA 4, 0x021b0800, 0xa1390003
+DATA 4, 0x021b080c, 0x001F001F
+DATA 4, 0x021b0810, 0x001F001F
+DATA 4, 0x021b480c, 0x001F001F
+DATA 4, 0x021b4810, 0x001F001F
+DATA 4, 0x021b083c, 0x43270338
+DATA 4, 0x021b0840, 0x03200314
+DATA 4, 0x021b483c, 0x431A032F
+DATA 4, 0x021b4840, 0x03200263
+DATA 4, 0x021b0848, 0x4B434748
+DATA 4, 0x021b4848, 0x4445404C
+DATA 4, 0x021b0850, 0x38444542
+DATA 4, 0x021b4850, 0x4935493A
+DATA 4, 0x021b081c, 0x33333333
+DATA 4, 0x021b0820, 0x33333333
+DATA 4, 0x021b0824, 0x33333333
+DATA 4, 0x021b0828, 0x33333333
+DATA 4, 0x021b481c, 0x33333333
+DATA 4, 0x021b4820, 0x33333333
+DATA 4, 0x021b4824, 0x33333333
+DATA 4, 0x021b4828, 0x33333333
+DATA 4, 0x021b08b8, 0x00000800
+DATA 4, 0x021b48b8, 0x00000800
+DATA 4, 0x021b0004, 0x00020036
+DATA 4, 0x021b0008, 0x09444040
+DATA 4, 0x021b000c, 0x8A8F7955
+DATA 4, 0x021b0010, 0xFF328F64
+DATA 4, 0x021b0014, 0x01FF00DB
+DATA 4, 0x021b0018, 0x00001740
+DATA 4, 0x021b001c, 0x00008000
+DATA 4, 0x021b002c, 0x000026d2
+DATA 4, 0x021b0030, 0x008F1023
+DATA 4, 0x021b0040, 0x00000047
+DATA 4, 0x021b0000, 0x841A0000
+DATA 4, 0x021b001c, 0x04088032
+DATA 4, 0x021b001c, 0x00008033
+DATA 4, 0x021b001c, 0x00048031
+DATA 4, 0x021b001c, 0x09408030
+DATA 4, 0x021b001c, 0x04008040
+DATA 4, 0x021b0020, 0x00005800
+DATA 4, 0x021b0818, 0x00011117
+DATA 4, 0x021b4818, 0x00011117
+DATA 4, 0x021b0004, 0x00025576
+DATA 4, 0x021b0404, 0x00011006
+DATA 4, 0x021b001c, 0x00000000
+
+/* set the default clock gate to save power */
+DATA 4, 0x020c4068, 0x00C03F3F
+DATA 4, 0x020c406c, 0x0030FC03
+DATA 4, 0x020c4070, 0x0FFFC000
+DATA 4, 0x020c4074, 0x3FF00000
+DATA 4, 0x020c4078, 0x00FFF300
+DATA 4, 0x020c407c, 0x0F0000F3
+DATA 4, 0x020c4080, 0x000003FF
+
+/* enable AXI cache for VDOA/VPU/IPU */
+DATA 4, 0x020e0010, 0xF00000CF
+/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
+DATA 4, 0x020e0018, 0x007F007F
+DATA 4, 0x020e001c, 0x007F007F
+
+/*
+ * Setup CCM_CCOSR register as follows:
+ *
+ * cko1_en  = 1	   --> CKO1 enabled
+ * cko1_div = 111  --> divide by 8
+ * cko1_sel = 1011 --> ahb_clk_root
+ *
+ * This sets CKO1 at ahb_clk_root/8 = 132/8 = 16.5 MHz
+ */
+DATA 4, 0x020c4060, 0x000000fb
+#endif
diff --git a/board/chipsee/mx6eisd/plugin.S b/board/chipsee/mx6eisd/plugin.S
new file mode 100644
index 0000000..fdf0c6a
--- /dev/null
+++ b/board/chipsee/mx6eisd/plugin.S
@@ -0,0 +1,664 @@
+/*
+ * Copyright (C) 2012-2015 Freescale Semiconductor, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <config.h>
+
+/* DDR script */
+.macro imx6dqpsabresd_ddr_setting
+	ldr r0, =IOMUXC_BASE_ADDR
+	ldr r1, =0x000c0000
+	str r1, [r0, #0x798]
+	ldr r1, =0x00000000
+	str r1, [r0, #0x758]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x588]
+	str r1, [r0, #0x594]
+	str r1, [r0, #0x56c]
+	str r1, [r0, #0x578]
+	str r1, [r0, #0x74c]
+	str r1, [r0, #0x57c]
+
+	ldr r1, =0x00000000
+	str r1, [r0, #0x58c]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x59c]
+	str r1, [r0, #0x5a0]
+	str r1, [r0, #0x78c]
+
+	ldr r1, =0x00020000
+	str r1, [r0, #0x750]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x5a8]
+	str r1, [r0, #0x5b0]
+	str r1, [r0, #0x524]
+	str r1, [r0, #0x51c]
+	str r1, [r0, #0x518]
+	str r1, [r0, #0x50c]
+	str r1, [r0, #0x5b8]
+	str r1, [r0, #0x5c0]
+
+	ldr r1, =0x00020000
+	str r1, [r0, #0x774]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x784]
+	str r1, [r0, #0x788]
+	str r1, [r0, #0x794]
+	str r1, [r0, #0x79c]
+	str r1, [r0, #0x7a0]
+	str r1, [r0, #0x7a4]
+	str r1, [r0, #0x7a8]
+	str r1, [r0, #0x748]
+	str r1, [r0, #0x5ac]
+	str r1, [r0, #0x5b4]
+	str r1, [r0, #0x528]
+	str r1, [r0, #0x520]
+	str r1, [r0, #0x514]
+	str r1, [r0, #0x510]
+	str r1, [r0, #0x5bc]
+	str r1, [r0, #0x5c4]
+
+	ldr r0, =MMDC_P0_BASE_ADDR
+	ldr r2, =0xa1390003
+	str r2, [r0, #0x800]
+
+	ldr r2, =0x001b001e
+	str r2, [r0, #0x80c]
+	ldr r2, =0x002e0029
+	str r2, [r0, #0x810]
+
+	ldr r1, =MMDC_P1_BASE_ADDR
+	ldr r2, =0x001b002a
+	str r2, [r1, #0x80c]
+	ldr r2, =0x0019002c
+	str r2, [r1, #0x810]
+
+	ldr r2, =0x43240334
+	str r2, [r0, #0x83c]
+	ldr r2, =0x0324031a
+	str r2, [r0, #0x840]
+
+	ldr r2, =0x43340344
+	str r2, [r1, #0x83c]
+	ldr r2, =0x03280276
+	str r2, [r1, #0x840]
+
+	ldr r2, =0x44383A3E
+	str r2, [r0, #0x848]
+	ldr r2, =0x3C3C3846
+	str r2, [r1, #0x848]
+
+	ldr r2, =0x2e303230
+	str r2, [r0, #0x850]
+	ldr r2, =0x38283E34
+	str r2, [r1, #0x850]
+
+	ldr r2, =0x33333333
+	str r2, [r0, #0x81c]
+	str r2, [r0, #0x820]
+	str r2, [r0, #0x824]
+	str r2, [r0, #0x828]
+	str r2, [r1, #0x81c]
+	str r2, [r1, #0x820]
+	str r2, [r1, #0x824]
+	str r2, [r1, #0x828]
+
+	ldr r2, =0x24912249
+	str r2, [r0, #0x8c0]
+	ldr r2, =0x24914289
+	str r2, [r1, #0x8c0]
+
+	ldr r2, =0x00000800
+	str r2, [r0, #0x8b8]
+	str r2, [r1, #0x8b8]
+
+	ldr r2, =0x00020036
+	str r2, [r0, #0x004]
+	ldr r2, =0x24444040
+	str r2, [r0, #0x008]
+
+	ldr r2, =0x555A7955
+	str r2, [r0, #0x00c]
+	ldr r2, =0xFF320F64
+	str r2, [r0, #0x010]
+
+	ldr r2, =0x01FF00DB
+	str r2, [r0, #0x014]
+	ldr r2, =0x00001740
+	str r2, [r0, #0x018]
+
+	ldr r2, =0x00008000
+	str r2, [r0, #0x01c]
+	ldr r2, =0x000026d2
+	str r2, [r0, #0x02c]
+	ldr r2, =0x005A1023
+	str r2, [r0, #0x030]
+	ldr r2, =0x00000027
+	str r2, [r0, #0x040]
+
+	ldr r2, =0x14420000
+	str r2, [r0, #0x400]
+
+	ldr r2, =0x831A0000
+	str r2, [r0, #0x000]
+
+	ldr r2, =0x00400C58
+	str r2, [r0, #0x890]
+
+	ldr r3, =0x00bb0000
+	ldr r2, =0x00000000
+	str r2, [r3, #0x008]
+	ldr r2, =0x2891E41A
+	str r2, [r3, #0x00C]
+	ldr r2, =0x00000564
+	str r2, [r3, #0x038]
+	ldr r2, =0x00000040
+	str r2, [r3, #0x014]
+	ldr r2, =0x00000020
+	str r2, [r3, #0x028]
+	ldr r2, =0x00000020
+	str r2, [r3, #0x02c]
+
+	ldr r2, =0x04088032
+	str r2, [r0, #0x01c]
+	ldr r2, =0x00008033
+	str r2, [r0, #0x01c]
+	ldr r2, =0x00048031
+	str r2, [r0, #0x01c]
+	ldr r2, =0x09408030
+	str r2, [r0, #0x01c]
+	ldr r2, =0x04008040
+	str r2, [r0, #0x01c]
+
+	ldr r2, =0x00005800
+	str r2, [r0, #0x020]
+	ldr r2, =0x00011117
+	str r2, [r0, #0x818]
+	str r2, [r1, #0x818]
+	ldr r2, =0x00025576
+	str r2, [r0, #0x004]
+	ldr r2, =0x00011006
+	str r2, [r0, #0x404]
+	ldr r2, =0x00000000
+	str r2, [r0, #0x01c]
+.endm
+
+.macro imx6dqsabresd_ddr_setting
+	ldr r0, =IOMUXC_BASE_ADDR
+	ldr r1, =0x000c0000
+	str r1, [r0, #0x798]
+	ldr r1, =0x00000000
+	str r1, [r0, #0x758]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x588]
+	str r1, [r0, #0x594]
+	str r1, [r0, #0x56c]
+	str r1, [r0, #0x578]
+	str r1, [r0, #0x74c]
+	str r1, [r0, #0x57c]
+
+	ldr r1, =0x00000000
+	str r1, [r0, #0x58c]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x59c]
+	str r1, [r0, #0x5a0]
+	str r1, [r0, #0x78c]
+
+	ldr r1, =0x00020000
+	str r1, [r0, #0x750]
+
+	ldr r1, =0x00000018
+	str r1, [r0, #0x5a8]
+	str r1, [r0, #0x5b0]
+	str r1, [r0, #0x524]
+	str r1, [r0, #0x51c]
+	str r1, [r0, #0x518]
+	str r1, [r0, #0x50c]
+	str r1, [r0, #0x5b8]
+	str r1, [r0, #0x5c0]
+
+	ldr r1, =0x00020000
+	str r1, [r0, #0x774]
+
+	ldr r1, =0x00000018
+	str r1, [r0, #0x784]
+	str r1, [r0, #0x788]
+	str r1, [r0, #0x794]
+	str r1, [r0, #0x79c]
+	str r1, [r0, #0x7a0]
+	str r1, [r0, #0x7a4]
+	str r1, [r0, #0x7a8]
+	str r1, [r0, #0x748]
+	str r1, [r0, #0x5ac]
+	str r1, [r0, #0x5b4]
+	str r1, [r0, #0x528]
+	str r1, [r0, #0x520]
+	str r1, [r0, #0x514]
+	str r1, [r0, #0x510]
+	str r1, [r0, #0x5bc]
+	str r1, [r0, #0x5c4]
+
+	ldr r0, =MMDC_P0_BASE_ADDR
+	ldr r2, =0xa1390003
+	str r2, [r0, #0x800]
+
+	ldr r2, =0x001F001F
+	str r2, [r0, #0x80c]
+	str r2, [r0, #0x810]
+	ldr r1, =MMDC_P1_BASE_ADDR
+	str r2, [r1, #0x80c]
+	str r2, [r1, #0x810]
+
+	ldr r2, =0x43270338
+	str r2, [r0, #0x83c]
+	ldr r2, =0x03200314
+	str r2, [r0, #0x840]
+
+	ldr r2, =0x431A032F
+	str r2, [r1, #0x83c]
+	ldr r2, =0x03200263
+	str r2, [r1, #0x840]
+
+	ldr r2, =0x4B434748
+	str r2, [r0, #0x848]
+	ldr r2, =0x4445404C
+	str r2, [r1, #0x848]
+
+	ldr r2, =0x38444542
+	str r2, [r0, #0x850]
+	ldr r2, =0x4935493A
+	str r2, [r1, #0x850]
+
+	ldr r2, =0x33333333
+	str r2, [r0, #0x81c]
+	str r2, [r0, #0x820]
+	str r2, [r0, #0x824]
+	str r2, [r0, #0x828]
+	str r2, [r1, #0x81c]
+	str r2, [r1, #0x820]
+	str r2, [r1, #0x824]
+	str r2, [r1, #0x828]
+
+	ldr r2, =0x00000800
+	str r2, [r0, #0x8b8]
+	str r2, [r1, #0x8b8]
+
+	ldr r2, =0x00020036
+	str r2, [r0, #0x004]
+	ldr r2, =0x09444040
+	str r2, [r0, #0x008]
+
+	ldr r2, =0x8A8F7955
+	str r2, [r0, #0x00c]
+	ldr r2, =0xFF328F64
+	str r2, [r0, #0x010]
+
+	ldr r2, =0x01FF00DB
+	str r2, [r0, #0x014]
+	ldr r2, =0x00001740
+	str r2, [r0, #0x018]
+
+	ldr r2, =0x00008000
+	str r2, [r0, #0x01c]
+	ldr r2, =0x000026d2
+	str r2, [r0, #0x02c]
+	ldr r2, =0x008F1023
+	str r2, [r0, #0x030]
+	ldr r2, =0x00000047
+	str r2, [r0, #0x040]
+
+	ldr r2, =0x841A0000
+	str r2, [r0, #0x000]
+
+	ldr r2, =0x04088032
+	str r2, [r0, #0x01c]
+	ldr r2, =0x00008033
+	str r2, [r0, #0x01c]
+	ldr r2, =0x00048031
+	str r2, [r0, #0x01c]
+	ldr r2, =0x09408030
+	str r2, [r0, #0x01c]
+	ldr r2, =0x04008040
+	str r2, [r0, #0x01c]
+
+	ldr r2, =0x00005800
+	str r2, [r0, #0x020]
+	ldr r2, =0x00011117
+	str r2, [r0, #0x818]
+	str r2, [r1, #0x818]
+	ldr r2, =0x00025576
+	str r2, [r0, #0x004]
+	ldr r2, =0x00011006
+	str r2, [r0, #0x404]
+	ldr r2, =0x00000000
+	str r2, [r0, #0x01c]
+.endm
+
+.macro imx6dlsabresd_ddr_setting
+	ldr r0, =IOMUXC_BASE_ADDR
+	ldr r1, =0x000c0000
+	str r1, [r0, #0x774]
+	ldr r1, =0x00000000
+	str r1, [r0, #0x754]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x4ac]
+	str r1, [r0, #0x4b0]
+	str r1, [r0, #0x464]
+	str r1, [r0, #0x490]
+	str r1, [r0, #0x74c]
+	str r1, [r0, #0x494]
+
+	ldr r1, =0x00000000
+	str r1, [r0, #0x4a0]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x4b4]
+	str r1, [r0, #0x4b8]
+	str r1, [r0, #0x76c]
+
+	ldr r1, =0x00020000
+	str r1, [r0, #0x750]
+
+	ldr r1, =0x00000018
+	str r1, [r0, #0x4bc]
+	str r1, [r0, #0x4c0]
+	str r1, [r0, #0x4c4]
+	str r1, [r0, #0x4c8]
+	str r1, [r0, #0x4cc]
+	str r1, [r0, #0x4d0]
+	str r1, [r0, #0x4d4]
+	str r1, [r0, #0x4d8]
+
+	ldr r1, =0x00020000
+	str r1, [r0, #0x760]
+
+	ldr r1, =0x00000018
+	str r1, [r0, #0x764]
+	str r1, [r0, #0x770]
+	str r1, [r0, #0x778]
+	str r1, [r0, #0x77c]
+	str r1, [r0, #0x780]
+	str r1, [r0, #0x784]
+	str r1, [r0, #0x78c]
+	str r1, [r0, #0x748]
+	str r1, [r0, #0x470]
+	str r1, [r0, #0x474]
+	str r1, [r0, #0x478]
+	str r1, [r0, #0x47c]
+	str r1, [r0, #0x480]
+	str r1, [r0, #0x484]
+	str r1, [r0, #0x488]
+	str r1, [r0, #0x48c]
+
+	ldr r0, =MMDC_P0_BASE_ADDR
+	ldr r2, =0xa1390003
+	str r2, [r0, #0x800]
+
+	ldr r2, =0x001f001f
+	str r2, [r0, #0x80c]
+	str r2, [r0, #0x810]
+	ldr r1, =MMDC_P1_BASE_ADDR
+	str r2, [r1, #0x80c]
+	str r2, [r1, #0x810]
+
+	ldr r2, =0x4220021F
+	str r2, [r0, #0x83c]
+	ldr r2, =0x0207017E
+	str r2, [r0, #0x840]
+
+	ldr r2, =0x4201020C
+	str r2, [r1, #0x83c]
+	ldr r2, =0x01660172
+	str r2, [r1, #0x840]
+
+	ldr r2, =0x4A4D4E4D
+	str r2, [r0, #0x848]
+	ldr r2, =0x4A4F5049
+	str r2, [r1, #0x848]
+
+	ldr r2, =0x3F3C3D31
+	str r2, [r0, #0x850]
+	ldr r2, =0x3238372B
+	str r2, [r1, #0x850]
+
+	ldr r2, =0x33333333
+	str r2, [r0, #0x81c]
+	str r2, [r0, #0x820]
+	str r2, [r0, #0x824]
+	str r2, [r0, #0x828]
+	str r2, [r1, #0x81c]
+	str r2, [r1, #0x820]
+	str r2, [r1, #0x824]
+	str r2, [r1, #0x828]
+
+	ldr r2, =0x00000800
+	str r2, [r0, #0x8b8]
+	str r2, [r1, #0x8b8]
+
+	ldr r2, =0x0002002D
+	str r2, [r0, #0x004]
+	ldr r2, =0x00333030
+	str r2, [r0, #0x008]
+
+	ldr r2, =0x686C52F3
+	str r2, [r0, #0x00c]
+	ldr r2, =0xB66D8B63
+	str r2, [r0, #0x010]
+
+	ldr r2, =0x01FF00DB
+	str r2, [r0, #0x014]
+	ldr r2, =0x00001740
+	str r2, [r0, #0x018]
+
+	ldr r2, =0x00008000
+	str r2, [r0, #0x01c]
+	ldr r2, =0x000026d2
+	str r2, [r0, #0x02c]
+	ldr r2, =0x006C1023
+	str r2, [r0, #0x030]
+	ldr r2, =0x00000047
+	str r2, [r0, #0x040]
+
+	ldr r2, =0x841A0000
+	str r2, [r0, #0x000]
+
+	ldr r2, =0x04008032
+	str r2, [r0, #0x01c]
+	ldr r2, =0x00008033
+	str r2, [r0, #0x01c]
+	ldr r2, =0x00048031
+	str r2, [r0, #0x01c]
+	ldr r2, =0x05208030
+	str r2, [r0, #0x01c]
+	ldr r2, =0x04008040
+	str r2, [r0, #0x01c]
+
+	ldr r2, =0x00005800
+	str r2, [r0, #0x020]
+	ldr r2, =0x00011117
+	str r2, [r0, #0x818]
+	str r2, [r1, #0x818]
+	ldr r2, =0x0002556D
+	str r2, [r0, #0x004]
+	ldr r2, =0x00011006
+	str r2, [r0, #0x404]
+	ldr r2, =0x00000000
+	str r2, [r0, #0x01c]
+.endm
+
+.macro imx6solosabresd_ddr_setting
+	ldr r0, =IOMUXC_BASE_ADDR
+	ldr r1, =0x000c0000
+	str r1, [r0, #0x774]
+	ldr r1, =0x00000000
+	str r1, [r0, #0x754]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x4ac]
+	str r1, [r0, #0x4b0]
+	str r1, [r0, #0x464]
+	str r1, [r0, #0x490]
+	str r1, [r0, #0x74c]
+	str r1, [r0, #0x494]
+
+	ldr r1, =0x00000000
+	str r1, [r0, #0x4a0]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x4b4]
+	str r1, [r0, #0x4b8]
+	str r1, [r0, #0x76c]
+
+	ldr r1, =0x00020000
+	str r1, [r0, #0x750]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x4bc]
+	str r1, [r0, #0x4c0]
+	str r1, [r0, #0x4c4]
+	str r1, [r0, #0x4c8]
+
+	ldr r1, =0x00020000
+	str r1, [r0, #0x760]
+
+	ldr r1, =0x00000030
+	str r1, [r0, #0x764]
+	str r1, [r0, #0x770]
+	str r1, [r0, #0x778]
+	str r1, [r0, #0x77c]
+	str r1, [r0, #0x470]
+	str r1, [r0, #0x474]
+	str r1, [r0, #0x478]
+	str r1, [r0, #0x47c]
+
+	ldr r0, =MMDC_P0_BASE_ADDR
+	ldr r2, =0xa1390003
+	str r2, [r0, #0x800]
+
+	ldr r2, =0x001F001F
+	str r2, [r0, #0x80c]
+	str r2, [r0, #0x810]
+
+	ldr r2, =0x42190219
+	str r2, [r0, #0x83c]
+	ldr r2, =0x017B0177
+	str r2, [r0, #0x840]
+
+	ldr r2, =0x4B4D4E4D
+	str r2, [r0, #0x848]
+
+	ldr r2, =0x3F3E2D36
+	str r2, [r0, #0x850]
+
+	ldr r2, =0x33333333
+	str r2, [r0, #0x81c]
+	str r2, [r0, #0x820]
+	str r2, [r0, #0x824]
+	str r2, [r0, #0x828]
+
+	ldr r2, =0x00000800
+	str r2, [r0, #0x8b8]
+
+	ldr r2, =0x0002002D
+	str r2, [r0, #0x004]
+	ldr r2, =0x00333030
+	str r2, [r0, #0x008]
+
+	ldr r2, =0x3F435313
+	str r2, [r0, #0x00c]
+	ldr r2, =0xB66E8B63
+	str r2, [r0, #0x010]
+
+	ldr r2, =0x01FF00DB
+	str r2, [r0, #0x014]
+	ldr r2, =0x00001740
+	str r2, [r0, #0x018]
+
+	ldr r2, =0x00008000
+	str r2, [r0, #0x01c]
+	ldr r2, =0x000026d2
+	str r2, [r0, #0x02c]
+	ldr r2, =0x00431023
+	str r2, [r0, #0x030]
+	ldr r2, =0x00000017
+	str r2, [r0, #0x040]
+
+	ldr r2, =0x83190000
+	str r2, [r0, #0x000]
+
+	ldr r2, =0x04008032
+	str r2, [r0, #0x01c]
+	ldr r2, =0x00008033
+	str r2, [r0, #0x01c]
+	ldr r2, =0x00048031
+	str r2, [r0, #0x01c]
+	ldr r2, =0x05208030
+	str r2, [r0, #0x01c]
+	ldr r2, =0x04008040
+	str r2, [r0, #0x01c]
+
+	ldr r2, =0x00005800
+	str r2, [r0, #0x020]
+	ldr r2, =0x00011117
+	str r2, [r0, #0x818]
+	ldr r2, =0x0002556D
+	str r2, [r0, #0x004]
+	ldr r2, =0x00011006
+	str r2, [r0, #0x404]
+	ldr r2, =0x00000000
+	str r2, [r0, #0x01c]
+.endm
+.macro imx6_clock_gating
+	ldr r0, =CCM_BASE_ADDR
+	ldr r1, =0x00C03F3F
+	str r1, [r0, #0x068]
+	ldr r1, =0x0030FC03
+	str r1, [r0, #0x06c]
+	ldr r1, =0x0FFFC000
+	str r1, [r0, #0x070]
+	ldr r1, =0x3FF00000
+	str r1, [r0, #0x074]
+	ldr r1, =0x00FFF300
+	str r1, [r0, #0x078]
+	ldr r1, =0x0F0000C3
+	str r1, [r0, #0x07c]
+	ldr r1, =0x000003FF
+	str r1, [r0, #0x080]
+.endm
+
+.macro imx6_qos_setting
+	ldr r0, =IOMUXC_BASE_ADDR
+	ldr r1, =0xF00000CF
+	str r1, [r0, #0x10]
+
+	ldr r1, =0x007F007F
+	str r1, [r0, #0x18]
+	str r1, [r0, #0x1c]
+.endm
+
+.macro imx6_ddr_setting
+#if defined (CONFIG_MX6SOLO)
+	imx6solosabresd_ddr_setting
+#elif defined (CONFIG_MX6DL)
+	imx6dlsabresd_ddr_setting
+#elif defined (CONFIG_MX6QP)
+	imx6dqpsabresd_ddr_setting
+#elif defined (CONFIG_MX6Q)
+	imx6dqsabresd_ddr_setting
+#else
+	#error "SOC not configured"
+#endif
+
+.endm
+
+/* include the common plugin code here */
+#include <asm/arch/mx6_plugin.S>
diff --git a/configs/mx6dleisd_1g_defconfig b/configs/mx6dleisd_1g_defconfig
new file mode 100644
index 0000000..d7b1af4
--- /dev/null
+++ b/configs/mx6dleisd_1g_defconfig
@@ -0,0 +1,7 @@
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/chipsee/mx6eisd/mx6dleisd.cfg,MX6DL,DRAM_SIZE=1024"
+CONFIG_ARM=y
+CONFIG_TARGET_MX6EISD=y
+CONFIG_SYS_MALLOC_F=y
+CONFIG_SYS_MALLOC_F_LEN=0x400
+CONFIG_DM=y
+CONFIG_DM_THERMAL=y
diff --git a/configs/mx6dleisd_2g_defconfig b/configs/mx6dleisd_2g_defconfig
new file mode 100644
index 0000000..4f8b547
--- /dev/null
+++ b/configs/mx6dleisd_2g_defconfig
@@ -0,0 +1,7 @@
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/chipsee/mx6eisd/mx6dleisd.cfg,MX6DL,DRAM_SIZE=2048"
+CONFIG_ARM=y
+CONFIG_TARGET_MX6EISD=y
+CONFIG_SYS_MALLOC_F=y
+CONFIG_SYS_MALLOC_F_LEN=0x400
+CONFIG_DM=y
+CONFIG_DM_THERMAL=y
diff --git a/configs/mx6dleisd_defconfig b/configs/mx6dleisd_defconfig
new file mode 100644
index 0000000..4f8b547
--- /dev/null
+++ b/configs/mx6dleisd_defconfig
@@ -0,0 +1,7 @@
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/chipsee/mx6eisd/mx6dleisd.cfg,MX6DL,DRAM_SIZE=2048"
+CONFIG_ARM=y
+CONFIG_TARGET_MX6EISD=y
+CONFIG_SYS_MALLOC_F=y
+CONFIG_SYS_MALLOC_F_LEN=0x400
+CONFIG_DM=y
+CONFIG_DM_THERMAL=y
diff --git a/configs/mx6qeisd_defconfig b/configs/mx6qeisd_defconfig
new file mode 100644
index 0000000..1f2d0d3
--- /dev/null
+++ b/configs/mx6qeisd_defconfig
@@ -0,0 +1,5 @@
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/chipsee/mx6eisd/mx6q_8x_mt41K256.cfg,MX6Q,SYS_USE_SPINOR"
+CONFIG_ARM=y
+CONFIG_TARGET_MX6EISD=y
+CONFIG_DM=y
+CONFIG_DM_THERMAL=y
diff --git a/drivers/misc/Makefile b/drivers/misc/Makefile
index 6028cd4..266bc87 100644
--- a/drivers/misc/Makefile
+++ b/drivers/misc/Makefile
@@ -28,4 +28,5 @@ obj-$(CONFIG_SMSC_LPC47M) += smsc_lpc47m.o
 obj-$(CONFIG_STATUS_LED) += status_led.o
 obj-$(CONFIG_TWL4030_LED) += twl4030_led.o
 obj-$(CONFIG_FSL_IFC) += fsl_ifc.o
+obj-$(CONFIG_IMX_PWM) += imx_pwm.o
 obj-$(CONFIG_FSL_SEC_MON) += fsl_sec_mon.o
diff --git a/drivers/misc/imx_pwm.c b/drivers/misc/imx_pwm.c
new file mode 100755
index 0000000..14f393e
--- /dev/null
+++ b/drivers/misc/imx_pwm.c
@@ -0,0 +1,121 @@
+/*
+ * Porting to u-boot:
+ * Linux IMX PWM driver
+ *
+ * Copyright (C) 2011 Freescale Semiconductor, Inc.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <linux/types.h>
+#include <asm/io.h>
+#include <common.h>
+#include <div64.h>
+#include <asm/imx-common/imx_pwm.h>
+#include <asm/arch/clock.h>
+
+#define MX_PWMCR                 0x00    /* PWM Control Register */
+#define MX_PWMSAR                0x0C    /* PWM Sample Register */
+#define MX_PWMPR                 0x10    /* PWM Period Register */
+#define MX_PWMCR_PRESCALER(x)    (((x - 1) & 0xFFF) << 4)
+#define MX_PWMCR_CLKSRC_IPG_HIGH (2 << 16)
+#define MX_PWMCR_CLKSRC_IPG      (1 << 16)
+#define MX_PWMCR_EN              (1 << 0)
+
+#define MX_PWMCR_STOPEN		(1 << 25)
+#define MX_PWMCR_DOZEEN		(1 << 24)
+#define MX_PWMCR_WAITEN		(1 << 23)
+#define MX_PWMCR_DBGEN		(1 << 22)
+#define MX_PWMCR_CLKSRC_IPG	(1 << 16)
+#define MX_PWMCR_CLKSRC_IPG_32k	(3 << 16)
+
+int imx_pwm_config(struct pwm_device pwm, int duty_ns, int period_ns)
+{
+	unsigned long long c;
+	unsigned long period_cycles, duty_cycles, prescale;
+	u32 cr;
+
+	if (period_ns == 0 || duty_ns > period_ns)
+		return -1;
+
+	pwm.mmio_base = pwm.pwm_id ? (unsigned long)IMX_PWM4_BASE:
+				(unsigned long)IMX_PWM1_BASE;
+
+	if (pwm.pwmo_invert)
+		duty_ns = period_ns - duty_ns;
+
+	c = mxc_get_clock(MXC_IPG_PERCLK);
+	c = c * period_ns;
+	do_div(c, 1000000000);
+	period_cycles = c;
+
+	prescale = period_cycles / 0x10000 + 1;
+
+	period_cycles /= prescale;
+	c = (unsigned long long)period_cycles * duty_ns;
+	do_div(c, period_ns);
+	duty_cycles = c;
+
+	writel(duty_cycles, pwm.mmio_base + MX_PWMSAR);
+	writel(period_cycles, pwm.mmio_base + MX_PWMPR);
+
+	cr = MX_PWMCR_PRESCALER(prescale) |
+		MX_PWMCR_STOPEN | MX_PWMCR_DOZEEN |
+		MX_PWMCR_WAITEN | MX_PWMCR_DBGEN;
+
+	cr |= MX_PWMCR_CLKSRC_IPG_HIGH;
+
+	writel(cr, pwm.mmio_base + MX_PWMCR);
+
+	return 0;
+}
+
+int imx_pwm_enable(struct pwm_device pwm)
+{
+	unsigned long reg;
+	int rc = 0;
+
+	if (pwm.enable_pwm_clk)
+		pwm.enable_pwm_clk();
+
+	pwm.mmio_base = pwm.pwm_id ? (unsigned long)IMX_PWM4_BASE:
+				(unsigned long)IMX_PWM1_BASE;
+
+	reg = readl(pwm.mmio_base + MX_PWMCR);
+	reg |= MX_PWMCR_EN;
+	writel(reg, pwm.mmio_base + MX_PWMCR);
+
+	if (pwm.enable_pwm_pad)
+		pwm.enable_pwm_pad();
+
+	return rc;
+}
+
+int imx_pwm_disable(struct pwm_device pwm)
+{
+	if (pwm.disable_pwm_pad)
+		pwm.disable_pwm_pad();
+
+	pwm.mmio_base = pwm.pwm_id ? (unsigned long)IMX_PWM4_BASE:
+				(unsigned long)IMX_PWM1_BASE;
+
+	writel(0, pwm.mmio_base + MX_PWMCR);
+
+	if (pwm.disable_pwm_clk)
+		pwm.disable_pwm_clk();
+
+	return 0;
+}
diff --git a/drivers/video/Makefile b/drivers/video/Makefile
index bfca032..8f11b2d 100644
--- a/drivers/video/Makefile
+++ b/drivers/video/Makefile
@@ -52,3 +52,4 @@ obj-$(CONFIG_VIDEO_VADC) += mxc_vadc.o
 obj-$(CONFIG_VIDEO_CSI) += mxc_csi.o
 obj-$(CONFIG_VIDEO_PXP) += mxc_pxp.o
 obj-$(CONFIG_VIDEO_GIS) += mxc_gis.o
+obj-$(CONFIG_IMX_HDMI) += mxc_hdmi.o
diff --git a/drivers/video/mxc_hdmi.c b/drivers/video/mxc_hdmi.c
new file mode 100755
index 0000000..f42699d
--- /dev/null
+++ b/drivers/video/mxc_hdmi.c
@@ -0,0 +1,1770 @@
+/*
+ * Copyright (C) 2013 Freescale Semiconductor, Inc.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include "mxc_hdmi.h"
+
+static hdmi_data_info_s hdmi_instance = { 0 };
+
+/*!
+ * write bit fields of hdmi internal regiters
+ *
+ * @param  	data:	written value of the bit fields
+ * @param  	addr:	address of the register
+ * @param  	shift:	lsb offset of the bit-field
+ * @param  	width:	width of the bit-field
+ */
+static void writebf(unsigned char data, unsigned int addr, unsigned char shift, unsigned char width)
+{
+	unsigned char temp = 0;
+	unsigned char mask = (1 << width) - 1;
+	if (data > mask) {
+		printf("Invalid parameter for writebf.\n");
+		return;
+	}
+
+	temp = readb(addr);
+	temp &= ~(mask << shift);
+	temp |= (data & mask) << shift;
+	writeb(temp, addr);
+}
+
+static int isColorSpaceConversion(hdmi_data_info_s * hdmi)
+{
+	return (hdmi->enc_in_format != hdmi->enc_out_format) ? TRUE : FALSE;
+}
+
+static int isColorSpaceDecimation(hdmi_data_info_s * hdmi)
+{
+	return ((hdmi->enc_out_format == eYCC422_8bits) &&
+		(hdmi->enc_in_format == eRGB
+		|| hdmi->enc_in_format == eYCC444)) ? TRUE : FALSE;
+}
+
+static int isColorSpaceInterpolation(hdmi_data_info_s * hdmi)
+{
+	return ((hdmi->enc_in_format == eYCC422_8bits) &&
+		(hdmi->enc_out_format == eRGB
+		|| hdmi->enc_out_format == eYCC444)) ? TRUE : FALSE;
+}
+
+/*!
+ * update the color space conversion coefficients.
+ */
+static void update_csc_coeffs(hdmi_data_info_s * hdmi)
+{
+	unsigned short csc_coeff[3][4];
+	unsigned int csc_scale = 1;
+	u8 val;
+	int coeff_selected = FALSE;
+
+	memset(&csc_coeff, 0, sizeof(csc_coeff));
+
+	if (isColorSpaceConversion(hdmi) == TRUE)   // csc needed
+	{
+		if (hdmi->enc_out_format == eRGB) {
+			if (hdmi->colorimetry == eITU601) {
+				csc_coeff[0][0] = 0x2000;
+				csc_coeff[0][1] = 0x6926;
+				csc_coeff[0][2] = 0x74fd;
+				csc_coeff[0][3] = 0x010e;
+
+				csc_coeff[1][0] = 0x2000;
+				csc_coeff[1][1] = 0x2cdd;
+				csc_coeff[1][2] = 0x0000;
+				csc_coeff[1][3] = 0x7e9a;
+
+				csc_coeff[2][0] = 0x2000;
+				csc_coeff[2][1] = 0x0000;
+				csc_coeff[2][2] = 0x38b4;
+				csc_coeff[2][3] = 0x7e3b;
+
+				csc_scale = 1;
+				coeff_selected = TRUE;
+			} else if (hdmi->colorimetry == eITU709) {
+				csc_coeff[0][0] = 0x2000;
+				csc_coeff[0][1] = 0x7106;
+				csc_coeff[0][2] = 0x7a02;
+				csc_coeff[0][3] = 0x00a7;
+
+				csc_coeff[1][0] = 0x2000;
+				csc_coeff[1][1] = 0x3264;
+				csc_coeff[1][2] = 0x0000;
+				csc_coeff[1][3] = 0x7e6d;
+
+				csc_coeff[2][0] = 0x2000;
+				csc_coeff[2][1] = 0x0000;
+				csc_coeff[2][2] = 0x3b61;
+				csc_coeff[2][3] = 0x7e25;
+
+				csc_scale = 1;
+				coeff_selected = TRUE;
+			}
+		} else if (hdmi->enc_in_format == eRGB) {
+			if (hdmi->colorimetry == eITU601) {
+				csc_coeff[0][0] = 0x2591;
+				csc_coeff[0][1] = 0x1322;
+				csc_coeff[0][2] = 0x074b;
+				csc_coeff[0][3] = 0x0000;
+
+				csc_coeff[1][0] = 0x6535;
+				csc_coeff[1][1] = 0x2000;
+				csc_coeff[1][2] = 0x7acc;
+				csc_coeff[1][3] = 0x0200;
+
+				csc_coeff[1][0] = 0x6acd;
+				csc_coeff[1][1] = 0x7534;
+				csc_coeff[1][2] = 0x2000;
+				csc_coeff[1][3] = 0x0200;
+
+				csc_scale = 0;
+				coeff_selected = TRUE;
+ 			} else if (hdmi->colorimetry == eITU709) {
+				csc_coeff[0][0] = 0x2dc5;
+				csc_coeff[0][1] = 0x0d9b;
+				csc_coeff[0][2] = 0x049e;
+				csc_coeff[0][3] = 0x0000;
+
+				csc_coeff[1][0] = 0x63f0;
+				csc_coeff[1][1] = 0x2000;
+				csc_coeff[1][2] = 0x7d11;
+				csc_coeff[1][3] = 0x0200;
+
+				csc_coeff[2][0] = 0x6756;
+				csc_coeff[2][1] = 0x78ab;
+				csc_coeff[2][2] = 0x2000;
+				csc_coeff[2][3] = 0x0200;
+
+				csc_scale = 0;
+				coeff_selected = TRUE;
+			}
+		}
+	}
+
+	if (!coeff_selected) {
+		csc_coeff[0][0] = 0x2000;
+		csc_coeff[0][1] = 0x0000;
+		csc_coeff[0][2] = 0x0000;
+		csc_coeff[0][3] = 0x0000;
+
+		csc_coeff[1][0] = 0x0000;
+		csc_coeff[1][1] = 0x2000;
+		csc_coeff[1][2] = 0x0000;
+		csc_coeff[1][3] = 0x0000;
+
+		csc_coeff[2][0] = 0x0000;
+		csc_coeff[2][1] = 0x0000;
+		csc_coeff[2][2] = 0x2000;
+		csc_coeff[2][3] = 0x0000;
+
+		csc_scale = 1;
+	}
+
+	/* Update CSC parameters in HDMI CSC registers */
+	writeb((unsigned char)(csc_coeff[0][0] & 0xFF),
+		HDMI_CSC_COEF_A1_LSB);
+	writeb((unsigned char)(csc_coeff[0][0] >> 8),
+		HDMI_CSC_COEF_A1_MSB);
+	writeb((unsigned char)(csc_coeff[0][1] & 0xFF),
+		HDMI_CSC_COEF_A2_LSB);
+	writeb((unsigned char)(csc_coeff[0][1] >> 8),
+		HDMI_CSC_COEF_A2_MSB);
+	writeb((unsigned char)(csc_coeff[0][2] & 0xFF),
+		HDMI_CSC_COEF_A3_LSB);
+	writeb((unsigned char)(csc_coeff[0][2] >> 8),
+		HDMI_CSC_COEF_A3_MSB);
+	writeb((unsigned char)(csc_coeff[0][3] & 0xFF),
+		HDMI_CSC_COEF_A4_LSB);
+	writeb((unsigned char)(csc_coeff[0][3] >> 8),
+		HDMI_CSC_COEF_A4_MSB);
+
+	writeb((unsigned char)(csc_coeff[1][0] & 0xFF),
+		HDMI_CSC_COEF_B1_LSB);
+	writeb((unsigned char)(csc_coeff[1][0] >> 8),
+		HDMI_CSC_COEF_B1_MSB);
+	writeb((unsigned char)(csc_coeff[1][1] & 0xFF),
+		HDMI_CSC_COEF_B2_LSB);
+	writeb((unsigned char)(csc_coeff[1][1] >> 8),
+		HDMI_CSC_COEF_B2_MSB);
+	writeb((unsigned char)(csc_coeff[1][2] & 0xFF),
+		HDMI_CSC_COEF_B3_LSB);
+	writeb((unsigned char)(csc_coeff[1][2] >> 8),
+		HDMI_CSC_COEF_B3_MSB);
+	writeb((unsigned char)(csc_coeff[1][3] & 0xFF),
+		HDMI_CSC_COEF_B4_LSB);
+	writeb((unsigned char)(csc_coeff[1][3] >> 8),
+		HDMI_CSC_COEF_B4_MSB);
+
+	writeb((unsigned char)(csc_coeff[2][0] & 0xFF),
+		HDMI_CSC_COEF_C1_LSB);
+	writeb((unsigned char)(csc_coeff[2][0] >> 8),
+		HDMI_CSC_COEF_C1_MSB);
+	writeb((unsigned char)(csc_coeff[2][1] & 0xFF),
+		HDMI_CSC_COEF_C2_LSB);
+	writeb((unsigned char)(csc_coeff[2][1] >> 8),
+		HDMI_CSC_COEF_C2_MSB);
+	writeb((unsigned char)(csc_coeff[2][2] & 0xFF),
+		HDMI_CSC_COEF_C3_LSB);
+	writeb((unsigned char)(csc_coeff[2][2] >> 8),
+		HDMI_CSC_COEF_C3_MSB);
+	writeb((unsigned char)(csc_coeff[2][3] & 0xFF),
+		HDMI_CSC_COEF_C4_LSB);
+	writeb((unsigned char)(csc_coeff[2][3] >> 8),
+		HDMI_CSC_COEF_C4_MSB);
+
+	val = readb(HDMI_CSC_SCALE);
+	val &= ~HDMI_CSC_SCALE_CSCSCALE_MASK;
+	val |= csc_scale & HDMI_CSC_SCALE_CSCSCALE_MASK;
+	writeb(val, HDMI_CSC_SCALE);
+}
+
+/*!
+ * configure the interrupt mask of source PHY.
+ */
+static void hdmi_phy_int_mask(int mask)
+{
+	writeb(mask, HDMI_PHY_MASK0);
+}
+
+/*!
+ * set the DE polarity
+ * @param	pol: high or low for DE active
+ */
+static void hdmi_phy_sel_data_en_pol(int pol)
+{
+	writebf(pol, HDMI_PHY_CONF0, HDMI_PHY_CONF0_SELDATAENPOL_OFFSET, 1);
+}
+
+/*!
+ * select the interface control??
+ * @param  seldipif: interface selection
+ */
+static void hdmi_phy_sel_interface_control(int seldipif)
+{
+	writebf(seldipif, HDMI_PHY_CONF0, HDMI_PHY_CONF0_SELDIPIF_OFFSET, 1);
+}
+
+/*!
+ * enable TMDS output
+ * @param	en: enable or disable the TMDS output
+ */
+static void hdmi_phy_enable_tmds(int en)
+{
+	writebf(en, HDMI_PHY_CONF0, HDMI_PHY_CONF0_ENTMDS_OFFSET, 1);
+}
+
+/*!
+ * PHY power down enable
+ * @param 	en: enable or disable PHY
+ * 1 - power down disable
+ * 0 - power down enable
+ */
+static void hdmi_phy_enable_power(int en)
+{
+	writebf(en, HDMI_PHY_CONF0, HDMI_PHY_CONF0_PDZ_OFFSET, 1);
+}
+
+static inline void hdmi_phy_test_clear(unsigned char bit)
+{
+	writebf(bit, HDMI_PHY_TST0, HDMI_PHY_TST0_TSTCLR_OFFSET, 1);
+}
+
+static void hdmi_phy_gen2_txpwron(unsigned char enable)
+{
+	writebf(enable, HDMI_PHY_CONF0, HDMI_PHY_CONF0_GEN2_TXPWRON_OFFSET, 1);
+}
+
+static void hdmi_phy_gen2_pddq(unsigned char enable)
+{
+	writebf(enable, HDMI_PHY_CONF0, HDMI_PHY_CONF0_GEN2_PDDQ_OFFSET, 1);
+}
+
+/*!
+ * polling the i2c operation status bit to check if the i2c r/w
+ * is done before the time run out.
+ *
+ * @param 	msec:	time out value, using epit as the timer
+ */
+static int hdmi_phy_wait_i2c_done(int msec)
+{
+	unsigned char val = 0;
+
+	val = readb(HDMI_IH_I2CMPHY_STAT0) & 0x3;
+	while (val == 0) {
+		udelay(1000);
+		if (msec-- == 0) {
+			printf("HDMI PHY i2c operation time out!!\n");
+			return FALSE;
+		}
+		val = readb(HDMI_IH_I2CMPHY_STAT0) & 0x3;
+	}
+	return TRUE;
+}
+
+/*!
+ * HDMI phy registers access through internal I2C bus
+ *
+ * @param	data: 	value to be send
+ * @param	addr:	sub-address of registers
+ *
+ * @retval	TRUE:	I2C write succeed
+ * @retval	FALSE:	I2C write failed/timeout  
+ */
+static int hdmi_phy_i2c_write(unsigned short data, unsigned char addr)
+{
+	writeb(0xFF, HDMI_IH_I2CMPHY_STAT0);
+	writeb(addr, HDMI_PHY_I2CM_ADDRESS_ADDR);
+	writeb((unsigned char)(data >> 8), HDMI_PHY_I2CM_DATAO_1_ADDR);
+	writeb((unsigned char)(data >> 0), HDMI_PHY_I2CM_DATAO_0_ADDR);
+	writebf(1, HDMI_PHY_I2CM_OPERATION_ADDR, 4, 1);
+	return hdmi_phy_wait_i2c_done(1000);
+}
+
+/*!
+ * HDMI phy registers read through internal I2C bus
+ *
+ * @param	addr:	sub-address of register
+ *
+ * @return	value read back
+ */
+static unsigned short hdmi_phy_i2c_read(unsigned char addr)
+{
+	unsigned short data;
+	unsigned char msb = 0, lsb = 0;
+	writeb(0xFF, HDMI_IH_I2CMPHY_STAT0);
+	writeb(addr, HDMI_PHY_I2CM_ADDRESS_ADDR);
+	writebf(1, HDMI_PHY_I2CM_OPERATION_ADDR, 0, 1);
+	hdmi_phy_wait_i2c_done(1000);
+	msb = readb(HDMI_PHY_I2CM_DATAI_1_ADDR);
+	lsb = readb(HDMI_PHY_I2CM_DATAI_0_ADDR);
+	data = (msb << 8) | lsb;
+	return data;
+}
+
+/*!
+ * HDMI phy configuration
+ *
+ * @param	hdmi: 	hdmi struct
+ * @param	pRep:	repetition setting
+ * @param	cRes: 	color resolution per component
+ * @param	cscOn:	csc on/off switch
+ *
+ * @retval	FALSE	configuration failed
+ * @retval	TRUE	configuration succeed
+ */
+static int hdmi_phy_configure(hdmi_data_info_s * hdmi, unsigned char pRep, unsigned char cRes, int cscOn)
+{
+	u8 val;
+	u8 msec;
+
+	/* color resolution 0 is 8 bit colour depth */
+	if (cRes == 0)
+		cRes = 8;
+
+	if (pRep != 0) {
+		printf("pixel repetition not supported %d", pRep);
+		return FALSE;
+	} else if (cRes != 8 && cRes != 12) {
+		printf("color resolution not supported %d", cRes);
+		return FALSE;
+	}
+
+	/* Enable csc path */
+	if (cscOn)
+		val = HDMI_MC_FLOWCTRL_FEED_THROUGH_OFF_CSC_IN_PATH;
+	else
+		val = HDMI_MC_FLOWCTRL_FEED_THROUGH_OFF_CSC_BYPASS;
+
+	writeb(val, HDMI_MC_FLOWCTRL);
+
+	/* gen2 tx power off */
+	hdmi_phy_gen2_txpwron(0);
+
+	/* gen2 pddq */
+	hdmi_phy_gen2_pddq(1);
+
+	/* PHY reset */
+	writeb(HDMI_MC_PHYRSTZ_DEASSERT, HDMI_MC_PHYRSTZ);
+	writeb(HDMI_MC_PHYRSTZ_ASSERT, HDMI_MC_PHYRSTZ);
+
+	writeb(HDMI_MC_HEACPHY_RST_ASSERT, HDMI_MC_HEACPHY_RST);
+
+	hdmi_phy_test_clear(1);
+	writeb(HDMI_PHY_I2CM_SLAVE_ADDR_PHY_GEN2,
+			HDMI_PHY_I2CM_SLAVE_ADDR);
+	hdmi_phy_test_clear(0);
+
+	if (hdmi->video_mode.mPixelClock <= 45250000) {
+		switch (cRes) {
+		case 8:
+			/* PLL/MPLL Cfg */
+			hdmi_phy_i2c_write(0x01e0, 0x06);
+			hdmi_phy_i2c_write(0x0000, 0x15);  /* GMPCTRL */
+			break;
+		case 10:
+			hdmi_phy_i2c_write(0x21e1, 0x06);
+			hdmi_phy_i2c_write(0x0000, 0x15);
+			break;
+		case 12:
+			hdmi_phy_i2c_write(0x41e2, 0x06);
+			hdmi_phy_i2c_write(0x0000, 0x15);
+			break;
+		default:
+			return FALSE;
+		}
+	} else if (hdmi->video_mode.mPixelClock <= 92500000) {
+		switch (cRes) {
+		case 8:
+			hdmi_phy_i2c_write(0x0140, 0x06);
+			hdmi_phy_i2c_write(0x0005, 0x15);
+			break;
+		case 10:
+			hdmi_phy_i2c_write(0x2141, 0x06);
+			hdmi_phy_i2c_write(0x0005, 0x15);
+			break;
+		case 12:
+			hdmi_phy_i2c_write(0x4142, 0x06);
+			hdmi_phy_i2c_write(0x0005, 0x15);
+		default:
+			return FALSE;
+		}
+	} else if (hdmi->video_mode.mPixelClock <= 148500000) {
+		switch (cRes) {
+		case 8:
+			hdmi_phy_i2c_write(0x00a0, 0x06);
+			hdmi_phy_i2c_write(0x000a, 0x15);
+			break;
+		case 10:
+			hdmi_phy_i2c_write(0x20a1, 0x06);
+			hdmi_phy_i2c_write(0x000a, 0x15);
+			break;
+		case 12:
+			hdmi_phy_i2c_write(0x40a2, 0x06);
+			hdmi_phy_i2c_write(0x000a, 0x15);
+		default:
+			return FALSE;
+		}
+	} else {
+		switch (cRes) {
+		case 8:
+			hdmi_phy_i2c_write(0x00a0, 0x06);
+			hdmi_phy_i2c_write(0x000a, 0x15);
+			break;
+		case 10:
+			hdmi_phy_i2c_write(0x2001, 0x06);
+			hdmi_phy_i2c_write(0x000f, 0x15);
+			break;
+		case 12:
+			hdmi_phy_i2c_write(0x4002, 0x06);
+			hdmi_phy_i2c_write(0x000f, 0x15);
+		default:
+			return FALSE;
+		}
+	}
+
+	if (hdmi->video_mode.mPixelClock <= 54000000) {
+		switch (cRes) {
+		case 8:
+			hdmi_phy_i2c_write(0x091c, 0x10);  /* CURRCTRL */
+			break;
+		case 10:
+			hdmi_phy_i2c_write(0x091c, 0x10);
+			break;
+		case 12:
+			hdmi_phy_i2c_write(0x06dc, 0x10);
+			break;
+		default:
+			return FALSE;
+		}
+	} else if (hdmi->video_mode.mPixelClock <= 58400000) {
+		switch (cRes) {
+		case 8:
+			hdmi_phy_i2c_write(0x091c, 0x10);
+			break;
+		case 10:
+			hdmi_phy_i2c_write(0x06dc, 0x10);
+			break;
+		case 12:
+			hdmi_phy_i2c_write(0x06dc, 0x10);
+			break;
+		default:
+			return FALSE;
+		}
+	} else if (hdmi->video_mode.mPixelClock <= 72000000) {
+		switch (cRes) {
+		case 8:
+			hdmi_phy_i2c_write(0x06dc, 0x10);
+			break;
+		case 10:
+			hdmi_phy_i2c_write(0x06dc, 0x10);
+			break;
+		case 12:
+			hdmi_phy_i2c_write(0x091c, 0x10);
+			break;
+		default:
+			return FALSE;
+		}
+	} else if (hdmi->video_mode.mPixelClock <= 74250000) {
+		switch (cRes) {
+		case 8:
+			hdmi_phy_i2c_write(0x06dc, 0x10);
+			break;
+		case 10:
+			hdmi_phy_i2c_write(0x0b5c, 0x10);
+			break;
+		case 12:
+			hdmi_phy_i2c_write(0x091c, 0x10);
+			break;
+		default:
+			return FALSE;
+		}
+	} else if (hdmi->video_mode.mPixelClock <= 118800000) {
+		switch (cRes) {
+		case 8:
+			hdmi_phy_i2c_write(0x091c, 0x10);
+			break;
+		case 10:
+			hdmi_phy_i2c_write(0x091c, 0x10);
+			break;
+		case 12:
+			hdmi_phy_i2c_write(0x06dc, 0x10);
+			break;
+		default:
+			return FALSE;
+		}
+	} else if (hdmi->video_mode.mPixelClock <= 216000000) {
+		switch (cRes) {
+		case 8:
+			hdmi_phy_i2c_write(0x06dc, 0x10);
+			break;
+		case 10:
+			hdmi_phy_i2c_write(0x0b5c, 0x10);
+			break;
+		case 12:
+			hdmi_phy_i2c_write(0x091c, 0x10);
+			break;
+		default:
+			return FALSE;
+		}
+	} else {
+		printf("Pixel clock %d - unsupported by HDMI\n",
+				hdmi->video_mode.mPixelClock);
+		return FALSE;
+	}
+
+	hdmi_phy_i2c_write(0x0000, 0x13);  /* PLLPHBYCTRL */
+	hdmi_phy_i2c_write(0x0006, 0x17);
+	/* RESISTANCE TERM 133Ohm Cfg */
+	hdmi_phy_i2c_write(0x0005, 0x19);  /* TXTERM */
+	/* PREEMP Cgf 0.00 */
+	hdmi_phy_i2c_write(0x800d, 0x09);  /* CKSYMTXCTRL */
+	/* TX/CK LVL 10 */
+	hdmi_phy_i2c_write(0x01ad, 0x0E);  /* VLEVCTRL */
+	/* REMOVE CLK TERM */
+	hdmi_phy_i2c_write(0x8000, 0x05);  /* CKCALCTRL */
+
+	if (hdmi->video_mode.mPixelClock > 148500000) {
+			hdmi_phy_i2c_write(0x800b, 0x09);
+			hdmi_phy_i2c_write(0x0129, 0x0E);
+	}
+
+	hdmi_phy_enable_power(1);
+
+	/* toggle TMDS enable */
+	hdmi_phy_enable_tmds(0);
+	hdmi_phy_enable_tmds(1);
+
+	/* gen2 tx power on */
+	hdmi_phy_gen2_txpwron(1);
+	hdmi_phy_gen2_pddq(0);
+
+	/*Wait for PHY PLL lock */
+	msec = 4;
+	val = readb(HDMI_PHY_STAT0) & HDMI_PHY_TX_PHY_LOCK;
+	while (val == 0) {
+		udelay(1000);
+		if (msec-- == 0) {
+			printf("PHY PLL not locked\n");
+			return FALSE;
+		}
+		val = readb(HDMI_PHY_STAT0) & HDMI_PHY_TX_PHY_LOCK;
+	}
+
+	return TRUE;
+}
+
+/*!
+ * HDMI phy initialization
+ */
+static void hdmi_phy_init(hdmi_data_info_s * hdmi)
+{
+	int i;
+	int cscon = FALSE;
+
+	/*check csc whether needed activated in HDMI mode */
+	cscon = (isColorSpaceConversion(hdmi) &&
+			!hdmi->video_mode.mDVI);
+
+	/* HDMI Phy spec says to do the phy initialization sequence twice */
+	for (i = 0 ; i < 2 ; i++) {
+		hdmi_phy_int_mask(0xFF);
+		hdmi_phy_sel_data_en_pol((hdmi->video_mode.mDataEnablePolarity == TRUE) ? 1 : 0);
+		hdmi_phy_sel_interface_control(0);
+		hdmi_phy_enable_tmds(0);
+		hdmi_phy_enable_power(0);
+
+		hdmi_phy_configure(hdmi, 0, 8, cscon);
+	}
+}
+
+/*!
+ * mute hdmi audio output
+ */
+static void hdmi_audio_mute(hdmi_data_info_s * hdmi, int mute)
+{
+	writebf((mute == TRUE) ? 0xF : 0, HDMI_FC_AUDSCONF, 4, 4);
+}
+
+static void hdmi_enable_audio_clk(hdmi_data_info_s * hdmi, int enable)
+{
+	u8 clkdis;
+
+	clkdis = readb(HDMI_MC_CLKDIS);
+	if (enable)
+		clkdis &= ~HDMI_MC_CLKDIS_AUDCLK_DISABLE;
+	else
+		clkdis |= HDMI_MC_CLKDIS_AUDCLK_DISABLE;
+	writeb(clkdis, HDMI_MC_CLKDIS);
+}
+
+/*!
+ * this submodule is responsible for the video/audio data composition.
+ * video mode is set here, but the actual flow is determined by the input.
+ */
+static void hdmi_av_composer(hdmi_data_info_s * hdmi)
+{
+	u8 inv_val;
+
+	/* Set up HDMI_FC_INVIDCONF */
+	inv_val = (hdmi->hdcp_enable ?
+		HDMI_FC_INVIDCONF_HDCP_KEEPOUT_ACTIVE :
+		HDMI_FC_INVIDCONF_HDCP_KEEPOUT_INACTIVE);
+
+	inv_val |= (hdmi->video_mode.mVSyncPolarity ?
+		HDMI_FC_INVIDCONF_VSYNC_IN_POLARITY_ACTIVE_HIGH :
+		HDMI_FC_INVIDCONF_VSYNC_IN_POLARITY_ACTIVE_LOW);
+
+	inv_val |= (hdmi->video_mode.mHSyncPolarity ?
+		HDMI_FC_INVIDCONF_HSYNC_IN_POLARITY_ACTIVE_HIGH :
+		HDMI_FC_INVIDCONF_HSYNC_IN_POLARITY_ACTIVE_LOW);
+
+	inv_val |= (hdmi->video_mode.mDataEnablePolarity ?
+		HDMI_FC_INVIDCONF_DE_IN_POLARITY_ACTIVE_HIGH :
+		HDMI_FC_INVIDCONF_DE_IN_POLARITY_ACTIVE_LOW);
+
+	if (hdmi->video_mode.mCode == 39)
+		inv_val |= HDMI_FC_INVIDCONF_R_V_BLANK_IN_OSC_ACTIVE_HIGH;
+	else
+		inv_val |= (hdmi->video_mode.mInterlaced ?
+			HDMI_FC_INVIDCONF_R_V_BLANK_IN_OSC_ACTIVE_HIGH :
+			HDMI_FC_INVIDCONF_R_V_BLANK_IN_OSC_ACTIVE_LOW);
+
+	inv_val |= (hdmi->video_mode.mInterlaced ?
+		HDMI_FC_INVIDCONF_IN_I_P_INTERLACED :
+		HDMI_FC_INVIDCONF_IN_I_P_PROGRESSIVE);
+
+	inv_val |= (hdmi->video_mode.mDVI ?
+		HDMI_FC_INVIDCONF_DVI_MODEZ_DVI_MODE :
+		HDMI_FC_INVIDCONF_DVI_MODEZ_HDMI_MODE);
+
+	writeb(inv_val, HDMI_FC_INVIDCONF);
+
+	/* Set up horizontal active pixel region width */
+	writeb(hdmi->video_mode.mHActive >> 8, HDMI_FC_INHACTV1);
+	writeb(hdmi->video_mode.mHActive, HDMI_FC_INHACTV0);
+
+	/* Set up vertical blanking pixel region width */
+	writeb(hdmi->video_mode.mVActive >> 8, HDMI_FC_INVACTV1);
+	writeb(hdmi->video_mode.mVActive, HDMI_FC_INVACTV0);
+
+	/* Set up horizontal blanking pixel region width */
+	writeb(hdmi->video_mode.mHBlanking >> 8, HDMI_FC_INHBLANK1);
+	writeb(hdmi->video_mode.mHBlanking, HDMI_FC_INHBLANK0);
+
+	/* Set up vertical blanking pixel region width */
+	writeb(hdmi->video_mode.mVBlanking, HDMI_FC_INVBLANK);
+
+	/* Set up HSYNC active edge delay width (in pixel clks) */
+	writeb(hdmi->video_mode.mHSyncOffset >> 8, HDMI_FC_HSYNCINDELAY1);
+	writeb(hdmi->video_mode.mHSyncOffset, HDMI_FC_HSYNCINDELAY0);
+
+	/* Set up VSYNC active edge delay (in pixel clks) */
+	writeb(hdmi->video_mode.mVSyncOffset, HDMI_FC_VSYNCINDELAY);
+
+	/* Set up HSYNC active pulse width (in pixel clks) */
+	writeb(hdmi->video_mode.mHSyncPulseWidth >> 8, HDMI_FC_HSYNCINWIDTH1);
+	writeb(hdmi->video_mode.mHSyncPulseWidth, HDMI_FC_HSYNCINWIDTH0);
+
+	/* Set up VSYNC active edge delay (in pixel clks) */
+	writeb(hdmi->video_mode.mVSyncPulseWidth, HDMI_FC_VSYNCINWIDTH);
+}
+
+static void hdmi_config_AVI(hdmi_data_info_s * hdmi)
+{
+	u8 val;
+	u8 pix_fmt;
+	u8 under_scan;
+	u8 act_ratio, coded_ratio, colorimetry, ext_colorimetry;
+	int aspect_16_9;
+
+	if ((hdmi->video_mode.mHImageSize == 4) && (hdmi->video_mode.mVImageSize == 3))
+		aspect_16_9 = FALSE;
+	else
+		aspect_16_9 = TRUE;
+
+	/********************************************
+	 * AVI Data Byte 1
+	 ********************************************/
+	if (hdmi->enc_out_format == eYCC444)
+		pix_fmt = HDMI_FC_AVICONF0_PIX_FMT_YCBCR444;
+	else if (hdmi->enc_out_format == eYCC422)
+		pix_fmt = HDMI_FC_AVICONF0_PIX_FMT_YCBCR422;
+	else
+		pix_fmt = HDMI_FC_AVICONF0_PIX_FMT_RGB;
+
+	under_scan = HDMI_FC_AVICONF0_SCAN_INFO_NODATA;
+
+	/*
+	 * Active format identification data is present in the AVI InfoFrame.
+	 * Under scan info, no bar data
+	 */
+	val = pix_fmt | under_scan |
+		HDMI_FC_AVICONF0_ACTIVE_FMT_INFO_PRESENT |
+		HDMI_FC_AVICONF0_BAR_DATA_NO_DATA;
+
+	writeb(val, HDMI_FC_AVICONF0);
+
+	/********************************************
+	 * AVI Data Byte 2
+	 ********************************************/
+
+	/*	Set the Aspect Ratio */
+	if (aspect_16_9) {
+		act_ratio = HDMI_FC_AVICONF1_ACTIVE_ASPECT_RATIO_16_9;
+		coded_ratio = HDMI_FC_AVICONF1_CODED_ASPECT_RATIO_16_9;
+	} else {
+		act_ratio = HDMI_FC_AVICONF1_ACTIVE_ASPECT_RATIO_4_3;
+		coded_ratio = HDMI_FC_AVICONF1_CODED_ASPECT_RATIO_4_3;
+	}
+
+	/* Set up colorimetry */
+	if (hdmi->enc_out_format == eXVYCC444) {
+		colorimetry = HDMI_FC_AVICONF1_COLORIMETRY_EXTENDED_INFO;
+		if (hdmi->colorimetry == eITU601)
+			ext_colorimetry =
+				HDMI_FC_AVICONF2_EXT_COLORIMETRY_XVYCC601;
+		else /* hdmi->colorimetry == eITU709 */
+			ext_colorimetry =
+				HDMI_FC_AVICONF2_EXT_COLORIMETRY_XVYCC709;
+	} else if (hdmi->enc_out_format != eRGB) {
+		if (hdmi->colorimetry == eITU601)
+			colorimetry = HDMI_FC_AVICONF1_COLORIMETRY_SMPTE;
+		else /* hdmi->colorimetry == eITU709 */
+			colorimetry = HDMI_FC_AVICONF1_COLORIMETRY_ITUR;
+		ext_colorimetry = HDMI_FC_AVICONF2_EXT_COLORIMETRY_XVYCC601;
+	} else { /* Carries no data */
+		colorimetry = HDMI_FC_AVICONF1_COLORIMETRY_NO_DATA;
+		ext_colorimetry = HDMI_FC_AVICONF2_EXT_COLORIMETRY_XVYCC601;
+	}
+
+	val = colorimetry | coded_ratio | act_ratio;
+	writeb(val, HDMI_FC_AVICONF1);
+
+	/********************************************
+	 * AVI Data Byte 3
+	 ********************************************/
+
+	val = HDMI_FC_AVICONF2_IT_CONTENT_NO_DATA | ext_colorimetry |
+		HDMI_FC_AVICONF2_RGB_QUANT_DEFAULT |
+		HDMI_FC_AVICONF2_SCALING_NONE;
+	writeb(val, HDMI_FC_AVICONF2);
+
+	/********************************************
+	 * AVI Data Byte 4
+	 ********************************************/
+	writeb(hdmi->video_mode.mCode, HDMI_FC_AVIVID);
+
+	/********************************************
+	 * AVI Data Byte 5
+	 ********************************************/
+
+	/* Set up input and output pixel repetition */
+	val = (((hdmi->video_mode.mPixelRepetitionInput  + 1) <<
+		HDMI_FC_PRCONF_INCOMING_PR_FACTOR_OFFSET) &
+		HDMI_FC_PRCONF_INCOMING_PR_FACTOR_MASK) |
+		((hdmi->video_mode.mPixelRepetitionOutput <<
+		HDMI_FC_PRCONF_OUTPUT_PR_FACTOR_OFFSET) &
+		HDMI_FC_PRCONF_OUTPUT_PR_FACTOR_MASK);
+	writeb(val, HDMI_FC_PRCONF);
+
+	/* IT Content and quantization range = don't care */
+	val = HDMI_FC_AVICONF3_IT_CONTENT_TYPE_GRAPHICS |
+		HDMI_FC_AVICONF3_QUANT_RANGE_LIMITED;
+	writeb(val, HDMI_FC_AVICONF3);
+
+	/********************************************
+	 * AVI Data Bytes 6-13
+	 ********************************************/
+	writeb(0, HDMI_FC_AVIETB0);
+	writeb(0, HDMI_FC_AVIETB1);
+	writeb(0, HDMI_FC_AVISBB0);
+	writeb(0, HDMI_FC_AVISBB1);
+	writeb(0, HDMI_FC_AVIELB0);
+	writeb(0, HDMI_FC_AVIELB1);
+	writeb(0, HDMI_FC_AVISRB0);
+	writeb(0, HDMI_FC_AVISRB1);
+}
+
+static void hdmi_enable_video_path(hdmi_data_info_s * hdmi)
+{
+	u8 clkdis;
+
+	/* control period minimum duration */
+	writeb(12, HDMI_FC_CTRLDUR);
+	writeb(32, HDMI_FC_EXCTRLDUR);
+	writeb(1, HDMI_FC_EXCTRLSPAC);
+
+	/* Set to fill TMDS data channels */
+	writeb(0x0B, HDMI_FC_CH0PREAM);
+	writeb(0x16, HDMI_FC_CH1PREAM);
+	writeb(0x21, HDMI_FC_CH2PREAM);
+
+	/* Enable pixel clock and tmds data path */
+	clkdis = 0x7F;
+	clkdis &= ~HDMI_MC_CLKDIS_PIXELCLK_DISABLE;
+	writeb(clkdis, HDMI_MC_CLKDIS);
+
+	clkdis &= ~HDMI_MC_CLKDIS_TMDSCLK_DISABLE;
+	writeb(clkdis, HDMI_MC_CLKDIS);
+
+	/* Enable csc path */
+	if (isColorSpaceConversion(hdmi)) {
+		clkdis &= ~HDMI_MC_CLKDIS_CSCCLK_DISABLE;
+		writeb(clkdis, HDMI_MC_CLKDIS);
+	}
+}
+
+/*!
+ * HDCP configuration, disabled here
+ */
+static void hdmi_tx_hdcp_config(hdmi_data_info_s * hdmi)
+{
+	u8 de, val;
+
+	if (hdmi->video_mode.mDataEnablePolarity)
+		de = HDMI_A_VIDPOLCFG_DATAENPOL_ACTIVE_HIGH;
+	else
+		de = HDMI_A_VIDPOLCFG_DATAENPOL_ACTIVE_LOW;
+
+	/* disable rx detect */
+	val = readb(HDMI_A_HDCPCFG0);
+	val &= HDMI_A_HDCPCFG0_RXDETECT_MASK;
+	val |= HDMI_A_HDCPCFG0_RXDETECT_DISABLE;
+	writeb(val, HDMI_A_HDCPCFG0);
+
+	val = readb(HDMI_A_VIDPOLCFG);
+	val &= HDMI_A_VIDPOLCFG_DATAENPOL_MASK;
+	val |= de;
+	writeb(val, HDMI_A_VIDPOLCFG);
+
+	val = readb(HDMI_A_HDCPCFG1);
+	val &= HDMI_A_HDCPCFG1_ENCRYPTIONDISABLE_MASK;
+	val |= HDMI_A_HDCPCFG1_ENCRYPTIONDISABLE_DISABLE;
+	writeb(val, HDMI_A_HDCPCFG1);
+}
+
+/*!
+ * this submodule is responsible for the video data synchronization.
+ * for example, for RGB 4:4:4 input, the data map is defined as
+ * 			pin{47~40} <==> R[7:0]
+ * 			pin{31~24} <==> G[7:0]
+ * 			pin{15~8}  <==> B[7:0]
+ */
+static void hdmi_video_sample(hdmi_data_info_s * hdmi)
+{
+	int color_format = 0;
+	u8 val;
+
+	if (hdmi->enc_in_format == eRGB) {
+		if (hdmi->enc_color_depth == 8) {
+			color_format = 0x01;
+		} else if (hdmi->enc_color_depth == 10) {
+			color_format = 0x03;
+		} else if (hdmi->enc_color_depth == 12) {
+			color_format = 0x05;
+		} else if (hdmi->enc_color_depth == 16) {
+			color_format = 0x07;
+		} else {
+			printf("Invalid color depth %d!!", hdmi->enc_color_depth);
+			return;
+		}
+	} else if (hdmi->enc_in_format == eYCC444) {
+		if (hdmi->enc_color_depth == 8) {
+			color_format = 0x09;
+		} else if (hdmi->enc_color_depth == 10) {
+			color_format = 0x0B;
+		} else if (hdmi->enc_color_depth == 12) {
+			color_format = 0x0D;
+		} else if (hdmi->enc_color_depth == 16) {
+			color_format = 0x0F;
+		} else {
+			printf("Invalid color depth %d!!", hdmi->enc_color_depth);
+			return;
+		}
+	} else if (hdmi->enc_in_format == eYCC422_8bits) {
+		if (hdmi->enc_color_depth == 8) {
+			color_format = 0x16;
+		} else if (hdmi->enc_color_depth == 10) {
+			color_format = 0x14;
+		} else if (hdmi->enc_color_depth == 12) {
+			color_format = 0x12;
+		} else {
+			printf("Invalid color depth %d!!", hdmi->enc_color_depth);
+			return;
+		}
+	}
+
+	val = HDMI_TX_INVID0_INTERNAL_DE_GENERATOR_DISABLE |
+		((color_format << HDMI_TX_INVID0_VIDEO_MAPPING_OFFSET) &
+		HDMI_TX_INVID0_VIDEO_MAPPING_MASK);
+	writeb(val, HDMI_TX_INVID0);
+
+	/* Enable TX stuffing: When DE is inactive, fix the output data to 0 */
+	val = HDMI_TX_INSTUFFING_BDBDATA_STUFFING_ENABLE |
+		HDMI_TX_INSTUFFING_RCRDATA_STUFFING_ENABLE |
+		HDMI_TX_INSTUFFING_GYDATA_STUFFING_ENABLE;
+	writeb(val, HDMI_TX_INSTUFFING);
+	writeb(0x0, HDMI_TX_GYDATA0);
+	writeb(0x0, HDMI_TX_GYDATA1);
+	writeb(0x0, HDMI_TX_RCRDATA0);
+	writeb(0x0, HDMI_TX_RCRDATA1);
+	writeb(0x0, HDMI_TX_BCBDATA0);
+	writeb(0x0, HDMI_TX_BCBDATA1);
+}
+
+/*!
+ * set HDMI color space conversion module.
+ */
+static void hdmi_video_csc(hdmi_data_info_s * hdmi)
+{
+	int color_depth = 0;
+	int interpolation = HDMI_CSC_CFG_INTMODE_DISABLE;
+	int decimation = 0;
+	u8 val;
+
+	/*YCC422 interpolation to 444 mode */
+	if (isColorSpaceInterpolation(hdmi) == TRUE) {
+		interpolation = HDMI_CSC_CFG_INTMODE_CHROMA_INT_FORMULA1;
+	} else if (isColorSpaceDecimation(hdmi) == TRUE) {
+		decimation = HDMI_CSC_CFG_DECMODE_CHROMA_INT_FORMULA3;
+	}
+
+	if (hdmi->enc_color_depth == 8) {
+		color_depth = HDMI_CSC_SCALE_CSC_COLORDE_PTH_24BPP;
+	} else if (hdmi->enc_color_depth == 10) {
+		color_depth = HDMI_CSC_SCALE_CSC_COLORDE_PTH_30BPP;
+	} else if (hdmi->enc_color_depth == 12) {
+		color_depth = HDMI_CSC_SCALE_CSC_COLORDE_PTH_36BPP;
+	} else if (hdmi->enc_color_depth == 16) {
+		color_depth = HDMI_CSC_SCALE_CSC_COLORDE_PTH_48BPP;
+	} else {
+		printf("Invalid color depth %d!!", hdmi->enc_color_depth);
+		return;
+	}
+
+	/*configure the CSC registers */
+	writeb(interpolation | decimation, HDMI_CSC_CFG);
+	val = readb(HDMI_CSC_SCALE);
+	val &= ~HDMI_CSC_SCALE_CSC_COLORDE_PTH_MASK;
+	val |= color_depth;
+	writeb(val, HDMI_CSC_SCALE);
+
+	update_csc_coeffs(hdmi);
+}
+
+/*!
+ * HDMI video packetizer is used to packetize the data.
+ * for example, if input is YCC422 mode or repeater is used, data should be repacked
+ * this module can be bypassed.
+ */
+static void hdmi_video_packetize(hdmi_data_info_s * hdmi)
+{
+	unsigned int color_depth = 0;
+	unsigned int remap_size = HDMI_VP_REMAP_YCC422_16bit;
+	unsigned int output_select = HDMI_VP_CONF_OUTPUT_SELECTOR_PP;
+	u8 val;
+
+	if (hdmi->enc_out_format == eRGB || hdmi->enc_out_format == eYCC444) {
+		if (hdmi->enc_color_depth == 0) {
+			output_select = HDMI_VP_CONF_OUTPUT_SELECTOR_BYPASS;
+		} else if (hdmi->enc_color_depth == 8) {
+			color_depth = 4;
+			output_select = HDMI_VP_CONF_OUTPUT_SELECTOR_BYPASS;
+		} else if (hdmi->enc_color_depth == 10) {
+			color_depth = 5;
+		} else if (hdmi->enc_color_depth == 12) {
+			color_depth = 6;
+		} else if (hdmi->enc_color_depth == 16) {
+			color_depth = 7;
+		} else {
+			printf("Invalid color depth %d!!\n", hdmi->enc_color_depth);
+			return;
+		}
+	} else if (hdmi->enc_out_format == eYCC422) {
+		if (hdmi->enc_color_depth == 0 || hdmi->enc_color_depth == 8) {
+			remap_size = HDMI_VP_REMAP_YCC422_16bit;
+		} else if (hdmi->enc_color_depth == 10) {
+			remap_size = HDMI_VP_REMAP_YCC422_20bit;
+		} else if (hdmi->enc_color_depth == 12) {
+			remap_size = HDMI_VP_REMAP_YCC422_24bit;
+		} else {
+			printf("Invalid color remap size %d!!\n", hdmi->enc_color_depth);
+			return;
+		}
+		output_select = HDMI_VP_CONF_OUTPUT_SELECTOR_YCC422;
+	} else {
+		printf("Invalid output encoding type %d!!\n", hdmi->enc_out_format);
+		return;
+	}
+
+	/* HDMI not support deep color,
+	 * because IPU MAX support color depth is 24bit */
+	color_depth = 0;
+
+	/* set the packetizer registers */
+	val = ((color_depth << HDMI_VP_PR_CD_COLOR_DEPTH_OFFSET) &
+		HDMI_VP_PR_CD_COLOR_DEPTH_MASK) |
+		((hdmi->pix_repet_factor <<
+		HDMI_VP_PR_CD_DESIRED_PR_FACTOR_OFFSET) &
+		HDMI_VP_PR_CD_DESIRED_PR_FACTOR_MASK);
+	writeb(val, HDMI_VP_PR_CD);
+
+	val = readb(HDMI_VP_STUFF);
+	val &= ~HDMI_VP_STUFF_PR_STUFFING_MASK;
+	val |= HDMI_VP_STUFF_PR_STUFFING_STUFFING_MODE;
+	writeb(val, HDMI_VP_STUFF);
+
+	/* Data from pixel repeater block */
+	if (hdmi->pix_repet_factor > 1) {
+		val = readb(HDMI_VP_CONF);
+		val &= ~(HDMI_VP_CONF_PR_EN_MASK |
+			HDMI_VP_CONF_BYPASS_SELECT_MASK);
+		val |= HDMI_VP_CONF_PR_EN_ENABLE |
+			HDMI_VP_CONF_BYPASS_SELECT_PIX_REPEATER;
+		writeb(val, HDMI_VP_CONF);
+	} else { /* data from packetizer block */
+		val = readb(HDMI_VP_CONF);
+		val &= ~(HDMI_VP_CONF_PR_EN_MASK |
+			HDMI_VP_CONF_BYPASS_SELECT_MASK);
+		val |= HDMI_VP_CONF_PR_EN_DISABLE |
+			HDMI_VP_CONF_BYPASS_SELECT_VID_PACKETIZER;
+		writeb(val, HDMI_VP_CONF);
+	}
+
+	val = readb(HDMI_VP_STUFF);
+	val &= ~HDMI_VP_STUFF_IDEFAULT_PHASE_MASK;
+	val |= 1 << HDMI_VP_STUFF_IDEFAULT_PHASE_OFFSET;
+	writeb(val, HDMI_VP_STUFF);
+
+	writeb(remap_size, HDMI_VP_REMAP);
+
+	if (output_select == HDMI_VP_CONF_OUTPUT_SELECTOR_PP) {
+		val = readb(HDMI_VP_CONF);
+		val &= ~(HDMI_VP_CONF_BYPASS_EN_MASK |
+			HDMI_VP_CONF_PP_EN_ENMASK |
+			HDMI_VP_CONF_YCC422_EN_MASK);
+		val |= HDMI_VP_CONF_BYPASS_EN_DISABLE |
+			HDMI_VP_CONF_PP_EN_ENABLE |
+			HDMI_VP_CONF_YCC422_EN_DISABLE;
+		writeb(val, HDMI_VP_CONF);
+	} else if (output_select == HDMI_VP_CONF_OUTPUT_SELECTOR_YCC422) {
+		val = readb(HDMI_VP_CONF);
+		val &= ~(HDMI_VP_CONF_BYPASS_EN_MASK |
+			HDMI_VP_CONF_PP_EN_ENMASK |
+			HDMI_VP_CONF_YCC422_EN_MASK);
+		val |= HDMI_VP_CONF_BYPASS_EN_DISABLE |
+			HDMI_VP_CONF_PP_EN_DISABLE |
+			HDMI_VP_CONF_YCC422_EN_ENABLE;
+		writeb(val, HDMI_VP_CONF);
+	} else if (output_select == HDMI_VP_CONF_OUTPUT_SELECTOR_BYPASS) {
+		val = readb(HDMI_VP_CONF);
+		val &= ~(HDMI_VP_CONF_BYPASS_EN_MASK |
+			HDMI_VP_CONF_PP_EN_ENMASK |
+			HDMI_VP_CONF_YCC422_EN_MASK);
+		val |= HDMI_VP_CONF_BYPASS_EN_ENABLE |
+			HDMI_VP_CONF_PP_EN_DISABLE |
+			HDMI_VP_CONF_YCC422_EN_DISABLE;
+		writeb(val, HDMI_VP_CONF);
+	} else {
+		return;
+	}
+
+	val = readb(HDMI_VP_STUFF);
+	val &= ~(HDMI_VP_STUFF_PP_STUFFING_MASK |
+		HDMI_VP_STUFF_YCC422_STUFFING_MASK);
+	val |= HDMI_VP_STUFF_PP_STUFFING_STUFFING_MODE |
+		HDMI_VP_STUFF_YCC422_STUFFING_STUFFING_MODE;
+	writeb(val, HDMI_VP_STUFF);
+
+	val = readb(HDMI_VP_CONF);
+	val &= ~HDMI_VP_CONF_OUTPUT_SELECTOR_MASK;
+	val |= output_select;
+	writeb(val, HDMI_VP_CONF);
+}
+
+/*!
+ * this submodule is responsible for the video/audio data composition.
+ */
+static void hdmi_set_video_mode(hdmi_data_info_s * hdmi)
+{
+	hdmi_vmode_s * vmode = &(hdmi->video_mode);
+
+	vmode->mHBorder = 0;
+	vmode->mVBorder = 0;
+	vmode->mPixelRepetitionInput = 0;
+	vmode->mHImageSize = 16;
+	vmode->mVImageSize = 9;
+
+	if ((vmode->mCode == 6) || (vmode->mCode == 7) ||
+		(vmode->mCode == 21) || (vmode->mCode == 22) ||
+		(vmode->mCode == 2) || (vmode->mCode == 3) ||
+		(vmode->mCode == 17) || (vmode->mCode == 18))
+		hdmi->colorimetry = eITU601;
+	else
+		hdmi->colorimetry = eITU709;
+
+	if ((vmode->mCode == 10) || (vmode->mCode == 11) ||
+		(vmode->mCode == 12) || (vmode->mCode == 13) ||
+		(vmode->mCode == 14) || (vmode->mCode == 15) ||
+		(vmode->mCode == 25) || (vmode->mCode == 26) ||
+		(vmode->mCode == 27) || (vmode->mCode == 28) ||
+		(vmode->mCode == 29) || (vmode->mCode == 30) ||
+		(vmode->mCode == 35) || (vmode->mCode == 36) ||
+		(vmode->mCode == 37) || (vmode->mCode == 38))
+		vmode->mPixelRepetitionOutput = 1;
+	else
+		vmode->mPixelRepetitionOutput = 0;
+
+	switch (vmode->mCode) {
+		case 1:                    //640x480p @ 59.94/60Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+			vmode->mHActive = 640;
+			vmode->mVActive = 480;
+			vmode->mHBlanking = 160;
+			vmode->mVBlanking = 45;
+			vmode->mHSyncOffset = 16;
+			vmode->mVSyncOffset = 10;
+			vmode->mHSyncPulseWidth = 96;
+			vmode->mVSyncPulseWidth = 2;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE; // not(progressive_nI)
+			vmode->mPixelClock = (vmode->mRefreshRate == 59940) ? 25170000 : 25200000;
+			break;
+		case 2:                    //720x480p @ 59.94/60Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 3:                    //720x480p @ 59.94/60Hz 16:9
+			vmode->mHActive = 720;
+			vmode->mVActive = 480;
+			vmode->mHBlanking = 138;
+			vmode->mVBlanking = 45;
+			vmode->mHSyncOffset = 16;
+			vmode->mVSyncOffset = 9;
+			vmode->mHSyncPulseWidth = 62;
+			vmode->mVSyncPulseWidth = 6;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 59940) ? 27000000 : 27020000;
+			break;
+		case 4:                    //1280x720p @ 59.94/60Hz 16:9
+			vmode->mHActive = 1280;
+			vmode->mVActive = 720;
+			vmode->mHBlanking = 370;
+			vmode->mVBlanking = 30;
+			vmode->mHSyncOffset = 110;
+			vmode->mVSyncOffset = 5;
+			vmode->mHSyncPulseWidth = 40;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 59940) ? 74170000 : 74250000;
+			break;
+		case 5:                    //1920x1080i @ 59.94/60Hz 16:9
+			vmode->mHActive = 1920;
+			vmode->mVActive = 540;
+			vmode->mHBlanking = 280;
+			vmode->mVBlanking = 22;
+			vmode->mHSyncOffset = 88;
+			vmode->mVSyncOffset = 2;
+			vmode->mHSyncPulseWidth = 44;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 59940) ? 74170000 : 74250000;
+			break;
+		case 6:                    //720(1440)x480i @ 59.94/60Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 7:                    //720(1440)x480i @ 59.94/60Hz 16:9
+			vmode->mHActive = 1440;
+			vmode->mVActive = 240;
+			vmode->mHBlanking = 276;
+			vmode->mVBlanking = 22;
+			vmode->mHSyncOffset = 38;
+			vmode->mVSyncOffset = 4;
+			vmode->mHSyncPulseWidth = 124;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 59940) ? 27000000 : 27020000;
+			vmode->mPixelRepetitionInput = 1;
+			break;
+		case 8:                    //720(1440)x240p @ 59.826/60.054/59.886/60.115Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 9:                    //720(1440)x240p @ 59.826/60.054/59.886/60.115Hz 16:9
+			vmode->mHActive = 1440;
+			vmode->mVActive = 240;
+			vmode->mHBlanking = 276;
+			vmode->mVBlanking = (vmode->mRefreshRate > 60000) ? 22 : 23;
+			vmode->mHSyncOffset = 38;
+			vmode->mVSyncOffset = (vmode->mRefreshRate > 60000) ? 4 : 5;
+			vmode->mHSyncPulseWidth = 124;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = ((vmode->mRefreshRate == 60054) || vmode->mRefreshRate == 59826) ? 27000000 : 27020000;    // else 60.115/59.886 Hz
+			vmode->mPixelRepetitionInput = 1;
+			break;
+		case 10:                   //2880x480i @ 59.94/60Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 11:                   //2880x480i @ 59.94/60Hz 16:9
+			vmode->mHActive = 2880;
+			vmode->mVActive = 240;
+			vmode->mHBlanking = 552;
+			vmode->mVBlanking = 22;
+			vmode->mHSyncOffset = 76;
+			vmode->mVSyncOffset = 4;
+			vmode->mHSyncPulseWidth = 248;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 59940) ? 54000000 : 54050000;
+			break;
+		case 12:                   //2880x240p @ 59.826/60.054/59.886/60.115Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 13:                   //2880x240p @ 59.826/60.054/59.886/60.115Hz 16:9
+			vmode->mHActive = 2880;
+			vmode->mVActive = 240;
+			vmode->mHBlanking = 552;
+			vmode->mVBlanking = (vmode->mRefreshRate > 60000) ? 22 : 23;
+			vmode->mHSyncOffset = 76;
+			vmode->mVSyncOffset = (vmode->mRefreshRate > 60000) ? 4 : 5;
+			vmode->mHSyncPulseWidth = 248;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = ((vmode->mRefreshRate == 60054) || vmode->mRefreshRate == 59826) ? 54000000 : 54050000;    // else 60.115/59.886 Hz
+			break;
+		case 14:                   //1440x480p @ 59.94/60Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 15:                   //1440x480p @ 59.94/60Hz 16:9
+			vmode->mHActive = 1440;
+			vmode->mVActive = 480;
+			vmode->mHBlanking = 276;
+			vmode->mVBlanking = 45;
+			vmode->mHSyncOffset = 32;
+			vmode->mVSyncOffset = 9;
+			vmode->mHSyncPulseWidth = 124;
+			vmode->mVSyncPulseWidth = 6;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 59940) ? 54000000 : 54050000;
+			break;
+		case 16:                   //1920x1080p @ 59.94/60Hz 16:9
+			vmode->mHActive = 1920;
+			vmode->mVActive = 1080;
+			vmode->mHBlanking = 280;
+			vmode->mVBlanking = 45;
+			vmode->mHSyncOffset = 88;
+			vmode->mVSyncOffset = 4;
+			vmode->mHSyncPulseWidth = 44;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 59940) ? 148350000 : 148500000;
+			break;
+		case 17:                   //720x576p @ 50Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 18:                   //720x576p @ 50Hz 16:9
+			vmode->mHActive = 720;
+			vmode->mVActive = 576;
+			vmode->mHBlanking = 144;
+			vmode->mVBlanking = 49;
+			vmode->mHSyncOffset = 12;
+			vmode->mVSyncOffset = 5;
+			vmode->mHSyncPulseWidth = 64;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = 27000000;
+			break;
+		case 19:                   //1280x720p @ 50Hz 16:9
+			vmode->mHActive = 1280;
+			vmode->mVActive = 720;
+			vmode->mHBlanking = 700;
+			vmode->mVBlanking = 30;
+			vmode->mHSyncOffset = 440;
+			vmode->mVSyncOffset = 5;
+			vmode->mHSyncPulseWidth = 40;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = 74250000;
+			break;
+		case 20:                   //1920x1080i @ 50Hz 16:9
+			vmode->mHActive = 1920;
+			vmode->mVActive = 540;
+			vmode->mHBlanking = 720;
+			vmode->mVBlanking = 22;
+			vmode->mHSyncOffset = 528;
+			vmode->mVSyncOffset = 2;
+			vmode->mHSyncPulseWidth = 44;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = 74250000;
+			break;
+		case 21:                   //720(1440)x576i @ 50Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 22:                   //720(1440)x576i @ 50Hz 16:9
+			vmode->mHActive = 1440;
+			vmode->mVActive = 288;
+			vmode->mHBlanking = 288;
+			vmode->mVBlanking = 24;
+			vmode->mHSyncOffset = 24;
+			vmode->mVSyncOffset = 2;
+			vmode->mHSyncPulseWidth = 126;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = 27000000;
+			vmode->mPixelRepetitionInput = 1;
+			break;
+		case 23:                   //720(1440)x288p @ 50Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 24:                   //720(1440)x288p @ 50Hz 16:9
+			vmode->mHActive = 1440;
+			vmode->mVActive = 288;
+			vmode->mHBlanking = 288;
+			vmode->mVBlanking = 	(vmode->mRefreshRate == 50080) ? 24 : ((vmode->mRefreshRate == 49920) ? 25 : 26);
+			vmode->mHSyncOffset = 24;
+			vmode->mVSyncOffset = (vmode->mRefreshRate == 50080) ? 2 : ((vmode->mRefreshRate == 49920) ? 3 : 4);
+			vmode->mHSyncPulseWidth = 126;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = 27000000;
+			vmode->mPixelRepetitionInput = 1;
+			break;
+		case 25:                   //2880x576i @ 50Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 26:                   //2880x576i @ 50Hz 16:9
+			vmode->mHActive = 2880;
+			vmode->mVActive = 288;
+			vmode->mHBlanking = 576;
+			vmode->mVBlanking = 24;
+			vmode->mHSyncOffset = 48;
+			vmode->mVSyncOffset = 2;
+			vmode->mHSyncPulseWidth = 252;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = 54000000;
+			break;
+		case 27:                   //2880x288p @ 50Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 28:                   //2880x288p @ 50Hz 16:9
+			vmode->mHActive = 2880;
+			vmode->mVActive = 288;
+			vmode->mHBlanking = 576;
+			vmode->mVBlanking = (vmode->mRefreshRate == 50080) ? 24 : ((vmode->mRefreshRate == 49920) ? 25 : 26);
+			vmode->mHSyncOffset = 48;
+			vmode->mVSyncOffset = (vmode->mRefreshRate == 50080) ? 2 : ((vmode->mRefreshRate == 49920) ? 3 : 4);
+			vmode->mHSyncPulseWidth = 252;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = 54000000;
+			break;
+		case 29:                   //1440x576p @ 50Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 30:                   //1440x576p @ 50Hz 16:9
+			vmode->mHActive = 1440;
+			vmode->mVActive = 576;
+			vmode->mHBlanking = 288;
+			vmode->mVBlanking = 49;
+			vmode->mHSyncOffset = 24;
+			vmode->mVSyncOffset = 5;
+			vmode->mHSyncPulseWidth = 128;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = 54000000;
+			break;
+		case 31:                   //1920x1080p @ 50Hz 16:9
+			vmode->mHActive = 1920;
+			vmode->mVActive = 1080;
+			vmode->mHBlanking = 720;
+			vmode->mVBlanking = 45;
+			vmode->mHSyncOffset = 528;
+			vmode->mVSyncOffset = 4;
+			vmode->mHSyncPulseWidth = 44;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = 148500000;
+			break;
+		case 32:                   //1920x1080p @ 23.976/24Hz 16:9
+			vmode->mHActive = 1920;
+			vmode->mVActive = 1080;
+			vmode->mHBlanking = 830;
+			vmode->mVBlanking = 45;
+			vmode->mHSyncOffset = 638;
+			vmode->mVSyncOffset = 4;
+			vmode->mHSyncPulseWidth = 44;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 23976) ? 74170000 : 74250000;
+			break;
+		case 33:                   //1920x1080p @ 25Hz 16:9
+			vmode->mHActive = 1920;
+			vmode->mVActive = 1080;
+			vmode->mHBlanking = 720;
+			vmode->mVBlanking = 45;
+			vmode->mHSyncOffset = 528;
+			vmode->mVSyncOffset = 4;
+			vmode->mHSyncPulseWidth = 44;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = 74250000;
+			break;
+		case 34:                   //1920x1080p @ 29.97/30Hz 16:9
+			vmode->mHActive = 1920;
+			vmode->mVActive = 1080;
+			vmode->mHBlanking = 280;
+			vmode->mVBlanking = 45;
+			vmode->mHSyncOffset = 88;
+			vmode->mVSyncOffset = 4;
+			vmode->mHSyncPulseWidth = 44;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 29970) ? 74170000 : 74250000;
+			break;
+		case 35:                   //2880x480p @ 60Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 36:                   //2880x480p @ 60Hz 16:9
+			vmode->mHActive = 2880;
+			vmode->mVActive = 480;
+			vmode->mHBlanking = 552;
+			vmode->mVBlanking = 45;
+			vmode->mHSyncOffset = 64;
+			vmode->mVSyncOffset = 9;
+			vmode->mHSyncPulseWidth = 248;
+			vmode->mVSyncPulseWidth = 6;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 59940) ? 108000000 : 108100000;
+			break;
+		case 37:                   //2880x576p @ 50Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 38:                   //2880x576p @ 50Hz 16:9
+			vmode->mHActive = 2880;
+			vmode->mVActive = 576;
+			vmode->mHBlanking = 576;
+			vmode->mVBlanking = 49;
+			vmode->mHSyncOffset = 48;
+			vmode->mVSyncOffset = 5;
+			vmode->mHSyncPulseWidth = 256;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = 108000000;
+			break;
+		case 39:                   //1920x1080i (1250 total) @ 50Hz 16:9
+			vmode->mHActive = 1920;
+			vmode->mVActive = 540;
+			vmode->mHBlanking = 384;
+			vmode->mVBlanking = 85;
+			vmode->mHSyncOffset = 32;
+			vmode->mVSyncOffset = 23;
+			vmode->mHSyncPulseWidth = 168;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = 72000000;
+			break;
+		case 40:                   //1920x1080i @ 100Hz 16:9
+			vmode->mHActive = 1920;
+			vmode->mVActive = 540;
+			vmode->mHBlanking = 720;
+			vmode->mVBlanking = 22;
+			vmode->mHSyncOffset = 528;
+			vmode->mVSyncOffset = 2;
+			vmode->mHSyncPulseWidth = 44;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = 148500000;
+			break;
+		case 41:                   //1280x720p @ 100Hz 16:9
+			vmode->mHActive = 1280;
+			vmode->mVActive = 720;
+			vmode->mHBlanking = 700;
+			vmode->mVBlanking = 30;
+			vmode->mHSyncOffset = 440;
+			vmode->mVSyncOffset = 5;
+			vmode->mHSyncPulseWidth = 40;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = 148500000;
+			break;
+		case 42:                   //720x576p @ 100Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 43:                   //720x576p @ 100Hz 16:9
+			vmode->mHActive = 720;
+			vmode->mVActive = 576;
+			vmode->mHBlanking = 144;
+			vmode->mVBlanking = 49;
+			vmode->mHSyncOffset = 12;
+			vmode->mVSyncOffset = 5;
+			vmode->mHSyncPulseWidth = 64;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = 54000000;
+			break;
+		case 44:                   //720(1440)x576i @ 100Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 45:                   //720(1440)x576i @ 100Hz 16:9
+			vmode->mHActive = 1440;
+			vmode->mVActive = 288;
+			vmode->mHBlanking = 288;
+			vmode->mVBlanking = 24;
+			vmode->mHSyncOffset = 24;
+			vmode->mVSyncOffset = 2;
+			vmode->mHSyncPulseWidth = 126;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = 54000000;
+			vmode->mPixelRepetitionInput = 1;
+			break;
+		case 46:                   //1920x1080i @ 119.88/120Hz 16:9
+			vmode->mHActive = 1920;
+			vmode->mVActive = 540;
+			vmode->mHBlanking = 288;
+			vmode->mVBlanking = 22;
+			vmode->mHSyncOffset = 88;
+			vmode->mVSyncOffset = 2;
+			vmode->mHSyncPulseWidth = 44;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 119880) ? 148350000 : 148500000;
+			break;
+		case 47:                   //1280x720p @ 119.88/120Hz 16:9
+			vmode->mHActive = 1280;
+			vmode->mVActive = 720;
+			vmode->mHBlanking = 370;
+			vmode->mVBlanking = 30;
+			vmode->mHSyncOffset = 110;
+			vmode->mVSyncOffset = 5;
+			vmode->mHSyncPulseWidth = 40;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = TRUE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 119880) ? 148350000 : 148500000;
+			break;
+		case 48:                   //720x480p @ 119.88/120Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 49:                   //720x480p @ 119.88/120Hz 16:9
+			vmode->mHActive = 720;
+			vmode->mVActive = 480;
+			vmode->mHBlanking = 138;
+			vmode->mVBlanking = 45;
+			vmode->mHSyncOffset = 16;
+			vmode->mVSyncOffset = 9;
+			vmode->mHSyncPulseWidth = 62;
+			vmode->mVSyncPulseWidth = 6;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 119880) ? 54000000 : 54050000;
+			break;
+		case 50:                   //720(1440)x480i @ 119.88/120Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 51:                   //720(1440)x480i @ 119.88/120Hz 16:9
+			vmode->mHActive = 1440;
+			vmode->mVActive = 240;
+			vmode->mHBlanking = 276;
+			vmode->mVBlanking = 22;
+			vmode->mHSyncOffset = 38;
+			vmode->mVSyncOffset = 4;
+			vmode->mHSyncPulseWidth = 124;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 119880) ? 54000000 : 54050000;
+			vmode->mPixelRepetitionInput = 1;
+			break;
+		case 52:                   //720X576p @ 200Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 53:                   //720X576p @ 200Hz 16:9
+			vmode->mHActive = 720;
+			vmode->mVActive = 576;
+			vmode->mHBlanking = 144;
+			vmode->mVBlanking = 49;
+			vmode->mHSyncOffset = 12;
+			vmode->mVSyncOffset = 5;
+			vmode->mHSyncPulseWidth = 64;
+			vmode->mVSyncPulseWidth = 5;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = 108000000;
+			break;
+		case 54:                   //720(1440)x576i @ 200Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 55:                   //720(1440)x576i @ 200Hz 16:9
+			vmode->mHActive = 1440;
+			vmode->mVActive = 288;
+			vmode->mHBlanking = 288;
+			vmode->mVBlanking = 24;
+			vmode->mHSyncOffset = 24;
+			vmode->mVSyncOffset = 2;
+			vmode->mHSyncPulseWidth = 126;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = 108000000;
+			vmode->mPixelRepetitionInput = 1;
+			break;
+		case 56:                   //720x480p @ 239.76/240Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 57:                   //720x480p @ 239.76/240Hz 16:9
+			vmode->mHActive = 720;
+			vmode->mVActive = 480;
+			vmode->mHBlanking = 138;
+			vmode->mVBlanking = 45;
+			vmode->mHSyncOffset = 16;
+			vmode->mVSyncOffset = 9;
+			vmode->mHSyncPulseWidth = 62;
+			vmode->mVSyncPulseWidth = 6;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = FALSE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 239760) ? 108000000 : 108100000;
+			break;
+		case 58:                   //720(1440)x480i @ 239.76/240Hz 4:3
+			vmode->mHImageSize = 4;
+			vmode->mVImageSize = 3;
+		case 59:                   //720(1440)x480i @ 239.76/240Hz 16:9
+			vmode->mHActive = 1440;
+			vmode->mVActive = 240;
+			vmode->mHBlanking = 276;
+			vmode->mVBlanking = 22;
+			vmode->mHSyncOffset = 38;
+			vmode->mVSyncOffset = 4;
+			vmode->mHSyncPulseWidth = 124;
+			vmode->mVSyncPulseWidth = 3;
+			vmode->mHSyncPolarity = vmode->mVSyncPolarity = FALSE;
+			vmode->mInterlaced = TRUE;
+			vmode->mPixelClock = (vmode->mRefreshRate == 239760) ? 108000000 : 108100000;
+			vmode->mPixelRepetitionInput = 1;
+			break;
+		default:
+			vmode->mCode = -1;
+			printf("invalid code\n");
+			break;
+	}
+}
+
+/*!
+ * HDMI display enable.
+ */
+void hdmi_display_enable(unsigned int mCode)
+{
+	hdmi_instance.enc_in_format = eRGB;
+	hdmi_instance.enc_out_format = eRGB;
+	hdmi_instance.enc_color_depth = 8;
+	hdmi_instance.pix_repet_factor = 0;
+	hdmi_instance.hdcp_enable = 0;
+	hdmi_instance.video_mode.mCode = mCode;
+	hdmi_instance.video_mode.mDVI = FALSE;
+	hdmi_instance.video_mode.mRefreshRate = 60000;
+	hdmi_instance.video_mode.mDataEnablePolarity = TRUE;
+
+	hdmi_set_video_mode(&hdmi_instance);
+	hdmi_av_composer(&hdmi_instance);
+	hdmi_phy_init(&hdmi_instance);
+	hdmi_enable_video_path(&hdmi_instance);
+	hdmi_enable_audio_clk(&hdmi_instance, FALSE);
+	hdmi_audio_mute(&hdmi_instance, TRUE);
+	hdmi_config_AVI(&hdmi_instance);
+	hdmi_video_packetize(&hdmi_instance);
+	hdmi_video_csc(&hdmi_instance);
+	hdmi_video_sample(&hdmi_instance);
+	hdmi_tx_hdcp_config(&hdmi_instance);
+}
+
diff --git a/drivers/video/mxc_hdmi.h b/drivers/video/mxc_hdmi.h
new file mode 100755
index 0000000..6e02cba
--- /dev/null
+++ b/drivers/video/mxc_hdmi.h
@@ -0,0 +1,1140 @@
+/*
+ * Copyright (C) 2012 Freescale Semiconductor, Inc.
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+
+#ifndef __MXC_HDMI_H__
+#define __MXC_HDMI_H__
+
+//
+// Hdmi controller registers 
+//
+
+// Identification Registers
+#define HDMI_DESIGN_ID              HDMI_ARB_BASE_ADDR+0x0000
+#define HDMI_REVISION_ID            HDMI_ARB_BASE_ADDR+0x0001
+#define HDMI_PRODUCT_ID0            HDMI_ARB_BASE_ADDR+0x0002
+#define HDMI_PRODUCT_ID1            HDMI_ARB_BASE_ADDR+0x0003
+#define HDMI_CONFIG0_ID             HDMI_ARB_BASE_ADDR+0x0004
+#define HDMI_CONFIG1_ID             HDMI_ARB_BASE_ADDR+0x0005
+#define HDMI_CONFIG2_ID             HDMI_ARB_BASE_ADDR+0x0006
+#define HDMI_CONFIG3_ID             HDMI_ARB_BASE_ADDR+0x0007
+
+// Interrupt Registers
+#define HDMI_IH_FC_STAT0            HDMI_ARB_BASE_ADDR+0x0100
+#define HDMI_IH_FC_STAT1            HDMI_ARB_BASE_ADDR+0x0101
+#define HDMI_IH_FC_STAT2            HDMI_ARB_BASE_ADDR+0x0102
+#define HDMI_IH_AS_STAT0            HDMI_ARB_BASE_ADDR+0x0103
+#define HDMI_IH_PHY_STAT0           HDMI_ARB_BASE_ADDR+0x0104
+#define HDMI_IH_I2CM_STAT0          HDMI_ARB_BASE_ADDR+0x0105
+#define HDMI_IH_CEC_STAT0           HDMI_ARB_BASE_ADDR+0x0106
+#define HDMI_IH_VP_STAT0            HDMI_ARB_BASE_ADDR+0x0107
+#define HDMI_IH_I2CMPHY_STAT0       HDMI_ARB_BASE_ADDR+0x0108
+#define HDMI_IH_AHBDMAAUD_STAT0     HDMI_ARB_BASE_ADDR+0x0180
+#define HDMI_IH_MUTE_FC_STAT1       HDMI_ARB_BASE_ADDR+0x0181
+#define HDMI_IH_MUTE_FC_STAT2       HDMI_ARB_BASE_ADDR+0x0182
+#define HDMI_IH_MUTE_AS_STAT0       HDMI_ARB_BASE_ADDR+0x0183
+#define HDMI_IH_MUTE_PHY_STAT0      HDMI_ARB_BASE_ADDR+0x0184
+#define HDMI_IH_MUTE_I2CM_STAT0     HDMI_ARB_BASE_ADDR+0x0185
+#define HDMI_IH_MUTE_CEC_STAT0      HDMI_ARB_BASE_ADDR+0x0186
+#define HDMI_IH_MUTE_VP_STAT0       HDMI_ARB_BASE_ADDR+0x0187
+#define HDMI_IH_MUTE_I2CMPHY_STAT0  HDMI_ARB_BASE_ADDR+0x0188
+#define HDMI_IH_MUTE_AHBDMAAUD_STAT0  HDMI_ARB_BASE_ADDR+0x0189
+#define HDMI_IH_MUTE                HDMI_ARB_BASE_ADDR+0x01FF
+
+// Video Sample Registers
+#define HDMI_TX_INVID0              HDMI_ARB_BASE_ADDR+0x0200
+#define HDMI_TX_INSTUFFING          HDMI_ARB_BASE_ADDR+0x0201
+#define HDMI_TX_GYDATA0             HDMI_ARB_BASE_ADDR+0x0202
+#define HDMI_TX_GYDATA1             HDMI_ARB_BASE_ADDR+0x0203
+#define HDMI_TX_RCRDATA0            HDMI_ARB_BASE_ADDR+0x0204
+#define HDMI_TX_RCRDATA1            HDMI_ARB_BASE_ADDR+0x0205
+#define HDMI_TX_BCBDATA0            HDMI_ARB_BASE_ADDR+0x0206
+#define HDMI_TX_BCBDATA1            HDMI_ARB_BASE_ADDR+0x0207
+
+// Video Packetizer Registers
+#define HDMI_VP_STATUS              HDMI_ARB_BASE_ADDR+0x0800
+#define HDMI_VP_PR_CD               HDMI_ARB_BASE_ADDR+0x0801
+#define HDMI_VP_STUFF               HDMI_ARB_BASE_ADDR+0x0802
+#define HDMI_VP_REMAP               HDMI_ARB_BASE_ADDR+0x0803
+#define HDMI_VP_CONF                HDMI_ARB_BASE_ADDR+0x0804
+#define HDMI_VP_STAT                HDMI_ARB_BASE_ADDR+0x0805
+#define HDMI_VP_INT                 HDMI_ARB_BASE_ADDR+0x0806
+#define HDMI_VP_MASK                HDMI_ARB_BASE_ADDR+0x0807
+#define HDMI_VP_POL                 HDMI_ARB_BASE_ADDR+0x0808
+
+// Frame Composer Registers
+#define HDMI_FC_INVIDCONF           HDMI_ARB_BASE_ADDR+0x1000
+#define HDMI_FC_INHACTV0            HDMI_ARB_BASE_ADDR+0x1001
+#define HDMI_FC_INHACTV1            HDMI_ARB_BASE_ADDR+0x1002
+#define HDMI_FC_INHBLANK0           HDMI_ARB_BASE_ADDR+0x1003
+#define HDMI_FC_INHBLANK1           HDMI_ARB_BASE_ADDR+0x1004
+#define HDMI_FC_INVACTV0            HDMI_ARB_BASE_ADDR+0x1005
+#define HDMI_FC_INVACTV1            HDMI_ARB_BASE_ADDR+0x1006
+#define HDMI_FC_INVBLANK            HDMI_ARB_BASE_ADDR+0x1007
+#define HDMI_FC_HSYNCINDELAY0       HDMI_ARB_BASE_ADDR+0x1008
+#define HDMI_FC_HSYNCINDELAY1       HDMI_ARB_BASE_ADDR+0x1009
+#define HDMI_FC_HSYNCINWIDTH0       HDMI_ARB_BASE_ADDR+0x100A
+#define HDMI_FC_HSYNCINWIDTH1       HDMI_ARB_BASE_ADDR+0x100B
+#define HDMI_FC_VSYNCINDELAY        HDMI_ARB_BASE_ADDR+0x100C
+#define HDMI_FC_VSYNCINWIDTH        HDMI_ARB_BASE_ADDR+0x100D
+#define HDMI_FC_INFREQ0             HDMI_ARB_BASE_ADDR+0x100E
+#define HDMI_FC_INFREQ1             HDMI_ARB_BASE_ADDR+0x100F
+#define HDMI_FC_INFREQ2             HDMI_ARB_BASE_ADDR+0x1010
+#define HDMI_FC_CTRLDUR             HDMI_ARB_BASE_ADDR+0x1011
+#define HDMI_FC_EXCTRLDUR           HDMI_ARB_BASE_ADDR+0x1012
+#define HDMI_FC_EXCTRLSPAC          HDMI_ARB_BASE_ADDR+0x1013
+#define HDMI_FC_CH0PREAM            HDMI_ARB_BASE_ADDR+0x1014
+#define HDMI_FC_CH1PREAM            HDMI_ARB_BASE_ADDR+0x1015
+#define HDMI_FC_CH2PREAM            HDMI_ARB_BASE_ADDR+0x1016
+#define HDMI_FC_AVICONF3            HDMI_ARB_BASE_ADDR+0x1017
+#define HDMI_FC_GCP                 HDMI_ARB_BASE_ADDR+0x1018
+#define HDMI_FC_AVICONF0            HDMI_ARB_BASE_ADDR+0x1019
+#define HDMI_FC_AVICONF1            HDMI_ARB_BASE_ADDR+0x101A
+#define HDMI_FC_AVICONF2            HDMI_ARB_BASE_ADDR+0x101B
+#define HDMI_FC_AVIVID              HDMI_ARB_BASE_ADDR+0x101C
+#define HDMI_FC_AVIETB0             HDMI_ARB_BASE_ADDR+0x101D
+#define HDMI_FC_AVIETB1             HDMI_ARB_BASE_ADDR+0x101E
+#define HDMI_FC_AVISBB0             HDMI_ARB_BASE_ADDR+0x101F
+#define HDMI_FC_AVISBB1             HDMI_ARB_BASE_ADDR+0x1020
+#define HDMI_FC_AVIELB0             HDMI_ARB_BASE_ADDR+0x1021
+#define HDMI_FC_AVIELB1             HDMI_ARB_BASE_ADDR+0x1022
+#define HDMI_FC_AVISRB0             HDMI_ARB_BASE_ADDR+0x1023
+#define HDMI_FC_AVISRB1             HDMI_ARB_BASE_ADDR+0x1024
+#define HDMI_FC_AUDICONF0           HDMI_ARB_BASE_ADDR+0x1025
+#define HDMI_FC_AUDICONF1           HDMI_ARB_BASE_ADDR+0x1026
+#define HDMI_FC_AUDICONF2           HDMI_ARB_BASE_ADDR+0x1027
+#define HDMI_FC_AUDICONF3           HDMI_ARB_BASE_ADDR+0x1028
+#define HDMI_FC_VSDIEEEID0          HDMI_ARB_BASE_ADDR+0x1029
+#define HDMI_FC_VSDSIZE             HDMI_ARB_BASE_ADDR+0x102A
+#define HDMI_FC_VSDIEEEID1          HDMI_ARB_BASE_ADDR+0x1030
+#define HDMI_FC_VSDIEEEID2          HDMI_ARB_BASE_ADDR+0x1031
+#define HDMI_FC_VSDPAYLOAD0         HDMI_ARB_BASE_ADDR+0x1032
+#define HDMI_FC_VSDPAYLOAD1         HDMI_ARB_BASE_ADDR+0x1033
+#define HDMI_FC_VSDPAYLOAD2         HDMI_ARB_BASE_ADDR+0x1034
+#define HDMI_FC_VSDPAYLOAD3         HDMI_ARB_BASE_ADDR+0x1035
+#define HDMI_FC_VSDPAYLOAD4         HDMI_ARB_BASE_ADDR+0x1036
+#define HDMI_FC_VSDPAYLOAD5         HDMI_ARB_BASE_ADDR+0x1037
+#define HDMI_FC_VSDPAYLOAD6         HDMI_ARB_BASE_ADDR+0x1038
+#define HDMI_FC_VSDPAYLOAD7         HDMI_ARB_BASE_ADDR+0x1039
+#define HDMI_FC_VSDPAYLOAD8         HDMI_ARB_BASE_ADDR+0x103A
+#define HDMI_FC_VSDPAYLOAD9         HDMI_ARB_BASE_ADDR+0x103B
+#define HDMI_FC_VSDPAYLOAD10        HDMI_ARB_BASE_ADDR+0x103C
+#define HDMI_FC_VSDPAYLOAD11        HDMI_ARB_BASE_ADDR+0x103D
+#define HDMI_FC_VSDPAYLOAD12        HDMI_ARB_BASE_ADDR+0x103E
+#define HDMI_FC_VSDPAYLOAD13        HDMI_ARB_BASE_ADDR+0x103F
+#define HDMI_FC_VSDPAYLOAD14        HDMI_ARB_BASE_ADDR+0x1040
+#define HDMI_FC_VSDPAYLOAD15        HDMI_ARB_BASE_ADDR+0x1041
+#define HDMI_FC_VSDPAYLOAD16        HDMI_ARB_BASE_ADDR+0x1042
+#define HDMI_FC_VSDPAYLOAD17        HDMI_ARB_BASE_ADDR+0x1043
+#define HDMI_FC_VSDPAYLOAD18        HDMI_ARB_BASE_ADDR+0x1044
+#define HDMI_FC_VSDPAYLOAD19        HDMI_ARB_BASE_ADDR+0x1045
+#define HDMI_FC_VSDPAYLOAD20        HDMI_ARB_BASE_ADDR+0x1046
+#define HDMI_FC_VSDPAYLOAD21        HDMI_ARB_BASE_ADDR+0x1047
+#define HDMI_FC_VSDPAYLOAD22        HDMI_ARB_BASE_ADDR+0x1048
+#define HDMI_FC_VSDPAYLOAD23        HDMI_ARB_BASE_ADDR+0x1049
+#define HDMI_FC_SPDVENDORNAME0      HDMI_ARB_BASE_ADDR+0x104A
+#define HDMI_FC_SPDVENDORNAME1      HDMI_ARB_BASE_ADDR+0x104B
+#define HDMI_FC_SPDVENDORNAME2      HDMI_ARB_BASE_ADDR+0x104C
+#define HDMI_FC_SPDVENDORNAME3      HDMI_ARB_BASE_ADDR+0x104D
+#define HDMI_FC_SPDVENDORNAME4      HDMI_ARB_BASE_ADDR+0x104E
+#define HDMI_FC_SPDVENDORNAME5      HDMI_ARB_BASE_ADDR+0x104F
+#define HDMI_FC_SPDVENDORNAME6      HDMI_ARB_BASE_ADDR+0x1050
+#define HDMI_FC_SPDVENDORNAME7      HDMI_ARB_BASE_ADDR+0x1051
+#define HDMI_FC_SDPPRODUCTNAME0     HDMI_ARB_BASE_ADDR+0x1052
+#define HDMI_FC_SDPPRODUCTNAME1     HDMI_ARB_BASE_ADDR+0x1053
+#define HDMI_FC_SDPPRODUCTNAME2     HDMI_ARB_BASE_ADDR+0x1054
+#define HDMI_FC_SDPPRODUCTNAME3     HDMI_ARB_BASE_ADDR+0x1055
+#define HDMI_FC_SDPPRODUCTNAME4     HDMI_ARB_BASE_ADDR+0x1056
+#define HDMI_FC_SDPPRODUCTNAME5     HDMI_ARB_BASE_ADDR+0x1057
+#define HDMI_FC_SDPPRODUCTNAME6     HDMI_ARB_BASE_ADDR+0x1058
+#define HDMI_FC_SDPPRODUCTNAME7     HDMI_ARB_BASE_ADDR+0x1059
+#define HDMI_FC_SDPPRODUCTNAME8     HDMI_ARB_BASE_ADDR+0x105A
+#define HDMI_FC_SDPPRODUCTNAME9     HDMI_ARB_BASE_ADDR+0x105B
+#define HDMI_FC_SDPPRODUCTNAME10    HDMI_ARB_BASE_ADDR+0x105C
+#define HDMI_FC_SDPPRODUCTNAME11    HDMI_ARB_BASE_ADDR+0x105D
+#define HDMI_FC_SDPPRODUCTNAME12    HDMI_ARB_BASE_ADDR+0x105E
+#define HDMI_FC_SDPPRODUCTNAME13    HDMI_ARB_BASE_ADDR+0x105F
+#define HDMI_FC_SDPPRODUCTNAME14    HDMI_ARB_BASE_ADDR+0x1060
+#define HDMI_FC_SPDPRODUCTNAME15    HDMI_ARB_BASE_ADDR+0x1061
+#define HDMI_FC_SPDDEVICEINF        HDMI_ARB_BASE_ADDR+0x1062
+#define HDMI_FC_AUDSCONF            HDMI_ARB_BASE_ADDR+0x1063
+#define HDMI_FC_AUDSSTAT            HDMI_ARB_BASE_ADDR+0x1064
+#define HDMI_FC_AUDSV               HDMI_ARB_BASE_ADDR+0x1065
+#define HDMI_FC_AUDSU               HDMI_ARB_BASE_ADDR+0x1066
+#define HDMI_FC_AUDSCHNLS0          HDMI_ARB_BASE_ADDR+0x1067
+#define HDMI_FC_AUDSCHNLS1          HDMI_ARB_BASE_ADDR+0x1068
+#define HDMI_FC_AUDSCHNLS2          HDMI_ARB_BASE_ADDR+0x1069
+#define HDMI_FC_AUDSCHNLS3          HDMI_ARB_BASE_ADDR+0x106A
+#define HDMI_FC_AUDSCHNLS4          HDMI_ARB_BASE_ADDR+0x106B
+#define HDMI_FC_AUDSCHNLS5          HDMI_ARB_BASE_ADDR+0x106C
+#define HDMI_FC_AUDSCHNLS6          HDMI_ARB_BASE_ADDR+0x106D
+#define HDMI_FC_AUDSCHNLS7          HDMI_ARB_BASE_ADDR+0x106E
+#define HDMI_FC_AUDSCHNLS8          HDMI_ARB_BASE_ADDR+0x106F
+#define HDMI_FC_DATACH0FILL         HDMI_ARB_BASE_ADDR+0x1070
+#define HDMI_FC_DATACH1FILL         HDMI_ARB_BASE_ADDR+0x1071
+#define HDMI_FC_DATACH2FILL         HDMI_ARB_BASE_ADDR+0x1072
+#define HDMI_FC_CTRLQHIGH           HDMI_ARB_BASE_ADDR+0x1073
+#define HDMI_FC_CTRLQLOW            HDMI_ARB_BASE_ADDR+0x1074
+#define HDMI_FC_ACP0                HDMI_ARB_BASE_ADDR+0x1075
+#define HDMI_FC_ACP28               HDMI_ARB_BASE_ADDR+0x1076
+#define HDMI_FC_ACP27               HDMI_ARB_BASE_ADDR+0x1077
+#define HDMI_FC_ACP26               HDMI_ARB_BASE_ADDR+0x1078
+#define HDMI_FC_ACP25               HDMI_ARB_BASE_ADDR+0x1079
+#define HDMI_FC_ACP24               HDMI_ARB_BASE_ADDR+0x107A
+#define HDMI_FC_ACP23               HDMI_ARB_BASE_ADDR+0x107B
+#define HDMI_FC_ACP22               HDMI_ARB_BASE_ADDR+0x107C
+#define HDMI_FC_ACP21               HDMI_ARB_BASE_ADDR+0x107D
+#define HDMI_FC_ACP20               HDMI_ARB_BASE_ADDR+0x107E
+#define HDMI_FC_ACP19               HDMI_ARB_BASE_ADDR+0x107F
+#define HDMI_FC_ACP18               HDMI_ARB_BASE_ADDR+0x1080
+#define HDMI_FC_ACP17               HDMI_ARB_BASE_ADDR+0x1081
+#define HDMI_FC_ACP16               HDMI_ARB_BASE_ADDR+0x1082
+#define HDMI_FC_ACP15               HDMI_ARB_BASE_ADDR+0x1083
+#define HDMI_FC_ACP14               HDMI_ARB_BASE_ADDR+0x1084
+#define HDMI_FC_ACP13               HDMI_ARB_BASE_ADDR+0x1085
+#define HDMI_FC_ACP12               HDMI_ARB_BASE_ADDR+0x1086
+#define HDMI_FC_ACP11               HDMI_ARB_BASE_ADDR+0x1087
+#define HDMI_FC_ACP10               HDMI_ARB_BASE_ADDR+0x1088
+#define HDMI_FC_ACP9                HDMI_ARB_BASE_ADDR+0x1089
+#define HDMI_FC_ACP8                HDMI_ARB_BASE_ADDR+0x108A
+#define HDMI_FC_ACP7                HDMI_ARB_BASE_ADDR+0x108B
+#define HDMI_FC_ACP6                HDMI_ARB_BASE_ADDR+0x108C
+#define HDMI_FC_ACP5                HDMI_ARB_BASE_ADDR+0x108D
+#define HDMI_FC_ACP4                HDMI_ARB_BASE_ADDR+0x108E
+#define HDMI_FC_ACP3                HDMI_ARB_BASE_ADDR+0x108F
+#define HDMI_FC_ACP2                HDMI_ARB_BASE_ADDR+0x1090
+#define HDMI_FC_ACP1                HDMI_ARB_BASE_ADDR+0x1091
+#define HDMI_FC_ISCR1_0             HDMI_ARB_BASE_ADDR+0x1092
+#define HDMI_FC_ISCR1_16            HDMI_ARB_BASE_ADDR+0x1093
+#define HDMI_FC_ISCR1_15            HDMI_ARB_BASE_ADDR+0x1094
+#define HDMI_FC_ISCR1_14            HDMI_ARB_BASE_ADDR+0x1095
+#define HDMI_FC_ISCR1_13            HDMI_ARB_BASE_ADDR+0x1096
+#define HDMI_FC_ISCR1_12            HDMI_ARB_BASE_ADDR+0x1097
+#define HDMI_FC_ISCR1_11            HDMI_ARB_BASE_ADDR+0x1098
+#define HDMI_FC_ISCR1_10            HDMI_ARB_BASE_ADDR+0x1099
+#define HDMI_FC_ISCR1_9             HDMI_ARB_BASE_ADDR+0x109A
+#define HDMI_FC_ISCR1_8             HDMI_ARB_BASE_ADDR+0x109B
+#define HDMI_FC_ISCR1_7             HDMI_ARB_BASE_ADDR+0x109C
+#define HDMI_FC_ISCR1_6             HDMI_ARB_BASE_ADDR+0x109D
+#define HDMI_FC_ISCR1_5             HDMI_ARB_BASE_ADDR+0x109E
+#define HDMI_FC_ISCR1_4             HDMI_ARB_BASE_ADDR+0x109F
+#define HDMI_FC_ISCR1_3             HDMI_ARB_BASE_ADDR+0x10A0
+#define HDMI_FC_ISCR1_2             HDMI_ARB_BASE_ADDR+0x10A1
+#define HDMI_FC_ISCR1_1             HDMI_ARB_BASE_ADDR+0x10A2
+#define HDMI_FC_ISCR2_15            HDMI_ARB_BASE_ADDR+0x10A3
+#define HDMI_FC_ISCR2_14            HDMI_ARB_BASE_ADDR+0x10A4
+#define HDMI_FC_ISCR2_13            HDMI_ARB_BASE_ADDR+0x10A5
+#define HDMI_FC_ISCR2_12            HDMI_ARB_BASE_ADDR+0x10A6
+#define HDMI_FC_ISCR2_11            HDMI_ARB_BASE_ADDR+0x10A7
+#define HDMI_FC_ISCR2_10            HDMI_ARB_BASE_ADDR+0x10A8
+#define HDMI_FC_ISCR2_9             HDMI_ARB_BASE_ADDR+0x10A9
+#define HDMI_FC_ISCR2_8             HDMI_ARB_BASE_ADDR+0x10AA
+#define HDMI_FC_ISCR2_7             HDMI_ARB_BASE_ADDR+0x10AB
+#define HDMI_FC_ISCR2_6             HDMI_ARB_BASE_ADDR+0x10AC
+#define HDMI_FC_ISCR2_5             HDMI_ARB_BASE_ADDR+0x10AD
+#define HDMI_FC_ISCR2_4             HDMI_ARB_BASE_ADDR+0x10AE
+#define HDMI_FC_ISCR2_3             HDMI_ARB_BASE_ADDR+0x10AF
+#define HDMI_FC_ISCR2_2             HDMI_ARB_BASE_ADDR+0x10B0
+#define HDMI_FC_ISCR2_1             HDMI_ARB_BASE_ADDR+0x10B1
+#define HDMI_FC_ISCR2_0             HDMI_ARB_BASE_ADDR+0x10B2
+#define HDMI_FC_DATAUTO0            HDMI_ARB_BASE_ADDR+0x10B3
+#define HDMI_FC_DATAUTO1            HDMI_ARB_BASE_ADDR+0x10B4
+#define HDMI_FC_DATAUTO2            HDMI_ARB_BASE_ADDR+0x10B5
+#define HDMI_FC_DATMAN              HDMI_ARB_BASE_ADDR+0x10B6
+#define HDMI_FC_DATAUTO3            HDMI_ARB_BASE_ADDR+0x10B7
+#define HDMI_FC_RDRB0               HDMI_ARB_BASE_ADDR+0x10B8
+#define HDMI_FC_RDRB1               HDMI_ARB_BASE_ADDR+0x10B9
+#define HDMI_FC_RDRB2               HDMI_ARB_BASE_ADDR+0x10BA
+#define HDMI_FC_RDRB3               HDMI_ARB_BASE_ADDR+0x10BB
+#define HDMI_FC_RDRB4               HDMI_ARB_BASE_ADDR+0x10BC
+#define HDMI_FC_RDRB5               HDMI_ARB_BASE_ADDR+0x10BD
+#define HDMI_FC_RDRB6               HDMI_ARB_BASE_ADDR+0x10BE
+#define HDMI_FC_RDRB7               HDMI_ARB_BASE_ADDR+0x10BF
+#define HDMI_FC_STAT0               HDMI_ARB_BASE_ADDR+0x10D0
+#define HDMI_FC_INT0                HDMI_ARB_BASE_ADDR+0x10D1
+#define HDMI_FC_MASK0               HDMI_ARB_BASE_ADDR+0x10D2
+#define HDMI_FC_POL0                HDMI_ARB_BASE_ADDR+0x10D3
+#define HDMI_FC_STAT1               HDMI_ARB_BASE_ADDR+0x10D4
+#define HDMI_FC_INT1                HDMI_ARB_BASE_ADDR+0x10D5
+#define HDMI_FC_MASK1               HDMI_ARB_BASE_ADDR+0x10D6
+#define HDMI_FC_POL1                HDMI_ARB_BASE_ADDR+0x10D7
+#define HDMI_FC_STAT2               HDMI_ARB_BASE_ADDR+0x10D8
+#define HDMI_FC_INT2                HDMI_ARB_BASE_ADDR+0x10D9
+#define HDMI_FC_MASK2               HDMI_ARB_BASE_ADDR+0x10DA
+#define HDMI_FC_POL2                HDMI_ARB_BASE_ADDR+0x10DB
+#define HDMI_FC_PRCONF              HDMI_ARB_BASE_ADDR+0x10E0
+
+#define HDMI_FC_GMD_STAT            HDMI_ARB_BASE_ADDR+0x1100
+#define HDMI_FC_GMD_EN              HDMI_ARB_BASE_ADDR+0x1101
+#define HDMI_FC_GMD_UP              HDMI_ARB_BASE_ADDR+0x1102
+#define HDMI_FC_GMD_CONF            HDMI_ARB_BASE_ADDR+0x1103
+#define HDMI_FC_GMD_HB              HDMI_ARB_BASE_ADDR+0x1104
+#define HDMI_FC_GMD_PB0             HDMI_ARB_BASE_ADDR+0x1105
+#define HDMI_FC_GMD_PB1             HDMI_ARB_BASE_ADDR+0x1106
+#define HDMI_FC_GMD_PB2             HDMI_ARB_BASE_ADDR+0x1107
+#define HDMI_FC_GMD_PB3             HDMI_ARB_BASE_ADDR+0x1108
+#define HDMI_FC_GMD_PB4             HDMI_ARB_BASE_ADDR+0x1109
+#define HDMI_FC_GMD_PB5             HDMI_ARB_BASE_ADDR+0x110A
+#define HDMI_FC_GMD_PB6             HDMI_ARB_BASE_ADDR+0x110B
+#define HDMI_FC_GMD_PB7             HDMI_ARB_BASE_ADDR+0x110C
+#define HDMI_FC_GMD_PB8             HDMI_ARB_BASE_ADDR+0x110D
+#define HDMI_FC_GMD_PB9             HDMI_ARB_BASE_ADDR+0x110E
+#define HDMI_FC_GMD_PB10            HDMI_ARB_BASE_ADDR+0x110F
+#define HDMI_FC_GMD_PB11            HDMI_ARB_BASE_ADDR+0x1110
+#define HDMI_FC_GMD_PB12            HDMI_ARB_BASE_ADDR+0x1111
+#define HDMI_FC_GMD_PB13            HDMI_ARB_BASE_ADDR+0x1112
+#define HDMI_FC_GMD_PB14            HDMI_ARB_BASE_ADDR+0x1113
+#define HDMI_FC_GMD_PB15            HDMI_ARB_BASE_ADDR+0x1114
+#define HDMI_FC_GMD_PB16            HDMI_ARB_BASE_ADDR+0x1115
+#define HDMI_FC_GMD_PB17            HDMI_ARB_BASE_ADDR+0x1116
+#define HDMI_FC_GMD_PB18            HDMI_ARB_BASE_ADDR+0x1117
+#define HDMI_FC_GMD_PB19            HDMI_ARB_BASE_ADDR+0x1118
+#define HDMI_FC_GMD_PB20            HDMI_ARB_BASE_ADDR+0x1119
+#define HDMI_FC_GMD_PB21            HDMI_ARB_BASE_ADDR+0x111A
+#define HDMI_FC_GMD_PB22            HDMI_ARB_BASE_ADDR+0x111B
+#define HDMI_FC_GMD_PB23            HDMI_ARB_BASE_ADDR+0x111C
+#define HDMI_FC_GMD_PB24            HDMI_ARB_BASE_ADDR+0x111D
+#define HDMI_FC_GMD_PB25            HDMI_ARB_BASE_ADDR+0x111E
+#define HDMI_FC_GMD_PB26            HDMI_ARB_BASE_ADDR+0x111F
+#define HDMI_FC_GMD_PB27            HDMI_ARB_BASE_ADDR+0x1120
+
+#define HDMI_FC_DBGFORCE            HDMI_ARB_BASE_ADDR+0x1200
+#define HDMI_FC_DBGAUD0CH0          HDMI_ARB_BASE_ADDR+0x1201
+#define HDMI_FC_DBGAUD1CH0          HDMI_ARB_BASE_ADDR+0x1202
+#define HDMI_FC_DBGAUD2CH0          HDMI_ARB_BASE_ADDR+0x1203
+#define HDMI_FC_DBGAUD0CH1          HDMI_ARB_BASE_ADDR+0x1204
+#define HDMI_FC_DBGAUD1CH1          HDMI_ARB_BASE_ADDR+0x1205
+#define HDMI_FC_DBGAUD2CH1          HDMI_ARB_BASE_ADDR+0x1206
+#define HDMI_FC_DBGAUD0CH2          HDMI_ARB_BASE_ADDR+0x1207
+#define HDMI_FC_DBGAUD1CH2          HDMI_ARB_BASE_ADDR+0x1208
+#define HDMI_FC_DBGAUD2CH2          HDMI_ARB_BASE_ADDR+0x1209
+#define HDMI_FC_DBGAUD0CH3          HDMI_ARB_BASE_ADDR+0x120A
+#define HDMI_FC_DBGAUD1CH3          HDMI_ARB_BASE_ADDR+0x120B
+#define HDMI_FC_DBGAUD2CH3          HDMI_ARB_BASE_ADDR+0x120C
+#define HDMI_FC_DBGAUD0CH4          HDMI_ARB_BASE_ADDR+0x120D
+#define HDMI_FC_DBGAUD1CH4          HDMI_ARB_BASE_ADDR+0x120E
+#define HDMI_FC_DBGAUD2CH4          HDMI_ARB_BASE_ADDR+0x120F
+#define HDMI_FC_DBGAUD0CH5          HDMI_ARB_BASE_ADDR+0x1210
+#define HDMI_FC_DBGAUD1CH5          HDMI_ARB_BASE_ADDR+0x1211
+#define HDMI_FC_DBGAUD2CH5          HDMI_ARB_BASE_ADDR+0x1212
+#define HDMI_FC_DBGAUD0CH6          HDMI_ARB_BASE_ADDR+0x1213
+#define HDMI_FC_DBGAUD1CH6          HDMI_ARB_BASE_ADDR+0x1214
+#define HDMI_FC_DBGAUD2CH6          HDMI_ARB_BASE_ADDR+0x1215
+#define HDMI_FC_DBGAUD0CH7          HDMI_ARB_BASE_ADDR+0x1216
+#define HDMI_FC_DBGAUD1CH7          HDMI_ARB_BASE_ADDR+0x1217
+#define HDMI_FC_DBGAUD2CH7          HDMI_ARB_BASE_ADDR+0x1218
+#define HDMI_FC_DBGTMDS0            HDMI_ARB_BASE_ADDR+0x1219
+#define HDMI_FC_DBGTMDS1            HDMI_ARB_BASE_ADDR+0x121A
+#define HDMI_FC_DBGTMDS2            HDMI_ARB_BASE_ADDR+0x121B
+
+// HDMI Source PHY Registers
+#define HDMI_PHY_CONF0                  HDMI_ARB_BASE_ADDR+0x3000
+#define HDMI_PHY_TST0                   HDMI_ARB_BASE_ADDR+0x3001
+#define HDMI_PHY_TST1                   HDMI_ARB_BASE_ADDR+0x3002
+#define HDMI_PHY_TST2                   HDMI_ARB_BASE_ADDR+0x3003
+#define HDMI_PHY_STAT0                  HDMI_ARB_BASE_ADDR+0x3004
+#define HDMI_PHY_INT0                   HDMI_ARB_BASE_ADDR+0x3005
+#define HDMI_PHY_MASK0                  HDMI_ARB_BASE_ADDR+0x3006
+#define HDMI_PHY_POL0                   HDMI_ARB_BASE_ADDR+0x3007
+
+// HDMI Master PHY Registers
+#define HDMI_PHY_I2CM_SLAVE_ADDR             HDMI_ARB_BASE_ADDR+0x3020
+#define HDMI_PHY_I2CM_ADDRESS_ADDR           HDMI_ARB_BASE_ADDR+0x3021
+#define HDMI_PHY_I2CM_DATAO_1_ADDR           HDMI_ARB_BASE_ADDR+0x3022
+#define HDMI_PHY_I2CM_DATAO_0_ADDR           HDMI_ARB_BASE_ADDR+0x3023
+#define HDMI_PHY_I2CM_DATAI_1_ADDR           HDMI_ARB_BASE_ADDR+0x3024
+#define HDMI_PHY_I2CM_DATAI_0_ADDR           HDMI_ARB_BASE_ADDR+0x3025
+#define HDMI_PHY_I2CM_OPERATION_ADDR         HDMI_ARB_BASE_ADDR+0x3026
+#define HDMI_PHY_I2CM_INT_ADDR               HDMI_ARB_BASE_ADDR+0x3027
+#define HDMI_PHY_I2CM_CTLINT_ADDR            HDMI_ARB_BASE_ADDR+0x3028
+#define HDMI_PHY_I2CM_DIV_ADDR               HDMI_ARB_BASE_ADDR+0x3029
+#define HDMI_PHY_I2CM_SOFTRSTZ_ADDR          HDMI_ARB_BASE_ADDR+0x302a
+#define HDMI_PHY_I2CM_SS_SCL_HCNT_1_ADDR     HDMI_ARB_BASE_ADDR+0x302b
+#define HDMI_PHY_I2CM_SS_SCL_HCNT_0_ADDR     HDMI_ARB_BASE_ADDR+0x302c
+#define HDMI_PHY_I2CM_SS_SCL_LCNT_1_ADDR     HDMI_ARB_BASE_ADDR+0x302d
+#define HDMI_PHY_I2CM_SS_SCL_LCNT_0_ADDR     HDMI_ARB_BASE_ADDR+0x302e
+#define HDMI_PHY_I2CM_FS_SCL_HCNT_1_ADDR     HDMI_ARB_BASE_ADDR+0x302f
+#define HDMI_PHY_I2CM_FS_SCL_HCNT_0_ADDR     HDMI_ARB_BASE_ADDR+0x3030
+#define HDMI_PHY_I2CM_FS_SCL_LCNT_1_ADDR     HDMI_ARB_BASE_ADDR+0x3031
+#define HDMI_PHY_I2CM_FS_SCL_LCNT_0_ADDR     HDMI_ARB_BASE_ADDR+0x3032
+
+// Generic Parallel Audio Interface Registers
+#define HDMI_GP_CONF0               HDMI_ARB_BASE_ADDR+0x3500
+#define HDMI_GP_CONF1               HDMI_ARB_BASE_ADDR+0x3501
+#define HDMI_GP_CONF2               HDMI_ARB_BASE_ADDR+0x3502
+#define HDMI_GP_STAT                HDMI_ARB_BASE_ADDR+0x3503
+#define HDMI_GP_INT                 HDMI_ARB_BASE_ADDR+0x3504
+#define HDMI_GP_MASK                HDMI_ARB_BASE_ADDR+0x3505
+#define HDMI_GP_POL                 HDMI_ARB_BASE_ADDR+0x3506
+
+// Audio DMA Registers (TBD)
+#define HDMI_AHB_DMA_CONF0          HDMI_ARB_BASE_ADDR+0x3600
+#define HDMI_AHB_DMA_START          HDMI_ARB_BASE_ADDR+0x3601
+#define HDMI_AHB_DMA_STOP           HDMI_ARB_BASE_ADDR+0x3602
+#define HDMI_AHB_DMA_THRSLD         HDMI_ARB_BASE_ADDR+0x3603
+#define HDMI_AHB_DMA_STRADDR0       HDMI_ARB_BASE_ADDR+0x3604
+#define HDMI_AHB_DMA_STRADDR1       HDMI_ARB_BASE_ADDR+0x3605
+#define HDMI_AHB_DMA_STRADDR2       HDMI_ARB_BASE_ADDR+0x3606
+#define HDMI_AHB_DMA_STRADDR3       HDMI_ARB_BASE_ADDR+0x3607
+#define HDMI_AHB_DMA_STPADDR0       HDMI_ARB_BASE_ADDR+0x3608
+#define HDMI_AHB_DMA_STPADDR1       HDMI_ARB_BASE_ADDR+0x3609
+#define HDMI_AHB_DMA_STPADDR2       HDMI_ARB_BASE_ADDR+0x360a
+#define HDMI_AHB_DMA_STPADDR3       HDMI_ARB_BASE_ADDR+0x360b
+#define HDMI_AHB_DMA_BSTADDR0       HDMI_ARB_BASE_ADDR+0x360c
+#define HDMI_AHB_DMA_BSTADDR1       HDMI_ARB_BASE_ADDR+0x360d
+#define HDMI_AHB_DMA_BSTADDR2       HDMI_ARB_BASE_ADDR+0x360e
+#define HDMI_AHB_DMA_BSTADDR3       HDMI_ARB_BASE_ADDR+0x360f
+#define HDMI_AHB_DMA_MBLENGTH0      HDMI_ARB_BASE_ADDR+0x3610
+#define HDMI_AHB_DMA_MBLENGTH1      HDMI_ARB_BASE_ADDR+0x3611
+#define HDMI_AHB_DMA_STAT           HDMI_ARB_BASE_ADDR+0x3612
+#define HDMI_AHB_DMA_INT            HDMI_ARB_BASE_ADDR+0x3613
+#define HDMI_AHB_DMA_MASK           HDMI_ARB_BASE_ADDR+0x3614
+#define HDMI_AHB_DMA_POL            HDMI_ARB_BASE_ADDR+0x3615
+
+// Main Controller Registers
+#define HDMI_MC_SFRDIV              HDMI_ARB_BASE_ADDR+0x4000
+#define HDMI_MC_CLKDIS              HDMI_ARB_BASE_ADDR+0x4001
+#define HDMI_MC_SWRSTZ              HDMI_ARB_BASE_ADDR+0x4002
+#define HDMI_MC_OPCTRL              HDMI_ARB_BASE_ADDR+0x4003
+#define HDMI_MC_FLOWCTRL            HDMI_ARB_BASE_ADDR+0x4004
+#define HDMI_MC_PHYRSTZ             HDMI_ARB_BASE_ADDR+0x4005
+#define HDMI_MC_LOCKONCLOCK         HDMI_ARB_BASE_ADDR+0x4006
+#define HDMI_MC_HEACPHY_RST         HDMI_ARB_BASE_ADDR+0x4007
+
+// Color Space  Converter Registers
+#define HDMI_CSC_CFG                HDMI_ARB_BASE_ADDR+0x4100
+#define HDMI_CSC_SCALE              HDMI_ARB_BASE_ADDR+0x4101
+#define HDMI_CSC_COEF_A1_MSB        HDMI_ARB_BASE_ADDR+0x4102
+#define HDMI_CSC_COEF_A1_LSB        HDMI_ARB_BASE_ADDR+0x4103
+#define HDMI_CSC_COEF_A2_MSB        HDMI_ARB_BASE_ADDR+0x4104
+#define HDMI_CSC_COEF_A2_LSB        HDMI_ARB_BASE_ADDR+0x4105
+#define HDMI_CSC_COEF_A3_MSB        HDMI_ARB_BASE_ADDR+0x4106
+#define HDMI_CSC_COEF_A3_LSB        HDMI_ARB_BASE_ADDR+0x4107
+#define HDMI_CSC_COEF_A4_MSB        HDMI_ARB_BASE_ADDR+0x4108
+#define HDMI_CSC_COEF_A4_LSB        HDMI_ARB_BASE_ADDR+0x4109
+#define HDMI_CSC_COEF_B1_MSB        HDMI_ARB_BASE_ADDR+0x410A
+#define HDMI_CSC_COEF_B1_LSB        HDMI_ARB_BASE_ADDR+0x410B
+#define HDMI_CSC_COEF_B2_MSB        HDMI_ARB_BASE_ADDR+0x410C
+#define HDMI_CSC_COEF_B2_LSB        HDMI_ARB_BASE_ADDR+0x410D
+#define HDMI_CSC_COEF_B3_MSB        HDMI_ARB_BASE_ADDR+0x410E
+#define HDMI_CSC_COEF_B3_LSB        HDMI_ARB_BASE_ADDR+0x410F
+#define HDMI_CSC_COEF_B4_MSB        HDMI_ARB_BASE_ADDR+0x4110
+#define HDMI_CSC_COEF_B4_LSB        HDMI_ARB_BASE_ADDR+0x4111
+#define HDMI_CSC_COEF_C1_MSB        HDMI_ARB_BASE_ADDR+0x4112
+#define HDMI_CSC_COEF_C1_LSB        HDMI_ARB_BASE_ADDR+0x4113
+#define HDMI_CSC_COEF_C2_MSB        HDMI_ARB_BASE_ADDR+0x4114
+#define HDMI_CSC_COEF_C2_LSB        HDMI_ARB_BASE_ADDR+0x4115
+#define HDMI_CSC_COEF_C3_MSB        HDMI_ARB_BASE_ADDR+0x4116
+#define HDMI_CSC_COEF_C3_LSB        HDMI_ARB_BASE_ADDR+0x4117
+#define HDMI_CSC_COEF_C4_MSB        HDMI_ARB_BASE_ADDR+0x4118
+#define HDMI_CSC_COEF_C4_LSB        HDMI_ARB_BASE_ADDR+0x4119
+
+// HDCP Encryption Engine Registers
+#define HDMI_A_HDCPCFG0             HDMI_ARB_BASE_ADDR+0x5000
+#define HDMI_A_HDCPCFG1             HDMI_ARB_BASE_ADDR+0x5001
+#define HDMI_A_HDCPOBS0             HDMI_ARB_BASE_ADDR+0x5002
+#define HDMI_A_HDCPOBS1             HDMI_ARB_BASE_ADDR+0x5003
+#define HDMI_A_HDCPOBS2             HDMI_ARB_BASE_ADDR+0x5004
+#define HDMI_A_HDCPOBS3             HDMI_ARB_BASE_ADDR+0x5005
+#define HDMI_A_APIINTCLR            HDMI_ARB_BASE_ADDR+0x5006
+#define HDMI_A_APIINTSTAT           HDMI_ARB_BASE_ADDR+0x5007
+#define HDMI_A_APIINTMSK            HDMI_ARB_BASE_ADDR+0x5008
+#define HDMI_A_VIDPOLCFG            HDMI_ARB_BASE_ADDR+0x5009
+#define HDMI_A_OESSWCFG             HDMI_ARB_BASE_ADDR+0x500A
+#define HDMI_A_TIMER1SETUP0         HDMI_ARB_BASE_ADDR+0x500B
+#define HDMI_A_TIMER1SETUP1         HDMI_ARB_BASE_ADDR+0x500C
+#define HDMI_A_TIMER2SETUP0         HDMI_ARB_BASE_ADDR+0x500D
+#define HDMI_A_TIMER2SETUP1         HDMI_ARB_BASE_ADDR+0x500E
+#define HDMI_A_100MSCFG             HDMI_ARB_BASE_ADDR+0x500F
+#define HDMI_A_2SCFG0               HDMI_ARB_BASE_ADDR+0x5010
+#define HDMI_A_2SCFG1               HDMI_ARB_BASE_ADDR+0x5011
+#define HDMI_A_5SCFG0               HDMI_ARB_BASE_ADDR+0x5012
+#define HDMI_A_5SCFG1               HDMI_ARB_BASE_ADDR+0x5013
+#define HDMI_A_SRMVERLSB            HDMI_ARB_BASE_ADDR+0x5014
+#define HDMI_A_SRMVERMSB            HDMI_ARB_BASE_ADDR+0x5015
+#define HDMI_A_SRMCTRL              HDMI_ARB_BASE_ADDR+0x5016
+#define HDMI_A_SFRSETUP             HDMI_ARB_BASE_ADDR+0x5017
+#define HDMI_A_I2CHSETUP            HDMI_ARB_BASE_ADDR+0x5018
+#define HDMI_A_INTSETUP             HDMI_ARB_BASE_ADDR+0x5019
+#define HDMI_A_PRESETUP             HDMI_ARB_BASE_ADDR+0x501A
+#define HDMI_A_SRM_BASE             HDMI_ARB_BASE_ADDR+0x5020
+
+// CEC Engine Registers
+#define HDMI_CEC_CTRL               HDMI_ARB_BASE_ADDR+0x7D00
+#define HDMI_CEC_STAT               HDMI_ARB_BASE_ADDR+0x7D01
+#define HDMI_CEC_MASK               HDMI_ARB_BASE_ADDR+0x7D02
+#define HDMI_CEC_POLARITY           HDMI_ARB_BASE_ADDR+0x7D03
+#define HDMI_CEC_INT                HDMI_ARB_BASE_ADDR+0x7D04
+#define HDMI_CEC_ADDR_L             HDMI_ARB_BASE_ADDR+0x7D05
+#define HDMI_CEC_ADDR_H             HDMI_ARB_BASE_ADDR+0x7D06
+#define HDMI_CEC_TX_CNT             HDMI_ARB_BASE_ADDR+0x7D07
+#define HDMI_CEC_RX_CNT             HDMI_ARB_BASE_ADDR+0x7D08
+#define HDMI_CEC_TX_DATA0           HDMI_ARB_BASE_ADDR+0x7D10
+#define HDMI_CEC_TX_DATA1           HDMI_ARB_BASE_ADDR+0x7D11
+#define HDMI_CEC_TX_DATA2           HDMI_ARB_BASE_ADDR+0x7D12
+#define HDMI_CEC_TX_DATA3           HDMI_ARB_BASE_ADDR+0x7D13
+#define HDMI_CEC_TX_DATA4           HDMI_ARB_BASE_ADDR+0x7D14
+#define HDMI_CEC_TX_DATA5           HDMI_ARB_BASE_ADDR+0x7D15
+#define HDMI_CEC_TX_DATA6           HDMI_ARB_BASE_ADDR+0x7D16
+#define HDMI_CEC_TX_DATA7           HDMI_ARB_BASE_ADDR+0x7D17
+#define HDMI_CEC_TX_DATA8           HDMI_ARB_BASE_ADDR+0x7D18
+#define HDMI_CEC_TX_DATA9           HDMI_ARB_BASE_ADDR+0x7D19
+#define HDMI_CEC_TX_DATA10          HDMI_ARB_BASE_ADDR+0x7D1a
+#define HDMI_CEC_TX_DATA11          HDMI_ARB_BASE_ADDR+0x7D1b
+#define HDMI_CEC_TX_DATA12          HDMI_ARB_BASE_ADDR+0x7D1c
+#define HDMI_CEC_TX_DATA13          HDMI_ARB_BASE_ADDR+0x7D1d
+#define HDMI_CEC_TX_DATA14          HDMI_ARB_BASE_ADDR+0x7D1e
+#define HDMI_CEC_TX_DATA15          HDMI_ARB_BASE_ADDR+0x7D1f
+#define HDMI_CEC_RX_DATA0           HDMI_ARB_BASE_ADDR+0x7D20
+#define HDMI_CEC_RX_DATA1           HDMI_ARB_BASE_ADDR+0x7D21
+#define HDMI_CEC_RX_DATA2           HDMI_ARB_BASE_ADDR+0x7D22
+#define HDMI_CEC_RX_DATA3           HDMI_ARB_BASE_ADDR+0x7D23
+#define HDMI_CEC_RX_DATA4           HDMI_ARB_BASE_ADDR+0x7D24
+#define HDMI_CEC_RX_DATA5           HDMI_ARB_BASE_ADDR+0x7D25
+#define HDMI_CEC_RX_DATA6           HDMI_ARB_BASE_ADDR+0x7D26
+#define HDMI_CEC_RX_DATA7           HDMI_ARB_BASE_ADDR+0x7D27
+#define HDMI_CEC_RX_DATA8           HDMI_ARB_BASE_ADDR+0x7D28
+#define HDMI_CEC_RX_DATA9           HDMI_ARB_BASE_ADDR+0x7D29
+#define HDMI_CEC_RX_DATA10          HDMI_ARB_BASE_ADDR+0x7D2a
+#define HDMI_CEC_RX_DATA11          HDMI_ARB_BASE_ADDR+0x7D2b
+#define HDMI_CEC_RX_DATA12          HDMI_ARB_BASE_ADDR+0x7D2c
+#define HDMI_CEC_RX_DATA13          HDMI_ARB_BASE_ADDR+0x7D2d
+#define HDMI_CEC_RX_DATA14          HDMI_ARB_BASE_ADDR+0x7D2e
+#define HDMI_CEC_RX_DATA15          HDMI_ARB_BASE_ADDR+0x7D2f
+#define HDMI_CEC_LOCK               HDMI_ARB_BASE_ADDR+0x7D30
+#define HDMI_CEC_WKUPCTRL           HDMI_ARB_BASE_ADDR+0x7D31
+
+// I2C Master Registers (E-DDC)
+#define HDMI_I2CM_SLAVE             HDMI_ARB_BASE_ADDR+0x7E00
+#define HDMI_I2CMESS                HDMI_ARB_BASE_ADDR+0x7E01
+#define HDMI_I2CM_DATAO             HDMI_ARB_BASE_ADDR+0x7E02
+#define HDMI_I2CM_DATAI             HDMI_ARB_BASE_ADDR+0x7E03
+#define HDMI_I2CM_OPERATION         HDMI_ARB_BASE_ADDR+0x7E04
+#define HDMI_I2CM_INT               HDMI_ARB_BASE_ADDR+0x7E05
+#define HDMI_I2CM_CTLINT            HDMI_ARB_BASE_ADDR+0x7E06
+#define HDMI_I2CM_DIV               HDMI_ARB_BASE_ADDR+0x7E07
+#define HDMI_I2CM_SEGADDR           HDMI_ARB_BASE_ADDR+0x7E08
+#define HDMI_I2CM_SOFTRSTZ          HDMI_ARB_BASE_ADDR+0x7E09
+#define HDMI_I2CM_SEGPTR            HDMI_ARB_BASE_ADDR+0x7E0A
+#define HDMI_I2CM_SS_SCL_HCNT_1_ADDR     HDMI_ARB_BASE_ADDR+0x7E0B
+#define HDMI_I2CM_SS_SCL_HCNT_0_ADDR     HDMI_ARB_BASE_ADDR+0x7E0C
+#define HDMI_I2CM_SS_SCL_LCNT_1_ADDR     HDMI_ARB_BASE_ADDR+0x7E0D
+#define HDMI_I2CM_SS_SCL_LCNT_0_ADDR     HDMI_ARB_BASE_ADDR+0x7E0E
+#define HDMI_I2CM_FS_SCL_HCNT_1_ADDR     HDMI_ARB_BASE_ADDR+0x7E0F
+#define HDMI_I2CM_FS_SCL_HCNT_0_ADDR     HDMI_ARB_BASE_ADDR+0x7E10
+#define HDMI_I2CM_FS_SCL_LCNT_1_ADDR     HDMI_ARB_BASE_ADDR+0x7E11
+#define HDMI_I2CM_FS_SCL_LCNT_0_ADDR     HDMI_ARB_BASE_ADDR+0x7E12
+
+// Random Number Generator Registers (RNG)
+#define HDMI_RNG_BASE         HDMI_ARB_BASE_ADDR+0x8000
+
+#define TRUE 1
+#define FALSE 0
+
+/*
+ * Register field definitions
+ */
+enum {
+/* IH_FC_INT2 field values */
+	HDMI_IH_FC_INT2_OVERFLOW_MASK = 0x03,
+	HDMI_IH_FC_INT2_LOW_PRIORITY_OVERFLOW = 0x02,
+	HDMI_IH_FC_INT2_HIGH_PRIORITY_OVERFLOW = 0x01,
+
+/* IH_FC_STAT2 field values */
+	HDMI_IH_FC_STAT2_OVERFLOW_MASK = 0x03,
+	HDMI_IH_FC_STAT2_LOW_PRIORITY_OVERFLOW = 0x02,
+	HDMI_IH_FC_STAT2_HIGH_PRIORITY_OVERFLOW = 0x01,
+
+/* IH_PHY_STAT0 field values */
+	HDMI_IH_PHY_STAT0_RX_SENSE3 = 0x20,
+	HDMI_IH_PHY_STAT0_RX_SENSE2 = 0x10,
+	HDMI_IH_PHY_STAT0_RX_SENSE1 = 0x8,
+	HDMI_IH_PHY_STAT0_RX_SENSE0 = 0x4,
+	HDMI_IH_PHY_STAT0_TX_PHY_LOCK = 0x2,
+	HDMI_IH_PHY_STAT0_HPD = 0x1,
+
+/* IH_CEC_STAT0 field values */
+	HDMI_IH_CEC_STAT0_WAKEUP = 0x40,
+	HDMI_IH_CEC_STAT0_ERROR_FOLL = 0x20,
+	HDMI_IH_CEC_STAT0_ERROR_INIT = 0x10,
+	HDMI_IH_CEC_STAT0_ARB_LOST = 0x8,
+	HDMI_IH_CEC_STAT0_NACK = 0x4,
+	HDMI_IH_CEC_STAT0_EOM = 0x2,
+	HDMI_IH_CEC_STAT0_DONE = 0x1,
+
+
+/* IH_MUTE_I2CMPHY_STAT0 field values */
+	HDMI_IH_MUTE_I2CMPHY_STAT0_I2CMPHYDONE = 0x2,
+	HDMI_IH_MUTE_I2CMPHY_STAT0_I2CMPHYERROR = 0x1,
+
+/* IH_PHY_STAT0 field values */
+	HDMI_IH_MUTE_PHY_STAT0_RX_SENSE3 = 0x20,
+	HDMI_IH_MUTE_PHY_STAT0_RX_SENSE2 = 0x10,
+	HDMI_IH_MUTE_PHY_STAT0_RX_SENSE1 = 0x8,
+	HDMI_IH_MUTE_PHY_STAT0_RX_SENSE0 = 0x4,
+	HDMI_IH_MUTE_PHY_STAT0_TX_PHY_LOCK = 0x2,
+	HDMI_IH_MUTE_PHY_STAT0_HPD = 0x1,
+
+/* IH_AHBDMAAUD_STAT0 field values */
+	HDMI_IH_AHBDMAAUD_STAT0_ERROR = 0x20,
+	HDMI_IH_AHBDMAAUD_STAT0_LOST = 0x10,
+	HDMI_IH_AHBDMAAUD_STAT0_RETRY = 0x08,
+	HDMI_IH_AHBDMAAUD_STAT0_DONE = 0x04,
+	HDMI_IH_AHBDMAAUD_STAT0_BUFFFULL = 0x02,
+	HDMI_IH_AHBDMAAUD_STAT0_BUFFEMPTY = 0x01,
+
+/* IH_MUTE_FC_STAT2 field values */
+	HDMI_IH_MUTE_FC_STAT2_OVERFLOW_MASK = 0x03,
+	HDMI_IH_MUTE_FC_STAT2_LOW_PRIORITY_OVERFLOW = 0x02,
+	HDMI_IH_MUTE_FC_STAT2_HIGH_PRIORITY_OVERFLOW = 0x01,
+
+/* IH_MUTE_AHBDMAAUD_STAT0 field values */
+	HDMI_IH_MUTE_AHBDMAAUD_STAT0_ERROR = 0x20,
+	HDMI_IH_MUTE_AHBDMAAUD_STAT0_LOST = 0x10,
+	HDMI_IH_MUTE_AHBDMAAUD_STAT0_RETRY = 0x08,
+	HDMI_IH_MUTE_AHBDMAAUD_STAT0_DONE = 0x04,
+	HDMI_IH_MUTE_AHBDMAAUD_STAT0_BUFFFULL = 0x02,
+	HDMI_IH_MUTE_AHBDMAAUD_STAT0_BUFFEMPTY = 0x01,
+
+/* IH_MUTE field values */
+	HDMI_IH_MUTE_MUTE_WAKEUP_INTERRUPT = 0x2,
+	HDMI_IH_MUTE_MUTE_ALL_INTERRUPT = 0x1,
+
+/* TX_INVID0 field values */
+	HDMI_TX_INVID0_INTERNAL_DE_GENERATOR_MASK = 0x80,
+	HDMI_TX_INVID0_INTERNAL_DE_GENERATOR_ENABLE = 0x80,
+	HDMI_TX_INVID0_INTERNAL_DE_GENERATOR_DISABLE = 0x00,
+	HDMI_TX_INVID0_VIDEO_MAPPING_MASK = 0x1F,
+	HDMI_TX_INVID0_VIDEO_MAPPING_OFFSET = 0,
+
+/* TX_INSTUFFING field values */
+	HDMI_TX_INSTUFFING_BDBDATA_STUFFING_MASK = 0x4,
+	HDMI_TX_INSTUFFING_BDBDATA_STUFFING_ENABLE = 0x4,
+	HDMI_TX_INSTUFFING_BDBDATA_STUFFING_DISABLE = 0x0,
+	HDMI_TX_INSTUFFING_RCRDATA_STUFFING_MASK = 0x2,
+	HDMI_TX_INSTUFFING_RCRDATA_STUFFING_ENABLE = 0x2,
+	HDMI_TX_INSTUFFING_RCRDATA_STUFFING_DISABLE = 0x0,
+	HDMI_TX_INSTUFFING_GYDATA_STUFFING_MASK = 0x1,
+	HDMI_TX_INSTUFFING_GYDATA_STUFFING_ENABLE = 0x1,
+	HDMI_TX_INSTUFFING_GYDATA_STUFFING_DISABLE = 0x0,
+
+/* VP_PR_CD field values */
+	HDMI_VP_PR_CD_COLOR_DEPTH_MASK = 0xF0,
+	HDMI_VP_PR_CD_COLOR_DEPTH_OFFSET = 4,
+	HDMI_VP_PR_CD_DESIRED_PR_FACTOR_MASK = 0x0F,
+	HDMI_VP_PR_CD_DESIRED_PR_FACTOR_OFFSET = 0,
+
+/* VP_STUFF field values */
+	HDMI_VP_STUFF_IDEFAULT_PHASE_MASK = 0x20,
+	HDMI_VP_STUFF_IDEFAULT_PHASE_OFFSET = 5,
+	HDMI_VP_STUFF_IFIX_PP_TO_LAST_MASK = 0x10,
+	HDMI_VP_STUFF_IFIX_PP_TO_LAST_OFFSET = 4,
+	HDMI_VP_STUFF_ICX_GOTO_P0_ST_MASK = 0x8,
+	HDMI_VP_STUFF_ICX_GOTO_P0_ST_OFFSET = 3,
+	HDMI_VP_STUFF_YCC422_STUFFING_MASK = 0x4,
+	HDMI_VP_STUFF_YCC422_STUFFING_STUFFING_MODE = 0x4,
+	HDMI_VP_STUFF_YCC422_STUFFING_DIRECT_MODE = 0x0,
+	HDMI_VP_STUFF_PP_STUFFING_MASK = 0x2,
+	HDMI_VP_STUFF_PP_STUFFING_STUFFING_MODE = 0x2,
+	HDMI_VP_STUFF_PP_STUFFING_DIRECT_MODE = 0x0,
+	HDMI_VP_STUFF_PR_STUFFING_MASK = 0x1,
+	HDMI_VP_STUFF_PR_STUFFING_STUFFING_MODE = 0x1,
+	HDMI_VP_STUFF_PR_STUFFING_DIRECT_MODE = 0x0,
+
+/* VP_CONF field values */
+	HDMI_VP_CONF_BYPASS_EN_MASK = 0x40,
+	HDMI_VP_CONF_BYPASS_EN_ENABLE = 0x40,
+	HDMI_VP_CONF_BYPASS_EN_DISABLE = 0x00,
+	HDMI_VP_CONF_PP_EN_ENMASK = 0x20,
+	HDMI_VP_CONF_PP_EN_ENABLE = 0x20,
+	HDMI_VP_CONF_PP_EN_DISABLE = 0x00,
+	HDMI_VP_CONF_PR_EN_MASK = 0x10,
+	HDMI_VP_CONF_PR_EN_ENABLE = 0x10,
+	HDMI_VP_CONF_PR_EN_DISABLE = 0x00,
+	HDMI_VP_CONF_YCC422_EN_MASK = 0x8,
+	HDMI_VP_CONF_YCC422_EN_ENABLE = 0x8,
+	HDMI_VP_CONF_YCC422_EN_DISABLE = 0x0,
+	HDMI_VP_CONF_BYPASS_SELECT_MASK = 0x4,
+	HDMI_VP_CONF_BYPASS_SELECT_VID_PACKETIZER = 0x4,
+	HDMI_VP_CONF_BYPASS_SELECT_PIX_REPEATER = 0x0,
+	HDMI_VP_CONF_OUTPUT_SELECTOR_MASK = 0x3,
+	HDMI_VP_CONF_OUTPUT_SELECTOR_BYPASS = 0x3,
+	HDMI_VP_CONF_OUTPUT_SELECTOR_YCC422 = 0x1,
+	HDMI_VP_CONF_OUTPUT_SELECTOR_PP = 0x0,
+
+/* VP_REMAP field values */
+	HDMI_VP_REMAP_MASK = 0x3,
+	HDMI_VP_REMAP_YCC422_24bit = 0x2,
+	HDMI_VP_REMAP_YCC422_20bit = 0x1,
+	HDMI_VP_REMAP_YCC422_16bit = 0x0,
+
+/* FC_INVIDCONF field values */
+	HDMI_FC_INVIDCONF_HDCP_KEEPOUT_MASK = 0x80,
+	HDMI_FC_INVIDCONF_HDCP_KEEPOUT_ACTIVE = 0x80,
+	HDMI_FC_INVIDCONF_HDCP_KEEPOUT_INACTIVE = 0x00,
+	HDMI_FC_INVIDCONF_VSYNC_IN_POLARITY_MASK = 0x40,
+	HDMI_FC_INVIDCONF_VSYNC_IN_POLARITY_ACTIVE_HIGH = 0x40,
+	HDMI_FC_INVIDCONF_VSYNC_IN_POLARITY_ACTIVE_LOW = 0x00,
+	HDMI_FC_INVIDCONF_HSYNC_IN_POLARITY_MASK = 0x20,
+	HDMI_FC_INVIDCONF_HSYNC_IN_POLARITY_ACTIVE_HIGH = 0x20,
+	HDMI_FC_INVIDCONF_HSYNC_IN_POLARITY_ACTIVE_LOW = 0x00,
+	HDMI_FC_INVIDCONF_DE_IN_POLARITY_MASK = 0x10,
+	HDMI_FC_INVIDCONF_DE_IN_POLARITY_ACTIVE_HIGH = 0x10,
+	HDMI_FC_INVIDCONF_DE_IN_POLARITY_ACTIVE_LOW = 0x00,
+	HDMI_FC_INVIDCONF_DVI_MODEZ_MASK = 0x8,
+	HDMI_FC_INVIDCONF_DVI_MODEZ_HDMI_MODE = 0x8,
+	HDMI_FC_INVIDCONF_DVI_MODEZ_DVI_MODE = 0x0,
+	HDMI_FC_INVIDCONF_R_V_BLANK_IN_OSC_MASK = 0x2,
+	HDMI_FC_INVIDCONF_R_V_BLANK_IN_OSC_ACTIVE_HIGH = 0x2,
+	HDMI_FC_INVIDCONF_R_V_BLANK_IN_OSC_ACTIVE_LOW = 0x0,
+	HDMI_FC_INVIDCONF_IN_I_P_MASK = 0x1,
+	HDMI_FC_INVIDCONF_IN_I_P_INTERLACED = 0x1,
+	HDMI_FC_INVIDCONF_IN_I_P_PROGRESSIVE = 0x0,
+
+/* FC_AUDICONF0 field values */
+	HDMI_FC_AUDICONF0_CC_OFFSET = 4,
+	HDMI_FC_AUDICONF0_CC_MASK = 0x70,
+	HDMI_FC_AUDICONF0_CT_OFFSET = 0,
+	HDMI_FC_AUDICONF0_CT_MASK = 0xF,
+
+/* FC_AUDICONF1 field values */
+	HDMI_FC_AUDICONF1_SS_OFFSET = 3,
+	HDMI_FC_AUDICONF1_SS_MASK = 0x18,
+	HDMI_FC_AUDICONF1_SF_OFFSET = 0,
+	HDMI_FC_AUDICONF1_SF_MASK = 0x7,
+
+/* FC_AUDICONF3 field values */
+	HDMI_FC_AUDICONF3_LFEPBL_OFFSET = 5,
+	HDMI_FC_AUDICONF3_LFEPBL_MASK = 0x60,
+	HDMI_FC_AUDICONF3_DM_INH_OFFSET = 4,
+	HDMI_FC_AUDICONF3_DM_INH_MASK = 0x10,
+	HDMI_FC_AUDICONF3_LSV_OFFSET = 0,
+	HDMI_FC_AUDICONF3_LSV_MASK = 0xF,
+
+/* FC_AUDSCHNLS0 field values */
+	HDMI_FC_AUDSCHNLS0_CGMSA_OFFSET = 4,
+	HDMI_FC_AUDSCHNLS0_CGMSA_MASK = 0x30,
+	HDMI_FC_AUDSCHNLS0_COPYRIGHT_OFFSET = 0,
+	HDMI_FC_AUDSCHNLS0_COPYRIGHT_MASK = 0x01,
+
+/* FC_AUDSCHNLS3-6 field values */
+	HDMI_FC_AUDSCHNLS3_OIEC_CH0_OFFSET = 0,
+	HDMI_FC_AUDSCHNLS3_OIEC_CH0_MASK = 0x0f,
+	HDMI_FC_AUDSCHNLS3_OIEC_CH1_OFFSET = 4,
+	HDMI_FC_AUDSCHNLS3_OIEC_CH1_MASK = 0xf0,
+	HDMI_FC_AUDSCHNLS4_OIEC_CH2_OFFSET = 0,
+	HDMI_FC_AUDSCHNLS4_OIEC_CH2_MASK = 0x0f,
+	HDMI_FC_AUDSCHNLS4_OIEC_CH3_OFFSET = 4,
+	HDMI_FC_AUDSCHNLS4_OIEC_CH3_MASK = 0xf0,
+
+	HDMI_FC_AUDSCHNLS5_OIEC_CH0_OFFSET = 0,
+	HDMI_FC_AUDSCHNLS5_OIEC_CH0_MASK = 0x0f,
+	HDMI_FC_AUDSCHNLS5_OIEC_CH1_OFFSET = 4,
+	HDMI_FC_AUDSCHNLS5_OIEC_CH1_MASK = 0xf0,
+	HDMI_FC_AUDSCHNLS6_OIEC_CH2_OFFSET = 0,
+	HDMI_FC_AUDSCHNLS6_OIEC_CH2_MASK = 0x0f,
+	HDMI_FC_AUDSCHNLS6_OIEC_CH3_OFFSET = 4,
+	HDMI_FC_AUDSCHNLS6_OIEC_CH3_MASK = 0xf0,
+
+/* HDMI_FC_AUDSCHNLS7 field values */
+	HDMI_FC_AUDSCHNLS7_ACCURACY_OFFSET = 4,
+	HDMI_FC_AUDSCHNLS7_ACCURACY_MASK = 0x30,
+
+/* HDMI_FC_AUDSCHNLS8 field values */
+	HDMI_FC_AUDSCHNLS8_ORIGSAMPFREQ_MASK = 0xf0,
+	HDMI_FC_AUDSCHNLS8_ORIGSAMPFREQ_OFFSET = 4,
+	HDMI_FC_AUDSCHNLS8_WORDLEGNTH_MASK = 0x0f,
+	HDMI_FC_AUDSCHNLS8_WORDLEGNTH_OFFSET = 0,
+
+/* FC_AUDSCONF field values */
+	HDMI_FC_AUDSCONF_AUD_PACKET_SAMPFIT_MASK = 0xF0,
+	HDMI_FC_AUDSCONF_AUD_PACKET_SAMPFIT_OFFSET = 4,
+	HDMI_FC_AUDSCONF_AUD_PACKET_LAYOUT_MASK = 0x1,
+	HDMI_FC_AUDSCONF_AUD_PACKET_LAYOUT_OFFSET = 0,
+	HDMI_FC_AUDSCONF_AUD_PACKET_LAYOUT_LAYOUT1 = 0x1,
+	HDMI_FC_AUDSCONF_AUD_PACKET_LAYOUT_LAYOUT0 = 0x0,
+
+/* FC_STAT2 field values */
+	HDMI_FC_STAT2_OVERFLOW_MASK = 0x03,
+	HDMI_FC_STAT2_LOW_PRIORITY_OVERFLOW = 0x02,
+	HDMI_FC_STAT2_HIGH_PRIORITY_OVERFLOW = 0x01,
+
+/* FC_INT2 field values */
+	HDMI_FC_INT2_OVERFLOW_MASK = 0x03,
+	HDMI_FC_INT2_LOW_PRIORITY_OVERFLOW = 0x02,
+	HDMI_FC_INT2_HIGH_PRIORITY_OVERFLOW = 0x01,
+
+/* FC_MASK2 field values */
+	HDMI_FC_MASK2_OVERFLOW_MASK = 0x03,
+	HDMI_FC_MASK2_LOW_PRIORITY_OVERFLOW = 0x02,
+	HDMI_FC_MASK2_HIGH_PRIORITY_OVERFLOW = 0x01,
+
+/* FC_PRCONF field values */
+	HDMI_FC_PRCONF_INCOMING_PR_FACTOR_MASK = 0xF0,
+	HDMI_FC_PRCONF_INCOMING_PR_FACTOR_OFFSET = 4,
+	HDMI_FC_PRCONF_OUTPUT_PR_FACTOR_MASK = 0x0F,
+	HDMI_FC_PRCONF_OUTPUT_PR_FACTOR_OFFSET = 0,
+
+/* FC_AVICONF0-FC_AVICONF3 field values */
+	HDMI_FC_AVICONF0_PIX_FMT_MASK = 0x03,
+	HDMI_FC_AVICONF0_PIX_FMT_RGB = 0x00,
+	HDMI_FC_AVICONF0_PIX_FMT_YCBCR422 = 0x01,
+	HDMI_FC_AVICONF0_PIX_FMT_YCBCR444 = 0x02,
+	HDMI_FC_AVICONF0_ACTIVE_FMT_MASK = 0x40,
+	HDMI_FC_AVICONF0_ACTIVE_FMT_INFO_PRESENT = 0x40,
+	HDMI_FC_AVICONF0_ACTIVE_FMT_NO_INFO = 0x00,
+	HDMI_FC_AVICONF0_BAR_DATA_MASK = 0x0C,
+	HDMI_FC_AVICONF0_BAR_DATA_NO_DATA = 0x00,
+	HDMI_FC_AVICONF0_BAR_DATA_VERT_BAR = 0x04,
+	HDMI_FC_AVICONF0_BAR_DATA_HORIZ_BAR = 0x08,
+	HDMI_FC_AVICONF0_BAR_DATA_VERT_HORIZ_BAR = 0x0C,
+	HDMI_FC_AVICONF0_SCAN_INFO_MASK = 0x30,
+	HDMI_FC_AVICONF0_SCAN_INFO_OVERSCAN = 0x10,
+	HDMI_FC_AVICONF0_SCAN_INFO_UNDERSCAN = 0x20,
+	HDMI_FC_AVICONF0_SCAN_INFO_NODATA = 0x00,
+
+	HDMI_FC_AVICONF1_ACTIVE_ASPECT_RATIO_MASK = 0x0F,
+	HDMI_FC_AVICONF1_ACTIVE_ASPECT_RATIO_USE_CODED = 0x08,
+	HDMI_FC_AVICONF1_ACTIVE_ASPECT_RATIO_4_3 = 0x09,
+	HDMI_FC_AVICONF1_ACTIVE_ASPECT_RATIO_16_9 = 0x0A,
+	HDMI_FC_AVICONF1_ACTIVE_ASPECT_RATIO_14_9 = 0x0B,
+	HDMI_FC_AVICONF1_CODED_ASPECT_RATIO_MASK = 0x30,
+	HDMI_FC_AVICONF1_CODED_ASPECT_RATIO_NO_DATA = 0x00,
+	HDMI_FC_AVICONF1_CODED_ASPECT_RATIO_4_3 = 0x10,
+	HDMI_FC_AVICONF1_CODED_ASPECT_RATIO_16_9 = 0x20,
+	HDMI_FC_AVICONF1_COLORIMETRY_MASK = 0xC0,
+	HDMI_FC_AVICONF1_COLORIMETRY_NO_DATA = 0x00,
+	HDMI_FC_AVICONF1_COLORIMETRY_SMPTE = 0x40,
+	HDMI_FC_AVICONF1_COLORIMETRY_ITUR = 0x80,
+	HDMI_FC_AVICONF1_COLORIMETRY_EXTENDED_INFO = 0xC0,
+
+	HDMI_FC_AVICONF2_SCALING_MASK = 0x03,
+	HDMI_FC_AVICONF2_SCALING_NONE = 0x00,
+	HDMI_FC_AVICONF2_SCALING_HORIZ = 0x01,
+	HDMI_FC_AVICONF2_SCALING_VERT = 0x02,
+	HDMI_FC_AVICONF2_SCALING_HORIZ_VERT = 0x03,
+	HDMI_FC_AVICONF2_RGB_QUANT_MASK = 0x0C,
+	HDMI_FC_AVICONF2_RGB_QUANT_DEFAULT = 0x00,
+	HDMI_FC_AVICONF2_RGB_QUANT_LIMITED_RANGE = 0x04,
+	HDMI_FC_AVICONF2_RGB_QUANT_FULL_RANGE = 0x08,
+	HDMI_FC_AVICONF2_EXT_COLORIMETRY_MASK = 0x70,
+	HDMI_FC_AVICONF2_EXT_COLORIMETRY_XVYCC601 = 0x00,
+	HDMI_FC_AVICONF2_EXT_COLORIMETRY_XVYCC709 = 0x10,
+	HDMI_FC_AVICONF2_EXT_COLORIMETRY_SYCC601 = 0x20,
+	HDMI_FC_AVICONF2_EXT_COLORIMETRY_ADOBE_YCC601 = 0x30,
+	HDMI_FC_AVICONF2_EXT_COLORIMETRY_ADOBE_RGB = 0x40,
+	HDMI_FC_AVICONF2_IT_CONTENT_MASK = 0x80,
+	HDMI_FC_AVICONF2_IT_CONTENT_NO_DATA = 0x00,
+	HDMI_FC_AVICONF2_IT_CONTENT_VALID = 0x80,
+
+	HDMI_FC_AVICONF3_IT_CONTENT_TYPE_MASK = 0x03,
+	HDMI_FC_AVICONF3_IT_CONTENT_TYPE_GRAPHICS = 0x00,
+	HDMI_FC_AVICONF3_IT_CONTENT_TYPE_PHOTO = 0x01,
+	HDMI_FC_AVICONF3_IT_CONTENT_TYPE_CINEMA = 0x02,
+	HDMI_FC_AVICONF3_IT_CONTENT_TYPE_GAME = 0x03,
+	HDMI_FC_AVICONF3_QUANT_RANGE_MASK = 0x0C,
+	HDMI_FC_AVICONF3_QUANT_RANGE_LIMITED = 0x00,
+	HDMI_FC_AVICONF3_QUANT_RANGE_FULL = 0x04,
+
+/* FC_DBGFORCE field values */
+	HDMI_FC_DBGFORCE_FORCEAUDIO = 0x10,
+	HDMI_FC_DBGFORCE_FORCEVIDEO = 0x1,
+
+/* PHY_CONF0 field values */
+	HDMI_PHY_CONF0_PDZ_MASK = 0x80,
+	HDMI_PHY_CONF0_PDZ_OFFSET = 7,
+	HDMI_PHY_CONF0_ENTMDS_MASK = 0x40,
+	HDMI_PHY_CONF0_ENTMDS_OFFSET = 6,
+	HDMI_PHY_CONF0_SPARECTRL = 0x20,
+	HDMI_PHY_CONF0_GEN2_PDDQ_MASK = 0x10,
+	HDMI_PHY_CONF0_GEN2_PDDQ_OFFSET = 4,
+	HDMI_PHY_CONF0_GEN2_TXPWRON_MASK = 0x8,
+	HDMI_PHY_CONF0_GEN2_TXPWRON_OFFSET = 3,
+	HDMI_PHY_CONF0_GEN2_ENHPDRXSENSE_MASK = 0x4,
+	HDMI_PHY_CONF0_GEN2_ENHPDRXSENSE_OFFSET = 2,
+	HDMI_PHY_CONF0_SELDATAENPOL_MASK = 0x2,
+	HDMI_PHY_CONF0_SELDATAENPOL_OFFSET = 1,
+	HDMI_PHY_CONF0_SELDIPIF_MASK = 0x1,
+	HDMI_PHY_CONF0_SELDIPIF_OFFSET = 0,
+
+/* PHY_TST0 field values */
+	HDMI_PHY_TST0_TSTCLR_MASK = 0x20,
+	HDMI_PHY_TST0_TSTCLR_OFFSET = 5,
+	HDMI_PHY_TST0_TSTEN_MASK = 0x10,
+	HDMI_PHY_TST0_TSTEN_OFFSET = 4,
+	HDMI_PHY_TST0_TSTCLK_MASK = 0x1,
+	HDMI_PHY_TST0_TSTCLK_OFFSET = 0,
+
+/* PHY_STAT0 field values */
+	HDMI_PHY_RX_SENSE3 = 0x80,
+	HDMI_PHY_RX_SENSE2 = 0x40,
+	HDMI_PHY_RX_SENSE1 = 0x20,
+	HDMI_PHY_RX_SENSE0 = 0x10,
+	HDMI_PHY_HPD = 0x02,
+	HDMI_PHY_TX_PHY_LOCK = 0x01,
+
+/* PHY_I2CM_SLAVE_ADDR field values */
+	HDMI_PHY_I2CM_SLAVE_ADDR_PHY_GEN2 = 0x69,
+	HDMI_PHY_I2CM_SLAVE_ADDR_HEAC_PHY = 0x49,
+
+/* PHY_I2CM_OPERATION_ADDR field values */
+	HDMI_PHY_I2CM_OPERATION_ADDR_WRITE = 0x10,
+	HDMI_PHY_I2CM_OPERATION_ADDR_READ = 0x1,
+
+/* HDMI_PHY_I2CM_INT_ADDR */
+	HDMI_PHY_I2CM_INT_ADDR_DONE_POL = 0x08,
+	HDMI_PHY_I2CM_INT_ADDR_DONE_MASK = 0x04,
+
+/* HDMI_PHY_I2CM_CTLINT_ADDR */
+	HDMI_PHY_I2CM_CTLINT_ADDR_NAC_POL = 0x80,
+	HDMI_PHY_I2CM_CTLINT_ADDR_NAC_MASK = 0x40,
+	HDMI_PHY_I2CM_CTLINT_ADDR_ARBITRATION_POL = 0x08,
+	HDMI_PHY_I2CM_CTLINT_ADDR_ARBITRATION_MASK = 0x04,
+
+/* AUD_CTS3 field values */
+	HDMI_AUD_CTS3_N_SHIFT_OFFSET = 5,
+	HDMI_AUD_CTS3_N_SHIFT_MASK = 0xe0,
+	HDMI_AUD_CTS3_N_SHIFT_1 = 0,
+	HDMI_AUD_CTS3_N_SHIFT_16 = 0x20,
+	HDMI_AUD_CTS3_N_SHIFT_32 = 0x40,
+	HDMI_AUD_CTS3_N_SHIFT_64 = 0x60,
+	HDMI_AUD_CTS3_N_SHIFT_128 = 0x80,
+	HDMI_AUD_CTS3_N_SHIFT_256 = 0xa0,
+	/* note that the CTS3 MANUAL bit has been removed
+	   from our part. Can't set it, will read as 0. */
+	HDMI_AUD_CTS3_CTS_MANUAL = 0x10,
+	HDMI_AUD_CTS3_AUDCTS19_16_MASK = 0x0f,
+
+/* AHB_DMA_CONF0 field values */
+	HDMI_AHB_DMA_CONF0_SW_FIFO_RST_OFFSET = 7,
+	HDMI_AHB_DMA_CONF0_SW_FIFO_RST_MASK = 0x80,
+	HDMI_AHB_DMA_CONF0_HBR = 0x10,
+	HDMI_AHB_DMA_CONF0_EN_HLOCK_OFFSET = 3,
+	HDMI_AHB_DMA_CONF0_EN_HLOCK_MASK = 0x08,
+	HDMI_AHB_DMA_CONF0_INCR_TYPE_OFFSET = 1,
+	HDMI_AHB_DMA_CONF0_INCR_TYPE_MASK = 0x06,
+	HDMI_AHB_DMA_CONF0_INCR4 = 0x0,
+	HDMI_AHB_DMA_CONF0_INCR8 = 0x2,
+	HDMI_AHB_DMA_CONF0_INCR16 = 0x4,
+	HDMI_AHB_DMA_CONF0_BURST_MODE = 0x1,
+
+/* HDMI_AHB_DMA_START field values */
+	HDMI_AHB_DMA_START_START_OFFSET = 0,
+	HDMI_AHB_DMA_START_START_MASK = 0x01,
+
+/* HDMI_AHB_DMA_STOP field values */
+	HDMI_AHB_DMA_STOP_STOP_OFFSET = 0,
+	HDMI_AHB_DMA_STOP_STOP_MASK = 0x01,
+
+/* AHB_DMA_STAT, AHB_DMA_INT, AHB_DMA_MASK, AHB_DMA_POL field values */
+	HDMI_AHB_DMA_DONE = 0x80,
+	HDMI_AHB_DMA_RETRY_SPLIT = 0x40,
+	HDMI_AHB_DMA_LOSTOWNERSHIP = 0x20,
+	HDMI_AHB_DMA_ERROR = 0x10,
+	HDMI_AHB_DMA_FIFO_THREMPTY = 0x04,
+	HDMI_AHB_DMA_FIFO_FULL = 0x02,
+	HDMI_AHB_DMA_FIFO_EMPTY = 0x01,
+
+/* AHB_DMA_BUFFSTAT, AHB_DMA_BUFFINT, AHB_DMA_BUFFMASK, AHB_DMA_BUFFPOL field values */
+	HDMI_AHB_DMA_BUFFSTAT_FULL = 0x02,
+	HDMI_AHB_DMA_BUFFSTAT_EMPTY = 0x01,
+
+/* MC_CLKDIS field values */
+	HDMI_MC_CLKDIS_HDCPCLK_DISABLE = 0x40,
+	HDMI_MC_CLKDIS_CECCLK_DISABLE = 0x20,
+	HDMI_MC_CLKDIS_CSCCLK_DISABLE = 0x10,
+	HDMI_MC_CLKDIS_AUDCLK_DISABLE = 0x8,
+	HDMI_MC_CLKDIS_PREPCLK_DISABLE = 0x4,
+	HDMI_MC_CLKDIS_TMDSCLK_DISABLE = 0x2,
+	HDMI_MC_CLKDIS_PIXELCLK_DISABLE = 0x1,
+
+/* MC_SWRSTZ field values */
+	HDMI_MC_SWRSTZ_TMDSSWRST_REQ = 0x02,
+
+/* MC_FLOWCTRL field values */
+	HDMI_MC_FLOWCTRL_FEED_THROUGH_OFF_MASK = 0x1,
+	HDMI_MC_FLOWCTRL_FEED_THROUGH_OFF_CSC_IN_PATH = 0x1,
+	HDMI_MC_FLOWCTRL_FEED_THROUGH_OFF_CSC_BYPASS = 0x0,
+
+/* MC_PHYRSTZ field values */
+	HDMI_MC_PHYRSTZ_ASSERT = 0x0,
+	HDMI_MC_PHYRSTZ_DEASSERT = 0x1,
+
+/* MC_HEACPHY_RST field values */
+	HDMI_MC_HEACPHY_RST_ASSERT = 0x1,
+	HDMI_MC_HEACPHY_RST_DEASSERT = 0x0,
+
+/* CSC_CFG field values */
+	HDMI_CSC_CFG_INTMODE_MASK = 0x30,
+	HDMI_CSC_CFG_INTMODE_OFFSET = 4,
+	HDMI_CSC_CFG_INTMODE_DISABLE = 0x00,
+	HDMI_CSC_CFG_INTMODE_CHROMA_INT_FORMULA1 = 0x10,
+	HDMI_CSC_CFG_INTMODE_CHROMA_INT_FORMULA2 = 0x20,
+	HDMI_CSC_CFG_DECMODE_MASK = 0x3,
+	HDMI_CSC_CFG_DECMODE_OFFSET = 0,
+	HDMI_CSC_CFG_DECMODE_DISABLE = 0x0,
+	HDMI_CSC_CFG_DECMODE_CHROMA_INT_FORMULA1 = 0x1,
+	HDMI_CSC_CFG_DECMODE_CHROMA_INT_FORMULA2 = 0x2,
+	HDMI_CSC_CFG_DECMODE_CHROMA_INT_FORMULA3 = 0x3,
+
+/* CSC_SCALE field values */
+	HDMI_CSC_SCALE_CSC_COLORDE_PTH_MASK = 0xF0,
+	HDMI_CSC_SCALE_CSC_COLORDE_PTH_24BPP = 0x00,
+	HDMI_CSC_SCALE_CSC_COLORDE_PTH_30BPP = 0x50,
+	HDMI_CSC_SCALE_CSC_COLORDE_PTH_36BPP = 0x60,
+	HDMI_CSC_SCALE_CSC_COLORDE_PTH_48BPP = 0x70,
+	HDMI_CSC_SCALE_CSCSCALE_MASK = 0x03,
+
+/* A_HDCPCFG0 field values */
+	HDMI_A_HDCPCFG0_ELVENA_MASK = 0x80,
+	HDMI_A_HDCPCFG0_ELVENA_ENABLE = 0x80,
+	HDMI_A_HDCPCFG0_ELVENA_DISABLE = 0x00,
+	HDMI_A_HDCPCFG0_I2CFASTMODE_MASK = 0x40,
+	HDMI_A_HDCPCFG0_I2CFASTMODE_ENABLE = 0x40,
+	HDMI_A_HDCPCFG0_I2CFASTMODE_DISABLE = 0x00,
+	HDMI_A_HDCPCFG0_BYPENCRYPTION_MASK = 0x20,
+	HDMI_A_HDCPCFG0_BYPENCRYPTION_ENABLE = 0x20,
+	HDMI_A_HDCPCFG0_BYPENCRYPTION_DISABLE = 0x00,
+	HDMI_A_HDCPCFG0_SYNCRICHECK_MASK = 0x10,
+	HDMI_A_HDCPCFG0_SYNCRICHECK_ENABLE = 0x10,
+	HDMI_A_HDCPCFG0_SYNCRICHECK_DISABLE = 0x00,
+	HDMI_A_HDCPCFG0_AVMUTE_MASK = 0x8,
+	HDMI_A_HDCPCFG0_AVMUTE_ENABLE = 0x8,
+	HDMI_A_HDCPCFG0_AVMUTE_DISABLE = 0x0,
+	HDMI_A_HDCPCFG0_RXDETECT_MASK = 0x4,
+	HDMI_A_HDCPCFG0_RXDETECT_ENABLE = 0x4,
+	HDMI_A_HDCPCFG0_RXDETECT_DISABLE = 0x0,
+	HDMI_A_HDCPCFG0_EN11FEATURE_MASK = 0x2,
+	HDMI_A_HDCPCFG0_EN11FEATURE_ENABLE = 0x2,
+	HDMI_A_HDCPCFG0_EN11FEATURE_DISABLE = 0x0,
+	HDMI_A_HDCPCFG0_HDMIDVI_MASK = 0x1,
+	HDMI_A_HDCPCFG0_HDMIDVI_HDMI = 0x1,
+	HDMI_A_HDCPCFG0_HDMIDVI_DVI = 0x0,
+
+/* A_HDCPCFG1 field values */
+	HDMI_A_HDCPCFG1_DISSHA1CHECK_MASK = 0x8,
+	HDMI_A_HDCPCFG1_DISSHA1CHECK_DISABLE = 0x8,
+	HDMI_A_HDCPCFG1_DISSHA1CHECK_ENABLE = 0x0,
+	HDMI_A_HDCPCFG1_PH2UPSHFTENC_MASK = 0x4,
+	HDMI_A_HDCPCFG1_PH2UPSHFTENC_ENABLE = 0x4,
+	HDMI_A_HDCPCFG1_PH2UPSHFTENC_DISABLE = 0x0,
+	HDMI_A_HDCPCFG1_ENCRYPTIONDISABLE_MASK = 0x2,
+	HDMI_A_HDCPCFG1_ENCRYPTIONDISABLE_DISABLE = 0x2,
+	HDMI_A_HDCPCFG1_ENCRYPTIONDISABLE_ENABLE = 0x0,
+	HDMI_A_HDCPCFG1_SWRESET_MASK = 0x1,
+	HDMI_A_HDCPCFG1_SWRESET_ASSERT = 0x0,
+
+/* A_VIDPOLCFG field values */
+	HDMI_A_VIDPOLCFG_UNENCRYPTCONF_MASK = 0x60,
+	HDMI_A_VIDPOLCFG_UNENCRYPTCONF_OFFSET = 5,
+	HDMI_A_VIDPOLCFG_DATAENPOL_MASK = 0x10,
+	HDMI_A_VIDPOLCFG_DATAENPOL_ACTIVE_HIGH = 0x10,
+	HDMI_A_VIDPOLCFG_DATAENPOL_ACTIVE_LOW = 0x0,
+	HDMI_A_VIDPOLCFG_VSYNCPOL_MASK = 0x8,
+	HDMI_A_VIDPOLCFG_VSYNCPOL_ACTIVE_HIGH = 0x8,
+	HDMI_A_VIDPOLCFG_VSYNCPOL_ACTIVE_LOW = 0x0,
+	HDMI_A_VIDPOLCFG_HSYNCPOL_MASK = 0x2,
+	HDMI_A_VIDPOLCFG_HSYNCPOL_ACTIVE_HIGH = 0x2,
+	HDMI_A_VIDPOLCFG_HSYNCPOL_ACTIVE_LOW = 0x0,
+
+
+/* I2CM_OPERATION field values */
+	HDMI_I2CM_OPERATION_WRITE = 0x10,
+	HDMI_I2CM_OPERATION_READ_EXT = 0x2,
+	HDMI_I2CM_OPERATION_READ = 0x1,
+
+/* HDMI_I2CM_INT */
+	HDMI_I2CM_INT_DONE_POL = 0x08,
+	HDMI_I2CM_INT_DONE_MASK = 0x04,
+
+/* HDMI_I2CM_CTLINT */
+	HDMI_I2CM_CTLINT_NAC_POL = 0x80,
+	HDMI_I2CM_CTLINT_NAC_MASK = 0x40,
+	HDMI_I2CM_CTLINT_ARBITRATION_POL = 0x08,
+	HDMI_I2CM_CTLINT_ARBITRATION_MASK = 0x04,
+
+};
+
+
+enum hdmi_datamap {
+    RGB444_8B = 0x01,
+    RGB444_10B = 0x03,
+    RGB444_12B = 0x05,
+    RGB444_16B = 0x07,
+    YCbCr444_8B = 0x09,
+    YCbCr444_10B = 0x0B,
+    YCbCr444_12B = 0x0D,
+    YCbCr444_16B = 0x0F,
+    YCbCr422_8B = 0x16,
+    YCbCr422_10B = 0x14,
+    YCbCr422_12B = 0x12,
+};
+
+enum hdmi_csc_enc_format {
+    eRGB = 0x0,
+    eYCC444 = 0x01,
+    eYCC422 = 0x2,
+    eYCC422_8bits = 0x3,
+    eXVYCC444 = 0x4,
+};
+
+enum hdmi_colorimetry {
+    eITU601,
+    eITU709,
+};
+
+typedef struct hdmi_vmode {
+    unsigned int mCode;
+    unsigned int mDVI;
+    unsigned int mRefreshRate;
+    unsigned int mHImageSize;
+    unsigned int mVImageSize;
+    unsigned int mHActive;
+    unsigned int mVActive;
+    unsigned int mHBlanking;
+    unsigned int mVBlanking;
+    unsigned int mHSyncOffset;
+    unsigned int mVSyncOffset;
+    unsigned int mHSyncPulseWidth;
+    unsigned int mVSyncPulseWidth;
+    unsigned int mHSyncPolarity;
+    unsigned int mVSyncPolarity;
+    unsigned int mDataEnablePolarity;
+    unsigned int mInterlaced;
+    unsigned int mPixelClock;
+    unsigned int mHBorder;
+    unsigned int mVBorder;
+    unsigned int mPixelRepetitionInput;
+    unsigned int mPixelRepetitionOutput;
+} hdmi_vmode_s;
+
+typedef struct hdmi_data_info {
+    unsigned int enc_in_format;
+    unsigned int enc_out_format;
+    unsigned int enc_color_depth;
+    unsigned int colorimetry;
+    unsigned int pix_repet_factor;
+    unsigned int hdcp_enable;
+    hdmi_vmode_s video_mode;
+} hdmi_data_info_s;
+
+#endif
diff --git a/include/configs/mx6_common.h b/include/configs/mx6_common.h
index c2c3c50..20ccd31 100644
--- a/include/configs/mx6_common.h
+++ b/include/configs/mx6_common.h
@@ -42,6 +42,7 @@ defined(CONFIG_MX6DL)) && !defined(CONFIG_MX6SOLO)
 
 #define CONFIG_BOARD_POSTCLK_INIT
 #define CONFIG_LDO_BYPASS_CHECK
+#undef CONFIG_LDO_BYPASS_CHECK
 #define CONFIG_MXC_GPT_HCLK
 #ifdef CONFIG_MX6QP
 #define CONFIG_MX6Q
diff --git a/include/configs/mx6eisd.h b/include/configs/mx6eisd.h
new file mode 100644
index 0000000..8ce1d4b
--- /dev/null
+++ b/include/configs/mx6eisd.h
@@ -0,0 +1,117 @@
+/*
+ * Copyright (C) 2012-2015 Freescale Semiconductor, Inc.
+ *
+ * Configuration settings for the Freescale i.MX6Q SabreSD board.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __MX6QEISD_CONFIG_H
+#define __MX6QEISD_CONFIG_H
+
+#include <asm/arch/imx-regs.h>
+#include <asm/imx-common/gpio.h>
+
+#ifdef CONFIG_SPL
+#define CONFIG_SPL_LIBCOMMON_SUPPORT
+#define CONFIG_SPL_MMC_SUPPORT
+#include "imx6_spl.h"
+#endif
+
+#define CONFIG_MACH_TYPE	3980
+#define CONFIG_MXC_UART_BASE	UART1_BASE
+#define CONFIG_CONSOLE_DEV		"ttymxc0"
+#define CONFIG_MMCROOT			"/dev/mmcblk2p2"  /* SDHC3 */
+#if defined(CONFIG_MX6QP)
+#define CONFIG_DEFAULT_FDT_FILE	"imx6qp-eisd.dtb"
+#define PHYS_SDRAM_SIZE		(2u * 1024 * 1024 * 1024)
+#elif defined(CONFIG_MX6Q)
+#define CONFIG_DEFAULT_FDT_FILE	"imx6q-eisd.dtb"
+#define PHYS_SDRAM_SIZE		(2u * 1024 * 1024 * 1024)
+#elif defined(CONFIG_MX6DL)
+#define CONFIG_DEFAULT_FDT_FILE	"imx6dl-eisd.dtb"
+#if (CONFIG_DRAM_SIZE == 1024)
+#define PHYS_SDRAM_SIZE         (1u * 1024 * 1024 * 1024)
+#else
+#define PHYS_SDRAM_SIZE         (2u * 1024 * 1024 * 1024)
+#endif
+#elif defined(CONFIG_MX6SOLO)
+#define CONFIG_DEFAULT_FDT_FILE	"imx6dl-eisd.dtb"
+#define PHYS_SDRAM_SIZE		(512u * 1024 * 1024)
+#endif
+
+#include "mx6eisd_common.h"
+
+#define CONFIG_SYS_FSL_USDHC_NUM	3
+#define CONFIG_SYS_MMC_ENV_DEV		1	/* SDHC3 */
+#define CONFIG_SYS_MMC_ENV_PART                0       /* user partition */
+
+#ifdef CONFIG_SYS_USE_SPINOR
+#define CONFIG_SF_DEFAULT_CS   0
+#endif
+
+/*
+ * imx6 q/dl/solo pcie would be failed to work properly in kernel, if
+ * the pcie module is iniialized/enumerated both in uboot and linux
+ * kernel.
+ * rootcause:imx6 q/dl/solo pcie don't have the reset mechanism.
+ * it is only be RESET by the POR. So, the pcie module only be
+ * initialized/enumerated once in one POR.
+ * Set to use pcie in kernel defaultly, mask the pcie config here.
+ * Remove the mask freely, if the uboot pcie functions, rather than
+ * the kernel's, are required.
+ */
+/* #define CONFIG_CMD_PCI */
+#ifdef CONFIG_CMD_PCI
+#define CONFIG_PCI
+#define CONFIG_PCI_PNP
+#define CONFIG_PCI_SCAN_SHOW
+#define CONFIG_PCIE_IMX
+#define CONFIG_PCIE_IMX_PERST_GPIO	IMX_GPIO_NR(7, 12)
+#define CONFIG_PCIE_IMX_POWER_GPIO	IMX_GPIO_NR(3, 19)
+#endif
+
+#if 0
+/* PMIC */
+#define CONFIG_POWER
+#define CONFIG_POWER_I2C
+#define CONFIG_POWER_PFUZE100
+#define CONFIG_POWER_PFUZE100_I2C_ADDR	0x08
+#endif
+
+/* USB Configs */
+#define CONFIG_CMD_USB
+#ifdef CONFIG_CMD_USB
+#define CONFIG_USB_EHCI
+#define CONFIG_USB_EHCI_MX6
+#define CONFIG_USB_STORAGE
+#define CONFIG_EHCI_HCD_INIT_AFTER_RESET
+#define CONFIG_USB_HOST_ETHER
+#define CONFIG_USB_ETHER_ASIX
+#define CONFIG_MXC_USB_PORTSC		(PORT_PTS_UTMI | PORT_PTS_PTW)
+#define CONFIG_MXC_USB_FLAGS		0
+#define CONFIG_USB_MAX_CONTROLLER_COUNT	1 /* Enabled USB controller number */
+#endif
+
+/*#define CONFIG_SPLASH_SCREEN*/
+/*#define CONFIG_MXC_EPDC*/
+
+/*
+ * SPLASH SCREEN Configs
+ */
+#if defined(CONFIG_SPLASH_SCREEN) && defined(CONFIG_MXC_EPDC)
+	/*
+	 * Framebuffer and LCD
+	 */
+	#define CONFIG_CMD_BMP
+	#define CONFIG_LCD
+	#define CONFIG_SYS_CONSOLE_IS_IN_ENV
+	#undef LCD_TEST_PATTERN
+	/* #define CONFIG_SPLASH_IS_IN_MMC			1 */
+	#define LCD_BPP					LCD_MONOCHROME
+	/* #define CONFIG_SPLASH_SCREEN_ALIGN		1 */
+
+	#define CONFIG_WAVEFORM_BUF_SIZE		0x200000
+#endif /* CONFIG_SPLASH_SCREEN && CONFIG_MXC_EPDC */
+
+#endif                         /* __MX6QEISD_CONFIG_H */
diff --git a/include/configs/mx6eisd_common.h b/include/configs/mx6eisd_common.h
new file mode 100644
index 0000000..34e80c9
--- /dev/null
+++ b/include/configs/mx6eisd_common.h
@@ -0,0 +1,637 @@
+/*
+ * Copyright (C) 2012-2015 Freescale Semiconductor, Inc.
+ *
+ * Configuration settings for the Freescale i.MX6Q SabreSD board.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __MX6EISD_COMMON_CONFIG_H
+#define __MX6EISD_COMMON_CONFIG_H
+
+#define CONFIG_MX6
+
+#ifdef CONFIG_MX6SOLO
+#define CONFIG_MX6DL
+#endif
+
+/* uncomment for PLUGIN mode support */
+/* #define CONFIG_USE_PLUGIN */
+
+/* uncomment for SECURE mode support */
+/* #define CONFIG_SECURE_BOOT */
+
+#ifdef CONFIG_SECURE_BOOT
+#ifndef CONFIG_CSF_SIZE
+#define CONFIG_CSF_SIZE 0x4000
+#endif
+#endif
+
+#include "mx6_common.h"
+#include <linux/sizes.h>
+
+#define CONFIG_DISPLAY_CPUINFO
+#define CONFIG_DISPLAY_BOARDINFO
+
+#include <asm/arch/imx-regs.h>
+#include <asm/imx-common/gpio.h>
+
+#define CONFIG_CMDLINE_TAG
+#define CONFIG_SETUP_MEMORY_TAGS
+#define CONFIG_INITRD_TAG
+#define CONFIG_REVISION_TAG
+
+#define CONFIG_SYS_GENERIC_BOARD
+
+/* Size of malloc() pool */
+#define CONFIG_SYS_MALLOC_LEN 		(16 * SZ_1M) 
+
+#define CONFIG_BOARD_EARLY_INIT_F
+#define CONFIG_BOARD_LATE_INIT
+#define CONFIG_MXC_GPIO
+
+#define CONFIG_MXC_UART
+
+#define CONFIG_CMD_FUSE
+#ifdef CONFIG_CMD_FUSE
+#define CONFIG_MXC_OCOTP
+#endif
+
+/* MMC Configs */
+#define CONFIG_FSL_ESDHC
+#define CONFIG_FSL_USDHC
+#define CONFIG_SYS_FSL_ESDHC_ADDR      0
+
+#define CONFIG_MMC
+#define CONFIG_CMD_MMC
+#define CONFIG_GENERIC_MMC
+#define CONFIG_BOUNCE_BUFFER
+#define CONFIG_CMD_EXT2
+#define CONFIG_CMD_EXT4
+#define CONFIG_CMD_EXT4_WRITE
+#define CONFIG_CMD_FAT
+#define CONFIG_DOS_PARTITION
+
+#define CONFIG_SUPPORT_EMMC_BOOT /* eMMC specific */
+
+#define CONFIG_CMD_PING
+#define CONFIG_CMD_DHCP
+#define CONFIG_CMD_MII
+#define CONFIG_CMD_NET
+#define CONFIG_FEC_MXC
+#define CONFIG_MII
+#define IMX_FEC_BASE			ENET_BASE_ADDR
+#define CONFIG_FEC_XCV_TYPE		RGMII
+#define CONFIG_ETHPRIME			"FEC"
+#define CONFIG_FEC_MXC_PHYADDR		0
+
+#define CONFIG_PHYLIB
+#define CONFIG_PHY_ATHEROS
+
+/* allow to overwrite serial and ethaddr */
+#define CONFIG_ENV_OVERWRITE
+#define CONFIG_CONS_INDEX              1
+#define CONFIG_BAUDRATE                        115200
+
+/* Command definition */
+#include <config_cmd_default.h>
+
+#define CONFIG_CMD_BMODE
+#define CONFIG_CMD_BOOTZ
+#define CONFIG_CMD_SETEXPR
+#undef CONFIG_CMD_IMLS
+
+#define CONFIG_BOOTDELAY               1
+
+#define CONFIG_LOADADDR                        0x12000000
+#define CONFIG_SYS_TEXT_BASE           0x17800000
+#define CONFIG_SYS_MMC_IMG_LOAD_PART	1
+
+#ifdef CONFIG_SYS_BOOT_NAND
+#define CONFIG_MFG_NAND_PARTITION "mtdparts=gpmi-nand:64m(boot),16m(kernel),16m(dtb),-(rootfs) "
+#else
+#define CONFIG_MFG_NAND_PARTITION ""
+#endif
+
+#define CONFIG_MFG_ENV_SETTINGS \
+	"mfgtool_args=setenv bootargs console=" CONFIG_CONSOLE_DEV ",115200 " \
+		"rdinit=/linuxrc " \
+		"g_mass_storage.stall=0 g_mass_storage.removable=1 " \
+		"g_mass_storage.idVendor=0x066F g_mass_storage.idProduct=0x37FF "\
+		"g_mass_storage.iSerialNumber=\"\" "\
+		"enable_wait_mode=off "\
+		CONFIG_MFG_NAND_PARTITION \
+		"\0" \
+		"initrd_addr=0x12C00000\0" \
+		"initrd_high=0xffffffff\0" \
+		"bootcmd_mfg=run mfgtool_args;bootz ${loadaddr} ${initrd_addr} ${fdt_addr};\0" \
+
+#ifdef CONFIG_SUPPORT_EMMC_BOOT
+#define EMMC_ENV \
+	"emmcdev=2\0" \
+	"update_emmc_firmware=" \
+		"if test ${ip_dyn} = yes; then " \
+			"setenv get_cmd dhcp; " \
+		"else " \
+			"setenv get_cmd tftp; " \
+		"fi; " \
+		"if ${get_cmd} ${update_sd_firmware_filename}; then " \
+			"if mmc dev ${emmcdev} 1; then "	\
+				"setexpr fw_sz ${filesize} / 0x200; " \
+				"setexpr fw_sz ${fw_sz} + 1; "	\
+				"mmc write ${loadaddr} 0x2 ${fw_sz}; " \
+			"fi; "	\
+		"fi\0"
+#else
+#define EMMC_ENV ""
+#endif
+
+#if defined(CONFIG_SYS_BOOT_NAND)
+	/*
+	 * The dts also enables the WEIN NOR which is mtd0.
+	 * So the partions' layout for NAND is:
+	 *     mtd1: 16M      (uboot)
+	 *     mtd2: 16M      (kernel)
+	 *     mtd3: 16M      (dtb)
+	 *     mtd4: left     (rootfs)
+	 */
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	CONFIG_MFG_ENV_SETTINGS \
+	"fdt_addr=0x18000000\0" \
+	"fdt_high=0xffffffff\0"	  \
+	"bootargs=console=" CONFIG_CONSOLE_DEV ",115200 ubi.mtd=4 "  \
+		"root=ubi0:rootfs rootfstype=ubifs "		     \
+		"mtdparts=gpmi-nand:64m(boot),16m(kernel),16m(dtb),-(rootfs)\0"\
+	"bootcmd=nand read ${loadaddr} 0x4000000 0x800000;"\
+		"nand read ${fdt_addr} 0x5000000 0x100000;"\
+		"bootz ${loadaddr} - ${fdt_addr}\0"
+
+#elif defined(CONFIG_SYS_BOOT_SATA)
+
+#define CONFIG_EXTRA_ENV_SETTINGS \
+		CONFIG_MFG_ENV_SETTINGS \
+		"fdt_addr=0x18000000\0" \
+		"fdt_high=0xffffffff\0"   \
+		"bootargs=console=" CONFIG_CONSOLE_DEV ",115200 \0"\
+		"bootargs_sata=setenv bootargs ${bootargs} " \
+			"root=/dev/sda1 rootwait rw \0" \
+		"bootcmd_sata=run bootargs_sata; sata init; " \
+			"sata read ${loadaddr} 0x800  0x4000; " \
+			"sata read ${fdt_addr} 0x8000 0x800; " \
+			"bootz ${loadaddr} - ${fdt_addr} \0" \
+		"bootcmd=run bootcmd_sata \0"
+
+#else
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	CONFIG_MFG_ENV_SETTINGS \
+	"epdc_waveform=epdc_splash.bin\0" \
+	"script=boot.scr\0" \
+	"image=zImage\0" \
+	"fdt_file=" CONFIG_DEFAULT_FDT_FILE "\0" \
+	"fdt_addr=0x18000000\0" \
+	"boot_fdt=try\0" \
+	"ip_dyn=yes\0" \
+	"console=" CONFIG_CONSOLE_DEV "\0" \
+	"fdt_high=0xffffffff\0"	  \
+	"initrd_high=0xffffffff\0" \
+	"panel=BOE185\0" \
+	"splashpos=m,m\0" \
+	"mmcdev=" __stringify(CONFIG_SYS_MMC_ENV_DEV) "\0" \
+	"mmcpart=" __stringify(CONFIG_SYS_MMC_IMG_LOAD_PART) "\0" \
+	"mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
+	"mmcautodetect=yes\0" \
+	"update_sd_firmware=" \
+		"if test ${ip_dyn} = yes; then " \
+			"setenv get_cmd dhcp; " \
+		"else " \
+			"setenv get_cmd tftp; " \
+		"fi; " \
+		"if mmc dev ${mmcdev}; then "	\
+			"if ${get_cmd} ${update_sd_firmware_filename}; then " \
+				"setexpr fw_sz ${filesize} / 0x200; " \
+				"setexpr fw_sz ${fw_sz} + 1; "	\
+				"mmc write ${loadaddr} 0x2 ${fw_sz}; " \
+			"fi; "	\
+		"fi\0" \
+	EMMC_ENV	  \
+	"smp=" CONFIG_SYS_NOSMP "\0"\
+	"displayargs=video=mxcfb0:dev=ldb,if=RGB24 " \
+		"video=mxcfb1:off video=mxcfb2:off\0" \
+	"mmcargs=setenv bootargs console=${console},${baudrate} ${smp} " \
+		"root=${mmcroot} ${displayargs}\0" \
+	"loadbootscript=" \
+		"fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};\0" \
+	"bootscript=echo Running bootscript from mmc ...; " \
+		"source\0" \
+	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}\0" \
+	"loadfdt=fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}\0" \
+	"mmcboot=echo Booting from mmc ...; " \
+		"run mmcargs; " \
+		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
+			"if run loadfdt; then " \
+				"bootz ${loadaddr} - ${fdt_addr}; " \
+			"else " \
+				"if test ${boot_fdt} = try; then " \
+					"bootz; " \
+				"else " \
+					"echo WARN: Cannot load the DT; " \
+				"fi; " \
+			"fi; " \
+		"else " \
+			"bootz; " \
+		"fi;\0" \
+	"netargs=setenv bootargs console=${console},${baudrate} ${smp} " \
+		"root=/dev/nfs " \
+		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
+	"netboot=echo Booting from net ...; " \
+		"run netargs; " \
+		"if test ${ip_dyn} = yes; then " \
+			"setenv get_cmd dhcp; " \
+		"else " \
+			"setenv get_cmd tftp; " \
+		"fi; " \
+		"${get_cmd} ${image}; " \
+		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
+			"if ${get_cmd} ${fdt_addr} ${fdt_file}; then " \
+				"bootz ${loadaddr} - ${fdt_addr}; " \
+			"else " \
+				"if test ${boot_fdt} = try; then " \
+					"bootz; " \
+				"else " \
+					"echo WARN: Cannot load the DT; " \
+				"fi; " \
+			"fi; " \
+		"else " \
+			"bootz; " \
+		"fi;\0"
+
+#define CONFIG_BOOTCOMMAND \
+	"mmc dev ${mmcdev};" \
+	"if mmc rescan; then " \
+		"if run loadbootscript; then " \
+		"run bootscript; " \
+		"else " \
+			"if run loadimage; then " \
+				"run mmcboot; " \
+			"else run netboot; " \
+			"fi; " \
+		"fi; " \
+	"else run netboot; fi"
+#endif
+
+#define CONFIG_ARP_TIMEOUT     200UL
+
+/* Miscellaneous configurable options */
+#define CONFIG_SYS_LONGHELP
+#define CONFIG_SYS_HUSH_PARSER
+#define CONFIG_SYS_PROMPT_HUSH_PS2     "> "
+#define CONFIG_AUTO_COMPLETE
+#define CONFIG_SYS_CBSIZE              1024
+
+/* Print Buffer Size */
+#define CONFIG_SYS_PBSIZE (CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)
+#define CONFIG_SYS_MAXARGS             256
+#define CONFIG_SYS_BARGSIZE CONFIG_SYS_CBSIZE
+
+#define CONFIG_CMD_MEMTEST
+#define CONFIG_SYS_MEMTEST_START       0x10000000
+#define CONFIG_SYS_MEMTEST_END         0x10010000
+#define CONFIG_SYS_MEMTEST_SCRATCH     0x10800000
+
+#define CONFIG_SYS_LOAD_ADDR           CONFIG_LOADADDR
+
+#define CONFIG_CMDLINE_EDITING
+#define CONFIG_STACKSIZE               (128 * 1024)
+
+/* Physical Memory Map */
+#define CONFIG_NR_DRAM_BANKS           1
+#define PHYS_SDRAM                     MMDC0_ARB_BASE_ADDR
+
+#define CONFIG_SYS_SDRAM_BASE          PHYS_SDRAM
+#define CONFIG_SYS_INIT_RAM_ADDR       IRAM_BASE_ADDR
+#define CONFIG_SYS_INIT_RAM_SIZE       IRAM_SIZE
+
+#define CONFIG_SYS_INIT_SP_OFFSET \
+	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
+#define CONFIG_SYS_INIT_SP_ADDR \
+	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
+
+/* FLASH and environment organization */
+#define CONFIG_SYS_NO_FLASH
+
+#define CONFIG_ENV_SIZE			(8 * 1024)
+
+#ifndef CONFIG_SYS_NOSMP
+#define CONFIG_SYS_NOSMP
+#endif
+
+#if defined CONFIG_SYS_BOOT_SPINOR
+#define CONFIG_SYS_USE_SPINOR
+#define CONFIG_ENV_IS_IN_SPI_FLASH
+#elif defined CONFIG_SYS_BOOT_EIMNOR
+#define CONFIG_SYS_USE_EIMNOR
+#define CONFIG_ENV_IS_IN_FLASH
+#elif defined CONFIG_SYS_BOOT_NAND
+#define CONFIG_SYS_USE_NAND
+#define CONFIG_ENV_IS_IN_NAND
+#elif defined CONFIG_SYS_BOOT_SATA
+#define CONFIG_ENV_IS_IN_SATA
+#define CONFIG_CMD_SATA
+#else
+#define CONFIG_ENV_IS_IN_MMC
+#endif
+
+#ifdef CONFIG_CMD_SATA
+#define CONFIG_DWC_AHSATA
+#define CONFIG_SYS_SATA_MAX_DEVICE	1
+#define CONFIG_DWC_AHSATA_PORT_ID	0
+#define CONFIG_DWC_AHSATA_BASE_ADDR	SATA_ARB_BASE_ADDR
+#define CONFIG_LBA48
+#define CONFIG_LIBATA
+#endif
+
+#ifdef CONFIG_SYS_USE_SPINOR
+#define CONFIG_CMD_SF
+#define CONFIG_SPI_FLASH
+#define CONFIG_SPI_FLASH_STMICRO
+#define CONFIG_MXC_SPI
+#define CONFIG_SF_DEFAULT_BUS  0
+#define CONFIG_SF_DEFAULT_SPEED 20000000
+#define CONFIG_SF_DEFAULT_MODE (SPI_MODE_0)
+#endif
+
+#ifdef CONFIG_SYS_USE_EIMNOR
+#undef CONFIG_SYS_NO_FLASH
+#define CONFIG_SYS_FLASH_BASE           WEIM_ARB_BASE_ADDR
+#define CONFIG_SYS_FLASH_SECT_SIZE     (128 * 1024)
+#define CONFIG_SYS_MAX_FLASH_BANKS 1    /* max number of memory banks */
+#define CONFIG_SYS_MAX_FLASH_SECT 256   /* max number of sectors on one chip */
+#define CONFIG_SYS_FLASH_CFI            /* Flash memory is CFI compliant */
+#define CONFIG_FLASH_CFI_DRIVER         /* Use drivers/cfi_flash.c */
+#define CONFIG_SYS_FLASH_USE_BUFFER_WRITE /* Use buffered writes*/
+#define CONFIG_SYS_FLASH_EMPTY_INFO
+#endif
+
+#ifdef CONFIG_SYS_USE_NAND
+#define CONFIG_CMD_NAND
+#define CONFIG_CMD_NAND_TRIMFFS
+
+/* NAND stuff */
+#define CONFIG_NAND_MXS
+#define CONFIG_SYS_MAX_NAND_DEVICE     1
+#define CONFIG_SYS_NAND_BASE           0x40000000
+#define CONFIG_SYS_NAND_5_ADDR_CYCLE
+#define CONFIG_SYS_NAND_ONFI_DETECTION
+
+/* DMA stuff, needed for GPMI/MXS NAND support */
+#define CONFIG_APBH_DMA
+#define CONFIG_APBH_DMA_BURST
+#define CONFIG_APBH_DMA_BURST8
+#endif
+
+#if defined(CONFIG_ENV_IS_IN_MMC)
+#define CONFIG_ENV_OFFSET		(8 * 64 * 1024)
+#elif defined(CONFIG_ENV_IS_IN_SPI_FLASH)
+#define CONFIG_ENV_OFFSET              (768 * 1024)
+#define CONFIG_ENV_SECT_SIZE           (64 * 1024)
+#define CONFIG_ENV_SPI_BUS             CONFIG_SF_DEFAULT_BUS
+#define CONFIG_ENV_SPI_CS              CONFIG_SF_DEFAULT_CS
+#define CONFIG_ENV_SPI_MODE            CONFIG_SF_DEFAULT_MODE
+#define CONFIG_ENV_SPI_MAX_HZ          CONFIG_SF_DEFAULT_SPEED
+#elif defined(CONFIG_ENV_IS_IN_FLASH)
+#undef CONFIG_ENV_SIZE
+#define CONFIG_ENV_SIZE                        CONFIG_SYS_FLASH_SECT_SIZE
+#define CONFIG_ENV_SECT_SIZE           CONFIG_SYS_FLASH_SECT_SIZE
+#define CONFIG_ENV_OFFSET              (4 * CONFIG_SYS_FLASH_SECT_SIZE)
+#elif defined(CONFIG_ENV_IS_IN_NAND)
+#undef CONFIG_ENV_SIZE
+#define CONFIG_ENV_OFFSET              (37 << 20)
+#define CONFIG_ENV_SECT_SIZE           (128 << 10)
+#define CONFIG_ENV_SIZE                        CONFIG_ENV_SECT_SIZE
+#elif defined(CONFIG_ENV_IS_IN_SATA)
+#define CONFIG_ENV_OFFSET		(768 * 1024)
+#define CONFIG_SATA_ENV_DEV		0
+#define CONFIG_SYS_DCACHE_OFF /* remove when sata driver support cache */
+#endif
+
+#define CONFIG_OF_LIBFDT
+
+#ifndef CONFIG_SYS_DCACHE_OFF
+#define CONFIG_CMD_CACHE
+#endif
+
+/* I2C Configs */
+#define CONFIG_CMD_I2C
+#define CONFIG_SYS_I2C
+#define CONFIG_SYS_I2C_MXC
+#define CONFIG_SYS_I2C_SPEED		  100000
+
+#define CONFIG_UBOOT_LOGO_ENABLE
+
+#ifndef CONFIG_UBOOT_LOGO_ENABLE
+/* Framebuffer */
+#define CONFIG_VIDEO
+#define CONFIG_VIDEO_IPUV3
+#define CONFIG_CFB_CONSOLE
+#define CONFIG_VGA_AS_SINGLE_DEVICE
+#define CONFIG_SYS_CONSOLE_IS_IN_ENV
+#define CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE
+#define CONFIG_VIDEO_BMP_RLE8
+#define CONFIG_SPLASH_SCREEN
+#define CONFIG_SPLASH_SCREEN_ALIGN
+#define CONFIG_BMP_16BPP
+#define CONFIG_VIDEO_LOGO
+#define CONFIG_VIDEO_BMP_LOGO
+#ifdef CONFIG_MX6DL                                                             
+#define CONFIG_IPUV3_CLK 198000000
+#else
+#define CONFIG_IPUV3_CLK 264000000
+#endif
+#define CONFIG_IMX_HDMI
+#endif
+
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+	/* Select one of the output mode */
+     /* #define IPU_OUTPUT_MODE_HDMI */
+	#define IPU_OUTPUT_MODE_LVDS
+     /*	#define IPU_OUTPUT_MODE_LCD */
+
+	#define CONFIG_FB_BASE	(CONFIG_SYS_TEXT_BASE + 0x1000000)
+	#define UBOOT_LOGO_BMP_ADDR 0x00100000
+
+	#define CONFIG_IMX_PWM
+	#define IMX_PWM1_BASE	 PWM1_BASE_ADDR
+	#define IMX_PWM2_BASE	 PWM2_BASE_ADDR
+	#define IMX_PWM4_BASE	 PWM4_BASE_ADDR
+
+#ifdef CONFIG_MX6DL
+#define CONFIG_IPUV3_CLK 270000000
+#else
+#define CONFIG_IPUV3_CLK 264000000
+#endif
+
+#ifdef IPU_OUTPUT_MODE_HDMI
+/*
+	// For HDMI, 1280*720 resolution 
+	#define DISPLAY_WIDTH	1280
+	#define DISPLAY_HEIGHT	720
+	#define DISPLAY_BPP		32
+	#define DISPLAY_IF_BPP	24  // RGB24 interface
+
+	#define DISPLAY_HSYNC_START	220
+	#define DISPLAY_HSYNC_END		110
+	#define DISPLAY_HSYNC_WIDTH	40
+
+	#define DISPLAY_VSYNC_START	20
+	#define DISPLAY_VSYNC_END		5
+	#define DISPLAY_VSYNC_WIDTH	5
+
+	#define DISPLAY_PIX_CLOCK	74250000  //(DISPLAY_HSYNC_START + DISPLAY_HSYNC_END + DISPLAY_HSYNC_WIDTH + DISPLAY_WIDTH) * (DISPLAY_VSYNC_START + DISPLAY_VSYNC_END + DISPLAY_VSYNC_WIDTH + DISPLAY_HEIGHT) * refresh rate (60Hz)
+*/
+	/* For HDMI, 1920*1080 resolution */
+	#define DISPLAY_WIDTH	1920
+	#define DISPLAY_HEIGHT	1080
+	#define DISPLAY_BPP		32
+	#define DISPLAY_IF_BPP	24  /* RGB24 interface */
+
+	#define DISPLAY_HSYNC_START	148
+	#define DISPLAY_HSYNC_END		88
+	#define DISPLAY_HSYNC_WIDTH	44
+
+	#define DISPLAY_VSYNC_START	36
+	#define DISPLAY_VSYNC_END		4
+	#define DISPLAY_VSYNC_WIDTH	5
+
+	#define DISPLAY_PIX_CLOCK	148500000  /* (DISPLAY_HSYNC_START + DISPLAY_HSYNC_END + DISPLAY_HSYNC_WIDTH + DISPLAY_WIDTH) * (DISPLAY_VSYNC_START + DISPLAY_VSYNC_END + DISPLAY_VSYNC_WIDTH + DISPLAY_HEIGHT) * refresh rate (60Hz) */
+
+	#define DISPLAY_VSYNC_POLARITY			1
+	#define DISPLAY_HSYNC_POLARITY			1
+	#define DISPLAY_CLOCK_POLARITY			0
+	#define DISPLAY_DATA_POLARITY				0
+	#define DISPLAY_DATA_ENABLE_POLARITY		1
+
+	#define IPU_NUM 		2  /* 1 for IPU1, 2 for IPU2.*/
+	#define DI_NUM			0  /* 0 for DI0, 1 for DI1. */
+	#define DI_CLOCK_EXTERNAL_MODE  /* When clock external mode was defined, the DI clock root will be PLL5, */
+								/* without this macro, the DI root clock is IPU internal clock. */
+	#define CONFIG_IMX_HDMI
+#endif
+
+#ifdef IPU_OUTPUT_MODE_LVDS
+
+#define LVDS07
+/*#define LVDS10*/
+/*#define LVDS12_15*/
+/*#define LVDS18*/
+/*#define LVDS215*/
+/*#define LVDS28*/
+
+#ifdef LVDS07
+        #define DISPLAY_WIDTH   1024
+        #define DISPLAY_HEIGHT  600
+        #define DISPLAY_BPP             32
+        #define DISPLAY_IF_BPP  24  /* RGB24 interface */
+        #define DISPLAY_HSYNC_START             90
+        #define DISPLAY_HSYNC_END               30
+        #define DISPLAY_HSYNC_WIDTH             200
+        #define DISPLAY_VSYNC_START             20
+        #define DISPLAY_VSYNC_END               5
+        #define DISPLAY_VSYNC_WIDTH             10
+        #define DISPLAY_PIX_CLOCK       51200000
+#endif
+
+#ifdef LVDS18
+        #define DISPLAY_WIDTH   1366
+        #define DISPLAY_HEIGHT  768
+        #define DISPLAY_BPP             32
+        #define DISPLAY_IF_BPP  24  /* RGB24 interface */
+        #define DISPLAY_HSYNC_START             119
+        #define DISPLAY_HSYNC_END               119
+        #define DISPLAY_HSYNC_WIDTH             2
+        #define DISPLAY_VSYNC_START             19
+        #define DISPLAY_VSYNC_END               19
+        #define DISPLAY_VSYNC_WIDTH             2
+        #define DISPLAY_PIX_CLOCK       78000000
+#endif
+
+#ifdef LVDS215
+        #define DISPLAY_WIDTH   		1920
+        #define DISPLAY_HEIGHT  		1080
+        #define DISPLAY_BPP     		32
+        #define DISPLAY_IF_BPP 		        24  /* RGB24 interface */
+        #define DISPLAY_HSYNC_START             100
+        #define DISPLAY_HSYNC_END               100
+        #define DISPLAY_HSYNC_WIDTH             80
+        #define DISPLAY_VSYNC_START             40
+        #define DISPLAY_VSYNC_END               40
+        #define DISPLAY_VSYNC_WIDTH             10
+        #define DISPLAY_PIX_CLOCK       	148500000
+        #define LVDS_SPLIT_MODE  // For dual channel split mode.
+	#define LVDS_SPLIT_MODE_MADI	// Madi Patch
+#endif
+
+#ifdef LVDS28
+        #define DISPLAY_WIDTH   		1920
+        #define DISPLAY_HEIGHT  		360
+        #define DISPLAY_BPP     		32
+        #define DISPLAY_IF_BPP 		        24  /* RGB24 interface */
+        #define DISPLAY_HSYNC_START             139
+        #define DISPLAY_HSYNC_END               139
+        #define DISPLAY_HSYNC_WIDTH             2
+        #define DISPLAY_VSYNC_START             22 
+        #define DISPLAY_VSYNC_END               22
+        #define DISPLAY_VSYNC_WIDTH             1
+        #define DISPLAY_PIX_CLOCK       	148500000
+        #define LVDS_SPLIT_MODE  // For dual channel split mode.
+	#define LVDS_SPLIT_MODE_MADI	// Madi Patch
+#endif
+
+        #define DISPLAY_VSYNC_POLARITY                  1
+        #define DISPLAY_HSYNC_POLARITY                  1
+        #define DISPLAY_CLOCK_POLARITY                  1
+        #define DISPLAY_DATA_POLARITY                   0
+        #define DISPLAY_DATA_ENABLE_POLARITY            1
+
+        #define IPU_NUM                 1  /* 1 for IPU1, 2 for IPU2. */
+        #define DI_NUM                  0  /* 0 for DI0, 1 for DI1.*/
+        #define LVDS_PORT               0  /* 0 for LVDS0, 1 for LVDS1. */
+        #define DI_CLOCK_EXTERNAL_MODE  /* When clock external mode was defined, the DI clock root will be PLL3 PFD1, */
+                                                                /* without this macro, the DI root clock is IPU internal clock. */
+#endif
+
+#ifdef IPU_OUTPUT_MODE_LCD
+	/* For LCD, 800*480 resolution */
+	#define DISPLAY_WIDTH	800
+	#define DISPLAY_HEIGHT	480
+	#define DISPLAY_BPP		32
+	#define DISPLAY_IF_BPP	16  /* RGB565 interface */
+
+	#define DISPLAY_HSYNC_START	40
+	#define DISPLAY_HSYNC_END		60
+	#define DISPLAY_HSYNC_WIDTH	20
+
+	#define DISPLAY_VSYNC_START	10
+	#define DISPLAY_VSYNC_END		10
+	#define DISPLAY_VSYNC_WIDTH	10
+
+	#define DISPLAY_PIX_CLOCK	27000000  /* (DISPLAY_HSYNC_START + DISPLAY_HSYNC_END + DISPLAY_HSYNC_WIDTH + DISPLAY_WIDTH) * (DISPLAY_VSYNC_START + DISPLAY_VSYNC_END + DISPLAY_VSYNC_WIDTH + DISPLAY_HEIGHT) * refresh rate (60Hz) */
+
+	#define DISPLAY_VSYNC_POLARITY			0
+	#define DISPLAY_HSYNC_POLARITY			0
+	#define DISPLAY_CLOCK_POLARITY			1
+	#define DISPLAY_DATA_POLARITY				0
+	#define DISPLAY_DATA_ENABLE_POLARITY		1
+
+	#define IPU_NUM			1  /* 1 for IPU1, 2 for IPU2.*/
+	#define DI_NUM			0  /* 0 for DI0, 1 for DI1. */
+	#define DI_CLOCK_EXTERNAL_MODE  /* When clock external mode was defined, the DI clock root will be PLL5, */
+								/* without this macro, the DI root clock is IPU internal clock. */
+#endif
+#endif  /* CONFIG_UBOOT_LOGO_ENABLE */
+
+#define CONFIG_IMX_VIDEO_SKIP
+
+#if defined(CONFIG_ANDROID_SUPPORT)
+#include "mx6sabreandroid_common.h"
+#endif
+#endif                         /* __MX6EISD_COMMON_CONFIG_H */
-- 
1.9.1

